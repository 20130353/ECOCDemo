D:\Anaconda3\python.exe E:/workspace-python/ECOCDemo/create_experiment_data.py
Time: 2018-07-16 16:51:03
FS: RandForReg
Datasetï¼š Lung1
ECOC: Self_Adaption_ECOC F1 F2 DC=F1
base_M:

[[ 1.  0.]
 [-1. -1.]
 [-1.  1.]]
[[ 1.  0.]
 [-1. -1.]
 [-1.  1.]]
creat_matrix start...................
before duplicate column M size is:4
[[ 1.  0.  1.  0.]
 [-1. -1. -1. -1.]
 [-1.  1. -1.  1.]]
after duplicated column M size is: 2
[[ 1.  0.]
 [-1. -1.]
 [-1.  1.]]
ERROR:root:DIV_ERROR: The denominator of Ternary Divide is zero!
class cplx:
ERROR:root:DIV_ERROR: left 1, right 0, left and right node is wrong!
{'A': 0.00753770741797638, 'C': 0.04423549526121788, 'N': 0.05141086891506228}
bottom_stand is:0.03439469053141885
cplx_stand is:0.0687893810628377
class number is:3
need add columns is:2
optimal matrix size is:5
M<column_num
origin M is
2
[[ 1.  0.]
 [-1. -1.]
 [-1.  1.]]
after add matrix is:5
[[ 1.  0.  1.  0. -1.]
 [-1. -1.  0.  1.  0.]
 [-1.  1. -1. -1.  1.]]
select columns are:5
[[ 1.  0.  1.  0. -1.]
 [-1. -1.  0.  1.  0.]
 [-1.  1. -1. -1.  1.]]
ternary_res

{'Ad': array([[1],
       [1],
       [0]]), 'Sub': array([[1],
       [0],
       [1]]), 'Mu': array([[ 0],
       [ 1],
       [-1]]), 'D': array([[ 0],
       [ 1],
       [-1]]), 'A': array([[ 0],
       [-1],
       [-1]]), 'O': array([[ 1],
       [-1],
       [ 1]])}
cplx is:
{'Mu': 21.75005123641816, 'D': 21.75005123641816, 'O': 0.42202243945722095}
win column is:[[ 1]
 [-1]
 [ 1]]
ternary_res

{'Ad': array([[1],
       [1],
       [1]]), 'Sub': array([[ 1],
       [-1],
       [ 0]]), 'Mu': array([[0],
       [0],
       [1]]), 'D': array([[0],
       [0],
       [1]]), 'A': array([[ 0],
       [ 0],
       [-1]]), 'O': array([[ 1],
       [ 1],
       [-1]])}
ERROR:root:DIV_ERROR: The denominator of Ternary Divide is zero!
ERROR:root:DIV_ERROR: left 1, right 0, left and right node is wrong!
cplx is:
{'Sub': 1.545960090879714, 'O': 0.45826436944408055}
win column is:[[ 1]
 [ 1]
 [-1]]
ternary_res

{'Ad': array([[ 0],
       [-1],
       [-1]]), 'Sub': array([[1],
       [1],
       [0]]), 'Mu': array([[-1],
       [ 0],
       [ 1]]), 'D': array([[-1],
       [ 0],
       [ 1]]), 'A': array([[-1],
       [-1],
       [ 1]]), 'O': array([[1],
       [0],
       [1]])}
cplx is:
{'Mu': 19.80457469068925, 'D': 19.80457469068925, 'A': 19.539531666293943}
win column is:[[-1]
 [-1]
 [ 1]]
ternary_res

{'Ad': array([[0],
       [0],
       [0]]), 'Sub': array([[-1],
       [-1],
       [ 1]]), 'Mu': array([[-1],
       [-1],
       [-1]]), 'D': array([[-1],
       [-1],
       [-1]]), 'A': array([[-1],
       [-1],
       [-1]]), 'O': array([[1],
       [1],
       [1]])}
cplx is:
{'Sub': 19.539531666293943}
win column is:[[-1]
 [-1]
 [ 1]]
1.create matrix 9
[[ 1.  0.  1.  0. -1.  1.  1. -1. -1.]
 [-1. -1.  0.  1.  0. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1.  1.  1.]]
2.remove reverse matrix 5
[[ 1.  0.  1.  1.  1.]
 [-1. -1.  0. -1.  1.]
 [-1.  1. -1.  1. -1.]]
3.remove duplicate matrix 5
[[ 1.  0.  1.  1.  1.]
 [-1. -1.  0. -1.  1.]
 [-1.  1. -1.  1. -1.]]
4.remove unfit matrix 5
[[ 1.  0.  1.  1.  1.]
 [-1. -1.  0. -1.  1.]
 [-1.  1. -1.  1. -1.]]

Process finished with exit code 0
