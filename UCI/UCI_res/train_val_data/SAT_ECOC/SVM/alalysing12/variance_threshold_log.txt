算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:57:47
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  1  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  0.]
 [-1. -1.  0.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  1  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.6 0.6 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  0.  1.]
 [-1. -1.  0. -1.]
 [ 1. -1. -1. -1.]
 [ 1. -1. -1.  0.]
 [-1.  1.  1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 4  5  0  0  0]
 [ 4  3  0  0  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 0.8 0.8 0.4]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.  ]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1. -1.  1.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  0.  1.  0.]
 [-1. -1.  0. -1. -1.]
 [ 1. -1. -1. -1.  1.]
 [ 1. -1. -1.  0.  1.]
 [-1.  1.  1.  1. -1.]]
confusion matrix
[[29  1  0  0  0]
 [ 4  4  1  0  0]
 [ 5  1  1  0  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.6 1.  1.  0.6]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  0.8 0.2]
 [0.  0.  0.2 0.4 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  0.  0.  1.  0.  1.]
 [-1. -1.  0. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1.]
 [-1.  1.  1.  1. -1. -1.]]
confusion matrix
[[29  1  0  0  0]
 [ 4  4  1  0  0]
 [ 5  1  1  0  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.6 1.  1.  0.8]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.67 0.17 0.33]
 [0.   0.   0.17 0.33 0.5  0.83]
 [0.   0.   0.   0.5  0.67 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  0.  0.  1.  0.  1.  1.]
 [-1. -1.  0. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 5  2  2  0  0]
 [ 5  0  2  0  0]
 [ 4  1  2  0  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.8 1.  1.  0.8]
 [0.  0.  0.8 1.  1. ]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.57 0.14 0.29 0.29]
 [0.   0.   0.14 0.29 0.43 0.71 0.43]
 [0.   0.   0.   0.43 0.57 0.71 0.57]
 [0.   0.   0.   0.   0.57 0.57 0.29]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1. -1.  0.  1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  0.  0.  1.  0.  1.  1. -1.]
 [-1. -1.  0. -1. -1.  1. -1.  0.]
 [ 1. -1. -1. -1.  1.  1.  1.  0.]
 [ 1. -1. -1.  0.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  0.]]
confusion matrix
[[29  1  0  0  0]
 [ 5  2  2  0  0]
 [ 4  0  2  1  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  1.  1.2 1.2 1. ]
 [0.  0.  0.8 1.2 1. ]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.62 0.5  0.12 0.25 0.25 0.38]
 [0.   0.   0.12 0.25 0.38 0.62 0.38 0.62]
 [0.   0.   0.   0.38 0.5  0.62 0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.5  0.25 0.62]
 [0.   0.   0.   0.   0.   0.25 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.768, 0.423, 0.176, 0.735, 0.346, 0.946, 0.839, 0.757]
cutting matrix
[[-1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  0.]
 [ 1. -1.  1.  1.  0.]
 [ 1.  0.  1.  1.  1.]
 [-1.  1. -1.  1.  0.]]
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 5  4  0  0  0]
 [ 4  2  0  1  0]
 [ 1  4  2  0  0]
 [ 0  1  1  1  0]]


SVM classifier
Time: 2019-01-05 22:57:49
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  1.  0. -1.]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [ 0. -1.]
 [-1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  1  0  0]
 [ 3  3  1  0  0]
 [ 4  2  1  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.2 0.  0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0. -1.  0.]
 [ 1. -1. -1.]
 [ 0. -1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 4  2  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.4 0.6 0.6]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0.  0.]
 [ 0. -1.  0.  0.]
 [ 1. -1. -1.  1.]
 [ 0. -1.  1.  0.]
 [-1.  1.  1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 4  2  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.6 0.6 0.8]
 [0.  0.  0.6 0.2 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   0.25]
 [0.   0.   0.5  1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  0.  0. -1.]
 [ 0. -1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1.]
 [ 0. -1.  1.  0. -1.]
 [-1.  1.  1. -1.  0.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 4  2  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.8 0.6 1. ]
 [0.  0.  0.8 0.4 0.8]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 0.2 0.6]
 [0.  0.  0.4 0.8 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.75, 0.423, 0.176, 0.1, 0.705]
cutting matrix
[[ 0.  0.]
 [ 0.  0.]
 [-1.  1.]
 [ 1.  0.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  0  0  1  0]
 [ 5  0  0  2  0]
 [ 6  0  0  1  0]
 [ 1  0  0  2  0]]


SVM classifier
Time: 2019-01-05 22:57:50
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1.  1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.   0.   0.33]
 [0.   0.   0.17 0.   0.   0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.5 ]
 [0.   0.   0.33 0.   0.   0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 0  1  0  3  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.67]
 [0.   0.   0.33 0.17 0.17 0.5 ]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 0.5  0.75]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 0  1  0  3  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.67]
 [0.   0.   0.5  0.17 0.17 0.5 ]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.  0.4 0.6 0.2]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  1.  0.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  2  4  0]
 [ 0  0  0  0 10  0]
 [ 0  1  0  2  1  0]]
row HD
[[0.   0.17 0.33 0.5  0.33 0.83]
 [0.   0.   0.5  0.33 0.17 0.67]
 [0.   0.   0.   0.83 0.67 0.83]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.83 0.33 0.5  0.17 0.67]
 [0.   0.   0.5  0.67 0.67 0.17]
 [0.   0.   0.   0.83 0.17 0.33]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
None


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  2  4  0]
 [ 0  0  0  0 10  0]
 [ 0  1  0  2  1  0]]
row HD
[[0.   0.17 0.33 0.5  0.33 0.83]
 [0.   0.   0.5  0.33 0.17 0.67]
 [0.   0.   0.   0.83 0.67 0.83]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.83 0.33 0.5  0.17 0.67]
 [0.   0.   0.5  0.67 0.67 0.17]
 [0.   0.   0.   0.83 0.17 0.33]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  2  4  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  2  1  0]]
row HD
[[0.   0.33 0.33 0.67 0.5  0.83]
 [0.   0.   0.67 0.33 0.17 0.83]
 [0.   0.   0.   1.   0.83 0.83]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.71 0.29 0.43 0.14 0.57 0.14]
 [0.   0.   0.43 0.57 0.57 0.14 0.57]
 [0.   0.   0.   0.71 0.14 0.29 0.14]
 [0.   0.   0.   0.   0.57 0.71 0.57]
 [0.   0.   0.   0.   0.   0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
None


============== iter  9 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  2  4  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  2  1  0]]
row HD
[[0.   0.33 0.33 0.67 0.5  0.83]
 [0.   0.   0.67 0.33 0.17 0.83]
 [0.   0.   0.   1.   0.83 0.83]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.71 0.29 0.43 0.14 0.57 0.14]
 [0.   0.   0.43 0.57 0.57 0.14 0.57]
 [0.   0.   0.   0.71 0.14 0.29 0.14]
 [0.   0.   0.   0.   0.57 0.71 0.57]
 [0.   0.   0.   0.   0.   0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.925, 0.94, 1.0, 0.955, 0.985, 0.896, 1.0]
cutting matrix
[[ 1. -1. -1.  1.]
 [-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]


SVM classifier
Time: 2019-01-05 22:57:52
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1. -1.  0. -1.]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0.  0. -1.  0. -1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [-1. -1.]
 [-1.  1.]
 [ 0.  1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.33 0.17 0.17 0.33]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.886, 0.96]
cutting matrix
[[ 1.]
 [ 0.]
 [-1.]
 [ 1.]
 [ 1.]
 [ 0.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  4  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:57:53
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [20  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [14  0  0  3  0  0  0  0  0  0]
 [ 0  0  0 20  0  0  0  0  0  0]
 [ 7  0  0  8  0  0  0  0  0  0]
 [17  0  0  3  0  0  0  0  0  0]
 [16  0  0  6  0  0  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  1.]]
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [20  0  0  2  0  0  0  0  0  0]
 [ 1  0  0 13  0  0  0  2  0  0]
 [13  0  0  3  0  0  0  1  0  0]
 [ 0  0  0 20  0  0  0  0  0  0]
 [ 7  0  0  8  0  0  0  0  0  0]
 [ 5  0  0  3  0  0  0 12  0  0]
 [16  0  0  6  0  0  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 4  0 17  1  0  0  0  0  0  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [13  0  0  3  0  0  0  1  0  0]
 [ 0  0  0 20  0  0  0  0  0  0]
 [ 7  0  0  8  0  0  0  0  0  0]
 [ 5  0  0  3  0  0  0 12  0  0]
 [15  0  1  6  0  0  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1.  1.  1.]]
confusion matrix
[[11  5  0  1  0  0  0  0  0  0]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 6  3 13  0  0  0  0  0  0  0]
 [ 1  0  2 11  0  0  0  0  2  0]
 [ 0 13  0  3  0  0  0  1  0  0]
 [ 0  0  0 20  0  0  0  0  0  0]
 [ 0  7  0  8  0  0  0  0  0  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2 13  1  6  0  0  0  0  0  0]
 [ 1  1  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.  0.3 0.2 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.  ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0.]
 [-1. -1.  1. -1.  1.]
 [-1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.]]
confusion matrix
[[11  5  0  1  0  0  0  0  0  0]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 6  3 13  0  0  0  0  0  0  0]
 [ 1  0  2 11  0  0  0  0  2  0]
 [ 1 13  0  3  0  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  7  0  2  0  0  6  0  0  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2 13  1  4  0  0  2  0  0  0]
 [ 1  1  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.4 0.3 0. ]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  0.8 1.2]
 [0.  0.  0.6 0.4 2. ]
 [0.  0.  0.  0.6 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1. -1. -1. -1.  0.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.  0.]
 [-1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  0.  1.]
 [-1. -1.  1. -1.  1.  0.]
 [-1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]]
confusion matrix
[[11  4  0  1  0  0  0  0  1  0]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 6  2 13  0  0  0  0  0  1  0]
 [ 1  0  2 11  0  0  0  0  2  0]
 [ 0 13  0  3  0  0  0  1  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  4  0  2  0  0  6  0  3  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2  6  1  4  0  0  2  0  7  0]
 [ 1  1  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.3 0.3 0.4 0.2]
 [0.  0.  0.2 0.2 0.  0.2 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.3 0.5 0.4 0.2]
 [0.  0.  0.  0.  0.2 0.  0.1 0.5 0.4 0. ]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.67 1.   0.83]
 [0.   0.   0.5  0.33 1.67 0.5 ]
 [0.   0.   0.   0.5  1.17 0.83]
 [0.   0.   0.   0.   1.33 0.83]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  0.  1.  1.  0.  1.  1.  0. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  0. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0.]
 [-1.  1.  1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  0.  1. -1.]
 [-1. -1.  1. -1.  1.  0. -1.]
 [-1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.]]
confusion matrix
[[10  3  0  2  1  0  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 6  2 12  1  0  0  0  0  1  0]
 [ 1  0  1 12  0  0  0  2  0  0]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  4  0  2  0  0  6  0  3  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2  2  1  4  4  0  2  0  7  0]
 [ 0  0  0 12  1  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.3 0.3 0.3 0.3 0.3 0.5 0.3]
 [0.  0.  0.2 0.3 0.1 0.3 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.  0.2 0.6 0.5 0. ]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.6 0.5 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.57 0.86 0.71 0.86]
 [0.   0.   0.43 0.29 1.43 0.43 1.14]
 [0.   0.   0.   0.43 1.   0.71 1.  ]
 [0.   0.   0.   0.   1.14 0.71 0.86]
 [0.   0.   0.   0.   0.   1.43 0.86]
 [0.   0.   0.   0.   0.   0.   1.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.]
 [-1.  1.  1.  1. -1.  0. -1.  0.]
 [-1.  1. -1.  1. -1.  1. -1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.]]
confusion matrix
[[10  3  0  2  1  0  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 6  2 12  1  0  0  0  0  1  0]
 [ 1  0  1 12  0  0  0  2  0  0]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  4  0  2  0  0  6  0  3  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2  2  1  4  4  0  2  0  7  0]
 [ 0  0  0 12  1  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.3 0.4 0.4 0.4 0.6 0.4]
 [0.  0.  0.2 0.4 0.1 0.4 0.4 0.4 0.5 0.4]
 [0.  0.  0.  0.4 0.3 0.4 0.4 0.6 0.6 0.4]
 [0.  0.  0.  0.  0.4 0.  0.2 0.7 0.6 0. ]
 [0.  0.  0.  0.  0.  0.4 0.5 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.7 0.6 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.62 0.5  0.75 0.62 0.75 1.25]
 [0.   0.   0.38 0.25 1.25 0.38 1.   1.25]
 [0.   0.   0.   0.38 0.88 0.62 0.88 1.  ]
 [0.   0.   0.   0.   1.   0.62 0.75 1.12]
 [0.   0.   0.   0.   0.   1.25 0.75 0.62]
 [0.   0.   0.   0.   0.   0.   1.25 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.]]
confusion matrix
[[ 9  3  0  2  1  0  1  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 6  2 12  1  0  0  0  0  1  0]
 [ 1  0  1 12  0  0  0  2  0  0]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  4  0  2  0  0  6  0  3  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2  2  1  4  4  0  2  0  7  0]
 [ 0  0  0 12  1  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.3 0.4 0.5 0.4 0.6 0.4]
 [0.  0.  0.2 0.4 0.1 0.4 0.5 0.4 0.5 0.4]
 [0.  0.  0.  0.4 0.3 0.4 0.5 0.6 0.6 0.4]
 [0.  0.  0.  0.  0.4 0.  0.3 0.7 0.6 0. ]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.6 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.56 0.44 0.67 0.56 0.67 1.11 0.78]
 [0.   0.   0.33 0.22 1.11 0.33 0.89 1.11 0.33]
 [0.   0.   0.   0.33 0.78 0.56 0.78 0.89 0.22]
 [0.   0.   0.   0.   0.89 0.56 0.67 1.   0.33]
 [0.   0.   0.   0.   0.   1.11 0.67 0.56 0.89]
 [0.   0.   0.   0.   0.   0.   1.11 0.89 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]]
confusion matrix
[[ 9  3  0  2  1  0  1  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 2  2 16  0  0  0  0  0  1  1]
 [ 1  0  1 11  0  0  0  2  0  1]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 0  1  3  2  0  0  6  0  3  0]
 [ 3  3  0  2  0  0  0 12  0  0]
 [ 2  1  2  4  4  0  2  0  7  0]
 [ 0  0  0 10  1  0  0  0  0  2]]
row HD
[[0.  0.2 0.3 0.4 0.3 0.4 0.5 0.4 0.6 0.5]
 [0.  0.  0.3 0.4 0.1 0.4 0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.5 0.4 0.5 0.6 0.7 0.7 0.4]
 [0.  0.  0.  0.  0.4 0.  0.3 0.7 0.6 0.1]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.5 0.4 0.6 0.5 0.6 1.  0.7 0.6]
 [0.  0.  0.3 0.2 1.  0.3 0.8 1.  0.3 0.4]
 [0.  0.  0.  0.3 0.7 0.5 0.7 0.8 0.2 0.1]
 [0.  0.  0.  0.  0.8 0.5 0.6 0.9 0.3 0.4]
 [0.  0.  0.  0.  0.  1.  0.6 0.5 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.]]
confusion matrix
[[10  3  0  2  1  0  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 1  2 16  1  0  0  0  0  1  1]
 [ 0  0  1 12  0  0  0  2  0  1]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 0  1  3  2  0  0  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  1  2  4  4  0  2  0  7  0]
 [ 0  0  0 10  1  0  0  0  0  2]]
row HD
[[0.  0.3 0.4 0.5 0.4 0.5 0.6 0.5 0.7 0.6]
 [0.  0.  0.3 0.4 0.1 0.4 0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.5 0.4 0.5 0.6 0.7 0.7 0.4]
 [0.  0.  0.  0.  0.4 0.  0.3 0.7 0.6 0.1]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.45 0.36 0.55 0.45 0.55 0.91 0.64 0.55 0.45]
 [0.   0.   0.27 0.18 0.91 0.27 0.73 0.91 0.27 0.36 0.27]
 [0.   0.   0.   0.27 0.64 0.45 0.64 0.73 0.18 0.09 0.18]
 [0.   0.   0.   0.   0.73 0.45 0.55 0.82 0.27 0.36 0.09]
 [0.   0.   0.   0.   0.   0.91 0.55 0.45 0.73 0.55 0.64]
 [0.   0.   0.   0.   0.   0.   0.91 0.73 0.45 0.55 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.73 0.64 0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.64 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  0.  1.  0. -1. -1.  1.  0.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1.]]
confusion matrix
[[10  3  0  2  1  0  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  1  1]
 [ 0  0  1 12  0  0  0  2  0  1]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0  4  0 14  1  0  0  1]
 [ 0  3  1  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  2  1  3  4  1  2  0  7  0]
 [ 0  0  0 10  1  0  0  0  0  2]]
row HD
[[0.  0.3 0.5 0.6 0.4 0.6 0.6 0.6 0.8 0.7]
 [0.  0.  0.4 0.5 0.1 0.5 0.5 0.5 0.6 0.6]
 [0.  0.  0.  0.5 0.5 0.6 0.7 0.7 0.8 0.4]
 [0.  0.  0.  0.  0.5 0.1 0.4 0.7 0.7 0.1]
 [0.  0.  0.  0.  0.  0.5 0.6 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.8 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.42 0.33 0.5  0.42 0.5  0.83 0.58 0.5  0.42 0.58]
 [0.   0.   0.25 0.17 0.83 0.25 0.67 0.83 0.25 0.33 0.25 0.5 ]
 [0.   0.   0.   0.25 0.58 0.42 0.58 0.67 0.17 0.08 0.17 0.58]
 [0.   0.   0.   0.   0.67 0.42 0.5  0.75 0.25 0.33 0.08 0.58]
 [0.   0.   0.   0.   0.   0.83 0.5  0.42 0.67 0.5  0.58 0.58]
 [0.   0.   0.   0.   0.   0.   0.83 0.67 0.42 0.5  0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.58 0.58 0.58 0.83]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.58 0.67 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1.  0. -1.  0.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.  0.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.  0.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.]]
confusion matrix
[[10  3  0  2  1  0  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  1  0  3 12  0  0  1  0  0]
 [ 0  0  0  4  0 14  1  0  0  1]
 [ 0  3  1  0  0  2  6  0  3  0]
 [ 2  3  0  3  0  0  0 12  0  0]
 [ 2  2  1  3  4  1  2  0  7  0]
 [ 0  0  0 10  1  0  0  0  0  2]]
row HD
[[0.  0.3 0.6 0.7 0.4 0.7 0.6 0.7 0.9 0.8]
 [0.  0.  0.5 0.6 0.1 0.6 0.5 0.6 0.7 0.7]
 [0.  0.  0.  0.6 0.6 0.6 0.8 0.8 0.9 0.5]
 [0.  0.  0.  0.  0.6 0.2 0.5 0.7 0.7 0.1]
 [0.  0.  0.  0.  0.  0.6 0.6 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.9 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.38 0.31 0.46 0.38 0.46 0.77 0.54 0.46 0.38 0.54 0.54]
 [0.   0.   0.23 0.15 0.77 0.23 0.62 0.77 0.23 0.31 0.23 0.46 0.46]
 [0.   0.   0.   0.23 0.54 0.38 0.54 0.62 0.15 0.08 0.15 0.54 0.69]
 [0.   0.   0.   0.   0.62 0.38 0.46 0.69 0.23 0.31 0.08 0.54 0.54]
 [0.   0.   0.   0.   0.   0.77 0.46 0.38 0.62 0.46 0.54 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.77 0.62 0.38 0.46 0.38 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.62 0.54 0.54 0.54 0.77 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.54 0.62 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.15 0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  1.  0.  1.  1.  0. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.  0.  0.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.  0.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.  0. -1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1. -1.  0.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  1.]]
confusion matrix
[[10  3  0  1  1  1  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  1  1  2 11  1  0  1  0  0]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 0  3  1  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  2  2  3  1  1  2  0  9  0]
 [ 0  0  0 10  1  0  0  0  0  2]]
row HD
[[0.  0.4 0.6 0.8 0.5 0.7 0.7 0.8 0.9 0.8]
 [0.  0.  0.6 0.7 0.1 0.7 0.6 0.6 0.8 0.8]
 [0.  0.  0.  0.7 0.7 0.6 0.9 0.9 0.9 0.5]
 [0.  0.  0.  0.  0.7 0.3 0.5 0.8 0.8 0.2]
 [0.  0.  0.  0.  0.  0.7 0.7 0.7 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 1.  0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.36 0.29 0.43 0.36 0.43 0.71 0.5  0.43 0.36 0.5  0.5  0.57]
 [0.   0.   0.21 0.14 0.71 0.21 0.57 0.71 0.21 0.29 0.21 0.43 0.43 0.43]
 [0.   0.   0.   0.21 0.5  0.36 0.5  0.57 0.14 0.07 0.14 0.5  0.64 0.43]
 [0.   0.   0.   0.   0.57 0.36 0.43 0.64 0.21 0.29 0.07 0.5  0.5  0.43]
 [0.   0.   0.   0.   0.   0.71 0.43 0.36 0.57 0.43 0.5  0.5  0.5  0.57]
 [0.   0.   0.   0.   0.   0.   0.71 0.57 0.36 0.43 0.36 0.29 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.57 0.5  0.5  0.5  0.71 0.64 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.57 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.14 0.43 0.57 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.57 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0.  1.  0.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.  0.  0. -1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1. -1. -1.  0.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.  0.  0. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.  0. -1.  0.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1. -1.  0.  0.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  1.  1.]]
confusion matrix
[[10  3  0  0  1  1  0  0  1  1]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  1  0  0 12  1  0  1  0  2]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 0  3  1  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  2  2  3  1  1  2  0  9  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.7 0.8 0.6 0.7 0.7 0.8 1.  0.9]
 [0.  0.  0.7 0.8 0.1 0.8 0.7 0.7 0.8 0.9]
 [0.  0.  0.  0.8 0.8 0.7 1.  1.  1.  0.5]
 [0.  0.  0.  0.  0.8 0.3 0.5 0.8 0.9 0.3]
 [0.  0.  0.  0.  0.  0.8 0.8 0.8 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.6 1.  0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.33 0.27 0.4  0.33 0.4  0.67 0.47 0.4  0.33 0.47 0.47 0.53
  0.4 ]
 [0.   0.   0.2  0.13 0.67 0.2  0.53 0.67 0.2  0.27 0.2  0.4  0.4  0.4
  0.47]
 [0.   0.   0.   0.2  0.47 0.33 0.47 0.53 0.13 0.07 0.13 0.47 0.6  0.4
  0.6 ]
 [0.   0.   0.   0.   0.53 0.33 0.4  0.6  0.2  0.27 0.07 0.47 0.47 0.4
  0.53]
 [0.   0.   0.   0.   0.   0.67 0.4  0.33 0.53 0.4  0.47 0.47 0.47 0.53
  0.47]
 [0.   0.   0.   0.   0.   0.   0.67 0.53 0.33 0.4  0.33 0.27 0.33 0.2
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.47 0.47 0.67 0.6  0.53
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.53 0.33 0.33 0.33
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.13 0.4  0.53 0.27
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.53 0.53 0.47
  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.53 0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0.  1.  0.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.  0.  0. -1.  1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1. -1. -1.  0. -1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.  0.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.  1.  1.  0.  0.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.  0. -1.  0. -1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1. -1.  0.  0. -1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  1.  1. -1.]]
confusion matrix
[[10  3  0  0  1  1  0  0  1  1]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  1  0  0 11  1  0  1  0  3]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 0  1  1  0  0  2  6  0  3  2]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  2  3  1  1  2  0  9  1]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.8 0.9 0.6 0.8 0.8 0.9 1.1 1. ]
 [0.  0.  0.8 0.9 0.1 0.9 0.8 0.8 0.9 1. ]
 [0.  0.  0.  0.9 0.9 0.7 1.1 1.1 1.1 0.6]
 [0.  0.  0.  0.  0.9 0.4 0.5 0.8 0.9 0.3]
 [0.  0.  0.  0.  0.  0.9 0.9 0.9 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 1.1 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.31 0.25 0.38 0.31 0.38 0.62 0.44 0.38 0.31 0.44 0.44 0.5
  0.38 0.5 ]
 [0.   0.   0.19 0.12 0.62 0.19 0.5  0.62 0.19 0.25 0.19 0.38 0.38 0.38
  0.44 0.31]
 [0.   0.   0.   0.19 0.44 0.31 0.44 0.5  0.12 0.06 0.12 0.44 0.56 0.38
  0.56 0.44]
 [0.   0.   0.   0.   0.5  0.31 0.38 0.56 0.19 0.25 0.06 0.44 0.44 0.38
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.62 0.38 0.31 0.5  0.38 0.44 0.44 0.44 0.5
  0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.62 0.5  0.31 0.38 0.31 0.25 0.31 0.19
  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.44 0.44 0.62 0.56 0.5
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.5  0.31 0.31 0.31
  0.56 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.12 0.38 0.5  0.25
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.5  0.5  0.44
  0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.5  0.38
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.38
  0.31 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1. -1. -1. -1.  0.  1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0.  1.  0.  1. -1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.  0.  0. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.  1.  1.  1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1. -1. -1.  0. -1.  1.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.  0.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.  1.  1.  0.  0.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.  0. -1.  0. -1. -1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1. -1.  0.  0. -1. -1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.]]
confusion matrix
[[10  3  0  0  1  1  0  0  1  1]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  1  1]
 [ 0  0  1 12  0  0  0  2  0  1]
 [ 0  1  0  0 12  1  0  1  0  2]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 0  1  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  3  3  1  1  2  0  9  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.8 1.  0.6 0.9 0.8 0.9 1.1 1.1]
 [0.  0.  0.8 1.  0.1 1.  0.8 0.8 0.9 1.1]
 [0.  0.  0.  1.  0.9 0.8 1.1 1.1 1.1 0.7]
 [0.  0.  0.  0.  1.  0.4 0.6 0.9 1.  0.3]
 [0.  0.  0.  0.  0.  1.  0.9 0.9 0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.8 1.2 1.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.29 0.24 0.35 0.29 0.35 0.59 0.41 0.35 0.29 0.41 0.41 0.47
  0.35 0.47 0.06]
 [0.   0.   0.18 0.12 0.59 0.18 0.47 0.59 0.18 0.24 0.18 0.35 0.35 0.35
  0.41 0.29 0.29]
 [0.   0.   0.   0.18 0.41 0.29 0.41 0.47 0.12 0.06 0.12 0.41 0.53 0.35
  0.53 0.41 0.35]
 [0.   0.   0.   0.   0.47 0.29 0.35 0.53 0.18 0.24 0.06 0.41 0.41 0.35
  0.47 0.41 0.29]
 [0.   0.   0.   0.   0.   0.59 0.35 0.29 0.47 0.35 0.41 0.41 0.41 0.47
  0.41 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.59 0.47 0.29 0.35 0.29 0.24 0.29 0.18
  0.35 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.41 0.41 0.41 0.59 0.53 0.47
  0.41 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.41 0.47 0.29 0.29 0.29
  0.53 0.35 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.12 0.35 0.47 0.24
  0.47 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.47 0.47 0.41
  0.59 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.47 0.35
  0.47 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.35
  0.29 0.53 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.35 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.41 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0. -1.  1.  0. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0.  1.  0.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  1.  1.  0.  0.  0. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.  0.  1. -1.  1.  1.  1.  1.  1.  0. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1.  1. -1. -1.  0. -1.  1.  0.]
 [-1.  1.  1.  1. -1.  0.  1.  0.  1.  1.  1.  0.  0.  0. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.  1.  1. -1.  1.  1.  0.  0.  1.  1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1. -1.  1.  1.  0.  0. -1.  0. -1. -1.  1.]
 [-1. -1.  1. -1.  1.  0. -1.  1.  1.  1.  1.  1. -1.  0.  0. -1. -1.  0.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1. -1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.]]
confusion matrix
[[10  3  0  1  1  1  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  1  0  0 12  1  0  1  0  2]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 0  1  1  0  0  2  6  0  3  2]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  2  3  1  1  2  0  9  1]
 [ 0  0  0  9  1  0  0  0  0  3]]
row HD
[[0.  0.5 0.8 1.1 0.6 1.  0.9 1.  1.2 1.2]
 [0.  0.  0.8 1.1 0.1 1.1 0.9 0.9 1.  1.2]
 [0.  0.  0.  1.1 0.9 0.9 1.2 1.2 1.2 0.8]
 [0.  0.  0.  0.  1.1 0.5 0.7 0.9 1.  0.4]
 [0.  0.  0.  0.  0.  1.1 1.  1.  0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.8 1.3 1.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.28 0.22 0.33 0.28 0.33 0.56 0.39 0.33 0.28 0.39 0.39 0.44
  0.33 0.44 0.06 0.17]
 [0.   0.   0.17 0.11 0.56 0.17 0.44 0.56 0.17 0.22 0.17 0.33 0.33 0.33
  0.39 0.28 0.28 0.39]
 [0.   0.   0.   0.17 0.39 0.28 0.39 0.44 0.11 0.06 0.11 0.39 0.5  0.33
  0.5  0.39 0.33 0.33]
 [0.   0.   0.   0.   0.44 0.28 0.33 0.5  0.17 0.22 0.06 0.39 0.39 0.33
  0.44 0.39 0.28 0.33]
 [0.   0.   0.   0.   0.   0.56 0.33 0.28 0.44 0.33 0.39 0.39 0.39 0.44
  0.39 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.56 0.44 0.28 0.33 0.28 0.22 0.28 0.17
  0.33 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.39 0.39 0.39 0.56 0.5  0.44
  0.39 0.33 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.39 0.44 0.28 0.28 0.28
  0.5  0.33 0.5  0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.11 0.33 0.44 0.22
  0.44 0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.44 0.44 0.39
  0.56 0.33 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.44 0.33
  0.44 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.33
  0.28 0.5  0.39 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28
  0.33 0.33 0.39 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.39 0.39 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.44 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.39 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.846, 0.824, 0.957, 0.883, 0.867, 0.768, 0.77, 0.689, 0.931, 0.862, 0.952, 0.796, 0.735, 0.776, 0.71, 0.705, 0.894, 0.777]
cutting matrix
[[-1.  1.  1. -1.  1. -1.  1.  1. -1.  0.  0.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  1.  1.  0.  0.  0.  1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  0. -1. -1.]
 [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1. -1.  1.  0.]
 [-1.  1.  1.  1.  0.  1.  1.  1.  1.  0.  0.  0.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  0.  1.  1.  1. -1.  1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.  0.  0. -1. -1. -1.  1.]
 [-1. -1.  1. -1.  0. -1.  1.  1.  1.  1. -1.  0. -1. -1.  0.]
 [-1. -1.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.]
 [ 1.  1.  1.  1.  1.  0.  1. -1.  1.  1. -1.  1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[10  3  0  1  1  1  0  0  1  0]
 [ 0 22  0  1  3  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  3  0  1  1  2  0  9  3]
 [ 0  0  0  3  1  0  0  0  0  9]]


SVM classifier
Time: 2019-01-05 22:58:11
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
confusion matrix
[[11  4  0  0  0  0  0  2  0  0]
 [ 1 25  0  0  0  0  0  0  0  0]
 [ 1 19  0  0  0  0  0  2  0  0]
 [12  2  0  0  0  0  0  2  0  0]
 [ 0 16  0  0  0  0  0  1  0  0]
 [18  1  0  0  0  0  0  1  0  0]
 [ 5  1  0  0  0  0  0  9  0  0]
 [ 5  4  0  0  0  0  0 11  0  0]
 [ 7  2  0  0  0  0  0 13  0  0]
 [ 8  5  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [-1. -1.]
 [-1.  1.]
 [ 0.  0.]
 [-1.  1.]
 [ 0.  0.]
 [ 0.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]]
confusion matrix
[[11  0  4  0  0  0  0  0  2  0]
 [ 0 24  1  1  0  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  2 14  0  0  0  0  1  0  0]
 [ 2  0  1 16  0  0  0  0  1  0]
 [ 3  0  1  2  0  0  0  0  9  0]
 [ 1  5  1  2  0  0  0 11  0  0]
 [ 3  0  2  4  0  0  0  0 13  0]
 [ 0  0  5  8  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.1 0.  0.2 0.1 0.1]
 [0.  0.  0.1 0.2 0.1 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.  0.2 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.  0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  0.]
 [-1. -1.  1.]
 [-1.  1.  0.]
 [ 0.  0.  0.]
 [-1.  1. -1.]
 [ 0.  0.  0.]
 [ 0.  1.  0.]
 [ 1. -1.  0.]
 [ 1.  1.  0.]
 [-1.  1. -1.]]
confusion matrix
[[11  0  3  0  1  0  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 0  0  2  2 12  0  0  1  0  0]
 [ 2  0  1 16  0  0  0  0  1  0]
 [ 3  0  1  2  0  0  0  0  9  0]
 [ 1  3  1  4  0  0  0 11  0  0]
 [ 3  0  2  4  0  0  0  0 13  0]
 [ 0  0  0  8  5  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.1 0.  0.2 0.1 0.2]
 [0.  0.  0.2 0.3 0.2 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.3 0.  0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.33]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [-1. -1.  1.  0.]
 [-1.  1.  0.  0.]
 [ 0.  0.  0. -1.]
 [-1.  1. -1.  1.]
 [ 0.  0.  0.  1.]
 [ 0.  1.  0. -1.]
 [ 1. -1.  0.  1.]
 [ 1.  1.  0.  0.]
 [-1.  1. -1.  1.]]
confusion matrix
[[11  0  3  0  1  0  0  0  2  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  2  0 12  2  0  1  0  0]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  5  1  2  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  1  0 13  0]
 [ 0  0  0  2  5  6  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.3 0.2 0.1 0.3 0.1 0.3]
 [0.  0.  0.2 0.4 0.3 0.4 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.2 0.3 0.2 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.4 0.1 0.1 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.   2.  ]
 [0.   0.   2.   2.  ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0. -1.  1.  1. -1.  1.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.  0. -1.]
 [-1. -1.  1.  0.  0.]
 [-1.  1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1.]
 [-1.  1. -1.  1.  1.]
 [ 0.  0.  0.  1. -1.]
 [ 0.  1.  0. -1. -1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  1.  0.  0.  0.]
 [-1.  1. -1.  1.  0.]]
confusion matrix
[[10  0  4  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  1  0  1  0]
 [ 0  0  2 10  0  1  1  2  0  0]
 [ 0  0  2  0 12  0  0  1  0  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  0  1 13  0  0]
 [ 3  0  2  0  0  4  1  0 12  0]
 [ 0  0  0  2  0  6  0  0  0  5]]
row HD
[[0.  0.4 0.2 0.2 0.4 0.2 0.1 0.4 0.2 0.4]
 [0.  0.  0.3 0.5 0.4 0.5 0.5 0.4 0.3 0.3]
 [0.  0.  0.  0.4 0.2 0.4 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.5 0.1 0.1 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 0.8 1.6 1.8]
 [0.  0.  1.6 1.6 1.6]
 [0.  0.  0.  1.4 1.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
6
new_column
None


============== iter  6 ================
current matrix is 
[[ 0.  1.  0.  0. -1.]
 [-1. -1.  1.  0.  0.]
 [-1.  1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1.]
 [-1.  1. -1.  1.  1.]
 [ 0.  0.  0.  1. -1.]
 [ 0.  1.  0. -1. -1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  1.  0.  0.  0.]
 [-1.  1. -1.  1.  0.]]
confusion matrix
[[10  0  4  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  1  0  1  0]
 [ 0  0  2 10  0  1  1  2  0  0]
 [ 0  0  2  0 12  0  0  1  0  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  0  1 13  0  0]
 [ 3  0  2  0  0  4  1  0 12  0]
 [ 0  0  0  2  0  6  0  0  0  5]]
row HD
[[0.  0.4 0.2 0.2 0.4 0.2 0.1 0.4 0.2 0.4]
 [0.  0.  0.3 0.5 0.4 0.5 0.5 0.4 0.3 0.3]
 [0.  0.  0.  0.4 0.2 0.4 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.5 0.1 0.1 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 0.8 1.6 1.8]
 [0.  0.  1.6 1.6 1.6]
 [0.  0.  0.  1.4 1.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0.  0. -1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.]
 [-1. -1.  1.  0.  0.  1.]
 [-1.  1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1. -1.  0.]
 [-1.  1. -1.  1.  1. -1.]
 [ 0.  0.  0.  1. -1.  0.]
 [ 0.  1.  0. -1. -1.  1.]
 [ 1. -1.  0.  1.  1.  1.]
 [ 1.  1.  0.  0.  0.  1.]
 [-1.  1. -1.  1.  0.  1.]]
confusion matrix
[[10  0  4  0  0  0  0  0  2  1]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  1  0  1  0]
 [ 0  0  2 10  0  1  1  2  0  0]
 [ 0  0  1  0 10  0  0  2  0  4]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  0  1 13  0  0]
 [ 3  0  2  0  0  4  1  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.4 0.2 0.3 0.5 0.3 0.1 0.4 0.2 0.4]
 [0.  0.  0.3 0.6 0.5 0.6 0.5 0.4 0.3 0.3]
 [0.  0.  0.  0.5 0.3 0.5 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.6 0.1 0.2 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67 1.33 1.5  0.83]
 [0.   0.   1.33 1.33 1.33 0.5 ]
 [0.   0.   0.   1.17 1.5  1.  ]
 [0.   0.   0.   0.   0.67 1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  1.]
 [-1. -1.  1.  0.  0.  1.  0.]
 [-1.  1.  0.  0.  1.  1.  1.]
 [ 0.  0.  0. -1. -1.  0.  0.]
 [-1.  1. -1.  1.  1. -1.  0.]
 [ 0.  0.  0.  1. -1.  0.  0.]
 [ 0.  1.  0. -1. -1.  1.  1.]
 [ 1. -1.  0.  1.  1.  1.  1.]
 [ 1.  1.  0.  0.  0.  1.  1.]
 [-1.  1. -1.  1.  0.  1. -1.]]
confusion matrix
[[10  0  4  0  0  0  0  0  2  1]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  1 17  1  0  0  1  0  1  0]
 [ 0  0  1 11  0  1  1  2  0  0]
 [ 0  1  1  0 10  0  0  1  0  4]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  0  1 13  0  0]
 [ 3  0  2  0  0  4  1  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.5 0.2 0.4 0.6 0.4 0.1 0.4 0.2 0.5]
 [0.  0.  0.4 0.6 0.5 0.6 0.6 0.5 0.4 0.4]
 [0.  0.  0.  0.6 0.4 0.6 0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.6 0.1 0.3 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.5 0.6 0.5 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.57 1.14 1.29 0.71 0.71]
 [0.   0.   1.14 1.14 1.14 0.43 0.57]
 [0.   0.   0.   1.   1.29 0.86 1.  ]
 [0.   0.   0.   0.   0.57 1.14 1.14]
 [0.   0.   0.   0.   0.   1.14 1.  ]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.742, 0.836, 0.696, 0.663, 0.717, 0.796, 0.761]
cutting matrix
[[ 1.  0.  0. -1.  1.  1.]
 [-1.  1.  0.  0.  1.  0.]
 [ 1.  0.  0.  1.  1.  1.]
 [ 0.  0. -1. -1.  0.  0.]
 [ 1. -1.  1.  1. -1.  0.]
 [ 0.  0.  1. -1.  0.  0.]
 [ 1.  0. -1. -1.  1.  1.]
 [-1.  0.  1.  1.  1.  1.]
 [ 1.  0.  0.  0.  1.  1.]
 [ 1. -1.  1.  0.  1. -1.]]
cutting matrix's confusion matrix
[[10  0  1  0  0  0  0  0  5  1]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  1  0  1  0]
 [ 0  0  2 10  0  1  1  2  0  0]
 [ 0  0  1  0 10  0  0  2  0  4]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  0  1 13  0  0]
 [ 3  0  2  0  0  4  1  0 12  0]
 [ 0  0  0  2  0  7  0  0  0  4]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:58:17
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  1.]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  1  0  3]
 [ 2  0  2  0  1]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.4]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.6]
 [0.  0.  0.6 0.2 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.5 0.5]
 [0.  0.  1.  0.5]
 [0.  0.  0.  0.5]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.8 0.6]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.625, 0.661, 0.946, 0.911]
cutting matrix
[[-1. -1.  1.]
 [-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]


SVM classifier
Time: 2019-01-05 22:58:17
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  0.  1.  0.]
confusion matrix
[[22  3  0  0  0]
 [12  2  0  0  0]
 [ 6  2  0  1  0]
 [ 3  0  0  2  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  0.  0.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [-1.  1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  0.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  1  0  1  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.  0.4 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  0.  0.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0. -1. -1.]
 [-1.  1.  0.]
 [ 0. -1.  1.]
 [ 1.  0.  1.]
 [ 0.  0.  0.]]
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  1  4  1  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.2 0.6 0.4]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0. -1. -1.  0.]
 [-1.  1.  0.  0.]
 [ 0. -1.  1. -1.]
 [ 1.  0.  1.  1.]
 [ 0.  0.  0.  1.]]
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  0  2  3  1]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.4 0.8 0.6]
 [0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 0.75]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1. -1.  0.  0.]
 [-1.  1.  0.  0. -1.]
 [ 0. -1.  1. -1. -1.]
 [ 1.  0.  1.  1. -1.]
 [ 0.  0.  0.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  1  2  3  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.8 0.6 1.  0.8]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.6 0.6]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0. -1. -1.  0.  0.  0.]
 [-1.  1.  0.  0. -1. -1.]
 [ 0. -1.  1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  0.]
 [ 0.  0.  0.  1.  1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  1  2  3  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.  0.8 1.  1. ]
 [0.  0.  1.  1.  0.8]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.5  0.5  0.5 ]
 [0.   0.   0.5  0.67 0.67 0.67]
 [0.   0.   0.   0.5  0.83 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.211, 0.667, 0.769, 0.059, 0.29, 0.115]
cutting matrix
[[ 0. -1.  0.]
 [-1.  0.  0.]
 [ 0.  1. -1.]
 [ 1.  1.  1.]
 [ 0.  0.  1.]]
cutting matrix's confusion matrix
[[22  3  0  0  0]
 [10  2  2  0  0]
 [ 2  2  2  3  0]
 [ 3  0  1  1  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 22:58:19
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [ 0  0  0  0 11  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.17]
 [0.   0.   0.17 0.17 0.33 0.  ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [ 0  0  0  0 11  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.17 0.5  0.5  0.17 0.17]
 [0.   0.   0.33 0.33 0.33 0.  ]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1. -1. -1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 1. -1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.67 0.17 0.33]
 [0.   0.   0.5  0.33 0.5  0.  ]
 [0.   0.   0.   0.17 0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.5  1.25]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.985, 0.955, 0.985, 0.985]
cutting matrix
[[-1. -1.  1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1. -1. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:58:19
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[-1.  0.  0. -1.  0.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1.  1. -1.  0.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
None


============== iter  2 ================
current matrix is 
[-1.  0.  0. -1.  0.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[-1.  1.  0. -1.  1.  1.]
select_j_column
[ 0. -1. -1.  1.  0.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [ 0.  0.]
 [ 0. -1.]
 [-1.  0.]
 [ 0.  1.]
 [ 1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.17 0.17 0.33 0.17]
 [0.   0.   0.17 0.17 0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.909, 0.957]
cutting matrix
[[-1. -1.]
 [ 0.  0.]
 [ 0. -1.]
 [-1.  0.]
 [ 0.  1.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-05 22:58:20
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
confusion matrix
[[14  4  0  0  0  0  0  0  0  0]
 [ 0 22  0  0  0  0  0  0  0  0]
 [20  6  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [ 0 23  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 2 15  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]]
confusion matrix
[[14  0  0  4  0  0  0  0  0  0]
 [ 0 17  0  5  0  0  0  0  0  0]
 [20  0  0  6  0  0  0  0  0  0]
 [ 1  5  0 11  0  0  0  0  0  0]
 [ 0  0  0 23  0  0  0  0  0  0]
 [ 0  0  0 19  0  0  0  0  0  0]
 [ 2  0  0 17  0  0  0  0  0  0]
 [ 2 12  0  3  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.1 0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.2 0.1 0.1 0.1 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1. -1.  1.]
 [-1.  1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  0.]
 [ 1. -1.  0.]
 [ 1.  1. -1.]
 [ 1. -1.  0.]]
confusion matrix
[[13  1  0  1  0  3  0  0  0  0]
 [ 0  0  0  0  0  5  0 17  0  0]
 [ 1  2 17  3  0  3  0  0  0  0]
 [ 0  0  1  0  0 11  0  5  0  0]
 [ 0  0  0  0  0 23  0  0  0  0]
 [ 0  0  0  2  0 17  0  0  0  0]
 [ 2  0  0 16  0  1  0  0  0  0]
 [ 0  2  0  0  0  3  0 12  0  0]
 [ 2  0  0  9  0  3  0  0  0  0]
 [ 0  0  0  0  0 13  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.1 0.2 0.2 0.3 0.1 0.3]
 [0.  0.  0.3 0.2 0.2 0.1 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.2 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.33]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1.  1.  0.  1.]
 [ 1.  1.  0.  1.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  0.  1.]
 [ 1. -1.  0. -1.]
 [ 1.  1. -1. -1.]
 [ 1. -1.  0. -1.]]
confusion matrix
[[13  0  1  0  1  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  3  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  2 16  0  0  0  0]
 [ 2  0  0  0 16  1  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  9  3  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.1 0.2 0.2 0.3 0.2 0.4 0.2 0.4]
 [0.  0.  0.4 0.3 0.2 0.1 0.3 0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.3 0.3 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.75 2.  ]
 [0.   0.   2.25 0.75]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1.  0.  0. -1.  1.  0.  0. -1.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1.  0.]
 [ 1. -1.  1. -1.  0.]
 [-1.  1.  0.  1. -1.]
 [ 1.  1.  0.  1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.]
 [ 1.  1.  0.  1. -1.]
 [ 1. -1.  0. -1. -1.]
 [ 1.  1. -1. -1.  0.]
 [ 1. -1.  0. -1.  1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  1  3  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  5  0  0  0  0]
 [ 2  0  0  0  1 16  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  2 10  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.3 0.3 0.4 0.3 0.5 0.2 0.5]
 [0.  0.  0.5 0.4 0.3 0.2 0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.2 0.4 0.3 0.1 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.4 1.6 1.2]
 [0.  0.  1.8 0.6 1.4]
 [0.  0.  0.  1.6 2. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  0.  0. -1.  1.  0.  0. -1.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1.  0.  0.]
 [ 1. -1.  1. -1.  0. -1.]
 [-1.  1.  0.  1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  0.]
 [ 1.  1.  0.  1. -1.  1.]
 [ 1. -1.  0. -1. -1.  1.]
 [ 1.  1. -1. -1.  0.  1.]
 [ 1. -1.  0. -1.  1.  1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  1  3  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  5  0  0  0  0]
 [ 2  0  0  0  1 16  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  2 10  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.4 0.4 0.4 0.4 0.6 0.3 0.6]
 [0.  0.  0.6 0.5 0.4 0.3 0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.2 0.4 0.4 0.1 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.17 1.33 1.   0.67]
 [0.   0.   1.5  0.5  1.17 0.67]
 [0.   0.   0.   1.33 1.67 1.67]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1.  0.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1.  0.  0.  1.]
 [ 1. -1.  1. -1.  0. -1.  0.]
 [-1.  1.  0.  1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1.  1. -1. -1.  0. -1.]
 [ 1.  1.  0.  1. -1.  1. -1.]
 [ 1. -1.  0. -1. -1.  1. -1.]
 [ 1.  1. -1. -1.  0.  1.  0.]
 [ 1. -1.  0. -1.  1.  1. -1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  1  3  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  5  0  0  0  0]
 [ 2  0  0  0  1 16  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  2 10  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.5 0.5 0.5 0.5 0.7 0.4 0.7]
 [0.  0.  0.7 0.6 0.4 0.4 0.6 0.4 0.3 0.4]
 [0.  0.  0.  0.2 0.5 0.4 0.1 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.1 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 1.   1.14 0.86 0.57 1.29]
 [0.   0.   1.29 0.43 1.   0.57 1.  ]
 [0.   0.   0.   1.14 1.43 1.43 1.43]
 [0.   0.   0.   0.   1.   0.86 0.86]
 [0.   0.   0.   0.   0.   0.86 0.57]
 [0.   0.   0.   0.   0.   0.   1.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  1.  0.  0.  1.  1.]
 [ 1. -1.  1. -1.  0. -1.  0. -1.]
 [-1.  1.  0.  1. -1.  1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  0.  1.]
 [ 1.  1.  1. -1. -1.  0. -1. -1.]
 [ 1.  1.  0.  1. -1.  1. -1.  1.]
 [ 1. -1.  0. -1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1.  0.  1.  0.  1.]
 [ 1. -1.  0. -1.  1.  1. -1.  1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.7 0.4 0.5 0.5 0.6 0.5 0.7 0.4 0.7]
 [0.  0.  0.8 0.7 0.5 0.4 0.7 0.5 0.4 0.5]
 [0.  0.  0.  0.2 0.5 0.5 0.1 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.5 0.1 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.88 1.   0.75 0.5  1.12 0.5 ]
 [0.   0.   1.12 0.38 0.88 0.5  0.88 0.38]
 [0.   0.   0.   1.   1.25 1.25 1.25 1.25]
 [0.   0.   0.   0.   0.88 0.75 0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.75 0.5  0.75]
 [0.   0.   0.   0.   0.   0.   1.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0. -1.  1.  1. -1. -1. -1.  0.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1. -1.  1.  0.  0.  1.  1.  0.]
 [ 1. -1.  1. -1.  0. -1.  0. -1.  0.]
 [-1.  1.  0.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  0.  1.  1.]
 [ 1.  1.  1. -1. -1.  0. -1. -1. -1.]
 [ 1.  1.  0.  1. -1.  1. -1.  1.  1.]
 [ 1. -1.  0. -1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1. -1.  0.  1.  0.  1.  1.]
 [ 1. -1.  0. -1.  1.  1. -1.  1.  1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.7 0.5 0.6 0.6 0.7 0.6 0.8 0.5 0.8]
 [0.  0.  0.9 0.8 0.6 0.5 0.8 0.6 0.5 0.6]
 [0.  0.  0.  0.2 0.5 0.6 0.1 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.6 0.1 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.6 0.4 0.5 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.78 0.89 0.67 0.44 1.   0.44 0.56]
 [0.   0.   1.   0.33 0.78 0.44 0.78 0.33 0.44]
 [0.   0.   0.   0.89 1.11 1.11 1.11 1.11 1.11]
 [0.   0.   0.   0.   0.78 0.67 0.67 0.44 0.56]
 [0.   0.   0.   0.   0.   0.67 0.44 0.67 0.33]
 [0.   0.   0.   0.   0.   0.   1.11 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1. -1.  1.  0.  0.  1.  1.  0.  1.]
 [ 1. -1.  1. -1.  0. -1.  0. -1.  0. -1.]
 [-1.  1.  0.  1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  0.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.  0. -1. -1. -1.  1.]
 [ 1.  1.  0.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1.  0. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1.  0.  1.  0.  1.  1.  1.]
 [ 1. -1.  0. -1.  1.  1. -1.  1.  1.  1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  2  0  0 19  0]
 [ 0  0  0  1  0  3  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0 11  0]
 [ 0  0  0  3  0  1  0  0  9  0]]
row HD
[[0.  0.8 0.6 0.6 0.7 0.7 0.6 0.9 0.5 0.8]
 [0.  0.  0.9 0.9 0.6 0.6 0.9 0.6 0.6 0.7]
 [0.  0.  0.  0.3 0.5 0.7 0.2 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.4 0.6 0.1 0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.7 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.7 0.8 0.6 0.4 0.9 0.4 0.5 0.4]
 [0.  0.  0.9 0.3 0.7 0.4 0.7 0.3 0.4 0.3]
 [0.  0.  0.  0.8 1.  1.  1.  1.  1.  0.8]
 [0.  0.  0.  0.  0.7 0.6 0.6 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.6 0.4 0.6 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  1.  0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1. -1.  1.  0.  0.  1.  1.  0.  1. -1.]
 [ 1. -1.  1. -1.  0. -1.  0. -1.  0. -1.  0.]
 [-1.  1.  0.  1. -1.  1. -1.  1.  1. -1.  0.]
 [ 1.  1.  0.  1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.  0. -1. -1. -1.  1.  0.]
 [ 1.  1.  0.  1. -1.  1. -1.  1.  1.  1. -1.]
 [ 1. -1.  0. -1. -1.  1. -1.  1. -1. -1.  0.]
 [ 1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  0.]
 [ 1. -1.  0. -1.  1.  1. -1.  1.  1.  1. -1.]]
confusion matrix
[[13  0  1  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  3  0  0  3  0  0  0]
 [ 0  0  1 11  0  0  0  5  0  0]
 [ 0  0  0 21  0  2  0  0  0  0]
 [ 0  0  0 14  0  3  2  0  0  0]
 [ 2  0  0  1  0  0 16  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  2  0  1  9  0  0  0]
 [ 0  0  0 12  0  1  0  0  0  0]]
row HD
[[0.  0.9 0.7 0.6 0.8 0.8 0.6 1.  0.6 0.8]
 [0.  0.  0.9 1.  0.7 0.6 1.  0.6 0.6 0.8]
 [0.  0.  0.  0.4 0.6 0.7 0.3 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.5 0.7 0.1 0.6 0.5 0.2]
 [0.  0.  0.  0.  0.  0.8 0.6 0.6 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.64 0.73 0.55 0.36 0.82 0.36 0.45 0.36 0.73]
 [0.   0.   0.82 0.27 0.64 0.36 0.64 0.27 0.36 0.27 0.73]
 [0.   0.   0.   0.73 0.91 0.91 0.91 0.91 0.91 0.73 0.64]
 [0.   0.   0.   0.   0.64 0.55 0.55 0.36 0.45 0.36 0.82]
 [0.   0.   0.   0.   0.   0.55 0.36 0.55 0.27 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.91 0.18 0.27 0.45 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.73 0.64 0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 0.846, 0.385, 0.755, 0.627, 0.781, 0.581, 0.782, 0.649, 0.761, 0.478]
cutting matrix
[[-1.  1. -1.  1.  0.  0.  1.  1.  1. -1.]
 [ 1. -1.  1. -1.  0. -1.  0. -1. -1.  0.]
 [-1.  1.  0.  1. -1.  1. -1.  1. -1.  0.]
 [ 1.  1.  0.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  0.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.  0. -1. -1.  1.  0.]
 [ 1.  1.  0.  1. -1.  1. -1.  1.  1. -1.]
 [ 1. -1.  0. -1. -1.  1. -1.  1. -1.  0.]
 [ 1.  1. -1. -1.  0.  1.  0.  1.  1.  0.]
 [ 1. -1.  0. -1.  1.  1. -1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[13  0  1  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  3  0  0  3  0  0  0]
 [ 0  0  1 11  0  0  0  5  0  0]
 [ 0  0  0 21  0  2  0  0  0  0]
 [ 0  0  0 14  0  3  2  0  0  0]
 [ 2  0  0  1  0  0 16  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  2  0  1  9  0  0  0]
 [ 0  0  0 12  0  1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:58:29
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
confusion matrix
[[17  0  0  1  0  0  0  0  0  0]
 [ 5  0  0 17  0  0  0  0  0  0]
 [23  0  0  3  0  0  0  0  0  0]
 [12  0  0  5  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 16  0  0  0  0  0  0]
 [ 5  0  0 12  0  0  0  0  0  0]
 [ 5  0  0  9  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  0.]
 [ 0.  0.]
 [-1.  0.]
 [ 0.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[14  0  0  0  0  3  0  0  1  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [23  0  0  0  0  0  0  0  3  0]
 [12  0  0  0  0  0  0  5  0  0]
 [21  0  0  0  0  2  0  0  0  0]
 [14  0  0  0  0  3  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 3  0  0  0  0  2  0 12  0  0]
 [ 4  0  0  0  0  1  0  0  9  0]
 [12  0  0  0  0  1  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  1.]
 [ 0.  0.  0.]
 [ 0.  0.  0.]
 [-1.  0.  0.]
 [ 0.  0. -1.]
 [ 0. -1.  0.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1.  1.  0.]
 [ 1.  1.  0.]]
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1 21  0  0  1  0  0  0  3  0]
 [ 0 11  0  0  1  0  0  5  0  0]
 [ 0  2  0  0 19  2  0  0  0  0]
 [ 0  1  0  0 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  3  0  0  9  1  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.1 0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.1 0.1 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 2.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1. -1.]
 [ 0.  0.  0.  1.]
 [ 0.  0.  0.  1.]
 [-1.  0.  0. -1.]
 [ 0.  0. -1.  0.]
 [ 0. -1.  0.  0.]
 [ 1. -1. -1. -1.]
 [-1. -1.  0. -1.]
 [-1.  1.  0.  1.]
 [ 1.  1.  0.  1.]]
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3 19  0  0  1  0  0  0  3  0]
 [10  1  0  0  1  0  0  5  0  0]
 [ 2  0  0  0 19  2  0  0  0  0]
 [ 1  0  0  0 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 1  2  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 3  0  0  0  9  1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.3 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.75 1.25]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  1. -1.  1.]
 [ 0.  0.  0.  1. -1.]
 [ 0.  0.  0.  1.  1.]
 [-1.  0.  0. -1.  0.]
 [ 0.  0. -1.  0. -1.]
 [ 0. -1.  0.  0.  1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1.  0. -1.  0.]
 [-1.  1.  0.  1.  0.]
 [ 1.  1.  0.  1.  1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3  0 20  0  0  0  0  0  3  0]
 [10  0  2  0  0  0  0  5  0  0]
 [ 2  0 19  0  0  2  0  0  0  0]
 [ 1  0 13  0  0  3  0  0  2  0]
 [ 2  0  1  0  0  0  0  0 16  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [ 2  0  2  0  0  1  0  0  9  0]
 [ 3  0  9  0  0  1  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.3 0.3 0.4 0.4 0.5 0.4]
 [0.  0.  0.1 0.3 0.2 0.3 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.5 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.4 1.  1.8]
 [0.  0.  1.2 1.  1.4]
 [0.  0.  0.  1.6 0.8]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  1. -1.  1.  1.]
 [ 0.  0.  0.  1. -1.  1.]
 [ 0.  0.  0.  1.  1. -1.]
 [-1.  0.  0. -1.  0.  0.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0. -1.  0.  0.  1.  1.]
 [ 1. -1. -1. -1. -1.  0.]
 [-1. -1.  0. -1.  0. -1.]
 [-1.  1.  0.  1.  0. -1.]
 [ 1.  1.  0.  1.  1.  1.]]
confusion matrix
[[13  0  1  0  1  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 20  2  3  0  0  0  0  0]
 [ 0  0  2 10  0  0  0  5  0  0]
 [ 0  0 19  2  0  2  0  0  0  0]
 [ 0  0 13  1  2  3  0  0  0  0]
 [ 2  0  1  0 16  0  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  2  0  9  1  0  0  0  0]
 [ 0  0  9  3  0  1  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.4 0.4 0.3 0.5 0.5 0.6 0.4]
 [0.  0.  0.2 0.4 0.3 0.3 0.5 0.5 0.4 0.3]
 [0.  0.  0.  0.4 0.4 0.3 0.6 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.5 0.4 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.4 0.3 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.17 0.83 1.5  1.  ]
 [0.   0.   1.   0.83 1.17 1.  ]
 [0.   0.   0.   1.33 0.67 1.33]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.325, 0.317, 0.817, 0.507, 0.614, 0.442]
cutting matrix
[[ 0.  1. -1.  1.]
 [ 0.  0.  1.  1.]
 [ 0.  0.  1. -1.]
 [-1.  0. -1.  0.]
 [ 0. -1.  0.  0.]
 [ 0.  0.  0.  1.]
 [ 1. -1. -1.  0.]
 [-1.  0. -1. -1.]
 [-1.  0.  1. -1.]
 [ 1.  0.  1.  1.]]
cutting matrix's confusion matrix
[[13  0  1  0  1  3  0  0  0  0]
 [ 0  0  0  0  0  1  0 21  0  0]
 [ 1  0 19  0  4  0  0  2  0  0]
 [ 0  0  1  0  1  0  0 15  0  0]
 [ 0  0  0  0 19  2  0  2  0  0]
 [ 0  0  0  0 15  3  0  1  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0  0  2  0  0  2  0 13  0  0]
 [ 2  0  0  0 11  1  0  0  0  0]
 [ 0  0  0  0  9  1  0  3  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:58:34
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.  0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [-1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.6 0.2 0.4]
 [0.  0.  0.2 0.6 0.4]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  0. -1.]
 [ 1.  1.  0. -1.]
 [ 1.  1. -1. -1.]
 [-1. -1.  1.  1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.2 0.8 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.   1.  ]
 [0.   0.   1.25 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.696, 0.154, 0.893]
cutting matrix
[[ 0. -1.]
 [ 0. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  1  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]


SVM classifier
Time: 2019-01-05 22:58:34
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0.  0.]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [-1. -1.]
 [ 0.  0.]
 [ 0. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  2  0  0  2]
 [ 1  5  0  0  1]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.4 0.  0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 0.  0.  1.]
 [-1. -1.  1.]
 [ 0.  0.  1.]
 [ 0. -1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  6  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.4 0.  0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [ 0.  0.  1.  0.]
 [-1. -1.  1. -1.]
 [ 0.  0.  1.  0.]
 [ 0. -1. -1.  1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  6  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.6 0.  0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.   0.25]
 [0.   0.   0.75 0.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1.  0. -1.  0.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1.  0.]
 [ 0.  0.  1.  0.  1.]
 [-1. -1.  1. -1. -1.]
 [ 0.  0.  1.  0.  1.]
 [ 0. -1. -1.  1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 1  6  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 0.8 0.8]
 [0.  0.  0.8 0.  0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.8 0.2 0.8]
 [0.  0.  0.6 0.2 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1.  0. -1.]
 [ 0.  0.  1.  0.  1. -1.]
 [-1. -1.  1. -1. -1. -1.]
 [ 0.  0.  1.  0.  1.  1.]
 [ 0. -1. -1.  1. -1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 1  6  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 1.  0.8]
 [0.  0.  0.8 0.2 0.8]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.67 0.17 0.67 0.67]
 [0.   0.   0.5  0.17 0.5  0.5 ]
 [0.   0.   0.   0.67 0.33 0.5 ]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.707, 0.714, 0.982, 0.714, 0.227, 0.911]
cutting matrix
[[ 1.  1. -1.]
 [ 0.  1. -1.]
 [-1.  1. -1.]
 [ 0.  1.  1.]
 [-1. -1. -1.]]
cutting matrix's confusion matrix
[[29  5  0  0  0]
 [ 5  2  2  0  0]
 [ 1  5  1  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:58:36
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
None


============== iter  2 ================
current matrix is 
[-1. -1.  1.  1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  0.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [-1.  1. -1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 2  6  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 2  1  5  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.5  0.5  0.17 0.33]
 [0.   0.   0.5  0.5  0.33 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  0.  1.]
 [-1. -1.  1.  0.]
 [ 1.  1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  0.  1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 2  6  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.67 0.5  0.17 0.33]
 [0.   0.   0.67 0.67 0.5  0.5 ]
 [0.   0.   0.   0.17 0.5  0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.25 1.25]
 [0.   0.   1.5  0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.955, 0.925, 0.878, 0.947]
cutting matrix
[[-1.  1.]
 [-1.  0.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:58:37
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  1. -1. -1.  0.]
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [18  0  0  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  5  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 0.  1. -1.  0.  1.  0.]
select_j_column
[ 0.  0. -1. -1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [ 1.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 0.  0.]]
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  5  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.33 0.17]
 [0.   0.   0.33 0.17 0.33 0.  ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  0. -1. -1.  0.  1.]
select_j_column
[-1.  0.  0.  1.  0.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [ 0.  0.  0.]
 [ 1.  1. -1.]
 [-1.  0.  0.]
 [-1. -1.  0.]
 [ 0.  0.  1.]]
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.33 0.33 0.5  0.17]
 [0.   0.   0.5  0.17 0.33 0.17]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.923, 1.0, 0.978]
cutting matrix
[[ 1.  0.  1.]
 [ 0.  0.  0.]
 [ 1.  1. -1.]
 [-1.  0.  0.]
 [-1. -1.  0.]
 [ 0.  0.  1.]]
cutting matrix's confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 22:58:37
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
confusion matrix
[[ 5  0  0 15  0  0  0  0  0  0]
 [16  0  0  5  0  0  0  0  0  0]
 [16  0  0  6  0  0  0  0  0  0]
 [ 5  0  0 14  0  0  0  0  0  0]
 [ 2  0  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]]
confusion matrix
[[ 4  1  0 15  0  0  0  0  0  0]
 [ 1 15  0  5  0  0  0  0  0  0]
 [12  4  0  6  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.1 0.2 0.2 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]]
confusion matrix
[[ 4  1  0 15  0  0  0  0  0  0]
 [ 1 15  0  5  0  0  0  0  0  0]
 [12  4  0  6  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.2 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  0.]
 [-1. -1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1. -1.  0.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1.  0.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[ 4  1  0 13  2  0  0  0  0  0]
 [ 1 15  0  1  4  0  0  0  0  0]
 [12  4  0  6  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  7 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.3 0.2 0.4 0.3 0.2 0.3]
 [0.  0.  0.3 0.3 0.2 0.1 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.3 0.3 0.2 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.75 1.25]
 [0.   0.   1.5  1.75]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  0.  1.]
 [-1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.]
 [ 1.  1. -1.  0.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1. -1.  0.  1.]
 [ 1. -1.  1.  1.  1.]]
confusion matrix
[[ 4  1  0 13  2  0  0  0  0  0]
 [ 1 15  0  1  4  0  0  0  0  0]
 [12  4  0  6  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  7 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.1 0.2 0.3 0.2 0.5 0.3 0.2 0.3]
 [0.  0.  0.4 0.4 0.3 0.2 0.1 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.3 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.4 1.  0.8]
 [0.  0.  1.2 1.4 0.2]
 [0.  0.  0.  1.8 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  0.  1. -1.]
 [-1. -1. -1.  1. -1.  0.]
 [-1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  0.  1.  0.]
 [ 1.  1. -1.  1.  1.  0.]
 [-1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.]
 [ 1.  1. -1.  0.  1. -1.]
 [ 1. -1.  1.  1.  1.  0.]]
confusion matrix
[[ 4  1  0  2  2  0  0  0 11  0]
 [ 1 15  0  0  4  0  0  0  1  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  2  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 14  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0  0  0 19  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.5 0.1 0.3 0.4 0.3 0.6 0.4 0.2 0.4]
 [0.  0.  0.5 0.4 0.3 0.3 0.2 0.3 0.5 0.3]
 [0.  0.  0.  0.4 0.4 0.3 0.6 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.1 0.3 0.4 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.17 0.83 0.67 1.17]
 [0.   0.   1.   1.17 0.17 1.5 ]
 [0.   0.   0.   1.5  0.83 1.5 ]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  0.  1. -1. -1.]
 [-1. -1. -1.  1. -1.  0.  1.]
 [-1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1.  0.  1.  0.  0.]
 [ 1.  1. -1.  1.  1.  0. -1.]
 [-1.  1. -1.  1.  1.  1.  0.]
 [ 1. -1. -1.  1. -1.  1.  0.]
 [ 1.  1. -1.  1.  1.  0. -1.]
 [ 1.  1. -1.  0.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.  0.  1.]]
confusion matrix
[[ 4  1  0  4  2  0  0  0  9  0]
 [ 1 15  0  1  4  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  7 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  7  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.1 0.4 0.4 0.4 0.7 0.4 0.3 0.5]
 [0.  0.  0.6 0.5 0.4 0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.5 0.4 0.4 0.7 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.2 0.3 0.4 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 1.   0.71 0.57 1.   0.86]
 [0.   0.   0.86 1.   0.14 1.29 1.29]
 [0.   0.   0.   1.29 0.71 1.29 1.  ]
 [0.   0.   0.   0.   0.86 0.86 0.86]
 [0.   0.   0.   0.   0.   1.29 1.14]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  0.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  0.  1.  0.]
 [-1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  0.  1.  0.  0.  0.]
 [ 1.  1. -1.  1.  1.  0. -1. -1.]
 [-1.  1. -1.  1.  1.  1.  0.  0.]
 [ 1. -1. -1.  1. -1.  1.  0.  1.]
 [ 1.  1. -1.  1.  1.  0. -1. -1.]
 [ 1.  1. -1.  0.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  0.  1.  0.]]
confusion matrix
[[ 4  1  0  2  4  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.7 0.1 0.5 0.4 0.5 0.8 0.4 0.3 0.6]
 [0.  0.  0.7 0.5 0.5 0.4 0.4 0.5 0.6 0.3]
 [0.  0.  0.  0.6 0.4 0.5 0.8 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.5 0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.88 0.62 0.5  0.88 0.75 0.88]
 [0.   0.   0.75 0.88 0.12 1.12 1.12 1.25]
 [0.   0.   0.   1.12 0.62 1.12 0.88 0.88]
 [0.   0.   0.   0.   0.75 0.75 0.75 0.88]
 [0.   0.   0.   0.   0.   1.12 1.   1.25]
 [0.   0.   0.   0.   0.   0.   0.88 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  0.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  0.  1.  0.  0.]
 [-1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  0.  1.  0.  0.  0.  0.]
 [ 1.  1. -1.  1.  1.  0. -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1.  0.  0.  0.]
 [ 1. -1. -1.  1. -1.  1.  0.  1.  1.]
 [ 1.  1. -1.  1.  1.  0. -1. -1. -1.]
 [ 1.  1. -1.  0.  1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1.  0.  1.  0. -1.]]
confusion matrix
[[ 4  1  0  2  4  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.8 0.1 0.6 0.4 0.6 0.9 0.4 0.3 0.6]
 [0.  0.  0.8 0.5 0.6 0.4 0.5 0.6 0.7 0.4]
 [0.  0.  0.  0.7 0.4 0.6 0.9 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.4 0.3 0.6 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.6 0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.78 0.56 0.44 0.78 0.67 0.78 0.78]
 [0.   0.   0.67 0.78 0.11 1.   1.   1.11 1.  ]
 [0.   0.   0.   1.   0.56 1.   0.78 0.78 0.78]
 [0.   0.   0.   0.   0.67 0.67 0.67 0.78 0.78]
 [0.   0.   0.   0.   0.   1.   0.89 1.11 1.11]
 [0.   0.   0.   0.   0.   0.   0.78 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.718, 0.745, 0.771, 0.336, 0.819, 0.527, 0.518, 0.61, 0.561]
cutting matrix
[[-1.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  0.  0.]
 [-1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  0.  0.]
 [ 1.  1. -1.  1.  0. -1.]
 [-1.  1. -1.  1.  1.  0.]
 [ 1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  0. -1.]
 [ 1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1.  0.  0.]]
cutting matrix's confusion matrix
[[ 4  1  0  2  2  0  0  0 11  0]
 [ 1 15  0  0  4  0  0  0  1  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  2  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 14  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0  0  0 19  0]
 [ 0  0  0 12  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-05 22:58:44
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
confusion matrix
[[ 2  1  0  0 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 3  4  0  0 15  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [11  2  0  0  2  0  0  0  0  0]
 [ 2  0  0  0 19  0  0  0  0  0]
 [12  0  0  0  2  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 1.  0.]
 [-1. -1.]
 [ 1.  1.]
 [ 0.  0.]
 [-1. -1.]
 [-1. -1.]
 [ 0. -1.]]
confusion matrix
[[ 0  1  0  2 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 0  4  0  3 15  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 0  0  0  2 19  0  0  0  0  0]
 [ 0  0  0 12  2  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.2 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.2 0.  0.2 0.2 0.1]
 [0.  0.  0.  0.1 0.2 0.2 0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 0.  0.  0.]
 [ 0.  0.  1.]
 [ 1.  0.  0.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [ 0.  0.  0.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [ 0. -1.  0.]]
confusion matrix
[[ 0  1  0  2 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 0  4  0  3 15  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 0  0  0  2 19  0  0  0  0  0]
 [ 0  0  0 12  2  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.1 0.3 0.1 0.2 0.3 0.3 0.2]
 [0.  0.  0.1 0.1 0.3 0.3 0.  0.3 0.3 0.1]
 [0.  0.  0.  0.2 0.3 0.3 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
most_cplx_inx
0
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  1.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  1.  1.]
 [ 1.  0.  0. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1. -1.  0.]
 [ 0.  0.  0.  0.]
 [-1. -1. -1. -1.]
 [-1. -1. -1.  0.]
 [ 0. -1.  0.  0.]]
confusion matrix
[[ 2  1  0  0 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 1  4  0  2 15  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 1  0  0  1 19  0  0  0  0  0]
 [12  0  0  0  2  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.2 0.3 0.4 0.4 0.3]
 [0.  0.  0.2 0.2 0.4 0.3 0.  0.4 0.3 0.1]
 [0.  0.  0.  0.3 0.3 0.4 0.2 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   1.25]
 [0.   0.   1.   1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  1.  0. -1. -1. -1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  1.  1.]
 [ 0.  0.  0.  0.  1.]
 [ 0.  0.  1.  1. -1.]
 [ 1.  0.  0. -1.  1.]
 [-1. -1. -1.  1. -1.]
 [ 1.  1. -1.  0. -1.]
 [ 0.  0.  0.  0. -1.]
 [-1. -1. -1. -1.  1.]
 [-1. -1. -1.  0. -1.]
 [ 0. -1.  0.  0.  0.]]
confusion matrix
[[ 0  0  2  0 17  0  1  0  0  0]
 [ 0 13  0  0  6  0  2  0  0  0]
 [ 0  1  1  2 15  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 19  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 0  0  1  1 19  0  0  0  0  0]
 [ 0  0 12  0  2  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.2 0.4 0.3 0.4 0.4 0.5 0.4]
 [0.  0.  0.3 0.2 0.5 0.4 0.1 0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.3 0.4 0.2 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.3 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 1.  1. ]
 [0.  0.  0.8 1.2 1.4]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.]
 [ 0.  0.  1.  1. -1.  0.]
 [ 1.  0.  0. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.]
 [ 1.  1. -1.  0. -1. -1.]
 [ 0.  0.  0.  0. -1.  1.]
 [-1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  0. -1.  1.]
 [ 0. -1.  0.  0.  0.  0.]]
confusion matrix
[[ 0  0  2  0  6  0  1  0 11  0]
 [ 0 13  0  0  5  0  2  0  1  0]
 [ 0  1  1  2 12  0  3  0  3  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  0  0  2  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 14  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 0  0  1  1  0  0  0  0 19  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.4 0.5 0.3 0.5 0.4 0.4 0.5 0.5 0.5]
 [0.  0.  0.3 0.3 0.6 0.5 0.2 0.5 0.5 0.2]
 [0.  0.  0.  0.5 0.4 0.5 0.3 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67 0.83 0.83 0.67]
 [0.   0.   0.67 1.   1.17 0.83]
 [0.   0.   0.   0.83 1.   0.83]
 [0.   0.   0.   0.   1.33 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 1.  0.  0.  0. -1.  1.  0. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.]
 [ 0.  0.  1.  1. -1.  0.  1.]
 [ 1.  0.  0. -1.  1. -1.  0.]
 [-1. -1. -1.  1. -1. -1.  0.]
 [ 1.  1. -1.  0. -1. -1.  1.]
 [ 0.  0.  0.  0. -1.  1.  0.]
 [-1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  0. -1.  1. -1.]
 [ 0. -1.  0.  0.  0.  0.  1.]]
confusion matrix
[[ 0  0 13  0  6  0  1  0  0  0]
 [ 0 13  1  0  5  0  2  0  0  0]
 [ 0  1  4  2 12  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  7  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0 14  0  0  0  0  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 0  0 20  1  0  0  0  0  0  0]
 [ 0  0 14  0  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.4 0.6 0.4 0.5 0.6 0.6 0.5]
 [0.  0.  0.4 0.3 0.6 0.6 0.2 0.6 0.6 0.3]
 [0.  0.  0.  0.6 0.5 0.5 0.4 0.7 0.6 0.4]
 [0.  0.  0.  0.  0.5 0.5 0.4 0.4 0.7 0.6]
 [0.  0.  0.  0.  0.  0.4 0.5 0.3 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.57 0.71 0.71 0.57 0.57]
 [0.   0.   0.57 0.86 1.   0.71 0.43]
 [0.   0.   0.   0.71 0.86 0.71 0.57]
 [0.   0.   0.   0.   1.14 0.71 0.71]
 [0.   0.   0.   0.   0.   0.86 1.14]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0. -1. -1. -1.  1. -1.  1.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.]
 [ 0.  0.  1.  1. -1.  0.  1.  1.]
 [ 1.  0.  0. -1.  1. -1.  0. -1.]
 [-1. -1. -1.  1. -1. -1.  0. -1.]
 [ 1.  1. -1.  0. -1. -1.  1. -1.]
 [ 0.  0.  0.  0. -1.  1.  0.  1.]
 [-1. -1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  0. -1.  1. -1.  0.]
 [ 0. -1.  0.  0.  0.  0.  1.  1.]]
confusion matrix
[[ 0  0 17  0  2  0  1  0  0  0]
 [ 0 13  2  0  4  0  2  0  0  0]
 [ 0  3 16  0  0  0  3  0  0  0]
 [ 0 18  1  0  0  0  0  0  0  0]
 [ 0  2  7  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0 14  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  1 20  0  0  0  0  0  0  0]
 [ 0  0 14  0  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.5 0.5 0.7 0.5 0.5 0.6 0.7 0.5]
 [0.  0.  0.5 0.4 0.7 0.7 0.3 0.7 0.6 0.4]
 [0.  0.  0.  0.7 0.6 0.6 0.4 0.7 0.7 0.4]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.8 0.7]
 [0.  0.  0.  0.  0.  0.4 0.6 0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.62 0.62 0.5  0.5  0.88]
 [0.   0.   0.5  0.75 0.88 0.62 0.38 0.88]
 [0.   0.   0.   0.62 0.75 0.62 0.5  0.75]
 [0.   0.   0.   0.   1.   0.62 0.62 0.62]
 [0.   0.   0.   0.   0.   0.75 1.   0.75]
 [0.   0.   0.   0.   0.   0.   0.88 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1.  1.  1. -1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1. -1.  0.  1.  1.  0.]
 [ 1.  0.  0. -1.  1. -1.  0. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  0. -1. -1.]
 [ 1.  1. -1.  0. -1. -1.  1. -1. -1.]
 [ 0.  0.  0.  0. -1.  1.  0.  1. -1.]
 [-1. -1. -1. -1.  1. -1. -1.  1.  1.]
 [-1. -1. -1.  0. -1.  1. -1.  0.  1.]
 [ 0. -1.  0.  0.  0.  0.  1.  1.  1.]]
confusion matrix
[[ 0  0  6  0  2  0 12  0  0  0]
 [ 0 13  1  0  4  0  3  0  0  0]
 [ 0  3 13  0  0  0  6  0  0  0]
 [ 0 18  1  0  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  1  1  0  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.6 0.6 0.5 0.7 0.5 0.5 0.7 0.8 0.6]
 [0.  0.  0.6 0.4 0.7 0.7 0.3 0.8 0.7 0.5]
 [0.  0.  0.  0.8 0.7 0.7 0.5 0.8 0.8 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.6 0.9 0.8]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.44 0.56 0.56 0.44 0.44 0.78 0.89]
 [0.   0.   0.44 0.67 0.78 0.56 0.33 0.78 0.89]
 [0.   0.   0.   0.56 0.67 0.56 0.44 0.67 0.89]
 [0.   0.   0.   0.   0.89 0.56 0.56 0.56 1.  ]
 [0.   0.   0.   0.   0.   0.67 0.89 0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.78 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.67 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.59, 0.375, 0.2, 0.814, 0.787, 0.832, 0.296, 0.658, 0.699]
cutting matrix
[[ 0.  1.  1.  1. -1.]
 [ 0.  1.  0.  0. -1.]
 [ 1. -1.  0.  1.  0.]
 [ 0.  1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.]
 [ 0. -1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.]
 [-1. -1.  1.  0.  1.]
 [ 0.  0.  0.  1.  1.]]
cutting matrix's confusion matrix
[[ 0  0  6  0  2  0 12  0  0  0]
 [ 0 13  1  0  4  0  3  0  0  0]
 [ 0  3 13  0  0  0  6  0  0  0]
 [ 0 18  1  0  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  1  1  0  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:58:51
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.]
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]]
confusion matrix
[[29  1  0  0  0]
 [ 3  3  3  0  0]
 [ 2  1  4  0  0]
 [ 0  5  2  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.4 0.2 0.4 0. ]
 [0.  0.  0.2 0.  0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 2  0  4  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.6 0.2 0.4 0. ]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1.  1. -1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1.  1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 6  1  0  0  0]
 [ 1  4  1  1  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.6 0.4 0.6 0. ]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.75 1.  ]
 [0.   0.   1.   0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [ 1.  1. -1.  1.  0.]
 [ 1. -1.  1. -1.  0.]
 [ 1.  1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 4  3  2  0  0]
 [ 4  1  2  0  0]
 [ 1  4  1  1  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.8 0.6 0.8 0. ]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.6 0.8 1. ]
 [0.  0.  0.8 0.6 1. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  0.  1.]
 [ 1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 4  3  2  0  0]
 [ 4  1  2  0  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.8 0.6 1.  0. ]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.5  0.67 0.83 0.5 ]
 [0.   0.   0.67 0.5  0.83 0.67]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.768, 0.839, 0.768, 0.675, 0.875]
cutting matrix
[[-1.  1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]]
cutting matrix's confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]


SVM classifier
Time: 2019-01-05 22:58:53
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  1.]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0. -1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  0  1]
 [ 4  3  0  0  0]
 [ 0  2  0  0  1]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0. -1. -1.]
 [ 0. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.4]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0.  1.]
 [ 0. -1. -1.  1.]
 [ 0. -1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.8 0.6 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.75 0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  0.  1.  0.]
 [ 0. -1. -1.  1. -1.]
 [ 0. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.8 1.  0.8 0.6]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.6 0.6 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.675, 0.423, 0.269, 0.875, 0.423]
cutting matrix
[[ 1.]
 [ 1.]
 [-1.]
 [ 1.]
 [ 1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:58:54
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1. -1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [15  0  0  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [15  0  0  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  0.]
 [ 1.  1. -1.  0.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  1  2  0  0]]
row HD
[[0.   0.   0.33 0.5  0.5  0.67]
 [0.   0.   0.33 0.5  0.5  0.67]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.25 1.25]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  0.  1.]
 [ 1.  1. -1.  0.  1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  1  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  2  1  0  0]]
row HD
[[0.   0.   0.33 0.67 0.67 0.67]
 [0.   0.   0.33 0.67 0.67 0.67]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 1.  1.  0.2]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.955, 0.94, 0.97, 0.861, 0.91]
cutting matrix
[[ 1.  1. -1.  0.]
 [ 1.  1. -1.  0.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  1. -1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 22:58:55
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1. -1.  1.  1.]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  1  0  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  2  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
1
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]]
confusion matrix
[[17  0  0  0  0  1]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0.  1.  0.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.5  0.5  0.5  0.5 ]
 [0.   0.   0.33 0.33 0.5  0.33]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [ 0.  1.  0.  1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1.  0.]
 [ 1.  1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  4  3  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.67 0.67 0.5  0.67]
 [0.   0.   0.5  0.5  0.67 0.33]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.25 0.5 ]
 [0.   0.   1.25 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.  1.]
 [ 0.  1.  0.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  0.]
 [ 1. -1.  1.  0.  0.]
 [ 1.  1. -1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  4  0  3  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.5  0.83 0.83 0.67 0.83]
 [0.   0.   0.5  0.67 0.83 0.33]
 [0.   0.   0.   0.17 0.83 0.33]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.2 0.4 1. ]
 [0.  0.  1.  0.6 1.2]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.889, 1.0, 0.889, 0.897, 0.96]
cutting matrix
[[ 0.  0.  1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [ 1. -1.  0.]
 [-1.  0.  0.]
 [ 1.  1. -1.]]
cutting matrix's confusion matrix
[[17  0  0  1  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  4  0  3  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:58:56
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
confusion matrix
[[16  0  1  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [14  0  2  0  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [18  0  2  0  0  0  0  0  0  0]
 [ 6  0  9  0  0  0  0  0  0  0]
 [20  0  0  0  0  0  0  0  0  0]
 [17  0  5  0  0  0  0  0  0  0]
 [11  0  2  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]]
confusion matrix
[[13  0  1  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 1  0 18  3  0  0  0  0  0  0]
 [ 2  0  2 12  0  0  0  0  0  0]
 [14  0  1  2  0  0  0  0  0  0]
 [ 2  0  1 16  0  0  0  0  0  1]
 [ 1  0  9  5  0  0  0  0  0  0]
 [17  0  0  3  0  0  0  0  0  0]
 [ 4  0  5 13  0  0  0  0  0  0]
 [ 0  0  0 11  0  0  0  0  0  2]]
row HD
[[0.  0.  0.1 0.1 0.  0.1 0.1 0.  0.1 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.  0.1 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[13  0  1  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 1  0 18  3  0  0  0  0  0  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [13  0  1  2  0  0  0  1  0  0]
 [ 2  0  1 16  0  0  0  0  0  1]
 [ 1  0  9  5  0  0  0  0  0  0]
 [ 6  0  0  3  0  0  0 11  0  0]
 [ 4  0  5 13  0  0  0  0  0  0]
 [ 0  0  0 11  0  0  0  0  0  2]]
row HD
[[0.  0.  0.1 0.1 0.  0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1. -1.]
 [ 1. -1.  1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1.  0.]
 [-1. -1.  1.  0.]
 [ 1. -1. -1.  0.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  0.]]
confusion matrix
[[13  0  1  2  0  1  0  0  0  0]
 [ 2 23  0  1  0  0  0  0  0  0]
 [ 1  0 17  2  0  1  1  0  0  0]
 [ 0  0  1  8  0  4  1  2  0  0]
 [12  1  1  0  0  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  1  3  0  2  8  0  0  0]
 [ 1  5  0  1  0  2  0 11  0  0]
 [ 2  2  2  9  0  4  3  0  0  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.1 0.1 0.2 0.  0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.2 0.1 0.1 0.2 0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.3 0.1 0.3 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   1.5 ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1.  1.  0. -1.]
 [-1. -1.  1.  0. -1.]
 [ 1. -1. -1.  0.  1.]
 [ 1.  1.  1.  1. -1.]
 [-1.  1.  1.  0. -1.]]
confusion matrix
[[12  0  0  2  1  1  1  0  0  0]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 0  0 18  2  1  1  0  0  0  0]
 [ 0  0  2  8  0  4  0  2  0  0]
 [ 0  1  1  0 12  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  3  0  2  9  0  0  0]
 [ 1  5  0  1  0  2  0 11  0  0]
 [ 4  0  1  9  0  4  4  0  0  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.2 0.2 0.2 0.1 0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.2 0.2 0.1 0.3 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.1 0.4 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.4 0.  0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 1.2 1. ]
 [0.  0.  1.  1.  1.6]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0.]
 [ 1. -1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  0.]
 [ 1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  0. -1.  0.]
 [-1. -1.  1.  0. -1.  0.]
 [ 1. -1. -1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  0. -1.  1.]]
confusion matrix
[[12  0  0  0  1  1  1  0  2  0]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 0  0 18  0  1  1  0  0  2  0]
 [ 0  0  2  8  0  4  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  1  0  2  0 11  0  0]
 [ 2  2  1  0  0  4  4  0  9  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.3 0.3 0.2 0.2 0.2 0.2 0.3 0.3 0.4]
 [0.  0.  0.3 0.3 0.1 0.4 0.4 0.3 0.2 0.5]
 [0.  0.  0.  0.5 0.2 0.5 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 1.   0.83 1.67]
 [0.   0.   0.83 0.83 1.33 1.17]
 [0.   0.   0.   1.17 1.17 1.33]
 [0.   0.   0.   0.   1.33 1.  ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.]
 [ 1. -1.  1.  1.  1. -1.  0.]
 [-1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  0.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  0. -1.  0.  1.]
 [-1. -1.  1.  0. -1.  0. -1.]
 [ 1. -1. -1.  0.  1.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  0. -1.  1.  1.]]
confusion matrix
[[12  0  0  0  1  1  1  0  2  0]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 0  0 18  0  1  1  0  0  2  0]
 [ 0  0  2  8  0  4  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  1  0  2  0 11  0  0]
 [ 2  0  1  0  0  4  4  0 11  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.4 0.3 0.3 0.2 0.3 0.2 0.4 0.4 0.5]
 [0.  0.  0.4 0.4 0.2 0.5 0.5 0.3 0.3 0.6]
 [0.  0.  0.  0.6 0.2 0.6 0.3 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.5 0.1 0.4 0.5 0.1 0.3]
 [0.  0.  0.  0.  0.  0.5 0.4 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.57 0.86 0.71 1.43 0.71]
 [0.   0.   0.71 0.71 1.14 1.   0.29]
 [0.   0.   0.   1.   1.   1.14 0.86]
 [0.   0.   0.   0.   1.14 0.86 0.57]
 [0.   0.   0.   0.   0.   1.14 1.14]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.  0.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  0.  1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  0. -1.  0.  1.  1.]
 [-1. -1.  1.  0. -1.  0. -1.  1.]
 [ 1. -1. -1.  0.  1.  0.  0.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  0. -1.  1.  1.  1.]]
confusion matrix
[[12  0  0  0  1  1  1  0  2  0]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 0  0 18  1  1  0  0  0  2  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  4  4  0 11  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.4 0.3 0.4 0.2 0.3 0.2 0.4 0.4 0.5]
 [0.  0.  0.4 0.5 0.2 0.5 0.5 0.3 0.3 0.6]
 [0.  0.  0.  0.7 0.2 0.6 0.3 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.6 0.2 0.5 0.6 0.2 0.4]
 [0.  0.  0.  0.  0.  0.5 0.4 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.5  0.75 0.62 1.25 0.62 0.5 ]
 [0.   0.   0.62 0.62 1.   0.88 0.25 0.88]
 [0.   0.   0.   0.88 0.88 1.   0.75 0.25]
 [0.   0.   0.   0.   1.   0.75 0.5  1.  ]
 [0.   0.   0.   0.   0.   1.   1.   0.62]
 [0.   0.   0.   0.   0.   0.   0.88 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  0. -1.  1. -1.  1. -1.  0.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.  1.  0.]
 [ 1. -1.  1.  1.  1. -1.  0.  1.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1. -1.  0.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.  0.]
 [ 1.  1.  1.  0. -1.  0.  1.  1. -1.]
 [-1. -1.  1.  0. -1.  0. -1.  1.  0.]
 [ 1. -1. -1.  0.  1.  0.  0.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  0. -1.  1.  1.  1. -1.]]
confusion matrix
[[12  0  0  0  1  1  1  0  2  0]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 0  0 18  1  1  0  0  0  2  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  4  4  0 11  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.5 0.3 0.5 0.2 0.4 0.2 0.5 0.5 0.6]
 [0.  0.  0.5 0.6 0.3 0.6 0.6 0.4 0.4 0.7]
 [0.  0.  0.  0.8 0.2 0.7 0.3 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.7 0.2 0.6 0.6 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.4 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.44 0.67 0.56 1.11 0.56 0.44 0.89]
 [0.   0.   0.56 0.56 0.89 0.78 0.22 0.78 1.  ]
 [0.   0.   0.   0.78 0.78 0.89 0.67 0.22 0.89]
 [0.   0.   0.   0.   0.89 0.67 0.44 0.89 0.89]
 [0.   0.   0.   0.   0.   0.89 0.89 0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.78 0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.78 1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.  1.  0.  1.]
 [ 1. -1.  1.  1.  1. -1.  0.  1.  1.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  0.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.  0. -1.]
 [ 1.  1.  1.  0. -1.  0.  1.  1. -1.  1.]
 [-1. -1.  1.  0. -1.  0. -1.  1.  0.  1.]
 [ 1. -1. -1.  0.  1.  0.  0.  1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  0. -1.  1.  1.  1. -1.  1.]]
confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  4  4  0 11  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.5 0.3 0.5 0.3 0.4 0.2 0.5 0.5 0.6]
 [0.  0.  0.5 0.6 0.4 0.6 0.6 0.4 0.4 0.7]
 [0.  0.  0.  0.8 0.3 0.7 0.3 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.8 0.2 0.6 0.6 0.2 0.4]
 [0.  0.  0.  0.  0.  0.7 0.5 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.4 0.6 0.5 1.  0.5 0.4 0.8 0.4]
 [0.  0.  0.5 0.5 0.8 0.7 0.2 0.7 0.9 0.5]
 [0.  0.  0.  0.7 0.7 0.8 0.6 0.2 0.8 0.2]
 [0.  0.  0.  0.  0.8 0.6 0.4 0.8 0.8 0.6]
 [0.  0.  0.  0.  0.  0.8 0.8 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 1.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 0. -1.  1.  0. -1.  0.  0.  0. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.  1.  0.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  0.  1. -1. -1.  1.  0.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  0. -1.  0.  1.  1. -1.  1.  0.]
 [-1. -1.  1.  0. -1.  0. -1.  1.  0.  1.  1.]
 [ 1. -1. -1.  0.  1.  0.  0.  1. -1.  1.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  0. -1.  1.  1.  1. -1.  1.  1.]]
confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 23  0  1  1  0  0  1  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  7  4  0  8  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.6 0.3 0.6 0.3 0.5 0.2 0.6 0.6 0.6]
 [0.  0.  0.6 0.7 0.5 0.7 0.7 0.5 0.4 0.8]
 [0.  0.  0.  0.9 0.3 0.8 0.3 0.7 0.8 0.5]
 [0.  0.  0.  0.  0.9 0.2 0.7 0.6 0.3 0.5]
 [0.  0.  0.  0.  0.  0.8 0.5 0.7 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.36 0.55 0.45 0.91 0.45 0.36 0.73 0.36 0.73]
 [0.   0.   0.45 0.45 0.73 0.64 0.18 0.64 0.82 0.45 0.73]
 [0.   0.   0.   0.64 0.64 0.73 0.55 0.18 0.73 0.18 0.45]
 [0.   0.   0.   0.   0.73 0.55 0.36 0.73 0.73 0.55 0.73]
 [0.   0.   0.   0.   0.   0.73 0.73 0.45 0.45 0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.64 0.73 0.64 0.64 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.91 0.45 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.18 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.  1.  0.  1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1.  0.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  0.  1. -1. -1.  1.  0.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  0. -1.  0.  1.  1. -1.  1.  0.  1.]
 [-1. -1.  1.  0. -1.  0. -1.  1.  0.  1.  1.  0.]
 [ 1. -1. -1.  0.  1.  0.  0.  1. -1.  1.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  0.]
 [-1.  1.  1.  0. -1.  1.  1.  1. -1.  1.  1.  1.]]
confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  7  4  0  8  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.7 0.4 0.6 0.4 0.5 0.3 0.7 0.7 0.6]
 [0.  0.  0.7 0.8 0.5 0.8 0.8 0.6 0.5 0.9]
 [0.  0.  0.  1.  0.4 0.9 0.3 0.7 0.8 0.6]
 [0.  0.  0.  0.  1.  0.2 0.8 0.7 0.4 0.5]
 [0.  0.  0.  0.  0.  0.9 0.6 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.33 0.5  0.42 0.83 0.42 0.33 0.67 0.33 0.67 0.58]
 [0.   0.   0.42 0.42 0.67 0.58 0.17 0.58 0.75 0.42 0.67 0.42]
 [0.   0.   0.   0.58 0.58 0.67 0.5  0.17 0.67 0.17 0.42 0.5 ]
 [0.   0.   0.   0.   0.67 0.5  0.33 0.67 0.67 0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.67 0.67 0.42 0.42 0.58 0.58 0.83]
 [0.   0.   0.   0.   0.   0.   0.58 0.67 0.58 0.58 0.25 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.58 0.83 0.42 0.67 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.17 0.42 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.75 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  0. -1.  1.  0.  1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1. -1.  0.]
 [-1. -1.  1. -1.  1.  1. -1.  1.  0.  1.  1.  0.  0.]
 [ 1.  1.  1.  1. -1.  0.  1. -1. -1.  1.  0.  1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.  0. -1.  1. -1.  1.]
 [ 1.  1.  1.  0. -1.  0.  1.  1. -1.  1.  0.  1. -1.]
 [-1. -1.  1.  0. -1.  0. -1.  1.  0.  1.  1.  0.  1.]
 [ 1. -1. -1.  0.  1.  0.  0.  1. -1.  1.  0.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  0. -1.]
 [-1.  1.  1.  0. -1.  1.  1.  1. -1.  1.  1.  1. -1.]]
confusion matrix
[[12  0  0  0  0  2  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  2  0 11  2  0  1  0  0]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  7  4  0  8  0]
 [ 0  0  0  2  0  9  0  0  0  2]]
row HD
[[0.  0.8 0.5 0.7 0.4 0.6 0.3 0.8 0.8 0.7]
 [0.  0.  0.7 0.9 0.6 0.9 0.9 0.6 0.6 1. ]
 [0.  0.  0.  1.1 0.5 1.  0.4 0.7 0.9 0.7]
 [0.  0.  0.  0.  1.1 0.2 0.9 0.8 0.4 0.5]
 [0.  0.  0.  0.  0.  1.  0.6 0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.31 0.46 0.38 0.77 0.38 0.31 0.62 0.31 0.62 0.54 0.54]
 [0.   0.   0.38 0.38 0.62 0.54 0.15 0.54 0.69 0.38 0.62 0.38 0.77]
 [0.   0.   0.   0.54 0.54 0.62 0.46 0.15 0.62 0.15 0.38 0.46 0.54]
 [0.   0.   0.   0.   0.62 0.46 0.31 0.62 0.62 0.46 0.62 0.46 0.69]
 [0.   0.   0.   0.   0.   0.62 0.62 0.38 0.38 0.54 0.54 0.77 0.38]
 [0.   0.   0.   0.   0.   0.   0.54 0.62 0.54 0.54 0.23 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.54 0.77 0.38 0.62 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.15 0.38 0.54 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.69 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.83, 0.824, 0.936, 0.75, 0.915, 0.71, 0.761, 0.941, 0.803, 0.952, 0.697, 0.862, 0.725]
cutting matrix
[[ 1. -1.  1. -1. -1.  0.  1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1.  1.  0.]
 [-1. -1.  1. -1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  0. -1.  1. -1.]
 [ 1. -1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  0. -1.  0.  1.  1. -1.]
 [-1. -1.  1.  0. -1.  0.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.  0.  1.  1.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  0. -1.  1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  2  2  0 10  2  0  1  0  0]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  4  4  0 11  0]
 [ 0  0  0  2  0  9  0  0  0  2]]


SVM classifier
Time: 2019-01-05 22:59:09
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
confusion matrix
[[13  0  0  4  0  0  0  0  0  0]
 [ 0 21  0  5  0  0  0  0  0  0]
 [21  1  0  0  0  0  0  0  0  0]
 [ 8  0  0  8  0  0  0  0  0  0]
 [ 3  1  0 13  0  0  0  0  0  0]
 [20  0  0  0  0  0  0  0  0  0]
 [13  0  0  2  0  0  0  0  0  0]
 [16  3  0  1  0  0  0  0  0  0]
 [21  0  0  1  0  0  0  0  0  0]
 [ 6  0  0  7  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
8
new_column
None


============== iter  2 ================
current matrix is 
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
confusion matrix
[[13  0  0  4  0  0  0  0  0  0]
 [ 0 21  0  5  0  0  0  0  0  0]
 [21  1  0  0  0  0  0  0  0  0]
 [ 8  0  0  8  0  0  0  0  0  0]
 [ 3  1  0 13  0  0  0  0  0  0]
 [20  0  0  0  0  0  0  0  0  0]
 [13  0  0  2  0  0  0  0  0  0]
 [16  3  0  1  0  0  0  0  0  0]
 [21  0  0  1  0  0  0  0  0  0]
 [ 6  0  0  7  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.]
 [-1.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 1.  1.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0. -1.]
 [ 0.  0.]
 [ 1.  1.]]
confusion matrix
[[13  0  0  0  4  0  0  0  0  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 2  1 19  0  0  0  0  0  0  0]
 [ 4  0  2  8  0  0  0  2  0  0]
 [ 0  1  2  0 13  0  0  1  0  0]
 [19  0  1  0  0  0  0  0  0  0]
 [12  0  1  2  0  0  0  0  0  0]
 [ 4  3  1  1  0  0  0 11  0  0]
 [18  0  3  1  0  0  0  0  0  0]
 [ 6  0  0  2  5  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.2 0.  0.1 0.1 0.  0.2]
 [0.  0.  0.1 0.2 0.1 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.2 0.1 0.1 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0. -1.]
 [-1.  1.  1.]
 [ 0.  1.  1.]
 [ 1.  0.  0.]
 [ 1.  1.  0.]
 [ 0.  0.  1.]
 [ 1.  0. -1.]
 [ 0. -1.  1.]
 [ 0.  0.  0.]
 [ 1.  1. -1.]]
confusion matrix
[[ 9  0  0  0  0  2  0  0  2  4]
 [ 0 21  1  1  3  0  0  0  0  0]
 [ 1  1 18  0  0  1  0  0  1  0]
 [ 1  0  2  8  0  3  0  2  0  0]
 [ 1  1  2  0 11  0  0  0  0  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  1  1  0  3  0 11  0  0]
 [ 7  0  1  0  0  1  1  0 12  0]
 [ 6  0  0  2  1  0  0  0  0  4]]
row HD
[[0.  0.3 0.2 0.2 0.3 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.1 0.3 0.2 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.1 0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 3.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  0. -1.  1.]
 [-1.  1.  1. -1.]
 [ 0.  1.  1.  0.]
 [ 1.  0.  0.  1.]
 [ 1.  1.  0. -1.]
 [ 0.  0.  1.  0.]
 [ 1.  0. -1.  1.]
 [ 0. -1.  1. -1.]
 [ 0.  0.  0.  0.]
 [ 1.  1. -1.  1.]]
confusion matrix
[[ 9  0  0  0  0  2  0  0  2  4]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  1  0  0  1  0]
 [ 1  0  2  8  0  3  0  2  0  0]
 [ 0  1  2  1 10  0  0  0  1  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  1  1  0  3  0 11  0  0]
 [ 7  0  1  0  0  1  1  0 12  0]
 [ 6  0  0  3  0  0  0  0  0  4]]
row HD
[[0.  0.4 0.3 0.2 0.4 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.2 0.4 0.2 0.3 0.4 0.2 0.4 0.3]
 [0.  0.  0.  0.4 0.3 0.1 0.4 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.4 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 2.25 0.75]
 [0.   0.   1.5  1.5 ]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  0. -1.  1. -1.]
 [-1.  1.  1. -1. -1.]
 [ 0.  1.  1.  0.  1.]
 [ 1.  0.  0.  1.  1.]
 [ 1.  1.  0. -1.  1.]
 [ 0.  0.  1.  0.  1.]
 [ 1.  0. -1.  1.  1.]
 [ 0. -1.  1. -1.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 1.  1. -1.  1.  0.]]
confusion matrix
[[ 9  0  0  0  0  1  0  0  3  4]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  5 14  0  1  1  0  0  1  0]
 [ 0  0  2  8  0  3  1  2  0  0]
 [ 0  1  2  1 10  0  0  0  1  2]
 [ 0  0  1  0  0 16  2  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  5  1  1  0  1  0 11  0  0]
 [ 2  0  1  0  2  1  4  0 12  0]
 [ 0  0  0  3  0  0  6  0  0  4]]
row HD
[[0.  0.4 0.4 0.3 0.5 0.3 0.2 0.4 0.3 0.3]
 [0.  0.  0.3 0.5 0.3 0.4 0.5 0.3 0.5 0.4]
 [0.  0.  0.  0.4 0.3 0.1 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.8 0.6 0.8]
 [0.  0.  1.2 1.2 1.4]
 [0.  0.  0.  1.8 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  0.  1. -1.  0.  1. -1.  0.  1.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  0. -1.  1. -1.  0.]
 [-1.  1.  1. -1. -1. -1.]
 [ 0.  1.  1.  0.  1.  0.]
 [ 1.  0.  0.  1.  1.  1.]
 [ 1.  1.  0. -1.  1.  1.]
 [ 0.  0.  1.  0.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.]
 [ 0. -1.  1. -1.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.]
 [ 1.  1. -1.  1.  0. -1.]]
confusion matrix
[[ 9  0  1  0  0  0  0  0  3  4]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  5 14  0  0  1  0  0  2  0]
 [ 0  0  2  8  0  3  1  2  0  0]
 [ 0  1  2  0 10  0  1  0  1  2]
 [ 0  0  3  0  0 14  2  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  1  1  0  1  0 13  0  0]
 [ 2  0  1  0  0  1  4  0 14  0]
 [ 0  0  0  3  0  0  6  0  0  4]]
row HD
[[0.  0.5 0.4 0.4 0.6 0.4 0.3 0.4 0.3 0.4]
 [0.  0.  0.4 0.6 0.4 0.4 0.5 0.4 0.6 0.4]
 [0.  0.  0.  0.5 0.4 0.2 0.5 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.2 0.4 0.2 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.5  0.5  0.67 0.5 ]
 [0.   0.   1.   1.   1.17 1.17]
 [0.   0.   0.   1.5  1.   1.17]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.586, 0.786, 0.767, 0.702, 0.744, 0.645]
cutting matrix
[[ 0.  0.  1.  0.]
 [-1.  1. -1. -1.]
 [ 0.  1.  0.  0.]
 [ 1.  0.  1.  1.]
 [ 1.  1. -1.  1.]
 [ 0.  0.  0. -1.]
 [ 1.  0.  1. -1.]
 [ 0. -1. -1.  0.]
 [ 0.  0.  0.  0.]
 [ 1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[11  0  0  0  0  0  0  0  2  4]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  1  0  0  1  0]
 [ 1  0  1  8  0  4  0  2  0  0]
 [ 0  1  2  0 10  0  0  1  0  3]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  3  0  0  4  1  0 12  0]
 [ 0  0  0  3  0  6  0  0  0  4]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:59:14
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1. -1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1.  1.]
 [-1.  0.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[24  0  0  0  1]
 [13  0  0  0  1]
 [ 6  0  0  0  3]
 [ 3  0  0  0  2]
 [ 2  0  0  0  1]]
row HD
[[0.  0.4 0.  0.4 0.2]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0. -1.]
 [ 1.  1.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[21  0  3  0  1]
 [ 5  0  8  0  1]
 [ 2  0  4  0  3]
 [ 0  0  3  0  2]
 [ 0  0  2  0  1]]
row HD
[[0.  0.6 0.2 0.6 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[-1.  0. -1.]
 [ 1.  1.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[21  0  3  0  1]
 [ 5  0  8  0  1]
 [ 2  0  4  0  3]
 [ 0  0  3  0  2]
 [ 0  0  2  0  1]]
row HD
[[0.  0.6 0.2 0.6 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 0.  1.  0. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  0. -1.  0.]
 [ 1.  1.  1.  1.]
 [-1.  0.  1.  0.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  1.]]
confusion matrix
[[21  0  3  0  1]
 [ 5  0  8  0  1]
 [ 2  0  5  0  2]
 [ 0  0  4  0  1]
 [ 0  0  2  0  1]]
row HD
[[0.  0.8 0.2 0.8 0.6]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  1.  ]
 [0.   0.   1.   0.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  0. -1.  0. -1.]
 [ 1.  1.  1.  1. -1.]
 [-1.  0.  1.  0. -1.]
 [ 1. -1.  1. -1.  1.]
 [-1. -1.  1.  1.  1.]]
confusion matrix
[[21  0  4  0  0]
 [ 5  0  9  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.8 0.2 1.  0.8]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.8 0.4]
 [0.  0.  0.8 0.2 1. ]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  1.  0. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  0. -1.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  0.]
 [-1.  0.  1.  0. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.]]
confusion matrix
[[22  0  3  0  0]
 [13  0  1  0  0]
 [ 7  0  1  0  1]
 [ 4  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  1.  0.4 1.  0.8]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.33 0.67 0.33 0.5 ]
 [0.   0.   0.67 0.17 0.83 0.83]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  0. -1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  0.  0.]
 [-1.  0.  1.  0. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.]]
confusion matrix
[[22  2  1  0  0]
 [13  0  1  0  0]
 [ 5  0  1  1  2]
 [ 2  0  1  1  1]
 [ 1  0  1  0  1]]
row HD
[[0.  1.2 0.4 1.2 1. ]
 [0.  0.  1.  1.  1. ]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.29 0.57 0.29 0.43 0.29]
 [0.   0.   0.57 0.14 0.71 0.71 0.71]
 [0.   0.   0.   0.43 0.29 0.43 0.29]
 [0.   0.   0.   0.   0.57 0.57 0.57]
 [0.   0.   0.   0.   0.   0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
efficient_count == 3

**********      classifier acc  **************
[0.661, 0.182, 0.804, 0.182, 0.857, 0.667, 0.714]
cutting matrix
[[-1. -1.  0. -1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  0. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[21  0  4  0  0]
 [ 5  0  9  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]


SVM classifier
Time: 2019-01-05 22:59:15
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  0.  0.]
confusion matrix
[[24  1  0  0  0]
 [11  3  0  0  0]
 [ 2  5  0  2  0]
 [ 1  3  0  1  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  0.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [ 0. -1. -1.]
 [ 0.  1. -1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  2  1  0]
 [ 2  0  2  5  0]
 [ 1  0  2  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.6 0.4 0.4 0.6]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  0.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  0.  1.]
 [ 1.  1. -1.  1.]
 [ 1. -1.  1.  0.]
 [ 0. -1. -1. -1.]
 [ 0.  1. -1. -1.]]
confusion matrix
[[24  0  1  0  0]
 [11  1  2  0  0]
 [ 3  1  2  3  0]
 [ 1  1  2  1  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   1.   0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1. -1.  0.  1.  1.]
 [ 1.  1. -1.  1. -1.]
 [ 1. -1.  1.  0. -1.]
 [ 0. -1. -1. -1. -1.]
 [ 0.  1. -1. -1.  0.]]
confusion matrix
[[24  0  1  0  0]
 [11  1  2  0  0]
 [ 2  1  2  4  0]
 [ 1  1  2  1  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.8 0.8 0.8 1. ]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.8 0.8]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.667, 0.696, 0.161, 0.894, 0.774]
cutting matrix
[[-1. -1.  1.  1.]
 [ 1.  1.  1. -1.]
 [ 1. -1.  0. -1.]
 [ 0. -1. -1. -1.]
 [ 0.  1. -1.  0.]]
cutting matrix's confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 2  0  6  1  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]


SVM classifier
Time: 2019-01-05 22:59:16
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  0.]
 [-1.  1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  3  0  0]
 [11  0  0  0  0  0]
 [ 0  0  0  8  0  0]
 [11  0  0  0  0  0]
 [ 2  0  0  6  0  0]]
row HD
[[0.   0.33 0.   0.17 0.   0.17]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.   0.17]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]
 [-1.  0.  1.]
 [-1.  1. -1.]
 [-1.  0. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  0  0  3]
 [ 0  0 11  0  0  0]
 [ 0  0  0  7  0  1]
 [11  0  0  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.17 0.33 0.   0.17]
 [0.   0.   0.5  0.5  0.33 0.33]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1. -1. -1.  0.]
 [-1.  1.  1. -1.]
 [-1.  0.  1.  0.]
 [-1.  1. -1.  1.]
 [-1.  0. -1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  0  0  3]
 [ 0  0 11  0  0  0]
 [ 0  0  0  7  0  1]
 [11  0  0  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.5  0.33 0.5  0.   0.33]
 [0.   0.   0.67 0.5  0.5  0.33]
 [0.   0.   0.   0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.5  0.75 1.25]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [ 1. -1. -1.  0.  1.]
 [-1.  1.  1. -1.  1.]
 [-1.  0.  1.  0.  1.]
 [-1.  1. -1.  1. -1.]
 [-1.  0. -1.  0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  0  0  3]
 [ 0  0 11  0  0  0]
 [ 0  0  0  7  0  1]
 [11  0  0  0  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.67 0.5  0.67 0.   0.5 ]
 [0.   0.   0.67 0.5  0.67 0.33]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.67 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.2 0.6 1.  0.6]
 [0.  0.  0.8 0.4 1. ]
 [0.  0.  0.  1.2 0.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1.  0. -1.  0.  1.  0.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.]
 [ 1. -1. -1.  0.  1.  0.]
 [-1.  1.  1. -1.  1.  1.]
 [-1.  0.  1.  0.  1.  0.]
 [-1.  1. -1.  1. -1. -1.]
 [-1.  0. -1.  0.  1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  0  0  3]
 [ 0  0 11  0  0  0]
 [ 0  0  0  7  0  1]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.83 0.5  0.83 0.17 0.67]
 [0.   0.   0.83 0.5  0.83 0.33]
 [0.   0.   0.   0.5  0.67 0.67]
 [0.   0.   0.   0.   0.83 0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.5  0.83 0.5  0.83]
 [0.   0.   0.67 0.33 0.83 0.33]
 [0.   0.   0.   1.   0.33 0.67]
 [0.   0.   0.   0.   1.   0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.955, 0.98, 0.985, 1.0, 0.985, 1.0]
cutting matrix
[[-1.  1. -1.  1.]
 [-1.  0.  1.  0.]
 [ 1. -1.  1.  1.]
 [ 1.  0.  1.  0.]
 [-1.  1. -1. -1.]
 [-1.  0.  1.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  7  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:17
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0. -1. -1.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0. -1. -1.  1.  0.  1.]
select_j_column
[-1.  1.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [-1. -1.]
 [ 0.  0.]
 [-1. -1.]
 [-1.  0.]
 [ 1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.17 0.33 0.17 0.17]
 [0.   0.   0.33 0.   0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0. -1.  0. -1.  0.  1.]
select_j_column
[ 0.  0.  0.  1. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [-1. -1. -1.]
 [ 0.  0.  0.]
 [-1. -1.  1.]
 [-1.  0.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.5  0.17 0.5  0.33 0.33]
 [0.   0.   0.5  0.17 0.33 0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.929, 0.923]
cutting matrix
[[ 1.  0.  0.]
 [-1. -1. -1.]
 [ 0.  0.  0.]
 [-1. -1.  1.]
 [-1.  0.  1.]
 [ 1.  1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]


SVM classifier
Time: 2019-01-05 22:59:18
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
confusion matrix
[[14  4  0  0  0  0  0  0  0  0]
 [ 4 18  0  0  0  0  0  0  0  0]
 [23  3  0  0  0  0  0  0  0  0]
 [11  6  0  0  0  0  0  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [18  1  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [11  3  0  0  0  0  0  0  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]]
confusion matrix
[[14  3  0  1  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [20  1  0  5  0  0  0  0  0  0]
 [ 1  6  0 10  0  0  0  0  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 16  0  3  0  0  0  0  0  0]
 [ 2  1  0 16  0  0  0  0  0  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 2  3  0  9  0  0  0  0  0  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.1 0.1 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.2 0.1 0.1 0.  0.1 0.  0.1 0. ]
 [0.  0.  0.  0.1 0.1 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [-1.  1.  0.]
 [ 1. -1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [ 1.  1.  0.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  0.]]
confusion matrix
[[13  4  0  1  0  0  0  0  0  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  3 17  5  0  0  0  0  0  0]
 [ 0  1  1 10  0  0  0  5  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 16  0  3  0  0  0  0  0  0]
 [ 2  1  0 16  0  0  0  0  0  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  3  0  9  0  0  0  0  0  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.2 0.3 0.2 0.2 0.2 0.3]
 [0.  0.  0.2 0.1 0.2 0.  0.1 0.1 0.2 0. ]
 [0.  0.  0.  0.1 0.2 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2. 3.]
 [0. 0. 3.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [-1.  1.  0.  0.]
 [ 1. -1.  0.  0.]
 [ 1.  1.  0.  1.]
 [ 1.  1. -1.  0.]
 [-1.  1.  0.  0.]
 [ 1.  1.  0.  0.]
 [-1.  1.  1.  0.]
 [ 1.  1. -1. -1.]
 [-1.  1.  0. -1.]]
confusion matrix
[[13  4  0  0  0  0  1  0  0  0]
 [ 0  1  0  0  0  0  4 17  0  0]
 [ 1  3 17  0  0  0  5  0  0  0]
 [ 0  1  1  0  0  0 10  5  0  0]
 [ 0 21  0  0  0  0  2  0  0  0]
 [ 0 16  0  0  0  0  3  0  0  0]
 [ 2  1  0  0  0  0 16  0  0  0]
 [ 0  4  0  0  0  0  1 12  0  0]
 [ 2  3  0  0  0  0  9  0  0  0]
 [ 0 10  0  0  0  0  3  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.3 0.4 0.3 0.3 0.3 0.4]
 [0.  0.  0.2 0.2 0.2 0.  0.1 0.1 0.3 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  2.25 1.75]
 [0.   0.   2.25 2.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1.  1.]
 [-1.  1.  0.  0.  1.]
 [ 1. -1.  0.  0.  1.]
 [ 1.  1.  0.  1.  1.]
 [ 1.  1. -1.  0. -1.]
 [-1.  1.  0.  0.  1.]
 [ 1.  1.  0.  0.  1.]
 [-1.  1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  1.  0. -1.  1.]]
confusion matrix
[[13  4  0  0  0  0  1  0  0  0]
 [ 0  1  0  0  0  0  4 17  0  0]
 [ 1  3 17  0  0  0  5  0  0  0]
 [ 0  1  1  0  0  0 10  5  0  0]
 [ 0 21  0  0  0  0  2  0  0  0]
 [ 0 16  0  0  0  0  3  0  0  0]
 [ 2  1  0  0  0  0 16  0  0  0]
 [ 0  4  0  0  0  0  1 12  0  0]
 [ 2  3  0  0  0  0  9  0  0  0]
 [ 0 10  0  0  0  0  3  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.4 0.4 0.3 0.3 0.3 0.4]
 [0.  0.  0.2 0.2 0.3 0.  0.1 0.1 0.3 0.1]
 [0.  0.  0.  0.2 0.3 0.2 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.8 1.4 1. ]
 [0.  0.  1.8 1.8 0.6]
 [0.  0.  0.  0.8 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  0.  1. -1.]
 [ 1. -1.  0.  0.  1.  1.]
 [ 1.  1.  0.  1.  1. -1.]
 [ 1.  1. -1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.]
 [ 1.  1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1.  1.  0. -1.  1.  1.]]
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.2 0.3 0.5 0.4 0.3 0.4 0.3 0.4]
 [0.  0.  0.3 0.2 0.3 0.1 0.2 0.1 0.4 0.2]
 [0.  0.  0.  0.3 0.4 0.2 0.1 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.4 0.3 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.5  1.17 0.83 0.67]
 [0.   0.   1.5  1.5  0.5  1.  ]
 [0.   0.   0.   0.67 1.17 1.33]
 [0.   0.   0.   0.   1.33 1.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  0.  0.  1. -1. -1.]
 [ 1. -1.  0.  0.  1.  1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.]
 [ 1.  1. -1.  0. -1. -1.  1.]
 [-1.  1.  0.  0.  1.  1. -1.]
 [ 1.  1.  0.  0.  1.  1.  1.]
 [-1.  1.  1.  0.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  0. -1.  1.  1.  1.]]
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.5 0.2 0.3 0.6 0.4 0.4 0.4 0.3 0.5]
 [0.  0.  0.3 0.2 0.4 0.1 0.3 0.1 0.4 0.3]
 [0.  0.  0.  0.3 0.5 0.2 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.5 0.3 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 1.29 1.   0.71 0.57 0.71]
 [0.   0.   1.29 1.29 0.43 0.86 0.71]
 [0.   0.   0.   0.57 1.   1.14 1.29]
 [0.   0.   0.   0.   1.14 1.29 1.29]
 [0.   0.   0.   0.   0.   0.43 1.14]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  0.  0.  1. -1. -1.  1.]
 [ 1. -1.  0.  0.  1.  1. -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  0. -1. -1.  1.  1.]
 [-1.  1.  0.  0.  1.  1. -1.  1.]
 [ 1.  1.  0.  0.  1.  1.  1.  1.]
 [-1.  1.  1.  0.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  0. -1.  1.  1.  1.  1.]]
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.5 0.2 0.4 0.6 0.4 0.4 0.4 0.3 0.5]
 [0.  0.  0.3 0.3 0.4 0.1 0.3 0.1 0.4 0.3]
 [0.  0.  0.  0.4 0.5 0.2 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.3 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.12 0.88 0.62 0.5  0.62 0.62]
 [0.   0.   1.12 1.12 0.38 0.75 0.62 0.38]
 [0.   0.   0.   0.5  0.88 1.   1.12 1.  ]
 [0.   0.   0.   0.   1.   1.12 1.12 1.12]
 [0.   0.   0.   0.   0.   0.38 1.   0.25]
 [0.   0.   0.   0.   0.   0.   0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [-1.  1.  0.  0.  1. -1. -1.  1.  1.]
 [ 1. -1.  0.  0.  1.  1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1. -1.  0.]
 [ 1.  1. -1.  0. -1. -1.  1.  1.  0.]
 [-1.  1.  0.  0.  1.  1. -1.  1.  0.]
 [ 1.  1.  0.  0.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  0.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  0. -1.  1.  1.  1.  1.  0.]]
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.6 0.2 0.5 0.7 0.5 0.4 0.5 0.3 0.6]
 [0.  0.  0.4 0.4 0.5 0.2 0.4 0.1 0.5 0.4]
 [0.  0.  0.  0.5 0.6 0.3 0.2 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.   0.78 0.56 0.44 0.56 0.56 1.11]
 [0.   0.   1.   1.   0.33 0.67 0.56 0.33 0.67]
 [0.   0.   0.   0.44 0.78 0.89 1.   0.89 0.56]
 [0.   0.   0.   0.   0.89 1.   1.   1.   0.78]
 [0.   0.   0.   0.   0.   0.33 0.89 0.22 0.89]
 [0.   0.   0.   0.   0.   0.   0.56 0.33 1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.739, 0.91, 0.639, 0.21, 0.878, 0.814, 0.771, 0.894, 0.862]
cutting matrix
[[ 1. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.]
 [ 1. -1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1. -1. -1.]
 [ 1.  1.  0. -1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0 17  0  4  0  1  0  0  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0 14  0  1  0  2  0  0  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:26
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
confusion matrix
[[15  0  3  0  0  0  0  0  0  0]
 [ 0  0 18  4  0  0  0  0  0  0]
 [ 6  0 17  3  0  0  0  0  0  0]
 [ 0  0  6 11  0  0  0  0  0  0]
 [ 0  0  2 21  0  0  0  0  0  0]
 [ 2  0  3 14  0  0  0  0  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [ 2  0 14  1  0  0  0  0  0  0]
 [11  0  1  2  0  0  0  0  0  0]
 [ 0  0  1 12  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 1.  0.]
 [ 0.  1.]
 [-1.  0.]
 [-1.  0.]
 [ 0.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [ 0.  0.]]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 6  0 17  3  0  0  0  0  0  0]
 [ 0  0  1 11  0  0  0  5  0  0]
 [ 0  0  0 21  0  2  0  0  0  0]
 [ 2  0  0 14  0  3  0  0  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [ 2  0  0  1  0  2  0 12  0  0]
 [11  0  0  2  0  1  0  0  0  0]
 [ 0  0  0 12  0  1  0  0  0  0]]
row HD
[[0.  0.  0.2 0.1 0.1 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.2 0.1 0.1 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.1 0.2 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [ 1.  0.  0.]
 [ 0.  1. -1.]
 [-1.  0. -1.]
 [-1.  0. -1.]
 [ 0.  0. -1.]
 [ 1. -1.  1.]
 [ 0. -1. -1.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]]
confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 4  2 17  3  0  0  0  0  0  0]
 [ 0  0  1 11  0  0  0  5  0  0]
 [ 0  0  0 21  0  2  0  0  0  0]
 [ 2  0  0 14  0  3  0  0  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [11  0  0  2  0  1  0  0  0  0]
 [ 0  0  0 12  0  1  0  0  0  0]]
row HD
[[0.  0.1 0.3 0.2 0.2 0.2 0.1 0.3 0.3 0.1]
 [0.  0.  0.3 0.2 0.2 0.2 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 1.67]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 1.  0. -1. -1. -1. -1.  1. -1.  0.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  1.  1.]
 [ 1.  0.  0.  0.]
 [ 0.  1. -1.  0.]
 [-1.  0. -1. -1.]
 [-1.  0. -1. -1.]
 [ 0.  0. -1. -1.]
 [ 1. -1.  1.  0.]
 [ 0. -1. -1.  1.]
 [ 0.  1.  0.  1.]
 [ 0.  0.  1.  1.]]
confusion matrix
[[14  1  0  0  0  0  0  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 4  2 17  3  0  0  0  0  0  0]
 [ 0  0  1 11  0  0  0  5  0  0]
 [ 0  0  0 21  0  0  0  2  0  0]
 [ 2  0  0 14  0  0  0  3  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [11  0  0  2  0  0  0  1  0  0]
 [ 0  0  0 12  0  0  0  1  0  0]]
row HD
[[0.  0.2 0.4 0.3 0.3 0.3 0.2 0.3 0.3 0.1]
 [0.  0.  0.3 0.3 0.3 0.3 0.2 0.4 0.3 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.1 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.25 1.5 ]
 [0.   0.   2.   2.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  1.  1.  0.]
 [ 1.  0.  0.  0.  1.]
 [ 0.  1. -1.  0.  0.]
 [-1.  0. -1. -1.  1.]
 [-1.  0. -1. -1. -1.]
 [ 0.  0. -1. -1.  1.]
 [ 1. -1.  1.  0.  0.]
 [ 0. -1. -1.  1. -1.]
 [ 0.  1.  0.  1.  0.]
 [ 0.  0.  1.  1.  1.]]
confusion matrix
[[14  4  0  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 4  2 17  3  0  0  0  0  0  0]
 [ 0  5  1 11  0  0  0  0  0  0]
 [ 0  2  0 21  0  0  0  0  0  0]
 [ 2  3  0 14  0  0  0  0  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [11  1  0  2  0  0  0  0  0  0]
 [ 0  1  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.4 0.4 0.4 0.2 0.4 0.3 0.2]
 [0.  0.  0.4 0.3 0.4 0.3 0.3 0.5 0.4 0.3]
 [0.  0.  0.  0.4 0.4 0.3 0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.1 0.1 0.5 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.2 0.5 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.  1.2 1.2]
 [0.  0.  1.6 1.6 1.6]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.657, 0.539, 0.711, 0.554, 0.613]
cutting matrix
[[ 1.  0.  1.  1.  0.]
 [ 1.  0.  0.  0.  1.]
 [ 0.  1. -1.  0.  0.]
 [-1.  0. -1. -1.  1.]
 [-1.  0. -1. -1. -1.]
 [ 0.  0. -1. -1.  1.]
 [ 1. -1.  1.  0.  0.]
 [ 0. -1. -1.  1. -1.]
 [ 0.  1.  0.  1.  0.]
 [ 0.  0.  1.  1.  1.]]
cutting matrix's confusion matrix
[[14  4  0  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 4  2 17  3  0  0  0  0  0  0]
 [ 0  5  1 11  0  0  0  0  0  0]
 [ 0  2  0 21  0  0  0  0  0  0]
 [ 2  3  0 14  0  0  0  0  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [11  1  0  2  0  0  0  0  0  0]
 [ 0  1  0 12  0  0  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:59:31
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1.  1.]
 [ 1.  0.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[29  0  0  5  0]
 [ 7  0  0  2  0]
 [ 2  0  0  5  0]
 [ 2  0  0  3  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [ 1.  1. -1.]
 [ 1.  0.  1.]
 [-1.  1.  1.]
 [-1. -1. -1.]]
confusion matrix
[[29  0  0  5  0]
 [ 7  0  0  2  0]
 [ 2  0  0  5  0]
 [ 2  0  0  3  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 0.2 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1.  0.]
 [ 1.  1. -1. -1.]
 [ 1.  0.  1. -1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.4 0.6]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 1.25]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  0.  1.  0.]
 [ 1.  1. -1. -1.]
 [ 1.  0.  1. -1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.4 0.6]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 1.25]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.333, 0.821, 0.364]
cutting matrix
[[-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:31
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0.  0.]
select_j_column
[ 1.  0. -1.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  2 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
1
new_column
None


============== iter  3 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [ 0.  0.  1.]
 [ 0. -1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.6]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1.  0.  1.  0.]
 [ 1. -1.  1.  1.]
 [ 0.  0.  1. -1.]
 [ 0. -1. -1.  0.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.8]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.5 ]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0.  0.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
2
new_column
None


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1.  0.  1.  0.]
 [ 1. -1.  1.  1.]
 [ 0.  0.  1. -1.]
 [ 0. -1. -1.  0.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.8]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.5 ]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.86, 0.714, 0.982, 0.674]
cutting matrix
[[-1.  1.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [ 0.  0.  1.]
 [ 0. -1. -1.]]
cutting matrix's confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:32
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.5  0.33 0.17 0.  ]
 [0.   0.   0.33 0.17 0.   0.17]
 [0.   0.   0.   0.17 0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.5  0.33 0.  ]
 [0.   0.   0.5  0.17 0.   0.33]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.5  0.75]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.5  0.33 0.  ]
 [0.   0.   0.5  0.17 0.   0.33]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.5  0.75]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.67 0.5  0.  ]
 [0.   0.   0.5  0.33 0.17 0.33]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.4 0.6 0.8]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.67 0.83 0.5  0.  ]
 [0.   0.   0.67 0.5  0.17 0.33]
 [0.   0.   0.   0.67 0.83 0.67]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.33 0.5  0.67 0.17]
 [0.   0.   0.5  0.33 0.5  0.33]
 [0.   0.   0.   0.83 0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
None


============== iter  8 ================
current matrix is 
[[-1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.67 0.83 0.5  0.  ]
 [0.   0.   0.67 0.5  0.17 0.33]
 [0.   0.   0.   0.67 0.83 0.67]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.33 0.5  0.67 0.17]
 [0.   0.   0.5  0.33 0.5  0.33]
 [0.   0.   0.   0.83 0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1. -1. -1.  1.  1. -1. -1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  0.  0.]
 [ 1. -1.  1. -1. -1.  1.  0.]
 [-1. -1.  1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.5  0.83 1.   0.67 0.  ]
 [0.   0.   0.83 0.67 0.17 0.5 ]
 [0.   0.   0.   0.67 1.   0.83]
 [0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.14 0.29 0.43 0.57 0.14 0.57]
 [0.   0.   0.43 0.29 0.43 0.29 0.57]
 [0.   0.   0.   0.71 0.57 0.43 0.29]
 [0.   0.   0.   0.   0.14 0.57 0.86]
 [0.   0.   0.   0.   0.   0.71 0.71]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.955, 1.0, 0.985, 1.0, 0.955, 0.939, 0.976]
cutting matrix
[[-1. -1.  1. -1.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1.  0.]
 [-1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [-1. -1.  1. -1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:34
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1.  0. -1. -1.  0.  1.]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [18  0  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  0.  1.  0. -1.  0.]
most_cplx_inx
2
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 0. -1.]
 [ 1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.17 0.   0.33 0.33]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.943, 1.0]
cutting matrix
[[-1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 0. -1.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 22:59:35
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
confusion matrix
[[11  0  0  0  0  0  9  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  3  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [15  0  0  0  0  0  0  0  0  0]
 [ 7  0  0  0  0  0 14  0  0  0]
 [12  0  0  0  0  0  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  0.]
 [ 1. -1.]
 [ 1.  0.]
 [ 1.  0.]
 [-1.  0.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  0.]]
confusion matrix
[[ 3  0  2  6  0  0  0  0  9  0]
 [16  0  4  1  0  0  0  0  0  0]
 [ 4  0  0 15  0  0  0  0  3  0]
 [ 5  0  0 14  0  0  0  0  0  0]
 [ 4  0 17  5  0  0  0  0  0  0]
 [ 0  0  3 13  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 2  0  0 13  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.  0.1 0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.  0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [ 1.  1.  0.]
 [ 1.  0.  0.]
 [ 1. -1.  1.]
 [ 1.  0. -1.]
 [ 1.  0.  1.]
 [-1.  0.  1.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1.  0. -1.]]
confusion matrix
[[ 2  1  0  2  2  0  9  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 0  4  0  3  0  0  3 12  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [ 5  0  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.2 0.3 0.1 0.3 0.2]
 [0.  0.  0.1 0.2 0.2 0.2 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.2 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.33]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.  0.]
 [ 1.  1.  0.  1.]
 [ 1.  0.  0. -1.]
 [ 1. -1.  1.  0.]
 [ 1.  0. -1.  0.]
 [ 1.  0.  1.  0.]
 [-1.  0.  1.  0.]
 [ 1. -1. -1. -1.]
 [-1. -1.  0.  0.]
 [-1.  0. -1.  1.]]
confusion matrix
[[ 2  1  0  2  6  0  9  0  0  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [ 0  4  0  3 12  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 5  0  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.3 0.2 0.1 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.2 0.3 0.3 0.3 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.75 2.25]
 [0.   0.   2.   1.25]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.]
 [ 1.  0.  0. -1.  1.]
 [ 1. -1.  1.  0.  1.]
 [ 1.  0. -1.  0.  1.]
 [ 1.  0.  1.  0.  1.]
 [-1.  0.  1.  0. -1.]
 [ 1. -1. -1. -1.  1.]
 [-1. -1.  0.  0. -1.]
 [-1.  0. -1.  1.  1.]]
confusion matrix
[[ 2  1  0  2  6  0  9  0  0  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [ 0  4  0  3 12  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 5  0  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.3 0.2 0.1 0.2 0.4 0.2 0.4 0.3]
 [0.  0.  0.2 0.3 0.3 0.3 0.5 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.2 0.2 0.4 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.4 1.8 0.2]
 [0.  0.  1.6 1.  1.4]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  0.  0.  0.  0. -1.  0.  1.]
select_j_column
[ 0.  1. -1.  0.  0.  0.  0. -1.  0.  1.]
most_cplx_inx
8
new_column
None


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.]
 [ 1.  0.  0. -1.  1.]
 [ 1. -1.  1.  0.  1.]
 [ 1.  0. -1.  0.  1.]
 [ 1.  0.  1.  0.  1.]
 [-1.  0.  1.  0. -1.]
 [ 1. -1. -1. -1.  1.]
 [-1. -1.  0.  0. -1.]
 [-1.  0. -1.  1.  1.]]
confusion matrix
[[ 2  1  0  2  6  0  9  0  0  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [ 0  4  0  3 12  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 5  0  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.3 0.2 0.1 0.2 0.4 0.2 0.4 0.3]
 [0.  0.  0.2 0.3 0.3 0.3 0.5 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.2 0.2 0.4 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.4 1.8 0.2]
 [0.  0.  1.6 1.  1.4]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.83, 0.646, 0.556, 0.208, 0.883]
cutting matrix
[[ 1. -1.  0.  1.]
 [ 1.  0.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 1.  1.  0.  1.]
 [ 1. -1.  0.  1.]
 [ 1.  1.  0.  1.]
 [-1.  1.  0. -1.]
 [ 1. -1. -1.  1.]
 [-1.  0.  0. -1.]
 [-1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[ 8  1  0  2  0  0  9  0  0  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [12  4  0  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:39
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
confusion matrix
[[17  1  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  0.]
 [-1.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [-1.  0.]
 [ 1. -1.]]
confusion matrix
[[17  1  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.1 0.  0.1 0.1 0.2]
 [0.  0.  0.1 0.2 0.2 0.2 0.2 0.1 0.2 0. ]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  1.]
 [ 1. -1.  1.]
 [ 0. -1. -1.]
 [ 0.  0. -1.]
 [-1.  0. -1.]
 [ 0.  1. -1.]
 [ 0.  0. -1.]
 [ 0. -1.  1.]
 [-1.  0. -1.]
 [ 1. -1.  1.]]
confusion matrix
[[ 0  1  0 17  2  0  0  0  0  0]
 [ 0 15  0  2  4  0  0  0  0  0]
 [ 0  4  0 18  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  7 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 0  2  0 13  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.2 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.2 0.3 0.3 0.3 0.3 0.1 0.3 0. ]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1.  0.]
 [ 1. -1.  1. -1.]
 [ 0. -1. -1.  1.]
 [ 0.  0. -1. -1.]
 [-1.  0. -1.  1.]
 [ 0.  1. -1.  1.]
 [ 0.  0. -1.  0.]
 [ 0. -1.  1. -1.]
 [-1.  0. -1.  1.]
 [ 1. -1.  1. -1.]]
confusion matrix
[[ 1  0  2  0  2  0 15  0  0  0]
 [ 2 13  0  0  4  0  2  0  0  0]
 [ 3  1  1  2  0  0 15  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  0 11  0  0  2  0  0  0]
 [ 0  0  1  1  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.3 0.3 0.4 0.4 0.4 0.1 0.4 0. ]
 [0.  0.  0.  0.2 0.2 0.1 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.4 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  2.  ]
 [0.   0.   2.25 1.  ]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  1.  0. -1.]
 [ 1. -1.  1. -1.  1.]
 [ 0. -1. -1.  1.  1.]
 [ 0.  0. -1. -1.  0.]
 [-1.  0. -1.  1.  1.]
 [ 0.  1. -1.  1. -1.]
 [ 0.  0. -1.  0. -1.]
 [ 0. -1.  1. -1. -1.]
 [-1.  0. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.]]
confusion matrix
[[ 0  1  6  0  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 13  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  1  1  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.4 0.3 0.4 0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.3 0.4 0.4 0.5 0.5 0.2 0.5 0.1]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.5 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.6 1.4]
 [0.  0.  1.8 0.8 1.4]
 [0.  0.  0.  1.8 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
select_j_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
most_cplx_inx
9
new_column
None


============== iter  6 ================
current matrix is 
[[ 0.  0.  1.  0. -1.]
 [ 1. -1.  1. -1.  1.]
 [ 0. -1. -1.  1.  1.]
 [ 0.  0. -1. -1.  0.]
 [-1.  0. -1.  1.  1.]
 [ 0.  1. -1.  1. -1.]
 [ 0.  0. -1.  0. -1.]
 [ 0. -1.  1. -1. -1.]
 [-1.  0. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.]]
confusion matrix
[[ 0  1  6  0  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 13  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  1  1  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.4 0.3 0.4 0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.3 0.4 0.4 0.5 0.5 0.2 0.5 0.1]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.5 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.6 1.4]
 [0.  0.  1.8 0.8 1.4]
 [0.  0.  0.  1.8 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[-1.  1.  1.  0.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  1.  0. -1. -1.]
 [ 1. -1.  1. -1.  1. -1.]
 [ 0. -1. -1.  1.  1.  1.]
 [ 0.  0. -1. -1.  0.  1.]
 [-1.  0. -1.  1.  1.  0.]
 [ 0.  1. -1.  1. -1.  1.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0. -1.  1. -1. -1. -1.]
 [-1.  0. -1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.]]
confusion matrix
[[ 0  1  6  0  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 13  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  1  1  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.5 0.4 0.5 0.4 0.2 0.2 0.4 0.3]
 [0.  0.  0.4 0.5 0.5 0.6 0.6 0.2 0.6 0.1]
 [0.  0.  0.  0.3 0.3 0.2 0.4 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.4 0.3 0.6 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   1.33 1.17 1.5 ]
 [0.   0.   1.5  0.67 1.17 0.67]
 [0.   0.   0.   1.5  1.   1.67]
 [0.   0.   0.   0.   1.   0.5 ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[-1. -1.  1.  1.  0.  1.  0. -1.  1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 0.  0.  1.  0. -1. -1.  0.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [ 0. -1. -1.  1.  1.  1.  1.]
 [ 0.  0. -1. -1.  0.  1.  1.]
 [-1.  0. -1.  1.  1.  0.  1.]
 [ 0.  1. -1.  1. -1.  1.  1.]
 [ 0.  0. -1.  0. -1.  0.  0.]
 [ 0. -1.  1. -1. -1. -1. -1.]
 [-1.  0. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1.  0.]]
confusion matrix
[[ 0  1  6  0  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 13  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  1  1  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.5 0.6 0.5 0.6 0.5 0.2 0.3 0.5 0.3]
 [0.  0.  0.5 0.6 0.6 0.7 0.7 0.2 0.7 0.2]
 [0.  0.  0.  0.3 0.3 0.2 0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.4 0.4 0.7 0.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 1.14 1.   1.29 1.14]
 [0.   0.   1.29 0.57 1.   0.57 0.71]
 [0.   0.   0.   1.29 0.86 1.43 1.43]
 [0.   0.   0.   0.   0.86 0.43 0.29]
 [0.   0.   0.   0.   0.   0.86 1.  ]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.39, 0.239, 0.665, 0.565, 0.598, 0.554, 0.529]
cutting matrix
[[ 0.  1.  0. -1.]
 [ 1.  1. -1.  1.]
 [ 0. -1.  1.  1.]
 [ 0. -1. -1.  0.]
 [-1. -1.  1.  1.]
 [ 0. -1.  1. -1.]
 [ 0. -1.  0. -1.]
 [ 0.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1. -1.]]
cutting matrix's confusion matrix
[[ 0  1  6  0  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 13  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 0  2  5  0 17  0  2  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  1  1  0  0 19  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 22:59:45
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  0  0  1  0]
 [ 5  0  0  2  0]
 [ 6  0  0  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.2 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [ 1.  0.  0.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 7  0  0  0  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.4 0.2]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1.  1.]
 [ 1.  0.  0. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  0. -1.]
 [-1.  1.  1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.6 0.8 0.6 0.2]
 [0.  0.  0.4 0.4 0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.  ]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  1.  1.  1.]
 [ 1.  0.  0. -1.  1.]
 [ 1. -1. -1. -1.  1.]
 [-1. -1.  0. -1. -1.]
 [-1.  1.  1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.6 0.8 0.8 0.2]
 [0.  0.  0.4 0.6 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  0.8 0.4]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  0.  1.  1.  1.  1.]
 [ 1.  0.  0. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.]
 [-1. -1.  0. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 7  0  0  0  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 0.8 0.8 0.4]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.67 0.33 0.5 ]
 [0.   0.   0.33 0.33 0.5  0.83]
 [0.   0.   0.   0.33 0.5  0.67]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  0.  1.  1.  1.  1.  1.]
 [ 1.  0.  0. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1.]
 [-1. -1.  0. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.  1.  1.  0.6]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.57 0.29 0.43 0.43]
 [0.   0.   0.29 0.29 0.43 0.71 0.43]
 [0.   0.   0.   0.29 0.43 0.57 0.43]
 [0.   0.   0.   0.   0.29 0.43 0.14]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.176, 0.675, 0.839, 0.875, 0.786, 0.839]
cutting matrix
[[-1.  1.  1.  1.  1.  1.]
 [ 1.  0. -1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1.]
 [-1.  0. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.]]
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]


SVM classifier
Time: 2019-01-05 22:59:46
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0.  0.  1.]
confusion matrix
[[30  0  0  0  0]
 [ 6  2  1  0  0]
 [ 4  1  2  0  0]
 [ 0  6  1  0  0]
 [ 0  1  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  0.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [ 1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 7  1  0  0  1]
 [ 5  1  0  1  0]
 [ 1  2  0  0  4]
 [ 1  1  0  1  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  0.  1.]
 [ 0.  1. -1.]
 [ 0.  0.  1.]
 [ 1. -1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 7  1  0  0  1]
 [ 5  1  0  1  0]
 [ 1  2  0  0  4]
 [ 1  1  0  1  0]]
row HD
[[0.  0.4 0.6 0.4 0.2]
 [0.  0.  0.6 0.2 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  0.]
 [ 1.  0.  1.  1.]
 [ 0.  1. -1. -1.]
 [ 0.  0.  1.  1.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 4  1  0  3  1]
 [ 3  1  0  3  0]
 [ 0  2  0  1  4]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.8 0.6 0.4]
 [0.  0.  0.8 0.2 0.2]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.75]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.786, 0.675, 0.875, 0.385]
cutting matrix
[[ 1.]
 [ 1.]
 [-1.]
 [ 1.]
 [ 1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:59:47
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1.  1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[17  0  0  1  0  0]
 [12  0  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  2  0  0]]
row HD
[[0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  2  0]]
row HD
[[0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 0.  0. -1.  1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1.  0.]
 [-1.  0.  1.  0.]
 [ 1. -1.  1. -1.]
 [-1.  1. -1. -1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  2  0]]
row HD
[[0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 0.75 0.75]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  1.  0.  1.]
 [-1.  0.  1.  0. -1.]
 [ 1. -1.  1. -1.  0.]
 [-1.  1. -1. -1.  0.]
 [-1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  2  0]]
row HD
[[0.   0.17 0.67 0.67 0.5  0.67]
 [0.   0.   0.67 0.67 0.5  0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.  0.6 0.6 1. ]
 [0.  0.  0.8 0.4 1.2]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  0.  1.  0.  1.  0.]
 [-1.  0.  1.  0. -1.  0.]
 [ 1. -1.  1. -1.  0. -1.]
 [-1.  1. -1. -1.  0.  1.]
 [-1.  1.  1. -1.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  2  0]]
row HD
[[0.   0.17 0.83 0.83 0.5  0.83]
 [0.   0.   0.83 0.83 0.5  0.67]
 [0.   0.   0.   0.67 0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.83 0.5  0.5  0.83 1.  ]
 [0.   0.   0.67 0.33 1.   0.33]
 [0.   0.   0.   0.67 0.83 1.  ]
 [0.   0.   0.   0.   1.   0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  1.  0. -1.]
select_j_column
[ 0.  0. -1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  0.  1.  0.  1.  0.  0.]
 [-1.  0.  1.  0. -1.  0.  0.]
 [ 1. -1.  1. -1.  0. -1. -1.]
 [-1.  1. -1. -1.  0.  1.  1.]
 [-1.  1.  1. -1.  0.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  2  0]]
row HD
[[0.   0.17 1.   1.   0.5  1.  ]
 [0.   0.   1.   1.   0.5  0.83]
 [0.   0.   0.   0.83 0.67 0.67]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.71 0.43 0.43 0.71 0.86 0.71]
 [0.   0.   0.57 0.29 0.86 0.29 0.14]
 [0.   0.   0.   0.57 0.71 0.86 0.71]
 [0.   0.   0.   0.   0.86 0.43 0.29]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  0.  0.  0. -1.]
select_j_column
[ 0.  0. -1.  1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  0.  1.  0.  1.  0.  0.  1.]
 [-1.  0.  1.  0. -1.  0.  0. -1.]
 [ 1. -1.  1. -1.  0. -1. -1. -1.]
 [-1.  1. -1. -1.  0.  1.  1.  1.]
 [-1.  1.  1. -1.  0.  0.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 1 11  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  2  0]]
row HD
[[0.   0.33 1.17 1.   0.67 1.  ]
 [0.   0.   1.   1.17 0.67 1.  ]
 [0.   0.   0.   1.   0.83 0.83]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.62 0.38 0.38 0.62 0.75 0.62 0.5 ]
 [0.   0.   0.5  0.25 0.75 0.25 0.12 0.38]
 [0.   0.   0.   0.5  0.62 0.75 0.62 0.5 ]
 [0.   0.   0.   0.   0.75 0.38 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.12 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.925, 0.889, 0.896, 0.833, 0.943, 0.846, 0.846, 0.965]
cutting matrix
[[-1.  1.  0.  0.  1.]
 [-1. -1.  0.  0. -1.]
 [ 1.  0. -1. -1. -1.]
 [-1.  0.  1.  1.  1.]
 [-1.  0.  0.  0.  0.]
 [ 1. -1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  6  1  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  0  4  0]]


SVM classifier
Time: 2019-01-05 22:59:49
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  0. -1.  0.]
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [14  1  0  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  1  0  0  1  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
2
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [-1. -1.]
 [ 0.  1.]]
confusion matrix
[[17  0  1  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  3  0  0  0]]
row HD
[[0.   0.33 0.17 0.17 0.33 0.17]
 [0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[ 1. -1.  0.  0.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  0.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [-1. -1.]
 [ 0.  1.]]
confusion matrix
[[17  0  1  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  3  0  0  0]]
row HD
[[0.   0.33 0.17 0.17 0.33 0.17]
 [0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 0.  1. -1.  1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.]
 [ 1.  1. -1.]
 [ 0.  1.  1.]
 [ 0.  1. -1.]
 [-1. -1.  0.]
 [ 0.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  2  1  0  0]]
row HD
[[0.   0.5  0.33 0.33 0.33 0.33]
 [0.   0.   0.33 0.17 0.5  0.33]
 [0.   0.   0.   0.17 0.5  0.  ]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1.  1.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0. -1.]
 [ 1.  1. -1. -1.]
 [ 0.  1.  1.  0.]
 [ 0.  1. -1.  0.]
 [-1. -1.  0.  1.]
 [ 0.  1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  2  0  2]]
row HD
[[0.   0.5  0.5  0.5  0.5  0.5 ]
 [0.   0.   0.5  0.33 0.67 0.5 ]
 [0.   0.   0.   0.17 0.67 0.17]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.25 1.  ]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.957, 1.0, 0.949, 0.978]
cutting matrix
[[ 0.  0. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  0.]
 [ 1. -1.  0.]
 [-1.  0.  1.]
 [ 1.  1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  2  0  2]]


SVM classifier
Time: 2019-01-05 22:59:50
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [19  0  0  3  0  0  0  0  0  0]
 [ 4  0  0 12  0  0  0  0  0  0]
 [15  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 17  0  0  0  0  0  0]
 [10  0  0  5  0  0  0  0  0  0]
 [17  0  0  3  0  0  0  0  0  0]
 [ 9  0  0 13  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[12  3  0  2  0  0  0  0  0  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0 19  0  3  0  0  0  0  0  0]
 [ 0  4  0 12  0  0  0  0  0  0]
 [11  4  0  2  0  0  0  0  0  0]
 [ 0  3  0 17  0  0  0  0  0  0]
 [ 0 10  0  5  0  0  0  0  0  0]
 [ 0 17  0  3  0  0  0  0  0  0]
 [ 2  7  0 13  0  0  0  0  0  0]
 [ 2  0  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.  0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.2 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [ 1.  1. -1.]
 [ 1.  1.  0.]
 [-1.  1.  0.]
 [ 1. -1. -1.]
 [-1.  1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [-1.  1.  1.]]
confusion matrix
[[12  3  0  2  0  0  0  0  0  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0  1 18  3  0  0  0  0  0  0]
 [ 0  2  2 12  0  0  0  0  0  0]
 [11  2  2  0  0  0  0  0  0  2]
 [ 0  2  1 17  0  0  0  0  0  0]
 [ 0  1  9  5  0  0  0  0  0  0]
 [ 0 17  0  3  0  0  0  0  0  0]
 [ 2  0  7 13  0  0  0  0  0  0]
 [ 2  0  0  8  0  0  0  0  0  3]]
row HD
[[0.  0.1 0.2 0.3 0.  0.3 0.2 0.1 0.3 0.3]
 [0.  0.  0.1 0.2 0.1 0.2 0.1 0.  0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.3 0.  0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   3.33]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  0.  0. -1.  0.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [ 1.  1. -1.  0.]
 [ 1.  1.  0.  1.]
 [-1.  1.  0.  1.]
 [ 1. -1. -1.  0.]
 [-1.  1.  0.  1.]
 [ 1.  1.  0. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  0. -1.]
 [-1.  1.  1. -1.]]
confusion matrix
[[12  3  0  0  0  0  0  0  2  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  1  0]
 [11  2  2  0  0  0  0  0  0  2]
 [ 0  2  0 15  0  0  1  0  2  0]
 [ 0  1  0  2  0  0  9  0  3  0]
 [ 0  6  0  3  0  0  0 11  0  0]
 [ 2  0  1  2  0  0  6  0 11  0]
 [ 2  0  0  2  0  0  0  0  6  3]]
row HD
[[0.  0.1 0.3 0.4 0.  0.4 0.3 0.2 0.4 0.4]
 [0.  0.  0.2 0.3 0.1 0.3 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.1 0.3 0.1 0.1 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.4 0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.4 0.3 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  2.5  1.5 ]
 [0.   0.   1.75 1.5 ]
 [0.   0.   0.   2.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  0.  1.]
 [ 1.  1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.]
 [-1.  1.  0.  1.  1.]
 [ 1. -1. -1.  0.  1.]
 [-1.  1.  0.  1.  1.]
 [ 1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1.  0. -1.  1.]
 [-1.  1.  1. -1.  1.]]
confusion matrix
[[12  3  0  0  0  0  0  0  2  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  1  0]
 [11  1  2  0  0  0  0  1  0  2]
 [ 0  2  0 15  0  0  1  0  2  0]
 [ 0  1  0  2  0  0  9  0  3  0]
 [ 0  6  0  3  0  0  0 11  0  0]
 [ 2  0  1  2  0  0  6  0 11  0]
 [ 2  0  0  2  0  0  0  0  6  3]]
row HD
[[0.  0.1 0.3 0.4 0.  0.4 0.3 0.3 0.4 0.4]
 [0.  0.  0.2 0.3 0.1 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.1 0.3 0.1 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.4 0.  0.2 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.4 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 2.  1.2 1. ]
 [0.  0.  1.4 1.2 0.6]
 [0.  0.  0.  2.  1.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  0.]
 [ 1.  1. -1.  0.  1.  0.]
 [ 1.  1.  0.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.]
 [ 1. -1. -1.  0.  1. -1.]
 [-1.  1.  0.  1.  1.  0.]
 [ 1.  1.  0. -1.  1.  0.]
 [ 1.  1. -1.  1. -1.  0.]
 [-1.  1.  0. -1.  1.  0.]
 [-1.  1.  1. -1.  1.  0.]]
confusion matrix
[[12  3  0  0  0  0  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  8  0  3  0  2  1  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  2  0  0  0 15  1  0  2  0]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 0  6  0  1  0  2  0 11  0  0]
 [ 2  0  1  1  0  1  6  0 11  0]
 [ 1  0  0  2  1  0  0  0  6  3]]
row HD
[[0.  0.1 0.4 0.5 0.1 0.4 0.3 0.3 0.4 0.4]
 [0.  0.  0.3 0.4 0.2 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.2 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.1 0.3 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.5 0.4 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.67 1.   0.83 1.67]
 [0.   0.   1.17 1.   0.5  1.33]
 [0.   0.   0.   1.67 1.33 1.  ]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  0.  1.]
 [ 1.  1. -1.  0.  1.  0.  0.]
 [ 1.  1.  0.  1.  1. -1.  0.]
 [-1.  1.  0.  1.  1.  1.  0.]
 [ 1. -1. -1.  0.  1. -1.  0.]
 [-1.  1.  0.  1.  1.  0.  0.]
 [ 1.  1.  0. -1.  1.  0. -1.]
 [ 1.  1. -1.  1. -1.  0.  1.]
 [-1.  1.  0. -1.  1.  0.  0.]
 [-1.  1.  1. -1.  1.  0.  0.]]
confusion matrix
[[11  3  0  0  0  0  0  0  3  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  8  0  3  0  2  1  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  2  0  0  0 15  1  0  2  0]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 0  6  0  1  0  2  0 11  0  0]
 [ 2  0  1  1  0  1  6  0 11  0]
 [ 0  0  0  2  1  0  0  0  7  3]]
row HD
[[0.  0.2 0.5 0.6 0.2 0.5 0.4 0.3 0.5 0.5]
 [0.  0.  0.3 0.4 0.2 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.1 0.4 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 1.43 0.86 0.71 1.43 1.14]
 [0.   0.   1.   0.86 0.43 1.14 1.29]
 [0.   0.   0.   1.43 1.14 0.86 0.86]
 [0.   0.   0.   0.   1.   1.   0.86]
 [0.   0.   0.   0.   0.   1.29 1.29]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  0.  1. -1.]
 [ 1.  1. -1.  0.  1.  0.  0.  1.]
 [ 1.  1.  0.  1.  1. -1.  0.  1.]
 [-1.  1.  0.  1.  1.  1.  0.  1.]
 [ 1. -1. -1.  0.  1. -1.  0.  1.]
 [-1.  1.  0.  1.  1.  0.  0.  1.]
 [ 1.  1.  0. -1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1. -1.  0.  1. -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.]
 [-1.  1.  1. -1.  1.  0.  0.  1.]]
confusion matrix
[[11  1  0  0  3  0  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  8  0  3  0  2  1  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  2  0  0  0 15  1  0  2  0]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 3  3  0  1  0  2  0 11  0  0]
 [ 2  0  1  1  0  1  6  0 11  0]
 [ 1  0  0  2  1  0  0  0  6  3]]
row HD
[[0.  0.3 0.6 0.7 0.3 0.6 0.5 0.3 0.6 0.6]
 [0.  0.  0.3 0.4 0.2 0.3 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.3 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.1 0.4 0.6 0.2 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.25 0.75 0.62 1.25 1.   0.75]
 [0.   0.   0.88 0.75 0.38 1.   1.12 0.25]
 [0.   0.   0.   1.25 1.   0.75 0.75 0.88]
 [0.   0.   0.   0.   0.88 0.88 0.75 0.88]
 [0.   0.   0.   0.   0.   1.12 1.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.75 1.12]
 [0.   0.   0.   0.   0.   0.   0.   1.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1.  0.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  0.  1. -1.  1.]
 [ 1.  1. -1.  0.  1.  0.  0.  1. -1.]
 [ 1.  1.  0.  1.  1. -1.  0.  1. -1.]
 [-1.  1.  0.  1.  1.  1.  0.  1.  0.]
 [ 1. -1. -1.  0.  1. -1.  0.  1.  1.]
 [-1.  1.  0.  1.  1.  0.  0.  1.  0.]
 [ 1.  1.  0. -1.  1.  0. -1.  1.  0.]
 [ 1.  1. -1.  1. -1.  0.  1. -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.]
 [-1.  1.  1. -1.  1.  0.  0.  1.  1.]]
confusion matrix
[[11  1  0  0  3  0  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  8  0  3  0  2  1  0]
 [ 0  1  1  0 11  0  1  1  0  2]
 [ 0  2  0  0  0 15  1  0  2  0]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  5  0  1  0  2  0 11  0  0]
 [ 2  0  1  1  0  1  6  0 11  0]
 [ 1  0  0  2  1  0  0  0  6  3]]
row HD
[[0.  0.4 0.7 0.8 0.3 0.7 0.6 0.4 0.6 0.6]
 [0.  0.  0.3 0.5 0.3 0.4 0.4 0.5 0.4 0.4]
 [0.  0.  0.  0.3 0.4 0.3 0.4 0.6 0.4 0.5]
 [0.  0.  0.  0.  0.6 0.1 0.4 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.11 0.67 0.56 1.11 0.89 0.67 0.89]
 [0.   0.   0.78 0.67 0.33 0.89 1.   0.22 0.89]
 [0.   0.   0.   1.11 0.89 0.67 0.67 0.78 0.56]
 [0.   0.   0.   0.   0.78 0.78 0.67 0.78 1.11]
 [0.   0.   0.   0.   0.   1.   1.   0.11 0.67]
 [0.   0.   0.   0.   0.   0.   0.67 1.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   1.11 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.824, 0.915, 0.785, 0.805, 0.936, 0.709, 0.538, 0.883, 0.812]
cutting matrix
[[ 1. -1. -1.  0.  1.  0. -1.  1.]
 [ 1.  1. -1.  0.  1.  0.  1. -1.]
 [ 1.  1.  0.  1.  1. -1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  0.]
 [ 1. -1. -1.  0.  1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0.]
 [ 1.  1.  0. -1.  1.  0.  1.  0.]
 [ 1.  1. -1.  1. -1.  0. -1.  0.]
 [-1.  1.  0. -1.  1.  0.  1.  1.]
 [-1.  1.  1. -1.  1.  0.  1.  1.]]
cutting matrix's confusion matrix
[[11  0  0  0  3  0  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  8  0  3  0  2  1  0]
 [ 0  1  1  0 11  0  1  1  0  2]
 [ 0  0  0  0  0 15  3  0  2  0]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  5  0  1  0  2  0 11  0  0]
 [ 2  0  1  1  0  1  6  0 11  0]
 [ 1  0  0  2  1  0  0  0  6  3]]


SVM classifier
Time: 2019-01-05 22:59:59
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
confusion matrix
[[16  0  1  0  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 3  0 18  1  0  0  0  0  0  0]
 [ 3  0  3 10  0  0  0  0  0  0]
 [13  0  4  0  0  0  0  0  0  0]
 [ 3  0 17  0  0  0  0  0  0  0]
 [12  0  3  0  0  0  0  0  0  0]
 [18  0  1  1  0  0  0  0  0  0]
 [15  0  6  1  0  0  0  0  0  0]
 [ 1  0 10  2  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0.  0.]
 [ 1.  1.]
 [-1.  1.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  1.]
 [ 1.  0.]]
confusion matrix
[[13  3  0  0  0  1  0  0  0  0]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 2  1 17  1  0  1  0  0  0  0]
 [ 1  2  1  8  0  2  0  2  0  0]
 [ 0 12  2  0  0  2  0  1  0  0]
 [ 3  0  1  0  0 16  0  0  0  0]
 [12  0  1  0  0  2  0  0  0  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [15  0  2  1  0  4  0  0  0  0]
 [ 0  1  0  2  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.2 0.  0.1 0.  0.2]
 [0.  0.  0.2 0.2 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  0.]
 [ 0.  0.  0.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [ 0.  0. -1.]
 [ 1.  0. -1.]
 [ 0.  1. -1.]
 [ 0. -1.  1.]
 [ 0.  1.  1.]
 [ 1.  0.  1.]]
confusion matrix
[[11  3  0  0  0  0  1  0  1  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  8  2  1  0  2  1  1]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 2  0  1  0  0 14  1  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 11  1  0]
 [ 2  0  2  1  0  1  4  0  9  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.1 0.2 0.1 0.2 0.3 0.1 0.2 0.1 0.3]
 [0.  0.  0.3 0.2 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.33]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [ 0.  0.  0.  1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  0.  1.]
 [ 0.  0. -1. -1.]
 [ 1.  0. -1. -1.]
 [ 0.  1. -1.  1.]
 [ 0. -1.  1.  0.]
 [ 0.  1.  1. -1.]
 [ 1.  0.  1. -1.]]
confusion matrix
[[11  0  0  0  4  0  0  0  1  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 1  2  2  8  0  0  0  2  0  1]
 [ 0  1  0  0 10  2  0  1  1  2]
 [ 2  0  0  0  0 15  1  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 4  3  1  1  0  0  0 11  0  0]
 [ 2  0  1  1  1  2  3  0  9  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.2 0.3 0.2 0.3 0.4 0.2 0.2 0.2 0.4]
 [0.  0.  0.3 0.2 0.2 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.1 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.75 1.75]
 [0.   0.   2.   1.75]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.  0.  0.]
 [ 0.  0.  0.  1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1.  0.  1. -1.]
 [ 0.  0. -1. -1.  0.]
 [ 1.  0. -1. -1. -1.]
 [ 0.  1. -1.  1. -1.]
 [ 0. -1.  1.  0.  1.]
 [ 0.  1.  1. -1.  1.]
 [ 1.  0.  1. -1. -1.]]
confusion matrix
[[11  0  0  0  4  0  0  0  1  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 1  0  2 10  0  0  0  2  0  1]
 [ 0  1  0  0 10  2  0  1  1  2]
 [ 2  0  0  0  0 15  1  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 4  3  1  1  0  0  0 11  0  0]
 [ 2  1  1  0  1  2  3  0  9  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.3 0.4 0.3 0.3 0.5 0.3 0.3 0.3 0.5]
 [0.  0.  0.4 0.3 0.3 0.4 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.2 0.4 0.2 0.1 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.2 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.4 1.4 1.4]
 [0.  0.  1.6 1.4 1.6]
 [0.  0.  0.  1.4 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  0.  0.  0.  0.]
 [ 0.  0.  0.  1.  1.  0.]
 [ 1.  1. -1.  1. -1.  1.]
 [-1.  1.  0.  1. -1. -1.]
 [ 0.  0. -1. -1.  0. -1.]
 [ 1.  0. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1.  1.]
 [ 0. -1.  1.  0.  1.  0.]
 [ 0.  1.  1. -1.  1.  1.]
 [ 1.  0.  1. -1. -1.  1.]]
confusion matrix
[[15  0  0  0  0  0  0  0  1  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 17  0  0  1  0  0  1  0]
 [ 1  0  1 10  0  1  0  2  0  1]
 [ 1  1  0  0  9  2  0  1  1  2]
 [ 2  0  1  0  0 14  1  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [ 3  1  2  0  0  1  3  0  9  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.3 0.5 0.4 0.4 0.6 0.4 0.3 0.4 0.6]
 [0.  0.  0.5 0.4 0.4 0.5 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.3 0.5 0.3 0.1 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.3 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.2 0.4 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.17 1.17 1.17 0.67]
 [0.   0.   1.33 1.17 1.33 1.  ]
 [0.   0.   0.   1.17 0.67 0.67]
 [0.   0.   0.   0.   1.   0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  1.  1.  0.  0.]
 [ 1.  1. -1.  1. -1.  1.  0.]
 [-1.  1.  0.  1. -1. -1.  0.]
 [ 0.  0. -1. -1.  0. -1.  0.]
 [ 1.  0. -1. -1. -1. -1.  0.]
 [ 0.  1. -1.  1. -1.  1. -1.]
 [ 0. -1.  1.  0.  1.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.  0.]
 [ 1.  0.  1. -1. -1.  1.  1.]]
confusion matrix
[[15  0  0  0  0  0  0  0  1  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 17  0  0  1  0  0  1  0]
 [ 1  0  1 10  0  1  0  2  0  1]
 [ 1  1  0  0  9  2  0  1  1  2]
 [ 2  0  2  0  0 14  0  0  0  2]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [ 3  1  4  0  0  1  1  0  9  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.3 0.5 0.4 0.4 0.6 0.5 0.3 0.4 0.7]
 [0.  0.  0.5 0.4 0.4 0.5 0.5 0.3 0.4 0.6]
 [0.  0.  0.  0.3 0.5 0.3 0.2 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.2 0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   1.   1.   0.57 0.57]
 [0.   0.   1.14 1.   1.14 0.86 1.  ]
 [0.   0.   0.   1.   0.57 0.57 0.71]
 [0.   0.   0.   0.   0.86 0.57 1.14]
 [0.   0.   0.   0.   0.   0.86 1.  ]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0.  1.  1.  1. -1. -1.  1.  0. -1. -1.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  1.  1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.]
 [-1.  1.  0.  1. -1. -1.  0.  1.]
 [ 0.  0. -1. -1.  0. -1.  0.  1.]
 [ 1.  0. -1. -1. -1. -1.  0.  0.]
 [ 0.  1. -1.  1. -1.  1. -1.  1.]
 [ 0. -1.  1.  0.  1.  0.  0.  1.]
 [ 0.  1.  1. -1.  1.  1.  0. -1.]
 [ 1.  0.  1. -1. -1.  1.  1.  1.]]
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 17  0  0  1  0  0  1  0]
 [ 1  0  1 10  0  1  0  2  0  1]
 [ 0  1  0  0 10  2  0  1  0  3]
 [ 2  0  2  0  0 14  0  0  0  2]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [ 2  1  4  0  0  1  1  0 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.3 0.6 0.5 0.5 0.6 0.6 0.4 0.5 0.8]
 [0.  0.  0.6 0.5 0.5 0.5 0.6 0.4 0.5 0.7]
 [0.  0.  0.  0.3 0.5 0.4 0.2 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.5 0.4 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.88 0.88 0.88 0.5  0.5  0.75]
 [0.   0.   1.   0.88 1.   0.75 0.88 0.62]
 [0.   0.   0.   0.88 0.5  0.5  0.62 0.75]
 [0.   0.   0.   0.   0.75 0.5  1.   0.62]
 [0.   0.   0.   0.   0.   0.75 0.88 1.  ]
 [0.   0.   0.   0.   0.   0.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0.  0. -1.  0. -1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  0.  1.  1.  0.  0.  1. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  1.  1.  0.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  1.  0.  1. -1.]
 [-1.  1.  0.  1. -1. -1.  0.  1.  0.]
 [ 0.  0. -1. -1.  0. -1.  0.  1.  0.]
 [ 1.  0. -1. -1. -1. -1.  0.  0.  0.]
 [ 0.  1. -1.  1. -1.  1. -1.  1. -1.]
 [ 0. -1.  1.  0.  1.  0.  0.  1. -1.]
 [ 0.  1.  1. -1.  1.  1.  0. -1.  1.]
 [ 1.  0.  1. -1. -1.  1.  1.  1.  0.]]
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 17  0  0  1  0  0  1  0]
 [ 1  0  1 10  0  1  0  2  0  1]
 [ 0  1  0  0 10  2  0  1  0  3]
 [ 2  0  2  0  0 14  0  0  0  2]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [ 2  1  4  0  0  1  1  0 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.3 0.7 0.5 0.5 0.6 0.7 0.5 0.6 0.8]
 [0.  0.  0.7 0.5 0.5 0.5 0.7 0.5 0.6 0.7]
 [0.  0.  0.  0.4 0.6 0.5 0.2 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.3 0.6 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.78 0.78 0.78 0.44 0.44 0.67 0.78]
 [0.   0.   0.89 0.78 0.89 0.67 0.78 0.56 0.44]
 [0.   0.   0.   0.78 0.44 0.44 0.56 0.67 0.44]
 [0.   0.   0.   0.   0.67 0.44 0.89 0.56 1.  ]
 [0.   0.   0.   0.   0.   0.67 0.78 0.89 0.56]
 [0.   0.   0.   0.   0.   0.   0.67 0.56 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.775, 0.759, 0.721, 0.821, 0.779, 0.776, 0.214, 0.68, 0.633]
cutting matrix
[[ 0.  1.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0.]
 [ 1.  1. -1.  1.  1.  0.  1. -1.]
 [-1.  1.  0.  1. -1.  0.  1.  0.]
 [ 0.  0. -1. -1. -1.  0.  1.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  0.]
 [ 0.  1. -1.  1.  1. -1.  1. -1.]
 [ 0. -1.  1.  0.  0.  0.  1. -1.]
 [ 0.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  0.  1. -1.  1.  1.  1.  0.]]
cutting matrix's confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 2  2 17  0  0  0  0  0  1  0]
 [ 1  3  1  8  0  0  0  2  0  1]
 [ 0  1  0  0 12  0  0  1  0  3]
 [ 2  0  2  0  0 14  0  0  0  2]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 4  4  0  1  0  0  0 11  0  0]
 [ 3  0  4  0  0  1  1  0 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:00:06
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  1.]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1. -1.]
 [ 1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 3  2  2  2  0]
 [ 0  2  2  1  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0. -1. -1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  0.  0.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  2  2  0]
 [ 2  0  2  1  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.4 0.6 0.4 0.4]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  0. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  0.  0.  0.]
 [ 1. -1. -1. -1.]
 [ 1. -1. -1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  2  2  0]
 [ 2  0  2  1  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.6 0.8 0.4 0.6]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.75]
 [0.   0.   0.5  0.75]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0. -1. -1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1. -1.  1.]
 [-1. -1.  1.  1.  1.]
 [ 1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  2  2  0]
 [ 3  0  1  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.6 1.  0.6 0.8]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.8 0.6 1. ]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.723, 0.702, 0.638, 0.894]
cutting matrix
[[-1.  1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1. -1.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  1  3  0]
 [ 2  0  1  2  0]
 [ 1  0  1  1  0]]


SVM classifier
Time: 2019-01-05 23:00:07
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1.  1.  1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  0  4]
 [ 4  0  0  0  1]
 [ 3  0  0  0  0]]
row HD
[[0.  0.  0.2 0.4 0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  0  4]
 [ 4  0  0  0  1]
 [ 3  0  0  0  0]]
row HD
[[0.  0.  0.2 0.4 0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  1. -1.]
 [ 0.  1.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.059, 0.911, 0.696]
cutting matrix
[[ 1.]
 [ 1.]
 [ 1.]
 [-1.]
 [ 1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:00:08
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [12  0  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0 11  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1.  0.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [11  0  0  0  0  1]
 [ 0  0 11  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[ 0.  0.  1. -1.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [-1.  0. -1.]
 [-1.  1. -1.]
 [ 1. -1.  0.]
 [ 1.  1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  0  1]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.5  0.5  0.17]
 [0.   0.   0.17 0.5  0.33 0.33]
 [0.   0.   0.   0.5  0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.985, 0.921, 0.983]
cutting matrix
[[-1.  0.  1.]
 [-1.  0. -1.]
 [-1.  1. -1.]
 [ 1. -1.  0.]
 [ 1.  1. -1.]
 [-1. -1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  0  1]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]


SVM classifier
Time: 2019-01-05 23:00:08
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0. -1. -1.  1.  0.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0 11  0  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 0  0  0  8  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[-1.  1.  0. -1.  1.  1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 1 dimension of F1 is zero!
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 19 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [-1.  0.]
 [-1.  0.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0 11  0  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  0  2  0  6]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None}
select_i_column
[ 0.  0. -1.  1. -1.  0.]
select_j_column
[ 0.  0.  0.  1. -1.  0.]
most_cplx_inx
2
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [-1.  0.  0.]
 [-1.  0. -1.]
 [ 1.  0. -1.]
 [ 0.  1.  1.]
 [ 1. -1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.17 0.33 0.5  0.33]
 [0.   0.   0.   0.17 0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.949, 0.895, 0.967]
cutting matrix
[[ 0.  0.  0.]
 [-1.  0.  0.]
 [-1.  0. -1.]
 [ 1.  0. -1.]
 [ 0.  1.  1.]
 [ 1. -1.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]


SVM classifier
Time: 2019-01-05 23:00:09
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [24  2  0  0  0  0  0  0  0  0]
 [12  5  0  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3 14  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [24  2  0  0  0  0  0  0  0  0]
 [12  5  0  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3 14  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.  0.1 0.  0.  0.1 0.  0.1]
 [0.  0.  0.1 0.1 0.2 0.1 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.  0.1 0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.1 0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0  0  0  0  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [24  0  0  2  0  0  0  0  0  0]
 [ 2  5  0 10  0  0  0  0  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [18  0  0  1  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 4 12  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.1 0.1 0.  0.1 0.2 0.  0.2]
 [0.  0.  0.2 0.1 0.3 0.2 0.1 0.  0.2 0. ]
 [0.  0.  0.  0.1 0.1 0.  0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.2 0.1 0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1.  1.  1.  0.]
 [-1.  1. -1.  0.]
 [-1.  1.  1.  1.]
 [-1. -1. -1.  0.]
 [-1.  1. -1.  0.]
 [-1.  1.  1.  0.]
 [ 1.  1.  1.  0.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[13  1  4  0  0  0  0  0  0  0]
 [ 0 17  1  0  0  0  4  0  0  0]
 [ 1  2 21  0  0  0  2  0  0  0]
 [ 0  5  2  0  0  0 10  0  0  0]
 [ 0  0 21  0  0  0  2  0  0  0]
 [ 0  0 18  0  0  0  1  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 14  2  0  0  0  1  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]
 [ 0  0 10  0  0  0  3  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.1 0.2 0.3 0.1 0.3]
 [0.  0.  0.2 0.2 0.3 0.2 0.1 0.  0.3 0.1]
 [0.  0.  0.  0.2 0.1 0.  0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  0.5  2.25]
 [0.   0.   1.   2.  ]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [ 1.  1.  1.  0.  1.]
 [-1.  1. -1.  0.  1.]
 [-1.  1.  1.  1. -1.]
 [-1. -1. -1.  0. -1.]
 [-1.  1. -1.  0. -1.]
 [-1.  1.  1.  0. -1.]
 [ 1.  1.  1.  0.  1.]
 [-1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  0  0  1  4  0  0  0]
 [ 1  2 20  0  0  1  2  0  0  0]
 [ 0  5  1  0  0  1 10  0  0  0]
 [ 0  0  0  0  0 21  2  0  0  0]
 [ 0  0  2  0  0 16  1  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0 14  0  0  0  2  1  0  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  0  0 10  3  0  0  0]]
row HD
[[0.  0.4 0.2 0.1 0.2 0.1 0.2 0.4 0.2 0.4]
 [0.  0.  0.2 0.3 0.4 0.3 0.2 0.  0.3 0.1]
 [0.  0.  0.  0.3 0.2 0.1 0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 0.4 1.8 0.4]
 [0.  0.  0.8 1.6 0.8]
 [0.  0.  0.  1.6 0.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  0.  1.  0.]
 [-1.  1.  1.  1. -1.  0.]
 [-1. -1. -1.  0. -1.  1.]
 [-1.  1. -1.  0. -1.  1.]
 [-1.  1.  1.  0. -1.  0.]
 [ 1.  1.  1.  0.  1. -1.]
 [-1.  1. -1. -1.  1.  0.]
 [ 1.  1.  1. -1.  1. -1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  0  0  1  4  0  0  0]
 [ 1  2 20  0  0  1  2  0  0  0]
 [ 0  5  1  0  0  1 10  0  0  0]
 [ 0  0  0  0  0 21  2  0  0  0]
 [ 0  0  2  0  0 16  1  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0 14  0  0  0  2  1  0  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  0  0 10  3  0  0  0]]
row HD
[[0.  0.5 0.3 0.2 0.2 0.1 0.3 0.5 0.3 0.5]
 [0.  0.  0.3 0.4 0.5 0.4 0.3 0.  0.4 0.1]
 [0.  0.  0.  0.3 0.3 0.2 0.2 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.1 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.3 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.33 1.5  0.33 1.67]
 [0.   0.   0.67 1.33 0.67 1.33]
 [0.   0.   0.   1.33 0.67 1.67]
 [0.   0.   0.   0.   1.67 1.  ]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  0.  1. -1.  1.]
 [-1.  1. -1.  0.  1.  0. -1.]
 [-1.  1.  1.  1. -1.  0. -1.]
 [-1. -1. -1.  0. -1.  1. -1.]
 [-1.  1. -1.  0. -1.  1.  1.]
 [-1.  1.  1.  0. -1.  0. -1.]
 [ 1.  1.  1.  0.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  0. -1.]
 [ 1.  1.  1. -1.  1. -1.  1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  0  0  1  4  0  0  0]
 [ 1  2 20  0  0  1  2  0  0  0]
 [ 0  5  1  0  0  1 10  0  0  0]
 [ 0  0  0  0  0 21  2  0  0  0]
 [ 0  0  2  0  0 16  1  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0 14  0  0  0  2  1  0  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  0  0 10  3  0  0  0]]
row HD
[[0.  0.6 0.3 0.2 0.2 0.2 0.3 0.6 0.3 0.6]
 [0.  0.  0.4 0.5 0.6 0.4 0.4 0.  0.5 0.1]
 [0.  0.  0.  0.3 0.3 0.3 0.2 0.4 0.1 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.1 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.2 0.3 0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.29 1.29 0.29 1.43 0.14]
 [0.   0.   0.57 1.14 0.57 1.14 0.71]
 [0.   0.   0.   1.14 0.57 1.43 0.43]
 [0.   0.   0.   0.   1.43 0.86 1.29]
 [0.   0.   0.   0.   0.   1.43 0.43]
 [0.   0.   0.   0.   0.   0.   1.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1. -1.  0.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.]
 [-1.  1. -1.  0.  1.  0. -1.  0.]
 [-1.  1.  1.  1. -1.  0. -1.  0.]
 [-1. -1. -1.  0. -1.  1. -1.  1.]
 [-1.  1. -1.  0. -1.  1.  1. -1.]
 [-1.  1.  1.  0. -1.  0. -1. -1.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.]
 [-1.  1. -1. -1.  1.  0. -1. -1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  4  0  1  0  0  0  0]
 [ 1  2 20  2  0  1  0  0  0  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  2  1  0 16  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0 14  0  1  0  2  0  0  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.6 0.3 0.2 0.3 0.3 0.4 0.6 0.4 0.7]
 [0.  0.  0.4 0.5 0.7 0.5 0.5 0.  0.6 0.2]
 [0.  0.  0.  0.3 0.4 0.4 0.3 0.4 0.2 0.6]
 [0.  0.  0.  0.  0.5 0.5 0.2 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.3 0.4 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.25 1.12 0.25 1.25 0.12 0.88]
 [0.   0.   0.5  1.   0.5  1.   0.62 1.25]
 [0.   0.   0.   1.   0.5  1.25 0.38 1.  ]
 [0.   0.   0.   0.   1.25 0.75 1.12 0.62]
 [0.   0.   0.   0.   0.   1.25 0.38 1.  ]
 [0.   0.   0.   0.   0.   0.   1.12 0.75]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.  1.]
 [-1.  1. -1.  0.  1.  0. -1.  0.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.]
 [-1. -1. -1.  0. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  0. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  0. -1.  0. -1. -1.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.  1.]
 [-1.  1. -1. -1.  1.  0. -1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.  1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  4  0  1  0  0  0  0]
 [ 1  2 20  2  0  1  0  0  0  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  2  1  0 16  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0 14  0  1  0  2  0  0  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.6 0.3 0.2 0.3 0.4 0.4 0.6 0.4 0.7]
 [0.  0.  0.4 0.5 0.7 0.6 0.5 0.  0.6 0.2]
 [0.  0.  0.  0.3 0.4 0.5 0.3 0.4 0.2 0.6]
 [0.  0.  0.  0.  0.5 0.6 0.2 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.4 0.4 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.22 1.   0.22 1.11 0.11 0.78 0.67]
 [0.   0.   0.44 0.89 0.44 0.89 0.56 1.11 0.22]
 [0.   0.   0.   0.89 0.44 1.11 0.33 0.89 0.44]
 [0.   0.   0.   0.   1.11 0.67 1.   0.56 0.89]
 [0.   0.   0.   0.   0.   1.11 0.33 0.89 0.44]
 [0.   0.   0.   0.   0.   0.   1.   0.67 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1. -1.  0.  1.  0.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.  1.  1.]
 [-1.  1. -1.  0.  1.  0. -1.  0.  1.  0.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  0.]
 [-1. -1. -1.  0. -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1.  0. -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  0. -1.  0. -1. -1.  1.  0.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.  1.  0.]
 [-1.  1. -1. -1.  1.  0. -1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]]
confusion matrix
[[16  1  1  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  2 20  2  0  0  0  0  0  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  2  1  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.7 0.3 0.2 0.4 0.5 0.4 0.6 0.5 0.8]
 [0.  0.  0.5 0.6 0.8 0.6 0.6 0.1 0.7 0.3]
 [0.  0.  0.  0.3 0.5 0.6 0.3 0.4 0.3 0.7]
 [0.  0.  0.  0.  0.6 0.7 0.2 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.5 0.5 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.2 0.9 0.2 1.  0.1 0.7 0.6 0.7]
 [0.  0.  0.4 0.8 0.4 0.8 0.5 1.  0.2 0.7]
 [0.  0.  0.  0.8 0.4 1.  0.3 0.8 0.4 0.7]
 [0.  0.  0.  0.  1.  0.6 0.9 0.5 0.8 0.5]
 [0.  0.  0.  0.  0.  1.  0.3 0.8 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.9 0.6 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  11 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1. -1.  0.  1.  0.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.  1.  1. -1.]
 [-1.  1. -1.  0.  1.  0. -1.  0.  1.  0.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  0.  1.  0.  1.]
 [-1. -1. -1.  0. -1.  1. -1.  1.  1. -1.  0.]
 [-1.  1. -1.  0. -1.  1.  1. -1. -1.  1.  0.]
 [-1.  1.  1.  0. -1.  0. -1. -1.  1.  0.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.  0.  1.  0.  0.]
 [-1.  1. -1. -1.  1.  0. -1. -1.  1. -1.  0.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.  1. -1.  0.]]
confusion matrix
[[16  0  1  0  0  0  0  1  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  0 20  2  0  0  0  2  0  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  2  1  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.8 0.3 0.2 0.5 0.6 0.4 0.7 0.6 0.9]
 [0.  0.  0.6 0.7 0.9 0.7 0.7 0.2 0.8 0.4]
 [0.  0.  0.  0.3 0.6 0.7 0.3 0.5 0.4 0.8]
 [0.  0.  0.  0.  0.7 0.8 0.2 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.5 0.6 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.18 0.82 0.18 0.91 0.09 0.64 0.55 0.64 0.91]
 [0.   0.   0.36 0.73 0.36 0.73 0.45 0.91 0.18 0.64 0.55]
 [0.   0.   0.   0.73 0.36 0.91 0.27 0.73 0.36 0.64 0.73]
 [0.   0.   0.   0.   0.91 0.55 0.82 0.45 0.73 0.45 0.45]
 [0.   0.   0.   0.   0.   0.91 0.27 0.73 0.36 0.73 0.82]
 [0.   0.   0.   0.   0.   0.   0.82 0.55 0.73 0.45 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.73 0.64 0.55 0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.36 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.846, 0.878, 0.782, 0.21, 0.702, 0.821, 0.739, 0.648, 0.899, 0.429, 0.676]
cutting matrix
[[-1.  1. -1.  1.  0.  1.]
 [ 1.  1.  1. -1.  0.  1.]
 [-1.  1. -1.  0.  0.  1.]
 [-1.  1.  1.  0.  0.  1.]
 [-1. -1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  0. -1.  1.]
 [ 1.  1.  1. -1.  0.  1.]
 [-1.  1. -1.  0. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.]]
cutting matrix's confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 2  2 17  2  0  0  0  0  3  0]
 [ 1  5  1 10  0  0  0  0  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [10  0  0  3  0  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:00:18
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  0.  0.  0.  0.  0.  0.]
confusion matrix
[[14  0  0  0  4  0  0  0  0  0]
 [ 0  0  4  0 18  0  0  0  0  0]
 [ 3  0 19  0  4  0  0  0  0  0]
 [ 0  0 11  0  6  0  0  0  0  0]
 [ 0  0  2  0 21  0  0  0  0  0]
 [ 0  0  1  0 18  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 2  0  1  0 14  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]
 [ 0  0  3  0 10  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  0.]
 [ 0. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0.  1.]]
confusion matrix
[[14  0  0  0  1  3  0  0  0  0]
 [ 0  0  4  0  0  1  0 17  0  0]
 [ 3  0 19  0  3  1  0  0  0  0]
 [ 0  0 11  0  0  1  0  5  0  0]
 [ 0  0  2  0  0 21  0  0  0  0]
 [ 0  0  1  0  2 16  0  0  0  0]
 [ 2  0  0  0 16  1  0  0  0  0]
 [ 2  0  1  0  0  2  0 12  0  0]
 [ 2  0  0  0  9  3  0  0  0  0]
 [ 0  0  3  0  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.2 0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.2 0.2 0.1 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
select_j_column
[ 1. -1.  1.  0. -1.  1. -1.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  0.]
 [ 1.  0.  0.]
 [ 0. -1.  0.]
 [ 0.  1.  0.]
 [ 0. -1.  0.]
 [ 0.  0.  0.]
 [ 0.  0.  0.]
 [ 0.  1. -1.]]
confusion matrix
[[13  0  0  0  1  3  0  0  0  1]
 [ 0  0  4  0  0  1  0 17  0  0]
 [ 1  0 19  0  3  1  0  0  0  2]
 [ 0  0 11  0  0  1  0  5  0  0]
 [ 0  0  2  0  0 21  0  0  0  0]
 [ 0  0  1  0  2 16  0  0  0  0]
 [ 2  0  0  0 16  1  0  0  0  0]
 [ 0  0  1  0  0  2  0 12  0  2]
 [ 2  0  0  0  9  3  0  0  0  0]
 [ 0  0  3  0  0 10  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.3 0.3 0.2 0.3 0.3 0.3 0.2]
 [0.  0.  0.3 0.3 0.2 0.3 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  0.  0.]
 [ 1.  0.  0. -1.]
 [ 0. -1.  0.  1.]
 [ 0.  1.  0.  1.]
 [ 0. -1.  0. -1.]
 [ 0.  0.  0. -1.]
 [ 0.  0.  0. -1.]
 [ 0.  1. -1. -1.]]
confusion matrix
[[13  0  0  0  0  3  1  0  0  1]
 [ 0  0  0  0  0  1  0 17  0  4]
 [ 1  0 17  0  0  1  3  0  0  4]
 [ 0  0  1  0  0  1  0  5  0 10]
 [ 0  0  0  0  0 21  0  0  0  2]
 [ 0  0  0  0  0 16  2  0  0  1]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  0  0  0  0  2  0 12  0  3]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  0  0 10  0  0  0  3]]
row HD
[[0.  0.3 0.3 0.3 0.4 0.3 0.3 0.3 0.3 0.2]
 [0.  0.  0.4 0.4 0.2 0.3 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.   2.25]
 [0.   0.   1.25 2.  ]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  0.  0.  0.  0.  0.  0.  0. -1.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.]
 [ 1.  1.  0.  0. -1.]
 [ 1.  0.  0. -1.  0.]
 [ 0. -1.  0.  1.  0.]
 [ 0.  1.  0.  1. -1.]
 [ 0. -1.  0. -1.  1.]
 [ 0.  0.  0. -1.  0.]
 [ 0.  0.  0. -1. -1.]
 [ 0.  1. -1. -1. -1.]]
confusion matrix
[[14  0  0  0  0  3  0  0  1  0]
 [ 0  0  0  0  0  1  0 17  0  4]
 [ 3  0 17  0  0  1  0  0  3  2]
 [ 0  0  1  0  0  1  0  5  0 10]
 [ 0  0  0  0  0 21  0  0  0  2]
 [ 0  0  0  0  0 16  0  0  2  1]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  0  0  0  2  0 12  0  1]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  0  0 10  0  0  0  3]]
row HD
[[0.  0.3 0.4 0.4 0.5 0.4 0.3 0.4 0.4 0.3]
 [0.  0.  0.5 0.5 0.3 0.4 0.3 0.5 0.5 0.4]
 [0.  0.  0.  0.3 0.4 0.2 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 0.8 1.8 1.6]
 [0.  0.  1.  1.6 1.4]
 [0.  0.  0.  1.6 1. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  0.  0.  0.  0.  0.  0.  0. -1.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  0.]
 [ 1.  1.  0.  0. -1.  1.]
 [ 1.  0.  0. -1.  0.  0.]
 [ 0. -1.  0.  1.  0.  0.]
 [ 0.  1.  0.  1. -1.  1.]
 [ 0. -1.  0. -1.  1. -1.]
 [ 0.  0.  0. -1.  0.  0.]
 [ 0.  0.  0. -1. -1.  1.]
 [ 0.  1. -1. -1. -1. -1.]]
confusion matrix
[[13  0  0  0  0  3  0  1  1  0]
 [ 0  0  0  0  0  1  0 17  0  4]
 [ 1  0 17  0  0  1  0  2  3  2]
 [ 0  0  1  0  0  1  0  5  0 10]
 [ 0  0  0  0  0 21  0  0  0  2]
 [ 0  0  0  0  0 16  0  0  2  1]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  0  0  2  0 14  0  1]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  0  0 10  0  0  0  3]]
row HD
[[0.  0.4 0.4 0.5 0.6 0.4 0.4 0.5 0.4 0.4]
 [0.  0.  0.6 0.5 0.3 0.5 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.4 0.5 0.2 0.5 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.5 0.4 0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67 1.5  1.33 1.17]
 [0.   0.   0.83 1.33 1.17 0.67]
 [0.   0.   0.   1.33 0.83 0.83]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
4
new_column
None


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  0.]
 [ 1.  1.  0.  0. -1.  1.]
 [ 1.  0.  0. -1.  0.  0.]
 [ 0. -1.  0.  1.  0.  0.]
 [ 0.  1.  0.  1. -1.  1.]
 [ 0. -1.  0. -1.  1. -1.]
 [ 0.  0.  0. -1.  0.  0.]
 [ 0.  0.  0. -1. -1.  1.]
 [ 0.  1. -1. -1. -1. -1.]]
confusion matrix
[[13  0  0  0  0  3  0  1  1  0]
 [ 0  0  0  0  0  1  0 17  0  4]
 [ 1  0 17  0  0  1  0  2  3  2]
 [ 0  0  1  0  0  1  0  5  0 10]
 [ 0  0  0  0  0 21  0  0  0  2]
 [ 0  0  0  0  0 16  0  0  2  1]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  0  0  2  0 14  0  1]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  0  0 10  0  0  0  3]]
row HD
[[0.  0.4 0.4 0.5 0.6 0.4 0.4 0.5 0.4 0.4]
 [0.  0.  0.6 0.5 0.3 0.5 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.4 0.5 0.2 0.5 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.5 0.4 0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67 1.5  1.33 1.17]
 [0.   0.   0.83 1.33 1.17 0.67]
 [0.   0.   0.   1.33 0.83 0.83]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.53, 0.614, 0.377, 0.71, 0.435, 0.505]
cutting matrix
[[-1.  1. -1.  1.]
 [-1. -1.  1.  0.]
 [ 1.  0.  0.  1.]
 [ 1.  0. -1.  0.]
 [ 0.  0.  1.  0.]
 [ 0.  0.  1.  1.]
 [ 0.  0. -1. -1.]
 [ 0.  0. -1.  0.]
 [ 0.  0. -1.  1.]
 [ 0. -1. -1. -1.]]
cutting matrix's confusion matrix
[[13  0  0  0  0  3  0  1  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  0  2  0 14  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:00:23
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.2]
 [0.  0.  0.2 0.4 0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [ 1.  1.  0.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  1  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0.  0.]
 [ 1.  1.  0.  1.]
 [-1.  1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1. -1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   0.75]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0.  0. -1.]
 [ 1.  1.  0.  1.  1.]
 [-1.  1. -1. -1.  0.]
 [-1. -1.  1.  1.  0.]
 [ 1.  1. -1. -1.  1.]]
confusion matrix
[[32  2  0  0  0]
 [ 6  1  2  0  0]
 [ 4  3  0  0  0]
 [ 3  2  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.8 0.8]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 0.6 0.4]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0.  0. -1. -1.]
 [ 1.  1.  0.  1.  1.  1.]
 [-1.  1. -1. -1.  0. -1.]
 [-1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1. -1.]]
confusion matrix
[[33  1  0  0  0]
 [ 6  2  1  0  0]
 [ 3  3  0  1  0]
 [ 4  1  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.6 1.  0.8]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67 0.5  0.33 0.33]
 [0.   0.   0.83 0.67 0.5  0.67]
 [0.   0.   0.   0.17 0.83 0.33]
 [0.   0.   0.   0.   0.67 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0.  0. -1. -1. -1.]
 [ 1.  1.  0.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.  1.]
 [-1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1. -1.  1. -1.  1.]]
confusion matrix
[[33  1  0  0  0]
 [ 7  2  0  0  0]
 [ 3  3  0  1  0]
 [ 4  1  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 1.  1. ]
 [0.  0.  1.2 0.8 0.8]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.57 0.43 0.29 0.29 0.29]
 [0.   0.   0.71 0.57 0.43 0.57 0.29]
 [0.   0.   0.   0.14 0.71 0.29 0.71]
 [0.   0.   0.   0.   0.57 0.14 0.71]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  0.  0. -1. -1. -1. -1.]
 [ 1.  1.  0.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1.  1.]
 [-1. -1.  1.  1.  0.  1. -1.  1.]
 [ 1.  1. -1. -1.  1. -1.  1.  1.]]
confusion matrix
[[33  1  0  0  0]
 [ 6  0  1  2  0]
 [ 3  0  0  4  0]
 [ 4  0  0  1  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 1.  1.2 1.2]
 [0.  0.  1.4 1.  1. ]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.38 0.25 0.25 0.25 0.38]
 [0.   0.   0.62 0.5  0.38 0.5  0.25 0.38]
 [0.   0.   0.   0.12 0.62 0.25 0.62 0.5 ]
 [0.   0.   0.   0.   0.5  0.12 0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[-1.  1.  0.  0. -1. -1. -1. -1.  0.]
 [ 1.  1.  0.  1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1.  1.  1.]
 [-1. -1.  1.  1.  0.  1. -1.  1. -1.]
 [ 1.  1. -1. -1.  1. -1.  1.  1.  0.]]
confusion matrix
[[33  1  0  0  0]
 [ 7  0  0  2  0]
 [ 3  0  0  4  0]
 [ 4  0  0  1  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.  1.2 1.4 1.2]
 [0.  0.  1.6 1.  1.2]
 [0.  0.  0.  1.2 0.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.44 0.33 0.22 0.22 0.22 0.33 0.44]
 [0.   0.   0.56 0.44 0.33 0.44 0.22 0.33 0.33]
 [0.   0.   0.   0.11 0.56 0.22 0.56 0.44 0.44]
 [0.   0.   0.   0.   0.44 0.11 0.56 0.44 0.44]
 [0.   0.   0.   0.   0.   0.33 0.33 0.33 0.56]
 [0.   0.   0.   0.   0.   0.   0.44 0.33 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.821, 0.911, 0.154, 0.227, 0.795, 0.714, 0.857, 0.839, 0.238]
cutting matrix
[[-1.  1.  0. -1. -1.]
 [ 1.  1.  0. -1. -1.]
 [-1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  1  1  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]


SVM classifier
Time: 2019-01-05 23:00:24
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  0.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  1.  0.]
select_j_column
[ 0. -1.  1.  0.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  0. -1.]
 [ 1.  1.  1.]
 [ 0.  1.  1.]
 [ 0. -1.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  2  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [-1.  0. -1.  1.]
 [ 1.  1.  1.  0.]
 [ 0.  1.  1.  0.]
 [ 0. -1.  0. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  2  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.6 0.4]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0.  0.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1. -1.]
 [-1.  0. -1.  1.  1.]
 [ 1.  1.  1.  0.  1.]
 [ 0.  1.  1.  0.  0.]
 [ 0. -1.  0. -1.  0.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 0  0  0  6  1]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 0.8 0.8 0.6]
 [0.  0.  0.8 1.  1. ]
 [0.  0.  0.  0.4 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.6 0.2]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  1.  0.  0.]
select_j_column
[-1.  1.  0.  0. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1. -1. -1.]
 [-1.  0. -1.  1.  1.  0.]
 [ 1.  1.  1.  0.  1.  1.]
 [ 0.  1.  1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0. -1.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 0  0  0  6  1]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  1.  1.  0.6]
 [0.  0.  1.  1.  1.2]
 [0.  0.  0.  0.6 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.33 0.5  0.17 0.33]
 [0.   0.   0.5  0.5  0.5  0.17]
 [0.   0.   0.   0.83 0.5  0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0. -1.]
select_j_column
[-1.  1.  1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1. -1. -1.  1.]
 [-1.  0. -1.  1.  1.  0. -1.]
 [ 1.  1.  1.  0.  1.  1.  1.]
 [ 0.  1.  1.  0.  0.  0.  0.]
 [ 0. -1.  0. -1.  0. -1. -1.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 1  0  0  6  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.  1.2 0.8]
 [0.  0.  1.2 1.2 1.2]
 [0.  0.  0.  0.8 1.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.29 0.43 0.14 0.29 0.29]
 [0.   0.   0.43 0.43 0.43 0.14 0.43]
 [0.   0.   0.   0.71 0.43 0.57 0.29]
 [0.   0.   0.   0.   0.29 0.29 0.43]
 [0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1. -1. -1.  1. -1.]
 [-1.  0. -1.  1.  1.  0. -1. -1.]
 [ 1.  1.  1.  0.  1.  1.  1. -1.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.]
 [ 0. -1.  0. -1.  0. -1. -1.  1.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 1  0  0  6  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.  1.2 1. ]
 [0.  0.  1.2 1.2 1.4]
 [0.  0.  0.  0.8 1.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.25 0.38 0.12 0.25 0.25 0.38]
 [0.   0.   0.38 0.38 0.38 0.12 0.38 0.5 ]
 [0.   0.   0.   0.62 0.38 0.5  0.25 0.5 ]
 [0.   0.   0.   0.   0.25 0.25 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.25 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.86, 0.66, 0.836, 0.773, 0.8, 0.714, 0.784, 0.982]
cutting matrix
[[-1.  1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [ 0.  1. -1.]
 [ 0.  0.  1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:00:26
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  0.]
 [-1.  0.]]
confusion matrix
[[21  0  0  1  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  0. -1.]
 [-1.  0. -1.]
 [ 1. -1.  1.]
 [-1.  1.  1.]
 [-1.  0.  1.]
 [-1.  0. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.33 0.17 0.  ]
 [0.   0.   0.5  0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   0.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  0. -1. -1.]
 [-1.  0. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1.  1.  1. -1.]
 [-1.  0.  1.  1.]
 [-1.  0. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.33 0.33 0.  ]
 [0.   0.   0.5  0.33 0.33 0.  ]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.5  0.5  0.5 ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0. -1. -1.  1.]
 [-1.  0. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [-1.  1.  1. -1. -1.]
 [-1.  0.  1.  1. -1.]
 [-1.  0. -1. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.5  0.5  0.5  0.17]
 [0.   0.   0.5  0.5  0.5  0.17]
 [0.   0.   0.   0.5  0.67 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.2 0.4 0.4 0.4]
 [0.  0.  1.  1.  1.2]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1. -1. -1. -1.  1. -1.]
select_j_column
[ 0.  0. -1.  1.  0.  0.]
most_cplx_inx
1
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  0. -1. -1.  1. -1.]
 [-1.  0. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  0.]
 [-1.  1.  1. -1. -1.  1.]
 [-1.  0.  1.  1. -1.  1.]
 [-1.  0. -1. -1. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.67 0.67 0.67 0.17]
 [0.   0.   0.67 0.67 0.67 0.17]
 [0.   0.   0.   0.67 0.83 0.83]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.33 0.33 0.33 0.5 ]
 [0.   0.   0.83 0.83 1.   0.83]
 [0.   0.   0.   0.33 0.67 0.17]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  0. -1. -1.  1. -1. -1.]
 [-1.  0. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  0.  1.]
 [-1.  1.  1. -1. -1.  1.  1.]
 [-1.  0.  1.  1. -1.  1.  1.]
 [-1.  0. -1. -1. -1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.83 0.83 0.83 0.33]
 [0.   0.   0.83 0.83 0.83 0.33]
 [0.   0.   0.   0.67 0.83 0.83]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.86 0.29 0.29 0.29 0.43 0.43]
 [0.   0.   0.71 0.71 0.86 0.71 0.71]
 [0.   0.   0.   0.29 0.57 0.14 0.14]
 [0.   0.   0.   0.   0.57 0.29 0.43]
 [0.   0.   0.   0.   0.   0.71 0.71]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  0. -1. -1.  1. -1. -1.  0.]
 [-1.  0. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  0.  1. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  0.  1.  1. -1.  1.  1.  0.]
 [-1.  0. -1. -1. -1. -1.  1.  0.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 0  8  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 1.   1.   0.83 0.33]
 [0.   0.   1.   1.   1.   0.5 ]
 [0.   0.   0.   0.67 1.   1.  ]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.25 0.25 0.25 0.38 0.38 0.62]
 [0.   0.   0.62 0.62 0.75 0.62 0.62 0.25]
 [0.   0.   0.   0.25 0.5  0.12 0.12 0.75]
 [0.   0.   0.   0.   0.5  0.25 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.62 0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.25 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.885, 0.955, 1.0, 0.925, 0.939, 0.925, 0.889]
cutting matrix
[[-1. -1. -1. -1. -1.  0.]
 [-1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  0.  1. -1.]
 [-1.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  0.]
 [-1. -1. -1. -1.  1.  0.]]
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 0  8  0  0  0  2]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:00:28
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  0.  0.  0.]
confusion matrix
[[21  0  0  1  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  5  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  1. -1.  0.  1.  0.]
select_j_column
[ 1.  0.  1. -1. -1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  0.]]
confusion matrix
[[21  0  0  0  1  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.33]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.98, 1.0]
cutting matrix
[[ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  0.]]
cutting matrix's confusion matrix
[[21  0  0  0  1  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:00:28
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
confusion matrix
[[11  0  0  0  0  0  9  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  3  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [15  0  0  0  0  0  0  0  0  0]
 [ 7  0  0  0  0  0 14  0  0  0]
 [12  0  0  0  0  0  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [ 1.  0.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  0.]]
confusion matrix
[[ 8  3  0  0  0  0  9  0  0  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [12  7  0  0  0  0  3  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [ 5  2  0  0  0  0 14  0  0  0]
 [ 0 12  0  0  0  0  2  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.  0.1 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 5.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1.  0.  1.]
 [ 1.  0. -1.]
 [ 1.  0.  1.]
 [ 1. -1. -1.]
 [ 1.  0.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]
 [-1.  0. -1.]]
confusion matrix
[[ 2  3  0  0  6  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [ 0  5  2  0 12  0  0  0  3  0]
 [ 0  6 13  0  0  0  0  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2 11  0  2  0  0  0  0  0]
 [ 5  1  1  0  0  0  0  0 14  0]
 [ 0 12  0  0  0  0  0  0  2  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.3 0.1 0.2 0.3]
 [0.  0.  0.1 0.  0.2 0.  0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.2 0.  0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.33 1.33]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [ 1.  0.  1.  1.]
 [ 1.  0. -1. -1.]
 [ 1.  0.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1.  0.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1.  1.  1.]
 [-1.  0. -1.  1.]]
confusion matrix
[[ 2  3  0  0  6  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [ 0  7  0  0 12  0  0  0  3  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0 13  0  0  2  0  0  0  0  0]
 [ 5  2  0  0  0  0  0  0 14  0]
 [ 0 12  0  0  0  0  0  0  2  0]]
row HD
[[0.  0.1 0.3 0.1 0.2 0.1 0.4 0.2 0.2 0.3]
 [0.  0.  0.2 0.  0.3 0.  0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.  0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.5  1.   1.25]
 [0.   0.   1.75 1.75]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1.  1.]
 [ 1.  0.  1.  1. -1.]
 [ 1.  0. -1. -1.  1.]
 [ 1.  0.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.]
 [-1.  0. -1.  1. -1.]]
confusion matrix
[[ 0  3  0  2  6  0  0  0  9  0]
 [ 0 16  0  0  5  0  0  0  0  0]
 [ 0  4  2  1 12  0  0  0  3  0]
 [ 0  5 13  1  0  0  0  0  0  0]
 [ 0  4  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  1  0  0  0  0  0  0 13  0]
 [ 0  2 11  0  2  0  0  0  0  0]
 [ 0  5  1  1  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.2 0.3 0.1 0.2 0.1 0.5 0.2 0.3 0.4]
 [0.  0.  0.3 0.1 0.4 0.1 0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.3 0.1 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.  0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.  0.8 1.  0.2]
 [0.  0.  1.4 1.4 2. ]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
most_cplx_inx
2
new_column
None


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1.  1.]
 [ 1.  0.  1.  1. -1.]
 [ 1.  0. -1. -1.  1.]
 [ 1.  0.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.]
 [-1.  0. -1.  1. -1.]]
confusion matrix
[[ 0  3  0  2  6  0  0  0  9  0]
 [ 0 16  0  0  5  0  0  0  0  0]
 [ 0  4  2  1 12  0  0  0  3  0]
 [ 0  5 13  1  0  0  0  0  0  0]
 [ 0  4  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  1  0  0  0  0  0  0 13  0]
 [ 0  2 11  0  2  0  0  0  0  0]
 [ 0  5  1  1  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.2 0.3 0.1 0.2 0.1 0.5 0.2 0.3 0.4]
 [0.  0.  0.3 0.1 0.4 0.1 0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.3 0.1 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.  0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.  0.8 1.  0.2]
 [0.  0.  1.4 1.4 2. ]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1.  1. -1.]
 [ 1.  0.  1.  1. -1.  1.]
 [ 1.  0. -1. -1.  1.  1.]
 [ 1.  0.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.]
 [ 1.  0.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1.  0. -1.  1. -1.  1.]]
confusion matrix
[[ 2  1  4  2  2  0  0  0  9  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.4 0.1 0.2 0.1 0.6 0.2 0.4 0.5]
 [0.  0.  0.3 0.2 0.5 0.2 0.4 0.5 0.2 0.2]
 [0.  0.  0.  0.3 0.2 0.3 0.3 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.  0.6 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 0.67 0.83 0.17 1.33]
 [0.   0.   1.17 1.17 1.67 0.83]
 [0.   0.   0.   0.17 0.83 1.  ]
 [0.   0.   0.   0.   1.   0.83]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1.  1. -1. -1.]
 [ 1.  0.  1.  1. -1.  1. -1.]
 [ 1.  0. -1. -1.  1.  1.  1.]
 [ 1.  0.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1.]
 [ 1.  0.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [-1.  0. -1.  1. -1.  1. -1.]]
confusion matrix
[[ 2  1  4  2  2  0  0  0  9  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.2 0.2 0.2 0.6 0.3 0.5 0.5]
 [0.  0.  0.4 0.3 0.5 0.3 0.4 0.6 0.3 0.2]
 [0.  0.  0.  0.3 0.3 0.3 0.4 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.  0.7 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.4 0.1 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.43 0.57 0.71 0.14 1.14 0.57]
 [0.   0.   1.   1.   1.43 0.71 1.  ]
 [0.   0.   0.   0.14 0.71 0.86 0.57]
 [0.   0.   0.   0.   0.86 0.71 0.71]
 [0.   0.   0.   0.   0.   1.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1.  1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1. -1.  1.]
 [ 1.  0. -1. -1.  1.  1.  1.  1.]
 [ 1.  0.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  0.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  0. -1.  1. -1.  1. -1. -1.]]
confusion matrix
[[ 2  1  4  2  2  0  0  0  9  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.2 0.3 0.2 0.7 0.4 0.5 0.6]
 [0.  0.  0.4 0.3 0.6 0.3 0.5 0.7 0.3 0.3]
 [0.  0.  0.  0.3 0.4 0.3 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.  0.8 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.5 0.4 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.5  0.62 0.12 1.   0.5  0.38]
 [0.   0.   0.88 0.88 1.25 0.62 0.88 0.88]
 [0.   0.   0.   0.12 0.62 0.75 0.5  0.12]
 [0.   0.   0.   0.   0.75 0.62 0.62 0.25]
 [0.   0.   0.   0.   0.   1.12 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1.  0.  1.  1. -1.  1. -1.  1. -1.]
 [ 1.  0. -1. -1.  1.  1.  1.  1.  1.]
 [ 1.  0.  1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  0.  1.  1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  0. -1.  1. -1.  1. -1. -1. -1.]]
confusion matrix
[[ 2  1  4  2  2  0  0  0  9  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.6 0.2 0.3 0.2 0.7 0.4 0.5 0.6]
 [0.  0.  0.5 0.3 0.6 0.3 0.5 0.7 0.3 0.3]
 [0.  0.  0.  0.4 0.5 0.4 0.6 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.5 0.  0.8 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.5 0.4 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.11 0.44 0.56 0.11 0.89 0.44 0.33 0.67]
 [0.   0.   0.78 0.78 1.11 0.56 0.78 0.78 0.78]
 [0.   0.   0.   0.11 0.56 0.67 0.44 0.11 0.67]
 [0.   0.   0.   0.   0.67 0.56 0.56 0.22 0.78]
 [0.   0.   0.   0.   0.   1.   0.33 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.67 0.56 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.83, 0.583, 0.601, 0.681, 0.739, 0.718, 0.681, 0.676, 0.91]
cutting matrix
[[ 1. -1.  1.  1. -1. -1.]
 [ 1.  0.  1. -1.  1. -1.]
 [ 1.  0. -1.  1.  1.  1.]
 [ 1.  0.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.]
 [ 1.  0.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1. -1.]
 [-1.  0.  1. -1.  1. -1.]]
cutting matrix's confusion matrix
[[ 2  1  4  2  2  0  0  0  9  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-05 23:00:37
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
confusion matrix
[[17  1  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  0.]
 [ 0.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [ 1. -1.]]
confusion matrix
[[11  1  6  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 5  4 13  0  0  0  0  0  0  0]
 [13  5  1  0  0  0  0  0  0  0]
 [ 2  2  5  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [11  2  2  0  0  0  0  0  0  0]
 [20  0  1  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.2 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.1 0.2 0.2 0.2 0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  0.]
 [ 1. -1.  0.]
 [ 0. -1.  0.]
 [ 0.  1.  0.]
 [-1.  0.  1.]
 [ 0.  0.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  0.]
 [-1.  0. -1.]
 [ 1. -1. -1.]]
confusion matrix
[[11  1  6  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 5  4 13  0  0  0  0  0  0  0]
 [13  5  1  0  0  0  0  0  0  0]
 [ 2  2  5  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [11  2  2  0  0  0  0  0  0  0]
 [20  0  1  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.3 0.1 0.  0.1 0.3 0.3]
 [0.  0.  0.1 0.2 0.3 0.2 0.2 0.2 0.3 0.1]
 [0.  0.  0.  0.1 0.3 0.1 0.1 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.  0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 1.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [ 1. -1.  0. -1.]
 [ 0. -1.  0. -1.]
 [ 0.  1.  0. -1.]
 [-1.  0.  1. -1.]
 [ 0.  0.  0.  0.]
 [ 0.  1.  0.  0.]
 [ 0.  0.  0. -1.]
 [-1.  0. -1. -1.]
 [ 1. -1. -1.  1.]]
confusion matrix
[[11  1  4  0  2  2  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 12  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.1 0.4 0.1 0.  0.2 0.4 0.4]
 [0.  0.  0.1 0.2 0.3 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.1 0.3 0.2 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   0.75 1.  ]
 [0.   0.   1.75 1.75]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 1. -1. -1.  1.  0.  0.  1.  0.  0. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.  0.  1.]
 [ 1. -1.  0. -1. -1.]
 [ 0. -1.  0. -1.  0.]
 [ 0.  1.  0. -1.  1.]
 [-1.  0.  1. -1.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1.]
 [-1.  0. -1. -1. -1.]
 [ 1. -1. -1.  1.  0.]]
confusion matrix
[[11  5  0  0  2  2  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  0  0  1  0  2  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0  0  0  0  0 11  0  0]
 [19  0  0  0  0  1  0  1  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.1 0.5 0.2 0.  0.3 0.5 0.5]
 [0.  0.  0.2 0.3 0.4 0.4 0.4 0.2 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.3 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.1 0.2 0.4 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 0.6 0.8 1.4]
 [0.  0.  1.4 1.4 0.8]
 [0.  0.  0.  1.2 1.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  0.  0.  1.  1.]
 [ 1. -1.  0. -1. -1. -1.]
 [ 0. -1.  0. -1.  0.  0.]
 [ 0.  1.  0. -1.  1.  1.]
 [-1.  0.  1. -1.  0.  1.]
 [ 0.  0.  0.  0.  0. -1.]
 [ 0.  1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1. -1.  1.]
 [-1.  0. -1. -1. -1.  1.]
 [ 1. -1. -1.  1.  0.  0.]]
confusion matrix
[[11  1  0  0  2  2  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 3  4  0  0  0  1  0 14  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0  0  0  0  0 13  0  0]
 [19  0  0  0  0  1  0  1  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.1 0.5 0.3 0.  0.3 0.5 0.6]
 [0.  0.  0.3 0.4 0.5 0.4 0.5 0.3 0.4 0.4]
 [0.  0.  0.  0.3 0.4 0.3 0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.1 0.2 0.4 0.6]
 [0.  0.  0.  0.  0.  0.4 0.5 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.5  0.67 1.17 1.5 ]
 [0.   0.   1.17 1.17 0.67 1.  ]
 [0.   0.   0.   1.   1.17 1.33]
 [0.   0.   0.   0.   1.   1.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  0.  0.  1.  1. -1.]
 [ 1. -1.  0. -1. -1. -1. -1.]
 [ 0. -1.  0. -1.  0.  0. -1.]
 [ 0.  1.  0. -1.  1.  1.  0.]
 [-1.  0.  1. -1.  0.  1.  0.]
 [ 0.  0.  0.  0.  0. -1. -1.]
 [ 0.  1.  0.  0.  1.  1. -1.]
 [ 0.  0.  0. -1. -1.  1. -1.]
 [-1.  0. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  0.  0.  1.]]
confusion matrix
[[11  1  0  0  2  2  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 3  4  0  0  0  1  0 14  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0  0  0  0  0 13  0  0]
 [19  0  0  0  0  1  0  1  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.2 0.6 0.3 0.  0.3 0.5 0.7]
 [0.  0.  0.3 0.5 0.6 0.4 0.5 0.3 0.4 0.5]
 [0.  0.  0.  0.4 0.5 0.3 0.4 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.5 0.2 0.3 0.5 0.7]
 [0.  0.  0.  0.  0.  0.5 0.6 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 0.43 0.57 1.   1.29 1.  ]
 [0.   0.   1.   1.   0.57 0.86 1.  ]
 [0.   0.   0.   0.86 1.   1.14 1.14]
 [0.   0.   0.   0.   0.86 1.29 0.71]
 [0.   0.   0.   0.   0.   0.57 0.86]
 [0.   0.   0.   0.   0.   0.   1.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.39, 0.755, 0.279, 0.638, 0.545, 0.816, 0.622]
cutting matrix
[[ 0.  0.  0.  1. -1.]
 [ 1.  0. -1. -1. -1.]
 [ 0.  0. -1.  0. -1.]
 [ 0.  0. -1.  1.  0.]
 [-1.  1. -1.  1.  0.]
 [ 0.  0.  0. -1. -1.]
 [ 0.  0.  0.  1. -1.]
 [ 0.  0. -1.  1. -1.]
 [-1. -1. -1.  1. -1.]
 [ 1. -1.  1.  0.  1.]]
cutting matrix's confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:00:42
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.]
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0. ]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
None


============== iter  3 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0. ]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]]
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 0.6 0.6 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.768, 0.423]
cutting matrix
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  2  0  0]
 [ 0  2  1  0  0]]


SVM classifier
Time: 2019-01-05 23:00:42
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1. -1.  1.]
confusion matrix
[[26  4  0  0  0]
 [ 5  2  2  0  0]
 [ 3  1  3  0  0]
 [ 4  1  2  0  0]
 [ 0  2  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[26  0  0  0  4]
 [ 5  0  2  0  2]
 [ 3  0  3  0  1]
 [ 4  0  2  0  1]
 [ 0  0  1  0  2]]
row HD
[[0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  0.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 7  0  2  0  0]
 [ 4  0  3  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1. -1. -1.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [ 1. -1. -1.  0.]
 [-1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 7  0  2  0  0]
 [ 4  0  3  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.25 1.  ]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.  0.  1.]
 [ 1. -1. -1.  0. -1.]
 [-1.  1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  0.]]
confusion matrix
[[27  1  2  0  0]
 [ 3  2  4  0  0]
 [ 2  1  4  0  0]
 [ 0  1  6  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.8 0.8 0.8 0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.2 0.8 0.6]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.346, 0.839, 0.423, 0.176, 0.849]
cutting matrix
[[ 0.  1.  0.  0.  1.]
 [ 1. -1. -1.  0. -1.]
 [-1.  1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  0.]]
cutting matrix's confusion matrix
[[27  1  2  0  0]
 [ 3  2  4  0  0]
 [ 2  1  4  0  0]
 [ 0  1  6  0  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 23:00:43
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1. -1.  1.]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [15  0  0  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  3  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.17]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  1  9  0]
 [ 1  0  3  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.5  0.17]
 [0.   0.   0.33 0.17 0.33 0.33]
 [0.   0.   0.   0.17 0.33 0.  ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.97, 0.985]
cutting matrix
[[ 1. -1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  1  9  0]
 [ 1  0  3  0  0  0]]


SVM classifier
Time: 2019-01-05 23:00:44
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1. -1.  0.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  0.]
 [-1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [ 0. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.17 0.   0.17]
 [0.   0.   0.17 0.33 0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  0.  1. -1. -1. -1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  0.]
 [-1.  0.  0.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [ 0. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.33]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.5  0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 2.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1.  1.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[-1. -1.  0.]
 [-1.  0.  0.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [ 0. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  0  1  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.33]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.5  0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 2.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1.  1.]
select_j_column
[ 1. -1.  0.  0.  0.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  0.  1.]
 [-1.  0.  0. -1.]
 [-1.  1.  1.  0.]
 [ 1. -1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 0. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.33 0.5  0.5  0.17 0.33]
 [0.   0.   0.5  0.5  0.5  0.67]
 [0.   0.   0.   0.67 0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.5  1.25]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  0.  1. -1. -1. -1.]
select_j_column
[ 0. -1.  1.  1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  0.  1.  0.]
 [-1.  0.  0. -1.  0.]
 [-1.  1.  1.  0.  1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1.]
 [ 0. -1.  1.  1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.33 0.67 0.67 0.33 0.5 ]
 [0.   0.   0.67 0.67 0.67 0.83]
 [0.   0.   0.   0.83 0.5  0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 1.2 1.  1. ]
 [0.  0.  0.6 1.  0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 1.  0. -1. -1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.]
 [-1.  0.  0. -1.  0.  0.]
 [-1.  1.  1.  0.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1. -1.  0.]
 [ 0. -1.  1.  1. -1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  1  1]]
row HD
[[0.   0.33 0.83 0.83 0.33 0.67]
 [0.   0.   0.83 0.83 0.67 1.  ]
 [0.   0.   0.   0.83 0.67 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.   0.83 0.83 0.83]
 [0.   0.   0.5  0.83 0.17 0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.  0.]
 [-1.  0.  0. -1.  0.  0.  1.]
 [-1.  1.  1.  0.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.  0.  0.]
 [ 0. -1.  1.  1. -1. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  1  1]]
row HD
[[0.   0.5  1.   1.   0.33 0.83]
 [0.   0.   1.   0.83 0.83 1.  ]
 [0.   0.   0.   1.   0.83 1.  ]
 [0.   0.   0.   0.   0.83 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.86 0.71 0.71 0.71 0.57]
 [0.   0.   0.43 0.71 0.14 0.43 0.86]
 [0.   0.   0.   0.43 0.29 0.43 0.57]
 [0.   0.   0.   0.   0.71 0.86 0.71]
 [0.   0.   0.   0.   0.   0.29 0.71]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.889, 0.926, 0.889, 1.0, 0.889, 0.808, 1.0]
cutting matrix
[[ 1.  0.]
 [-1.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0  0  0  0  4]]


SVM classifier
Time: 2019-01-05 23:00:47
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
confusion matrix
[[16  0  0  0  0  0  1  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [20  0  0  0  0  0  2  0  0  0]
 [14  0  0  0  0  0  2  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  1  0  0  0]
 [ 6  0  0  0  0  0  9  0  0  0]
 [ 7  0  0  0  0  0 13  0  0  0]
 [10  0  0  0  0  0 12  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  0.]]
confusion matrix
[[12  4  0  0  0  0  1  0  0  0]
 [ 5 21  0  0  0  0  0  0  0  0]
 [ 0  1 19  0  0  0  2  0  0  0]
 [ 8  0  6  0  0  0  0  2  0  0]
 [14  0  3  0  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  1  0  0  0]
 [ 1  0  5  0  0  0  9  0  0  0]
 [ 2  3  2  0  0  0  2 11  0  0]
 [ 2  1  7  0  0  0 12  0  0  0]
 [ 7  0  6  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.  0.  0.1 0.2 0.2 0.2 0. ]
 [0.  0.  0.1 0.1 0.1 0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  0. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  0. -1.]
 [ 1.  0. -1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  0. -1.]]
confusion matrix
[[15  1  0  0  0  0  1  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [ 0  1 18  0  0  1  2  0  0  0]
 [ 8  0  2  0  0  4  0  2  0  0]
 [13  1  0  0  0  3  0  0  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  0  0  0  5  9  0  0  0]
 [ 2  3  0  0  0  2  0 13  0  0]
 [ 3  0  1  0  0  6 12  0  0  0]
 [ 7  0  0  0  0  6  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.  0.  0.1 0.2 0.3 0.2 0. ]
 [0.  0.  0.1 0.2 0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0. ]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2. 2.]
 [0. 0. 2.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0. -1.  1.]
 [ 1. -1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 1.  0. -1.  1.]
 [ 1.  1. -1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  0. -1.  1.]]
confusion matrix
[[14  1  0  0  0  0  2  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [ 0  1 18  0  0  1  2  0  0  0]
 [ 8  0  2  0  0  4  0  2  0  0]
 [13  1  0  0  0  3  0  0  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  0  0  0  5  9  0  0  0]
 [ 2  3  0  0  0  2  0 13  0  0]
 [ 2  0  1  0  0  6 13  0  0  0]
 [ 7  0  0  0  0  6  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.  0.  0.1 0.3 0.3 0.3 0. ]
 [0.  0.  0.1 0.2 0.2 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.4 0.1 0.4 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.1 0.3 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.5  0.25]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0.]
 [ 1.  0. -1.  1.  1.]
 [ 1.  0. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.]
 [ 1.  0. -1.  1.  1.]]
confusion matrix
[[11  0  1  0  3  0  2  0  0  0]
 [ 0 24  0  0  2  0  0  0  0  0]
 [ 0  1 18  0  0  1  2  0  0  0]
 [ 5  0  2  0  3  4  0  2  0  0]
 [ 3  1  0  0 10  3  0  0  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 0  0  0  0  4  2  9  0  0  0]
 [ 2  3  0  0  0  2  0 13  0  0]
 [ 2  0  1  0  1  5 13  0  0  0]
 [ 6  0  0  0  1  6  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.  0.1 0.1 0.4 0.3 0.4 0. ]
 [0.  0.  0.2 0.3 0.2 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.5 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.4 0.3 0.4 0. ]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.2 0.2 0.8]
 [0.  0.  1.2 1.  1. ]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 0. -1.  1.  0.  0.  1. -1.  1. -1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  0. -1.]
 [ 1.  0. -1.  1.  1. -1.]
 [ 1.  0. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.]
 [-1. -1. -1. -1. -1.  0.]
 [-1.  1.  1.  1.  1.  0.]
 [-1. -1. -1. -1. -1.  1.]
 [ 1.  0. -1.  1.  1. -1.]]
confusion matrix
[[10  0  0  2  3  0  0  0  2  0]
 [ 0 24  0  0  2  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  5  3  4  0  2  0  0]
 [ 1  1  0  4 10  1  0  0  0  0]
 [ 0  0  0  3  0 16  0  0  1  0]
 [ 0  0  0  1  4  1  0  0  9  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  2  1  4  0  0 12  0]
 [ 0  0  0  6  1  6  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.1 0.1 0.2 0.5 0.4 0.4 0.1]
 [0.  0.  0.3 0.4 0.2 0.4 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.3 0.4 0.3 0.6 0.3 0.6 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.5 0.4 0.5 0. ]
 [0.  0.  0.  0.  0.  0.3 0.4 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.17 0.67 1.17]
 [0.   0.   1.   0.83 0.83 1.67]
 [0.   0.   0.   0.83 1.   1.17]
 [0.   0.   0.   0.   0.5  1.17]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.]
 [ 1. -1.  1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  0. -1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1.]
 [ 1.  0. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.]
 [-1. -1. -1. -1. -1.  0. -1.]
 [-1.  1.  1.  1.  1.  0.  1.]
 [-1. -1. -1. -1. -1.  1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1.]]
confusion matrix
[[10  0  0  2  3  0  0  0  2  0]
 [ 0 24  0  0  2  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2  5  3  4  0  2  0  0]
 [ 1  1  0  4 10  1  0  0  0  0]
 [ 0  0  0  3  0 16  0  0  1  0]
 [ 0  0  0  1  4  1  0  0  9  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  2  1  4  0  0 12  0]
 [ 0  0  0  6  1  6  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.2 0.2 0.3 0.6 0.5 0.4 0.2]
 [0.  0.  0.3 0.5 0.3 0.5 0.5 0.5 0.3 0.5]
 [0.  0.  0.  0.4 0.5 0.4 0.7 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.3 0.2 0.6 0.4 0.6 0. ]
 [0.  0.  0.  0.  0.  0.4 0.4 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.86 0.14 0.57 1.   0.86]
 [0.   0.   0.86 0.71 0.71 1.43 0.86]
 [0.   0.   0.   0.71 0.86 1.   1.  ]
 [0.   0.   0.   0.   0.43 1.   0.71]
 [0.   0.   0.   0.   0.   1.29 0.43]
 [0.   0.   0.   0.   0.   0.   1.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.  1.]
 [ 1. -1.  1.  1. -1.  1.  0. -1.]
 [ 1.  1.  1.  1.  0. -1.  0.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.]
 [-1. -1. -1. -1. -1.  0. -1.  1.]
 [-1.  1.  1.  1.  1.  0.  1.  1.]
 [-1. -1. -1. -1. -1.  1.  0.  1.]
 [ 1.  0. -1.  1.  1. -1.  1.  1.]]
confusion matrix
[[10  0  0  0  3  0  0  0  2  2]
 [ 0 25  0  0  1  0  0  0  0  0]
 [ 0  1 18  0  0  1  1  0  1  0]
 [ 0  3  2  7  0  2  0  2  0  0]
 [ 1  1  0  0 10  2  0  0  0  3]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 0  0  0  0  4  2  0  0  9  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  0  1  5  1  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.4 0.4 0.3 0.2 0.3 0.6 0.5 0.4 0.2]
 [0.  0.  0.4 0.5 0.4 0.6 0.6 0.6 0.4 0.6]
 [0.  0.  0.  0.5 0.5 0.4 0.7 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.7 0.5 0.7 0.1]
 [0.  0.  0.  0.  0.  0.4 0.4 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.12 0.5  0.88 0.75 0.62]
 [0.   0.   0.75 0.62 0.62 1.25 0.75 0.75]
 [0.   0.   0.   0.62 0.75 0.88 0.88 0.88]
 [0.   0.   0.   0.   0.38 0.88 0.62 0.5 ]
 [0.   0.   0.   0.   0.   1.12 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   1.25 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.  1.  0.]
 [ 1. -1.  1.  1. -1.  1.  0. -1. -1.]
 [ 1.  1.  1.  1.  0. -1.  0.  1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.  0.]
 [ 1.  1. -1.  1.  1.  0.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  0. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  0.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1.  0.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1.  1.  0.]]
confusion matrix
[[10  0  0  0  3  0  0  0  2  2]
 [ 0 25  0  0  1  0  0  0  0  0]
 [ 0  1 18  0  0  1  0  0  1  1]
 [ 0  3  2  7  0  2  0  2  0  0]
 [ 1  1  0  0 10  1  0  0  0  4]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  0  0  0  4  1  6  0  3  1]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  0  1  4  2  0 10  2]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.5 0.4 0.4 0.2 0.4 0.7 0.6 0.5 0.2]
 [0.  0.  0.5 0.5 0.5 0.6 0.7 0.6 0.4 0.7]
 [0.  0.  0.  0.6 0.5 0.5 0.8 0.5 0.7 0.4]
 [0.  0.  0.  0.  0.5 0.3 0.8 0.5 0.7 0.2]
 [0.  0.  0.  0.  0.  0.5 0.5 0.7 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.6 0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67 0.11 0.44 0.78 0.67 0.56 0.89]
 [0.   0.   0.67 0.56 0.56 1.11 0.67 0.67 0.56]
 [0.   0.   0.   0.56 0.67 0.78 0.78 0.78 0.78]
 [0.   0.   0.   0.   0.33 0.78 0.56 0.44 1.  ]
 [0.   0.   0.   0.   0.   1.   0.33 0.56 0.78]
 [0.   0.   0.   0.   0.   0.   1.11 0.67 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.  1.  0. -1.]
 [ 1. -1.  1.  1. -1.  1.  0. -1. -1.  1.]
 [ 1.  1.  1.  1.  0. -1.  0.  1.  0.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.  0. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  0. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  0.  1.  1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  0.  1. -1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1.  1.  0. -1.]]
confusion matrix
[[ 9  0  1  0  3  0  0  0  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  0  0  2  1  0  1  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 1  1  0  0  9  1  1  0  0  4]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  0  1  0  2  1  8  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  2  0  0  4  4  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.6 0.5 0.4 0.2 0.4 0.8 0.7 0.6 0.2]
 [0.  0.  0.5 0.6 0.6 0.7 0.7 0.6 0.4 0.8]
 [0.  0.  0.  0.7 0.6 0.6 0.8 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.5 0.3 0.9 0.6 0.8 0.2]
 [0.  0.  0.  0.  0.  0.5 0.6 0.8 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.6 0.1 0.4 0.7 0.6 0.5 0.8 0.8]
 [0.  0.  0.6 0.5 0.5 1.  0.6 0.6 0.5 0.8]
 [0.  0.  0.  0.5 0.6 0.7 0.7 0.7 0.7 0.2]
 [0.  0.  0.  0.  0.3 0.7 0.5 0.4 0.9 0.7]
 [0.  0.  0.  0.  0.  0.9 0.3 0.5 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  1.  0.6 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.  1.  0. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  0. -1.  0.  1.  0.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  0. -1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  1.  0.  1. -1.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1.  1.  0. -1.  1.]]
confusion matrix
[[ 9  0  1  0  3  0  0  0  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  0  0  2  0  0  2  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 1  1  0  0  9  1  0  0  1  4]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  0  1  0  4  1  6  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  2  0  1  4  2  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.6 0.5 0.4 0.2 0.4 0.9 0.7 0.6 0.2]
 [0.  0.  0.5 0.6 0.6 0.7 0.8 0.6 0.4 0.8]
 [0.  0.  0.  0.7 0.6 0.6 0.9 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.5 0.3 1.  0.6 0.8 0.2]
 [0.  0.  0.  0.  0.  0.5 0.7 0.8 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.8 0.3 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.55 0.09 0.36 0.64 0.55 0.45 0.73 0.73 0.18]
 [0.   0.   0.55 0.45 0.45 0.91 0.55 0.55 0.45 0.73 0.55]
 [0.   0.   0.   0.45 0.55 0.64 0.64 0.64 0.64 0.18 0.55]
 [0.   0.   0.   0.   0.27 0.64 0.45 0.36 0.82 0.64 0.09]
 [0.   0.   0.   0.   0.   0.82 0.27 0.45 0.64 0.73 0.36]
 [0.   0.   0.   0.   0.   0.   0.91 0.55 0.82 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.73 0.73 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.  1.  0. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0. -1.  0.  1.  0.  1.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.  0. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  0. -1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  0.  1.  1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  1.  0.  1. -1.  1.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1.  1.  0. -1.  1.  1.]]
confusion matrix
[[ 9  0  1  0  3  0  0  0  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  0  0  2  1  0  1  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 1  1  0  0  9  1  0  0  1  4]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  0  1  0  4  1  6  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  2  0  1  4  3  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.7 0.5 0.5 0.2 0.4 1.  0.7 0.6 0.2]
 [0.  0.  0.6 0.6 0.7 0.8 0.8 0.7 0.5 0.9]
 [0.  0.  0.  0.8 0.6 0.6 1.  0.5 0.7 0.5]
 [0.  0.  0.  0.  0.6 0.4 1.  0.7 0.9 0.3]
 [0.  0.  0.  0.  0.  0.5 0.8 0.8 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.9 0.3 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.08 0.33 0.58 0.5  0.42 0.67 0.67 0.17 0.33]
 [0.   0.   0.5  0.42 0.42 0.83 0.5  0.5  0.42 0.67 0.5  0.42]
 [0.   0.   0.   0.42 0.5  0.58 0.58 0.58 0.58 0.17 0.5  0.5 ]
 [0.   0.   0.   0.   0.25 0.58 0.42 0.33 0.75 0.58 0.08 0.25]
 [0.   0.   0.   0.   0.   0.75 0.25 0.42 0.58 0.67 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.83 0.5  0.75 0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.58 0.67 0.67 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.42 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.83 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  0. -1.  1.  1.  1.  0.  1.  0. -1.  1.  1.  0.]
 [ 1. -1.  1.  1. -1.  1.  0. -1. -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1.  0. -1.  0.  1.  0.  1.  1.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.  0.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.  0. -1.  1.  1.  0.]
 [ 1.  1. -1.  1.  1.  0.  1.  1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  0. -1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  0.  1.  1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1.  1.  0. -1.  1.  1. -1.]]
confusion matrix
[[ 9  0  1  0  3  0  0  0  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  0  0  2  0  0  2  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 1  1  0  0 10  1  0  0  0  4]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  0  3  0  2  1  6  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.7 0.6 0.5 0.2 0.5 1.1 0.8 0.7 0.3]
 [0.  0.  0.7 0.6 0.7 0.9 0.9 0.8 0.6 1. ]
 [0.  0.  0.  0.9 0.7 0.6 1.1 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.6 0.5 1.1 0.8 1.  0.4]
 [0.  0.  0.  0.  0.  0.6 0.9 0.9 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  1.  0.3 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.46 0.46 0.08 0.31 0.54 0.46 0.38 0.62 0.62 0.15 0.31 0.62]
 [0.   0.   0.46 0.38 0.38 0.77 0.46 0.46 0.38 0.62 0.46 0.38 0.46]
 [0.   0.   0.   0.38 0.46 0.54 0.54 0.54 0.54 0.15 0.46 0.46 0.54]
 [0.   0.   0.   0.   0.23 0.54 0.38 0.31 0.69 0.54 0.08 0.23 0.69]
 [0.   0.   0.   0.   0.   0.69 0.23 0.38 0.54 0.62 0.31 0.31 0.69]
 [0.   0.   0.   0.   0.   0.   0.77 0.46 0.69 0.46 0.46 0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.54 0.62 0.62 0.38 0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.38 0.23 0.08 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.77 0.62 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.77]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.77]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.846, 0.736, 0.915, 0.915, 0.807, 0.729, 0.693, 0.926, 0.773, 0.835, 0.931, 0.856, 0.759]
cutting matrix
[[ 1. -1.  1.  0.  1.  0. -1.  1.  1.  0.]
 [ 1.  1.  1.  0. -1. -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  0.  1.  0.  1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1.  1. -1.  0.]
 [ 1. -1.  1. -1.  1.  0. -1.  1.  1.  0.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1. -1. -1.  0.  1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  0. -1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[13  0  1  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  0 18  0  0  2  0  0  2  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 3  0  0  1  9  1  0  0  1  2]
 [ 3  0  0  0  0 16  1  0  0  0]
 [ 1  0  0  0  1  1  6  0  6  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  0  0  4  2  0 13  0]
 [ 0  0  0  2  1  6  0  0  0  4]]


SVM classifier
Time: 2019-01-05 23:00:58
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
confusion matrix
[[14  3  0  0  0  0  0  0  0  0]
 [ 0 25  0  0  1  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 5  3  0  0  9  0  0  0  0  0]
 [ 4 16  0  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [17  5  0  0  0  0  0  0  0  0]
 [ 4  9  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [-1.  1.]
 [ 0. -1.]
 [-1. -1.]
 [ 1.  0.]
 [-1. -1.]
 [-1. -1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0. -1.]]
confusion matrix
[[11  3  1  0  0  0  0  2  0  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  2  0  0]
 [ 0  0  2 12  0  0  0  2  0  0]
 [ 3  0  4  0  9  0  0  1  0  0]
 [ 2  0  2 16  0  0  0  0  0  0]
 [ 1  0  7  4  0  0  0  3  0  0]
 [ 3  3  1  2  0  0  0 11  0  0]
 [ 2  0  4  5  0  0  0 11  0  0]
 [ 1  0  4  8  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.2 0.1 0.2 0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1. -1.  0. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [-1.  1.  1.]
 [ 0. -1. -1.]
 [-1. -1. -1.]
 [ 1.  0.  0.]
 [-1. -1.  0.]
 [-1. -1.  0.]
 [ 0.  1. -1.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]]
confusion matrix
[[11  3  1  0  0  0  0  2  0  0]
 [ 3 20  0  1  1  0  0  1  0  0]
 [ 0  1 18  0  0  1  0  2  0  0]
 [ 0  0  2  8  0  4  0  2  0  0]
 [ 3  0  4  0  9  0  0  1  0  0]
 [ 2  0  2  0  0 16  0  0  0  0]
 [ 1  0  7  0  0  4  0  3  0  0]
 [ 3  3  1  1  0  1  0 11  0  0]
 [ 2  0  4  0  0  5  0 11  0  0]
 [ 1  0  4  2  0  6  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.3 0.2 0.3 0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.1 0.3 0.2 0.2 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.3 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1. -1.  0. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  1.]
 [-1.  1.  1.  1.]
 [ 0. -1. -1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  0.  0.  0.]
 [-1. -1.  0. -1.]
 [-1. -1.  0.  0.]
 [ 0.  1. -1.  1.]
 [ 0.  1. -1. -1.]
 [ 0. -1. -1. -1.]]
confusion matrix
[[10  3  1  0  1  0  0  0  2  0]
 [ 0 20  0  1  1  0  3  0  1  0]
 [ 0  1 18  0  0  0  1  0  2  0]
 [ 0  0  2  8  0  3  1  0  2  0]
 [ 0  0  0  0  9  0  3  1  0  4]
 [ 1  0  0  0  1 16  0  0  0  2]
 [ 1  0  1  0  0  2  2  0  3  6]
 [ 3  3  1  1  0  0  1 11  0  0]
 [ 2  0  2  0  0  4  1  0 11  2]
 [ 0  0  1  2  0  6  1  0  0  3]]
row HD
[[0.  0.3 0.2 0.4 0.2 0.3 0.3 0.2 0.3 0.3]
 [0.  0.  0.3 0.3 0.4 0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.2 0.4 0.3 0.3 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.4 0.1 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5 2.  2. ]
 [0.  0.  1.  1. ]
 [0.  0.  0.  1. ]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  1.  0.]
 [-1.  1.  1.  1.  0.]
 [ 0. -1. -1.  1.  0.]
 [-1. -1. -1. -1.  0.]
 [ 1.  0.  0.  0.  0.]
 [-1. -1.  0. -1.  0.]
 [-1. -1.  0.  0. -1.]
 [ 0.  1. -1.  1. -1.]
 [ 0.  1. -1. -1.  1.]
 [ 0. -1. -1. -1.  1.]]
confusion matrix
[[10  3  1  0  1  0  0  0  2  0]
 [ 3 20  0  1  1  0  0  0  1  0]
 [ 1  1 18  0  0  0  0  0  2  0]
 [ 1  0  2  8  0  3  0  2  0  0]
 [ 3  0  0  2  9  0  0  1  0  2]
 [ 1  0  0  2  1 16  0  0  0  0]
 [ 1  0  1  6  0  2  2  0  3  0]
 [ 4  3  1  1  0  0  0 11  0  0]
 [ 2  0  2  2  0  4  1  0 11  0]
 [ 1  0  1  2  0  6  0  0  0  3]]
row HD
[[0.  0.3 0.2 0.4 0.2 0.3 0.4 0.3 0.4 0.4]
 [0.  0.  0.3 0.3 0.4 0.3 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.2 0.4 0.3 0.4 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.6 1.6 1.4]
 [0.  0.  0.8 0.8 1.2]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  0. -1.  0.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  1.  0.  1.]
 [-1.  1.  1.  1.  0.  1.]
 [ 0. -1. -1.  1.  0.  1.]
 [-1. -1. -1. -1.  0.  0.]
 [ 1.  0.  0.  0.  0.  0.]
 [-1. -1.  0. -1.  0.  0.]
 [-1. -1.  0.  0. -1.  0.]
 [ 0.  1. -1.  1. -1.  1.]
 [ 0.  1. -1. -1.  1.  1.]
 [ 0. -1. -1. -1.  1. -1.]]
confusion matrix
[[10  3  1  0  1  0  0  0  2  0]
 [ 0 20  0  1  1  3  0  0  1  0]
 [ 0  1 18  0  0  0  1  0  2  0]
 [ 0  0  2  8  0  3  1  2  0  0]
 [ 0  0  0  2  9  3  0  1  0  2]
 [ 1  0  0  1  1 16  0  0  0  1]
 [ 1  0  1  6  0  2  2  0  3  0]
 [ 3  3  1  1  0  0  1 11  0  0]
 [ 2  0  2  2  0  4  1  0 11  0]
 [ 0  0  1  2  0  7  0  0  0  3]]
row HD
[[0.  0.3 0.2 0.5 0.3 0.4 0.5 0.3 0.4 0.5]
 [0.  0.  0.3 0.4 0.5 0.4 0.5 0.3 0.4 0.6]
 [0.  0.  0.  0.3 0.5 0.4 0.5 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.2 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33 1.33 1.17 1.67]
 [0.   0.   0.67 0.67 1.   0.83]
 [0.   0.   0.   0.67 1.   0.83]
 [0.   0.   0.   0.   1.5  0.5 ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  0. -1.  0.  1. -1. -1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
6
new_column
None


============== iter  7 ================
current matrix is 
[[ 0.  0.  0.  1.  0.  1.]
 [-1.  1.  1.  1.  0.  1.]
 [ 0. -1. -1.  1.  0.  1.]
 [-1. -1. -1. -1.  0.  0.]
 [ 1.  0.  0.  0.  0.  0.]
 [-1. -1.  0. -1.  0.  0.]
 [-1. -1.  0.  0. -1.  0.]
 [ 0.  1. -1.  1. -1.  1.]
 [ 0.  1. -1. -1.  1.  1.]
 [ 0. -1. -1. -1.  1. -1.]]
confusion matrix
[[10  3  1  0  1  0  0  0  2  0]
 [ 0 20  0  1  1  3  0  0  1  0]
 [ 0  1 18  0  0  0  1  0  2  0]
 [ 0  0  2  8  0  3  1  2  0  0]
 [ 0  0  0  2  9  3  0  1  0  2]
 [ 1  0  0  1  1 16  0  0  0  1]
 [ 1  0  1  6  0  2  2  0  3  0]
 [ 3  3  1  1  0  0  1 11  0  0]
 [ 2  0  2  2  0  4  1  0 11  0]
 [ 0  0  1  2  0  7  0  0  0  3]]
row HD
[[0.  0.3 0.2 0.5 0.3 0.4 0.5 0.3 0.4 0.5]
 [0.  0.  0.3 0.4 0.5 0.4 0.5 0.3 0.4 0.6]
 [0.  0.  0.  0.3 0.5 0.4 0.5 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.2 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33 1.33 1.17 1.67]
 [0.   0.   0.67 0.67 1.   0.83]
 [0.   0.   0.   0.67 1.   0.83]
 [0.   0.   0.   0.   1.5  0.5 ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.702, 0.779, 0.723, 0.853, 0.471, 0.808]
cutting matrix
[[ 0.  0.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1.  1.  1.]
 [-1. -1. -1.  0.]
 [ 0.  0.  0.  0.]
 [-1.  0. -1.  0.]
 [-1.  0.  0.  0.]
 [ 1. -1.  1.  1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1. -1.]]
cutting matrix's confusion matrix
[[10  3  1  0  1  0  0  0  2  0]
 [ 0 20  0  1  4  0  0  0  1  0]
 [ 0  1 18  0  0  0  1  0  2  0]
 [ 0  0  2  8  0  3  1  0  2  0]
 [ 0  0  0  2 12  0  0  1  0  2]
 [ 1  0  0  1  1 16  0  0  0  1]
 [ 1  0  1  6  0  2  2  0  3  0]
 [ 3  3  1  1  0  0  1 11  0  0]
 [ 2  0  2  2  0  4  1  0 11  0]
 [ 0  0  1  2  1  6  0  0  0  3]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:01:03
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  1.]
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 2  3  4  0  0]
 [ 0  2  3  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  0  1  0]
 [ 2  3  1  3  0]
 [ 0  2  1  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
None


============== iter  4 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  0  1  0]
 [ 2  3  1  3  0]
 [ 0  2  1  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1.  1.  0. -1.]
 [ 1.  1.  0.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1.  1.]]
confusion matrix
[[22  3  0  0  0]
 [12  1  0  1  0]
 [ 3  2  1  3  0]
 [ 2  0  1  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.25]
 [0.   0.   1.25 0.5 ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [-1.  1.  0. -1. -1.]
 [ 1.  1.  0.  1.  1.]
 [ 1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.8 0.6 0.8 0.8]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 1.  0.2 0.6]
 [0.  0.  1.  0.4 0.8]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.804, 0.758, 0.75, 0.625]
cutting matrix
[[-1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 23:01:04
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  0.  0.]
confusion matrix
[[24  1  0  0  0]
 [11  3  0  0  0]
 [ 2  5  0  2  0]
 [ 1  3  0  1  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  0.  0.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 0.  0.]
 [ 0.  1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
1
new_column
None


============== iter  3 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 0.  0.]
 [ 0.  1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  0.]
 [ 0.  0. -1.]
 [ 0.  1. -1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.2]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  0.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  0.  0.]
 [ 0.  0. -1.  1.]
 [ 0.  1. -1. -1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  2  0  1]
 [ 2  0  4  1  2]
 [ 1  0  2  1  1]
 [ 1  0  1  0  1]]
row HD
[[0.  0.8 0.4 0.6 0.4]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 1.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  0.  0.  0.  1.]
select_j_column
[ 0. -1.  0.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  0. -1.]
 [ 1. -1.  1. -1. -1.]
 [ 1.  1.  0.  0.  0.]
 [ 0.  0. -1.  1.  1.]
 [ 0.  1. -1. -1.  0.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  2  0  1]
 [ 2  0  4  1  2]
 [ 2  0  2  0  1]
 [ 1  0  1  0  1]]
row HD
[[0.  0.8 0.6 0.8 0.6]
 [0.  0.  0.8 1.  0.8]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.6 1.  0.6]
 [0.  0.  1.  0.8 0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[-1. -1.  0.  1.  0.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  0. -1. -1.]
 [ 1. -1.  1. -1. -1.  0.]
 [ 1.  1.  0.  0.  0.  0.]
 [ 0.  0. -1.  1.  1.  1.]
 [ 0.  1. -1. -1.  0.  1.]]
confusion matrix
[[23  0  1  0  1]
 [10  0  3  0  1]
 [ 3  0  5  1  0]
 [ 1  0  3  1  0]
 [ 0  0  2  0  1]]
row HD
[[0.  1.  0.8 1.  0.8]
 [0.  0.  0.8 1.2 1. ]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.83 0.5  0.67]
 [0.   0.   0.83 0.67 0.67 0.67]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  0. -1. -1.  0.]
 [ 1. -1.  1. -1. -1.  0.  0.]
 [ 1.  1.  0.  0.  0.  0.  0.]
 [ 0.  0. -1.  1.  1.  1.  1.]
 [ 0.  1. -1. -1.  0.  1. -1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 3  0  5  1  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.  0.8 1.2 1. ]
 [0.  0.  0.8 1.4 1.2]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.43 0.71 0.43 0.57 0.71]
 [0.   0.   0.71 0.57 0.57 0.57 0.71]
 [0.   0.   0.   0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.29 0.43 0.14]
 [0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1. -1.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
1
new_column
None


============== iter  9 ================
current matrix is 
[[-1.  1. -1.  0. -1. -1.  0.]
 [ 1. -1.  1. -1. -1.  0.  0.]
 [ 1.  1.  0.  0.  0.  0.  0.]
 [ 0.  0. -1.  1.  1.  1.  1.]
 [ 0.  1. -1. -1.  0.  1. -1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 3  0  5  1  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.  0.8 1.2 1. ]
 [0.  0.  0.8 1.4 1.2]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.43 0.71 0.43 0.57 0.71]
 [0.   0.   0.71 0.57 0.57 0.57 0.71]
 [0.   0.   0.   0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.29 0.43 0.14]
 [0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1. -1.  0. -1. -1.  0.  1.]
 [ 1. -1.  1. -1. -1.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.]
 [ 0.  0. -1.  1.  1.  1.  1. -1.]
 [ 0.  1. -1. -1.  0.  1. -1.  1.]]
confusion matrix
[[24  0  1  0  0]
 [11  0  3  0  0]
 [ 3  0  5  1  0]
 [ 1  0  4  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.  0.8 1.4 1. ]
 [0.  0.  0.8 1.6 1.2]
 [0.  0.  0.  1.6 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.62 0.38 0.5  0.62 0.38]
 [0.   0.   0.62 0.5  0.5  0.5  0.62 0.25]
 [0.   0.   0.   0.38 0.38 0.38 0.38 0.38]
 [0.   0.   0.   0.   0.25 0.38 0.12 0.62]
 [0.   0.   0.   0.   0.   0.25 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.667, 0.686, 0.702, 0.182, 0.886, 0.758, 0.125, 0.911]
cutting matrix
[[-1. -1.  0.  1.]
 [ 1. -1.  0.  1.]
 [ 1.  0.  0.  1.]
 [ 0.  1.  1. -1.]
 [ 0.  0. -1.  1.]]
cutting matrix's confusion matrix
[[24  1  0  0  0]
 [11  3  0  0  0]
 [ 3  3  3  0  0]
 [ 2  3  0  0  0]
 [ 1  2  0  0  0]]


SVM classifier
Time: 2019-01-05 23:01:06
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  0.]
 [-1. -1.]
 [-1.  0.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1  9  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  0  1  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  0  6  0  0  0]]
row HD
[[0.   0.33 0.17 0.   0.17 0.17]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.   0.  ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  0. -1.]
 [-1. -1.  1.]
 [-1.  0.  1.]
 [-1.  0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  1  2  0]
 [ 0  0 11  0  0  0]
 [ 0  0  0  7  1  0]
 [ 0  0  0  0 11  0]
 [ 0  0  0  2  6  0]]
row HD
[[0.   0.5  0.17 0.17 0.33 0.33]
 [0.   0.   0.5  0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  0. -1. -1.]
 [-1. -1.  1. -1.]
 [-1.  0.  1.  1.]
 [-1.  0.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  1  0  2]
 [ 0  0 11  0  0  0]
 [ 0  0  0  7  0  1]
 [ 0  0  0  0 11  0]
 [ 0  0  0  1  1  6]]
row HD
[[0.   0.67 0.33 0.33 0.33 0.5 ]
 [0.   0.   0.5  0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.75 0.75]
 [0.   0.   1.   1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.955, 0.946, 1.0, 0.985]
cutting matrix
[[-1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  7  0  0  1  0]]


SVM classifier
Time: 2019-01-05 23:01:07
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1. -1.  0. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  1  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  6  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0.  0.  0. -1.  1. -1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [-1. -1.]
 [ 0. -1.]
 [-1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  6  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.  ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [ 0.  0.  0.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [ 0. -1.  1.]
 [-1.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  6  0  0  0]]
row HD
[[0.   0.33 0.5  0.5  0.33 0.5 ]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.17 0.5  0.  ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  0.  1.  0.  1. -1.]
select_j_column
[ 0.  1.  0. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  1.  0.]
 [ 0.  0.  0. -1.]
 [-1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 0. -1.  1. -1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  6  0  0  0]]
row HD
[[0.   0.5  0.67 0.67 0.5  0.67]
 [0.   0.   0.67 0.67 0.33 0.67]
 [0.   0.   0.   0.17 0.67 0.  ]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.25 1.5 ]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1.  0. -1. -1.  1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  1.  0.  1.]
 [ 0.  0.  0. -1.  0.]
 [-1.  1. -1.  1.  0.]
 [-1. -1. -1.  1. -1.]
 [ 0. -1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  2  0  0  6]]
row HD
[[0.   0.67 0.83 0.83 0.5  0.67]
 [0.   0.   0.67 0.83 0.5  0.83]
 [0.   0.   0.   0.33 0.83 0.17]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.2 1.2 0.6]
 [0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  1.2 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.932, 0.921, 0.945, 0.96, 0.932]
cutting matrix
[[ 0.  1.]
 [-1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  0  1]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  2  0  0  6]]


SVM classifier
Time: 2019-01-05 23:01:08
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [22  4  0  0  0  0  0  0  0  0]
 [16  1  0  0  0  0  0  0  0  0]
 [ 4 19  0  0  0  0  0  0  0  0]
 [ 4 15  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [ 3 11  0  0  0  0  0  0  0  0]
 [ 4  9  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  0.]
 [-1.  0.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  0.]
 [-1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[13  0  4  0  1  0  0  0  0  0]
 [ 0  0 22  0  0  0  0  0  0  0]
 [ 1  0 21  0  4  0  0  0  0  0]
 [ 0  0 16  0  1  0  0  0  0  0]
 [ 0  0  4  0 19  0  0  0  0  0]
 [ 0  0  4  0 15  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0  0 17  0  0  0  0  0  0  0]
 [ 2  0  1  0 11  0  0  0  0  0]
 [ 0  0  4  0  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.2 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.1 0.2 0.1 0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  0.  1.]
 [-1.  0. -1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  0. -1.]
 [-1. -1. -1.]
 [-1.  0. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[13  0  4  0  1  0  0  0  0  0]
 [ 0  0 22  0  0  0  0  0  0  0]
 [ 1  0 21  0  4  0  0  0  0  0]
 [ 0  0 16  0  1  0  0  0  0  0]
 [ 0  0  4  0 19  0  0  0  0  0]
 [ 0  0  4  0 15  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0  0 17  0  0  0  0  0  0  0]
 [ 2  0  1  0 11  0  0  0  0  0]
 [ 0  0  4  0  9  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.2 0.3 0.2 0.1 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1. -1.]
 [ 1.  0.  1.  1.]
 [-1.  0. -1.  1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1.  1.]
 [ 1.  0. -1.  1.]
 [-1. -1. -1.  1.]
 [-1.  0. -1.  1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[13  0  4  0  1  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [ 3  0 19  0  4  0  0  0  0  0]
 [10  0  6  0  1  0  0  0  0  0]
 [ 2  0  2  0 19  0  0  0  0  0]
 [ 1  0  3  0 15  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 1  0 16  0  0  0  0  0  0  0]
 [ 2  0  1  0 11  0  0  0  0  0]
 [ 3  0  1  0  9  0  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.1 0.3 0.3 0.2 0.2 0.3 0.2]
 [0.  0.  0.2 0.4 0.2 0.1 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.2 0.2 0.1 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 0.75 1.  ]
 [0.   0.   1.25 2.25]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1. -1.  1.]
 [ 1.  0.  1.  1.  0.]
 [-1.  0. -1.  1.  1.]
 [-1. -1. -1. -1.  0.]
 [ 1. -1. -1.  1.  0.]
 [ 1.  0. -1.  1. -1.]
 [-1. -1. -1.  1. -1.]
 [-1.  0. -1.  1.  0.]
 [ 1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.]]
confusion matrix
[[13  0  0  0  0  0  3  1  1  0]
 [ 0  0  0  4  0  0  1 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  2  0  0  0]
 [ 0  0  0  1 13  0  3  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  2  0  1  0  9  0]
 [ 0  0  0  3  9  0  1  0  0  0]]
row HD
[[0.  0.5 0.2 0.2 0.4 0.4 0.3 0.3 0.4 0.3]
 [0.  0.  0.3 0.4 0.2 0.2 0.4 0.2 0.3 0.4]
 [0.  0.  0.  0.3 0.3 0.2 0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.4 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 0.6 0.8 1.6]
 [0.  0.  1.  1.8 0.8]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  0.  1.  0.  0. -1. -1.  0. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1.]
 [ 1.  0.  1.  1.  0.  0.]
 [-1.  0. -1.  1.  1. -1.]
 [-1. -1. -1. -1.  0.  0.]
 [ 1. -1. -1.  1.  0.  0.]
 [ 1.  0. -1.  1. -1.  1.]
 [-1. -1. -1.  1. -1.  1.]
 [-1.  0. -1.  1.  0.  0.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.]]
confusion matrix
[[13  0  0  0  0  0  3  1  1  0]
 [ 0  0  0  4  0  0  1 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  2  0  0  0]
 [ 0  0  0  1 13  0  3  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  2  0  1  0  9  0]
 [ 0  0  0  3  9  0  1  0  0  0]]
row HD
[[0.  0.6 0.3 0.3 0.5 0.4 0.3 0.4 0.5 0.4]
 [0.  0.  0.4 0.4 0.2 0.3 0.5 0.2 0.4 0.5]
 [0.  0.  0.  0.4 0.4 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.5 0.3 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 0.5  0.67 1.33 1.17]
 [0.   0.   0.83 1.5  0.67 0.83]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   1.5  1.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1. -1.]
 [ 1.  0.  1.  1.  0.  0.  0.]
 [-1.  0. -1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  0.  0. -1.]
 [ 1. -1. -1.  1.  0.  0.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1.]
 [-1.  0. -1.  1.  0.  0. -1.]
 [ 1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1.]]
confusion matrix
[[13  0  0  0  0  0  3  1  1  0]
 [ 0  0  0  4  0  0  1 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  2  0  0  0]
 [ 0  0  0  1 13  0  3  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  2  0  1  0  9  0]
 [ 0  0  0  3  9  0  1  0  0  0]]
row HD
[[0.  0.7 0.3 0.3 0.6 0.5 0.3 0.4 0.6 0.4]
 [0.  0.  0.5 0.5 0.3 0.4 0.6 0.3 0.5 0.6]
 [0.  0.  0.  0.4 0.5 0.4 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.6 0.3 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.43 0.57 1.14 1.   0.14]
 [0.   0.   0.71 1.29 0.57 0.71 0.86]
 [0.   0.   0.   1.   0.86 1.   0.57]
 [0.   0.   0.   0.   1.29 1.14 0.71]
 [0.   0.   0.   0.   0.   0.43 1.  ]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  0. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1. -1.  0.]
 [ 1.  0.  1.  1.  0.  0.  0. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  0.  0. -1.  1.]
 [ 1. -1. -1.  1.  0.  0.  1. -1.]
 [ 1.  0. -1.  1. -1.  1.  1.  0.]
 [-1. -1. -1.  1. -1.  1. -1.  1.]
 [-1.  0. -1.  1.  0.  0. -1.  0.]
 [ 1. -1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1. -1.  0.]]
confusion matrix
[[13  0  0  0  0  0  3  1  1  0]
 [ 0  0  0  4  0  0  1 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  2  0  0  0]
 [ 0  0  0  1 13  0  3  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  2  0  1  0  9  0]
 [ 0  0  0  3  9  0  1  0  0  0]]
row HD
[[0.  0.8 0.4 0.4 0.7 0.5 0.4 0.4 0.7 0.4]
 [0.  0.  0.6 0.6 0.3 0.5 0.7 0.4 0.5 0.7]
 [0.  0.  0.  0.4 0.6 0.5 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.7 0.3 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.38 0.5  1.   0.88 0.12 1.25]
 [0.   0.   0.62 1.12 0.5  0.62 0.75 0.75]
 [0.   0.   0.   0.88 0.75 0.88 0.5  1.  ]
 [0.   0.   0.   0.   1.12 1.   0.62 1.  ]
 [0.   0.   0.   0.   0.   0.38 0.88 0.88]
 [0.   0.   0.   0.   0.   0.   0.75 0.88]
 [0.   0.   0.   0.   0.   0.   0.   1.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.654, 0.673, 0.883, 0.84, 0.578, 0.459, 0.614, 0.496]
cutting matrix
[[-1.  1. -1. -1.  1.  0.]
 [ 1.  0.  1.  1.  0. -1.]
 [-1.  0. -1.  1.  1.  1.]
 [-1. -1. -1. -1.  0.  1.]
 [ 1. -1. -1.  1.  0. -1.]
 [ 1.  0. -1.  1. -1.  0.]
 [-1. -1. -1.  1. -1.  1.]
 [-1.  0. -1.  1.  0.  0.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.  0.]]
cutting matrix's confusion matrix
[[13  0  0  0  0  0  0  4  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  0  2  0  0]
 [ 0  0  0  1 13  0  0  3  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  0  0  0 16  0  0]
 [ 2  0  0  0  2  0  0  1  9  0]
 [ 0  0  0  3  9  0  0  1  0  0]]


SVM classifier
Time: 2019-01-05 23:01:14
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [21  0  0  0  0  1  0  0  0  0]
 [25  0  0  0  0  1  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [15  0  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 0. -1.]
 [ 0. -1.]
 [-1. -1.]
 [ 0. -1.]]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [21  0  0  0  0  1  0  0  0  0]
 [ 8  0 17  0  0  1  0  0  0  0]
 [15  0  1  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [15  0  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.2 0.2 0.  0.  0.1 0. ]
 [0.  0.  0.1 0.2 0.1 0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[-1.  1.  0. -1.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0. -1. -1.]
 [ 0.  1.  1.]
 [ 0.  0.  0.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 0. -1.  0.]
 [ 0. -1.  1.]
 [-1. -1.  1.]
 [ 0. -1.  0.]]
confusion matrix
[[13  0  0  0  0  3  1  1  0  0]
 [ 0  0  0  0  0  1  0 21  0  0]
 [ 1  0 17  0  0  1  3  4  0  0]
 [ 0  0  1  0  0  1  0 15  0  0]
 [ 0  0  0  0  0 21  0  2  0  0]
 [ 0  0  0  0  0 16  2  1  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  0  0  0  0  2  0 15  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  0  0 10  0  3  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.3 0.3 0.1 0.1 0.2 0.1]
 [0.  0.  0.2 0.2 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.3 0.3 0.3 0.1 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0. -1. -1.  1.]
 [ 0.  1.  1.  0.]
 [ 0.  0.  0.  1.]
 [ 1. -1.  1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 0. -1.  0. -1.]
 [ 0. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [ 0. -1.  0.  0.]]
confusion matrix
[[14  0  0  0  0  3  0  1  0  0]
 [ 0  0  0  0  0  1  0 21  0  0]
 [ 4  0 17  0  0  1  0  4  0  0]
 [ 0  0  1  0  0  1  0 15  0  0]
 [ 0  0  0  0  0 21  0  2  0  0]
 [ 2  0  0  0  0 16  0  1  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 0  0  0  0  0  2  0 15  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 0  0  0  0  0 10  0  3  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.4 0.3 0.2 0.2 0.2 0.2]
 [0.  0.  0.3 0.3 0.2 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.3 0.4 0.3 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.25 1.75]
 [0.   0.   1.25 1.75]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0. -1. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.]
 [ 0.  0.  0.  1.  0.]
 [ 1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  0.]
 [-1.  1.  1.  1.  1.]
 [ 0. -1.  0. -1.  1.]
 [ 0. -1.  1. -1.  0.]
 [-1. -1.  1.  1.  0.]
 [ 0. -1.  0.  0. -1.]]
confusion matrix
[[13  3  1  0  0  0  0  0  0  1]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  0 20  2  0  1  0  0  0  2]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  2  0  2  0 19  0  0  0  0]
 [ 0  3  2  1  0 13  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0  2  0  1  0  0  0 12  0  2]
 [ 2  1  9  0  0  2  0  0  0  0]
 [ 0  1  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.3 0.5 0.4 0.3 0.3 0.3 0.2]
 [0.  0.  0.4 0.4 0.3 0.3 0.4 0.3 0.4 0.2]
 [0.  0.  0.  0.4 0.4 0.4 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.  1.4 1.4]
 [0.  0.  1.  1.4 1.2]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0. -1. -1.  1. -1.  1.]
 [ 0.  1.  1.  0. -1.  1.]
 [ 0.  0.  0.  1.  0.  1.]
 [ 1. -1.  1.  1.  1.  0.]
 [ 1.  1.  1. -1.  0.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 0. -1.  0. -1.  1.  0.]
 [ 0. -1.  1. -1.  0. -1.]
 [-1. -1.  1.  1.  0.  1.]
 [ 0. -1.  0.  0. -1.  1.]]
confusion matrix
[[13  3  0  1  0  0  0  0  0  1]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  0 17  5  0  1  0  0  0  2]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  2  0  2  0 19  0  0  0  0]
 [ 0  3  0  3  0 13  0  0  0  0]
 [ 2  0  0 16  0  1  0  0  0  0]
 [ 0  2  0  1  0  0  0 12  0  2]
 [ 2  1  0  9  0  2  0  0  0  0]
 [ 0  1  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.4 0.5 0.4 0.4 0.4 0.3 0.2]
 [0.  0.  0.4 0.5 0.3 0.3 0.5 0.4 0.4 0.2]
 [0.  0.  0.  0.5 0.4 0.4 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 0.83 1.17 1.17 1.33]
 [0.   0.   0.83 1.17 1.   1.  ]
 [0.   0.   0.   1.   1.   0.83]
 [0.   0.   0.   0.   1.33 0.83]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.26, 0.71, 0.854, 0.556, 0.444, 0.757]
cutting matrix
[[-1. -1. -1.  1.]
 [ 1.  1. -1.  1.]
 [ 0.  0.  0.  1.]
 [-1.  1.  1.  0.]
 [ 1.  1.  0.  1.]
 [ 1.  1.  1.  1.]
 [-1.  0.  1.  0.]
 [-1.  1.  0. -1.]
 [-1.  1.  0.  1.]
 [-1.  0. -1.  1.]]
cutting matrix's confusion matrix
[[13  3  0  0  0  0  1  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  3  0  2  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  2  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 0  2  0  1  0  0  0 12  2  0]
 [ 2  1  0  0  2  0  9  0  0  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:01:19
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1. -1.  1.]
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  0.]
 [-1.  0.]
 [-1.  1.]
 [ 1.  0.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  1  0  2  1]
 [ 0  6  0  1  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1.  0. -1.]
 [-1.  0. -1.]
 [-1.  1.  1.]
 [ 1.  0.  1.]]
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [-1.  0. -1.  1.]
 [-1.  0. -1.  0.]
 [-1.  1.  1.  1.]
 [ 1.  0.  1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 6  1  2  0  0]
 [ 0  5  2  0  0]
 [ 1  3  1  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.8 0.6]
 [0.  0.  0.2 0.4 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.5  1.25]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  0.  1.]
 [-1.  0. -1.  1.  1.]
 [-1.  0. -1.  0.  0.]
 [-1.  1.  1.  1.  0.]
 [ 1.  0.  1. -1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  6  1  0  0]
 [ 1  4  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.6 1.  0.8]
 [0.  0.  0.4 0.6 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.4 1.  0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  1.]
 [-1.  0. -1.  1.  1.  1.]
 [-1.  0. -1.  0.  0.  1.]
 [-1.  1.  1.  1.  0. -1.]
 [ 1.  0.  1. -1. -1.  1.]]
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  6  1  0  0]
 [ 1  4  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.6 1.2 0.8]
 [0.  0.  0.4 0.8 0.8]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.33 0.83 0.67 0.33]
 [0.   0.   0.5  0.5  0.67 0.83]
 [0.   0.   0.   0.67 0.83 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  1. -1.]
 [-1.  0. -1.  1.  1.  1.  1.]
 [-1.  0. -1.  0.  0.  1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.]
 [ 1.  0.  1. -1. -1.  1.  1.]]
confusion matrix
[[29  4  1  0  0]
 [ 6  3  0  0  0]
 [ 0  5  2  0  0]
 [ 1  3  1  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.8 0.6 1.4 1. ]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.29 0.71 0.57 0.29 0.43]
 [0.   0.   0.43 0.43 0.57 0.71 0.43]
 [0.   0.   0.   0.57 0.71 0.57 0.14]
 [0.   0.   0.   0.   0.29 0.57 0.43]
 [0.   0.   0.   0.   0.   0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  1. -1. -1.]
 [-1.  0. -1.  1.  1.  1.  1.  1.]
 [-1.  0. -1.  0.  0.  1. -1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  1.]
 [ 1.  0.  1. -1. -1.  1.  1. -1.]]
confusion matrix
[[29  4  1  0  0]
 [ 6  3  0  0  0]
 [ 0  4  3  0  0]
 [ 1  3  1  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.  0.6 1.6 1. ]
 [0.  0.  0.8 0.8 1. ]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.25 0.62 0.5  0.25 0.38 0.5 ]
 [0.   0.   0.38 0.38 0.5  0.62 0.38 0.38]
 [0.   0.   0.   0.5  0.62 0.5  0.12 0.25]
 [0.   0.   0.   0.   0.25 0.5  0.38 0.25]
 [0.   0.   0.   0.   0.   0.38 0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
None


============== iter  9 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  1. -1. -1.]
 [-1.  0. -1.  1.  1.  1.  1.  1.]
 [-1.  0. -1.  0.  0.  1. -1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  1.]
 [ 1.  0.  1. -1. -1.  1.  1. -1.]]
confusion matrix
[[29  4  1  0  0]
 [ 6  3  0  0  0]
 [ 0  4  3  0  0]
 [ 1  3  1  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.  0.6 1.6 1. ]
 [0.  0.  0.8 0.8 1. ]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.25 0.62 0.5  0.25 0.38 0.5 ]
 [0.   0.   0.38 0.38 0.5  0.62 0.38 0.38]
 [0.   0.   0.   0.5  0.62 0.5  0.12 0.25]
 [0.   0.   0.   0.   0.25 0.5  0.38 0.25]
 [0.   0.   0.   0.   0.   0.38 0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  1. -1. -1.  0.]
 [-1.  0. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  0. -1.  0.  0.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  1.  1.]
 [ 1.  0.  1. -1. -1.  1.  1. -1. -1.]]
confusion matrix
[[29  4  1  0  0]
 [ 6  3  0  0  0]
 [ 0  5  2  0  0]
 [ 1  3  1  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.2 0.8 1.8 1.2]
 [0.  0.  1.  0.8 1.2]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.22 0.56 0.44 0.22 0.33 0.44 0.44]
 [0.   0.   0.33 0.33 0.44 0.56 0.33 0.33 0.44]
 [0.   0.   0.   0.44 0.56 0.44 0.11 0.22 0.33]
 [0.   0.   0.   0.   0.22 0.44 0.33 0.22 0.11]
 [0.   0.   0.   0.   0.   0.33 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.33 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
select_i_column
[-1.  0.  0.  1.  0.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1. -1.  0.  1.  1. -1. -1.  0.  0.]
 [-1.  0. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  0. -1.  0.  0.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  0. -1.  1.  1.  1. -1.]
 [ 1.  0.  1. -1. -1.  1.  1. -1. -1. -1.]]
confusion matrix
[[30  4  0  0  0]
 [ 6  3  0  0  0]
 [ 2  5  0  0  0]
 [ 3  2  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.4 1.  2.  1.4]
 [0.  0.  1.2 0.8 1.2]
 [0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.2 0.5 0.4 0.2 0.3 0.4 0.4 0.3]
 [0.  0.  0.3 0.3 0.4 0.5 0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.4 0.5 0.4 0.1 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.768, 0.744, 0.893, 0.333, 0.977, 0.911, 0.696, 0.714, 0.227, 0.273]
cutting matrix
[[ 1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]
 [-1. -1.  0.  1. -1. -1.]
 [-1.  1.  0. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[29  4  1  0  0]
 [ 6  3  0  0  0]
 [ 0  4  3  0  0]
 [ 1  3  1  0  0]
 [ 0  0  1  0  0]]


SVM classifier
Time: 2019-01-05 23:01:22
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  4  0  0  0]
 [ 1  5  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[ 1.  0. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  0. -1.]
 [ 1. -1. -1.]
 [ 0.  0.  0.]
 [ 0. -1.  0.]]
confusion matrix
[[31  3  0  0  0]
 [ 6  3  0  0  0]
 [ 0  6  0  1  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1.  0. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 0.  0.  0. -1.]
 [ 0. -1.  0.  0.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.8 0.6 0.8]
 [0.  0.  0.4 0.6 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.5  0.5 ]
 [0.   0.   0.5  1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1.  1.  1. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  1.]
 [-1.  0. -1.  1. -1.]
 [ 1. -1. -1.  1.  1.]
 [ 0.  0.  0. -1.  0.]
 [ 0. -1.  0.  0.  1.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  1  2]
 [ 1  0  0  5  1]
 [ 2  0  0  3  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 0.8 0.8]
 [0.  0.  0.6 0.8 1. ]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.4 0.4 0.4]
 [0.  0.  0.4 1.  0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0. -1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.]
 [-1.  0. -1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1.  0.]
 [ 0.  0.  0. -1.  0.  0.]
 [ 0. -1.  0.  0.  1. -1.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  1  2]
 [ 1  0  0  6  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  1.  1.  1. ]
 [0.  0.  0.8 1.  1. ]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33 0.33 0.33 0.5 ]
 [0.   0.   0.33 0.83 0.5  0.33]
 [0.   0.   0.   0.67 0.33 0.33]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1. -1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.]
 [-1.  0. -1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1.  0. -1.]
 [ 0.  0.  0. -1.  0.  0.  0.]
 [ 0. -1.  0.  0.  1. -1.  1.]]
confusion matrix
[[32  0  0  0  2]
 [ 6  0  0  0  3]
 [ 2  0  0  1  4]
 [ 3  0  0  0  2]
 [ 1  0  0  0  0]]
row HD
[[0.  1.  1.2 1.2 1. ]
 [0.  0.  1.  1.2 1. ]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.29 0.29 0.29 0.43 0.57]
 [0.   0.   0.29 0.71 0.43 0.29 0.29]
 [0.   0.   0.   0.57 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.57 0.71 0.57]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.86, 0.714, 0.8, 0.709, 0.804, 0.795, 0.863]
cutting matrix
[[-1.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  1.]
 [ 1. -1.  1.  0. -1.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  1. -1.  1.]]
cutting matrix's confusion matrix
[[32  0  0  0  2]
 [ 6  0  0  0  3]
 [ 2  0  0  1  4]
 [ 3  0  0  0  2]
 [ 0  0  0  0  1]]


SVM classifier
Time: 2019-01-05 23:01:23
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
None


============== iter  2 ================
current matrix is 
[-1.  1.  1. -1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  2  0  0]
 [ 0 18  0  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  5  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.17 0.33 0.33 0.17]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.17 0.33 0.33 0.17]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1. -1.  1.]
 [-1. -1. -1. -1.]
 [-1. -1.  1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.17 0.33 0.5  0.17]
 [0.   0.   0.17 0.33 0.5  0.5 ]
 [0.   0.   0.   0.5  0.67 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.75 0.75]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.91, 0.925, 1.0, 1.0]
cutting matrix
[[ 1.  1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [-1.  1.  1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0  8  0  2  0  0]
 [18  0  0  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:01:24
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1.  0.  1.  0.  1.  0.]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  4  0  0  0]
 [ 0  5  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0.  0.  0.  0. -1.]
select_j_column
[-1.  0.  0.  1.  0.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0. -1.]]
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.17 0.33 0.17 0.33]
 [0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.   0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1.  0.  0.  0.  0. -1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [ 0.  0.  0.]
 [ 1.  0.  0.]
 [ 0.  1. -1.]
 [ 1.  0.  0.]
 [ 0. -1.  0.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.33 0.5  0.33 0.5 ]
 [0.   0.   0.17 0.33 0.17 0.17]
 [0.   0.   0.   0.5  0.   0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1. -1. -1.  1.]
select_j_column
[-1.  0. -1. -1.  0.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1. -1.]
 [ 0.  0.  0.  0.]
 [ 1.  0.  0.  1.]
 [ 0.  1. -1.  1.]
 [ 1.  0.  0. -1.]
 [ 0. -1.  0. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.5  0.5  0.67 0.33 0.5 ]
 [0.   0.   0.33 0.5  0.33 0.33]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 1.   0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.977, 0.769, 0.9, 0.947]
cutting matrix
[[-1.  1.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  0.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  4  0  0  0]
 [ 0  5  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:01:25
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
confusion matrix
[[ 8 12  0  0  0  0  0  0  0  0]
 [ 5 16  0  0  0  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [22  4  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 0 14  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [ 2 19  0  0  0  0  0  0  0  0]
 [12  2  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[ 8  1  0  0  0  0 11  0  0  0]
 [ 5 15  0  0  0  0  1  0  0  0]
 [15  4  0  0  0  0  3  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [22  2  0  0  0  0  2  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [ 2  0  0  0  0  0 19  0  0  0]
 [12  0  0  0  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.  0.  0.  0.1 0.1 0.  0.1 0.1]
 [0.  0.  0.2 0.2 0.2 0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [-1. -1.  0.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [-1.  1.  0.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [-1.  1.  0.]]
confusion matrix
[[ 6  1  0  2  0  0 11  0  0  0]
 [ 5 15  0  0  0  0  1  0  0  0]
 [12  4  0  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [17  2  0  5  0  0  2  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.3 0.  0.1 0.  0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.3 0.3 0.3 0.2 0.1 0.3 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 2.67]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1. -1.]
 [-1. -1.  0.  0.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1. -1.]
 [ 1.  1. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1.  1.  0.  1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  0.  1.]
 [-1.  1.  0.  1.]]
confusion matrix
[[ 8  1  0  2  0  0  9  0  0  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [12  4  0  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.  0.1 0.  0.2 0.3 0.  0.3 0.3]
 [0.  0.  0.4 0.4 0.4 0.3 0.2 0.4 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.2 0.3 0.  0.3 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   2.   2.5 ]
 [0.   0.   2.25 1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1. -1.  1.]
 [-1. -1.  0.  0. -1.]
 [ 1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [-1.  1.  0.  1. -1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  1.  0.  1.  1.]
 [-1.  1.  0.  1.  1.]]
confusion matrix
[[ 8  1  0  2  0  0  0  0  9  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.5 0.  0.1 0.  0.2 0.4 0.  0.3 0.3]
 [0.  0.  0.5 0.5 0.5 0.4 0.2 0.5 0.3 0.3]
 [0.  0.  0.  0.1 0.  0.2 0.4 0.  0.3 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.4 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.4 0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.6 2.  0.4]
 [0.  0.  1.8 1.2 0.4]
 [0.  0.  0.  1.  1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1.]
 [-1. -1.  0.  0. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.]
 [-1.  1.  0.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1.  1.  0.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.]]
confusion matrix
[[ 6  1  0  2  0  0  0  0 11  0]
 [ 5 15  0  0  0  0  0  0  1  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [17  2  0  5  0  0  0  0  2  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 14  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0  0  0 19  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.  0.1 0.  0.2 0.5 0.  0.4 0.3]
 [0.  0.  0.6 0.6 0.6 0.5 0.2 0.6 0.3 0.4]
 [0.  0.  0.  0.1 0.  0.2 0.5 0.  0.4 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.5 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.2 0.5 0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.6 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33 1.67 0.33 0.17]
 [0.   0.   1.5  1.   0.33 0.5 ]
 [0.   0.   0.   0.83 1.33 1.33]
 [0.   0.   0.   0.   1.33 1.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1.  1.]
 [-1. -1.  0.  0. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.]
 [-1.  1.  0.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  0.  1.  1. -1. -1.]
 [-1.  1.  0.  1.  1.  1. -1.]]
confusion matrix
[[ 4  1  0  2  2  0  0  0 11  0]
 [ 1 15  0  0  4  0  0  0  1  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  2  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 14  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0  0  0 19  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.7 0.  0.1 0.1 0.3 0.6 0.1 0.5 0.4]
 [0.  0.  0.7 0.7 0.6 0.5 0.2 0.6 0.3 0.4]
 [0.  0.  0.  0.1 0.1 0.3 0.6 0.1 0.5 0.4]
 [0.  0.  0.  0.  0.2 0.2 0.6 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.2 0.5 0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.6 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 1.14 1.43 0.29 0.14 0.43]
 [0.   0.   1.29 0.86 0.29 0.43 0.71]
 [0.   0.   0.   0.71 1.14 1.14 1.  ]
 [0.   0.   0.   0.   1.14 1.29 1.  ]
 [0.   0.   0.   0.   0.   0.14 0.71]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
0
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1.  1. -1.]
 [-1. -1.  0.  0. -1. -1. -1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  0.]
 [-1.  1.  0.  1. -1. -1. -1.  0.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  0.  1.  1. -1. -1.  1.]
 [-1.  1.  0.  1.  1.  1. -1.  1.]]
confusion matrix
[[ 4  1  0  2  4  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.8 0.  0.2 0.1 0.4 0.7 0.1 0.6 0.5]
 [0.  0.  0.8 0.7 0.7 0.5 0.2 0.7 0.4 0.5]
 [0.  0.  0.  0.2 0.1 0.4 0.7 0.1 0.6 0.5]
 [0.  0.  0.  0.  0.3 0.2 0.6 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.3 0.6 0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   1.25 0.25 0.12 0.38 1.25]
 [0.   0.   1.12 0.75 0.25 0.38 0.62 1.  ]
 [0.   0.   0.   0.62 1.   1.   0.88 0.5 ]
 [0.   0.   0.   0.   1.   1.12 0.88 0.38]
 [0.   0.   0.   0.   0.   0.12 0.62 1.  ]
 [0.   0.   0.   0.   0.   0.   0.5  1.12]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [-1. -1.  0.  0. -1. -1. -1.  0.  0.]
 [ 1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  0. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  0. -1.]
 [-1.  1.  0.  1. -1. -1. -1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  0.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1. -1.  1.  0.]]
confusion matrix
[[ 4  1  0  2  4  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.9 0.  0.2 0.1 0.4 0.8 0.1 0.7 0.6]
 [0.  0.  0.9 0.8 0.8 0.6 0.3 0.8 0.5 0.5]
 [0.  0.  0.  0.2 0.1 0.4 0.8 0.1 0.7 0.6]
 [0.  0.  0.  0.  0.3 0.2 0.7 0.3 0.7 0.6]
 [0.  0.  0.  0.  0.  0.3 0.7 0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.89 1.11 0.22 0.11 0.33 1.11 1.11]
 [0.   0.   1.   0.67 0.22 0.33 0.56 0.89 0.78]
 [0.   0.   0.   0.56 0.89 0.89 0.78 0.44 0.44]
 [0.   0.   0.   0.   0.89 1.   0.78 0.33 0.11]
 [0.   0.   0.   0.   0.   0.11 0.56 0.89 1.  ]
 [0.   0.   0.   0.   0.   0.   0.44 1.   1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1.  1. -1. -1.  1.]
 [-1. -1.  0.  0. -1. -1. -1.  0.  0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  0. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1. -1.  0. -1.  1.]
 [-1.  1.  0.  1. -1. -1. -1.  0.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  0.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1. -1.  1.  0. -1.]]
confusion matrix
[[ 4  1  0  2  4  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.9 0.  0.2 0.1 0.4 0.9 0.1 0.8 0.7]
 [0.  0.  0.9 0.8 0.8 0.6 0.4 0.8 0.6 0.6]
 [0.  0.  0.  0.2 0.1 0.4 0.9 0.1 0.8 0.7]
 [0.  0.  0.  0.  0.3 0.2 0.8 0.3 0.8 0.7]
 [0.  0.  0.  0.  0.  0.3 0.8 0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.8 0.3 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 1.  0.2 0.1 0.3 1.  1.  0.1]
 [0.  0.  0.9 0.6 0.2 0.3 0.5 0.8 0.7 0.5]
 [0.  0.  0.  0.5 0.8 0.8 0.7 0.4 0.4 0.8]
 [0.  0.  0.  0.  0.8 0.9 0.7 0.3 0.1 1. ]
 [0.  0.  0.  0.  0.  0.1 0.5 0.8 0.9 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.9 1.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.739, 0.809, 0.678, 0.725, 0.819, 0.793, 0.745, 0.483, 0.778, 0.83]
cutting matrix
[[ 1.  1. -1. -1.  1.  1.  1.  1.]
 [-1. -1.  0.  0. -1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  0.  1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.]
 [-1.  1.  0.  1.  1.  1. -1. -1.]]
cutting matrix's confusion matrix
[[ 4  1  0  2  4  0  0  0  9  0]
 [ 1 15  0  0  5  0  0  0  0  0]
 [12  4  0  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-05 23:01:32
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
confusion matrix
[[16  0  0  0  4  0  0  0  0  0]
 [17  0  0  0  4  0  0  0  0  0]
 [19  0  2  0  1  0  0  0  0  0]
 [ 5  0 13  0  1  0  0  0  0  0]
 [ 4  0  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0 11  0  0  0  0  0  0  0]
 [19  0  1  0  1  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0.  0.  0.  0.  0.  0.  1.]
select_j_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
most_cplx_inx
6
new_column
None


============== iter  2 ================
current matrix is 
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
confusion matrix
[[16  0  0  0  4  0  0  0  0  0]
 [17  0  0  0  4  0  0  0  0  0]
 [19  0  2  0  1  0  0  0  0  0]
 [ 5  0 13  0  1  0  0  0  0  0]
 [ 4  0  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0 11  0  0  0  0  0  0  0]
 [19  0  1  0  1  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [ 1.  0.]
 [-1.  0.]
 [-1.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0. -1.]]
confusion matrix
[[15  1  0  0  4  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  2  1  0  0  0  0  0]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [19  0  0  1  1  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.2 0.  0.1 0.1 0.1]
 [0.  0.  0.1 0.2 0.2 0.2 0.1 0.  0.2 0. ]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 1. -1.  0.]
 [ 1.  0.  0.]
 [-1.  0.  0.]
 [-1.  1. -1.]
 [ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 1.  0.  1.]
 [ 0. -1.  1.]]
confusion matrix
[[15  1  0  0  4  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  2  1  0  0  0  0  0]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [19  0  0  1  1  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.3 0.  0.1 0.2 0.2]
 [0.  0.  0.1 0.2 0.2 0.3 0.1 0.  0.3 0.1]
 [0.  0.  0.  0.1 0.2 0.3 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.3 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 1.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [ 0. -1.  0.  0.]
 [ 1. -1.  0.  0.]
 [ 1.  0.  0. -1.]
 [-1.  0.  0.  0.]
 [-1.  1. -1.  1.]
 [ 0.  0.  0.  0.]
 [ 0. -1.  0. -1.]
 [ 1.  0.  1.  1.]
 [ 0. -1.  1.  0.]]
confusion matrix
[[15  1  0  0  4  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  2  1  0  0  0  0  0]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [19  0  0  1  1  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.4 0.  0.2 0.3 0.2]
 [0.  0.  0.1 0.3 0.2 0.4 0.1 0.1 0.4 0.1]
 [0.  0.  0.  0.2 0.2 0.4 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.4 0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.3 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.   1.25]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  0.  1.]
 [ 0. -1.  0.  0.  0.]
 [ 1. -1.  0.  0. -1.]
 [ 1.  0.  0. -1.  1.]
 [-1.  0.  0.  0.  1.]
 [-1.  1. -1.  1.  0.]
 [ 0.  0.  0.  0.  1.]
 [ 0. -1.  0. -1.  1.]
 [ 1.  0.  1.  1. -1.]
 [ 0. -1.  1.  0. -1.]]
confusion matrix
[[11  5  0  0  2  2  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.2 0.1 0.5 0.  0.2 0.4 0.3]
 [0.  0.  0.2 0.4 0.3 0.4 0.2 0.2 0.5 0.2]
 [0.  0.  0.  0.3 0.3 0.5 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.5 0.2 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.4 0.1 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 0.8 1.  1.6]
 [0.  0.  1.2 1.  1.6]
 [0.  0.  0.  0.8 1.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  0.  1.  0. -1.  1.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  0.  0.  1.  0.]
 [ 0. -1.  0.  0.  0.  1.]
 [ 1. -1.  0.  0. -1. -1.]
 [ 1.  0.  0. -1.  1.  0.]
 [-1.  0.  0.  0.  1.  0.]
 [-1.  1. -1.  1.  0. -1.]
 [ 0.  0.  0.  0.  1. -1.]
 [ 0. -1.  0. -1.  1.  1.]
 [ 1.  0.  1.  1. -1.  1.]
 [ 0. -1.  1.  0. -1.  1.]]
confusion matrix
[[11  5  0  0  2  2  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.2 0.1 0.6 0.1 0.3 0.5 0.4]
 [0.  0.  0.3 0.5 0.4 0.5 0.3 0.2 0.5 0.2]
 [0.  0.  0.  0.4 0.4 0.5 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.6 0.3 0.3 0.4 0.6]
 [0.  0.  0.  0.  0.  0.5 0.2 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.67 0.83 1.33 1.17]
 [0.   0.   1.   0.83 1.33 1.  ]
 [0.   0.   0.   0.67 1.5  0.67]
 [0.   0.   0.   0.   1.5  1.17]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[ 1.  0. -1.  1.  1.  0.  1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0.  0.  0.  0.  1.  0.  1.]
 [ 0. -1.  0.  0.  0.  1. -1.]
 [ 1. -1.  0.  0. -1. -1.  0.]
 [ 1.  0.  0. -1.  1.  0. -1.]
 [-1.  0.  0.  0.  1.  0. -1.]
 [-1.  1. -1.  1.  0. -1. -1.]
 [ 0.  0.  0.  0.  1. -1.  1.]
 [ 0. -1.  0. -1.  1.  1.  0.]
 [ 1.  0.  1.  1. -1.  1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.]]
confusion matrix
[[11  5  0  0  2  2  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.4 0.5 0.3 0.2 0.7 0.1 0.4 0.5 0.5]
 [0.  0.  0.4 0.5 0.4 0.5 0.4 0.3 0.6 0.2]
 [0.  0.  0.  0.5 0.5 0.6 0.4 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.2 0.6 0.4 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.3 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 0.57 0.71 1.14 1.   0.86]
 [0.   0.   0.86 0.71 1.14 0.86 1.14]
 [0.   0.   0.   0.57 1.29 0.57 0.86]
 [0.   0.   0.   0.   1.29 1.   1.  ]
 [0.   0.   0.   0.   0.   1.14 1.  ]
 [0.   0.   0.   0.   0.   0.   1.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 0. -1. -1.  0.  0.  1.  0. -1.  0. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 0.  0.  0.  0.  1.  0.  1.  0.]
 [ 0. -1.  0.  0.  0.  1. -1.  1.]
 [ 1. -1.  0.  0. -1. -1.  0.  0.]
 [ 1.  0.  0. -1.  1.  0. -1.  0.]
 [-1.  0.  0.  0.  1.  0. -1.  0.]
 [-1.  1. -1.  1.  0. -1. -1.  1.]
 [ 0.  0.  0.  0.  1. -1.  1.  0.]
 [ 0. -1.  0. -1.  1.  1.  0. -1.]
 [ 1.  0.  1.  1. -1.  1.  1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.]]
confusion matrix
[[11  1  0  0  4  0  0  0  0  4]
 [ 1 15  0  0  4  0  0  0  0  1]
 [ 3  4  0  2  1  0  0  0  0 12]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  0  0  2]
 [19  0  0  1  1  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.3 0.2 0.8 0.1 0.5 0.5 0.5]
 [0.  0.  0.5 0.6 0.5 0.5 0.5 0.4 0.7 0.3]
 [0.  0.  0.  0.5 0.5 0.7 0.4 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.2 0.7 0.4 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.6 0.3 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.5  0.62 1.   0.88 0.75 0.88]
 [0.   0.   0.75 0.62 1.   0.75 1.   0.38]
 [0.   0.   0.   0.5  1.12 0.5  0.75 0.62]
 [0.   0.   0.   0.   1.12 0.88 0.88 0.38]
 [0.   0.   0.   0.   0.   1.   0.88 1.25]
 [0.   0.   0.   0.   0.   0.   1.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.519, 0.239, 0.0, 0.535, 0.636, 0.138, 0.894, 0.288]
cutting matrix
[[ 0.  0.  1.  1.  0.]
 [ 0.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0.]
 [ 0. -1.  1. -1.  0.]
 [ 0.  0.  1. -1.  0.]
 [-1.  1.  0. -1.  1.]
 [ 0.  0.  1.  1.  0.]
 [ 0. -1.  1.  0. -1.]
 [ 1.  1. -1.  1.  0.]
 [ 1.  0. -1. -1.  0.]]
cutting matrix's confusion matrix
[[11  1  6  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 13  2  0  0  0  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 2  2  5  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  1  1  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:01:38
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.4 0.2 0.2 0. ]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [-1.  1.  0.]
 [-1. -1.  1.]]
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.6 0.4 0.4 0. ]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  0. -1.]
 [-1.  1.  0. -1.]
 [-1. -1.  1.  1.]]
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.25 0.5 ]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1.]
 [-1.  1.  0. -1.  0.]
 [-1.  1.  0. -1.  1.]
 [-1. -1.  1.  1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  1  5  0]
 [ 2  0  1  4  0]
 [ 0  0  1  6  0]
 [ 0  0  1  2  0]]
row HD
[[0.  0.8 0.6 0.4 0.2]
 [0.  0.  0.6 0.6 1. ]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 1.  0.4 1. ]
 [0.  0.  1.  0.8 0.8]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1.  1.]
 [-1.  1.  0. -1.  0. -1.]
 [-1.  1.  0. -1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  1  5  0]
 [ 2  0  1  4  0]
 [ 0  0  1  6  0]
 [ 0  0  1  2  0]]
row HD
[[0.  1.  0.6 0.4 0.4]
 [0.  0.  0.8 0.8 1. ]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.83 0.33 0.83 0.17]
 [0.   0.   0.83 0.67 0.67 0.5 ]
 [0.   0.   0.   0.5  0.17 0.67]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1.  0.]
 [ 1.  1. -1. -1. -1.  1. -1.]
 [-1.  1.  0. -1.  0. -1. -1.]
 [-1.  1.  0. -1.  1. -1.  0.]
 [-1. -1.  1.  1.  1.  1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  4  2  0]
 [ 2  0  3  2  0]
 [ 0  0  3  4  0]
 [ 0  0  2  1  0]]
row HD
[[0.  1.2 0.8 0.4 0.6]
 [0.  0.  0.8 1.  1.2]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.71 0.29 0.71 0.14 0.57]
 [0.   0.   0.71 0.57 0.57 0.43 0.71]
 [0.   0.   0.   0.43 0.14 0.57 0.29]
 [0.   0.   0.   0.   0.43 0.14 0.29]
 [0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1. -1. -1. -1.  1. -1.  0.]
 [-1.  1.  0. -1.  0. -1. -1. -1.]
 [-1.  1.  0. -1.  1. -1.  0. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 4  0  4  1  0]
 [ 3  0  3  1  0]
 [ 1  0  3  3  0]
 [ 0  0  2  1  0]]
row HD
[[0.  1.4 1.  0.6 0.6]
 [0.  0.  1.  1.2 1.4]
 [0.  0.  0.  0.4 1.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.62 0.25 0.62 0.12 0.5  0.38]
 [0.   0.   0.62 0.5  0.5  0.38 0.62 0.62]
 [0.   0.   0.   0.38 0.12 0.5  0.25 0.38]
 [0.   0.   0.   0.   0.38 0.12 0.25 0.25]
 [0.   0.   0.   0.   0.   0.5  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.839, 0.738, 0.946, 0.776, 0.786, 0.368, 0.66]
cutting matrix
[[-1. -1. -1. -1.  0.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  0.]
 [-1. -1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 3  0  4  2  0]
 [ 2  0  3  2  0]
 [ 0  0  3  4  0]
 [ 0  0  2  1  0]]


SVM classifier
Time: 2019-01-05 23:01:40
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0. -1.]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 3  2  2  0  0]
 [ 0  2  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [ 0. -1.]
 [-1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 3  3  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0.  0.  1.]
 [-1.  1. -1.]
 [ 0. -1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 3  3  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0. -1.]
 [ 0.  0.  1.  0.]
 [-1.  1. -1.  1.]
 [ 0. -1.  1. -1.]
 [-1.  1.  1.  0.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 3  3  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.8 0.6 0.8]
 [0.  0.  0.8 0.4 0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   1.  ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  0. -1.  1.]
 [ 0.  0.  1.  0.  0.]
 [-1.  1. -1.  1.  0.]
 [ 0. -1.  1. -1. -1.]
 [-1.  1.  1.  0. -1.]]
confusion matrix
[[25  4  0  1  0]
 [ 4  3  0  2  0]
 [ 3  2  0  2  0]
 [ 0  2  0  5  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 1.  0.8 1. ]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.8 0.8 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  0.  0. -1.  1.  1.]
 [ 0.  0.  1.  0.  0. -1.]
 [-1.  1. -1.  1.  0.  0.]
 [ 0. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  0. -1.  1.]]
confusion matrix
[[25  0  0  5  0]
 [ 4  0  0  5  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.  1.2 0.8 1. ]
 [0.  0.  1.  0.8 0.8]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67 0.67 0.33 0.67]
 [0.   0.   0.5  0.33 0.5  0.67]
 [0.   0.   0.   0.83 0.83 0.5 ]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  0.  0. -1.  1.  1.  0.]
 [ 0.  0.  1.  0.  0. -1. -1.]
 [-1.  1. -1.  1.  0.  0. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  0. -1.  1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 3  0  0  4  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.2 1.4 1.  1.2]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.57 0.29 0.57 0.57]
 [0.   0.   0.43 0.29 0.43 0.57 0.29]
 [0.   0.   0.   0.71 0.71 0.43 0.29]
 [0.   0.   0.   0.   0.43 0.71 0.57]
 [0.   0.   0.   0.   0.   0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  0.  0. -1.  1.  1.  0.  1.]
 [ 0.  0.  1.  0.  0. -1. -1.  1.]
 [-1.  1. -1.  1.  0.  0. -1. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  0. -1.  1.  1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 3  0  0  4  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.2 1.6 1.  1.2]
 [0.  0.  1.2 0.8 1. ]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.5  0.25 0.5  0.5  0.38]
 [0.   0.   0.38 0.25 0.38 0.5  0.25 0.5 ]
 [0.   0.   0.   0.62 0.62 0.38 0.25 0.12]
 [0.   0.   0.   0.   0.38 0.62 0.5  0.62]
 [0.   0.   0.   0.   0.   0.38 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.675, 0.059, 0.385, 0.705, 0.75, 0.776, 0.423, 0.875]
cutting matrix
[[ 0.  1.  1.  1.]
 [ 0.  0. -1.  1.]
 [ 1.  0.  0. -1.]
 [-1. -1.  1.  1.]
 [ 1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 2  1  0  4  0]
 [ 1  1  0  1  0]]


SVM classifier
Time: 2019-01-05 23:01:42
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  0.]
 [-1. -1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.   0.   0.17]
 [0.   0.   0.33 0.   0.   0.17]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1.  1.]
 [ 1.  0.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.   0.   0.33]
 [0.   0.   0.33 0.   0.   0.33]
 [0.   0.   0.   0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  0.]
 [-1. -1.  1.  0.]
 [ 1.  0.  1. -1.]
 [-1. -1.  1.  1.]
 [-1. -1.  1.  1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[17  0  0  1  0  0]
 [12  0  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  2  0  0]]
row HD
[[0.   0.   0.5  0.17 0.17 0.5 ]
 [0.   0.   0.5  0.17 0.17 0.5 ]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.   1.5 ]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  0.  1.]
 [-1. -1.  1.  0.  1.]
 [ 1.  0.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  2  0]]
row HD
[[0.   0.   0.5  0.33 0.17 0.5 ]
 [0.   0.   0.5  0.33 0.17 0.5 ]
 [0.   0.   0.   0.67 0.5  0.67]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.8 1.2 0.8]
 [0.  0.  1.2 1.  0.8]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
None


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  0.  1.]
 [-1. -1.  1.  0.  1.]
 [ 1.  0.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  2  0]]
row HD
[[0.   0.   0.5  0.33 0.17 0.5 ]
 [0.   0.   0.5  0.33 0.17 0.5 ]
 [0.   0.   0.   0.67 0.5  0.67]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.8 1.2 0.8]
 [0.  0.  1.2 1.  0.8]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  0.  1.  1.]
 [-1. -1.  1.  0.  1.  1.]
 [ 1.  0.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  2  4  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  2  0  0]]
row HD
[[0.   0.   0.5  0.5  0.17 0.67]
 [0.   0.   0.5  0.5  0.17 0.67]
 [0.   0.   0.   0.83 0.5  0.83]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.67 1.   0.67 0.5 ]
 [0.   0.   1.   0.83 0.67 0.83]
 [0.   0.   0.   0.67 0.33 0.17]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  0.  1.  1. -1.]
 [-1. -1.  1.  0.  1.  1. -1.]
 [ 1.  0.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  0.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  2  0  0]]
row HD
[[0.   0.   0.5  0.67 0.17 0.83]
 [0.   0.   0.5  0.67 0.17 0.83]
 [0.   0.   0.   1.   0.5  1.  ]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.57 0.86 0.57 0.43 0.43]
 [0.   0.   0.86 0.71 0.57 0.71 0.43]
 [0.   0.   0.   0.57 0.29 0.14 0.71]
 [0.   0.   0.   0.   0.57 0.71 0.57]
 [0.   0.   0.   0.   0.   0.14 0.86]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  0.  1.  1. -1.  1.]
 [-1. -1.  1.  0.  1.  1. -1.  1.]
 [ 1.  0.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  0. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  2  0  0]]
row HD
[[0.   0.   0.67 0.67 0.17 1.  ]
 [0.   0.   0.67 0.67 0.17 1.  ]
 [0.   0.   0.   1.17 0.67 1.  ]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.5  0.75 0.5  0.38 0.38 0.62]
 [0.   0.   0.75 0.62 0.5  0.62 0.38 0.75]
 [0.   0.   0.   0.5  0.25 0.12 0.62 0.12]
 [0.   0.   0.   0.   0.5  0.62 0.5  0.38]
 [0.   0.   0.   0.   0.   0.12 0.75 0.38]
 [0.   0.   0.   0.   0.   0.   0.75 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1.  0.  1.  1. -1.  1.  0.]
 [-1. -1.  1.  0.  1.  1. -1.  1.  0.]
 [ 1.  0.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  0. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 3  0  0  1  0  0]]
row HD
[[0.   0.   0.83 0.83 0.33 1.17]
 [0.   0.   0.83 0.83 0.33 1.17]
 [0.   0.   0.   1.33 0.83 1.  ]
 [0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.22 0.44 0.67 0.44 0.33 0.33 0.56 0.33]
 [0.   0.   0.67 0.56 0.44 0.56 0.33 0.67 0.33]
 [0.   0.   0.   0.44 0.22 0.11 0.56 0.11 0.56]
 [0.   0.   0.   0.   0.44 0.56 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.11 0.67 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.67 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.985, 0.923, 0.94, 0.889, 0.896, 0.896, 0.889, 0.925, 0.861]
cutting matrix
[[-1. -1.  1.  1.  1.  0.]
 [-1. -1.  1.  1.  1.  0.]
 [ 1.  0.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  2  4  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  2  0  0]]


SVM classifier
Time: 2019-01-05 23:01:45
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  0. -1.  0.]
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [14  1  0  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  1  0  0  1  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0.  1.  0.  0.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0.  0.]
 [-1.  1.]
 [ 0.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  0  1  3]]
row HD
[[0.   0.17 0.17 0.17 0.33 0.17]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  0. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  0.]
 [ 1. -1.  0.]
 [ 0.  0.  0.]
 [ 0.  0. -1.]
 [-1.  1.  0.]
 [ 0.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  1  0  1  2]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.33]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.957, 0.978, 0.727]
cutting matrix
[[ 0. -1.  0.]
 [ 1. -1.  0.]
 [ 0.  0.  0.]
 [ 0.  0. -1.]
 [-1.  1.  0.]
 [ 0.  1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  1  0  1  2]]


SVM classifier
Time: 2019-01-05 23:01:45
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
confusion matrix
[[15  2  0  0  0  0  0  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [15  2  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  0  0  0  0  0]
 [ 5 10  0  0  0  0  0  0  0  0]
 [16  4  0  0  0  0  0  0  0  0]
 [ 9 13  0  0  0  0  0  0  0  0]
 [11  2  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]]
confusion matrix
[[15  0  0  0  0  0  2  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [20  1  0  0  0  0  1  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [15  1  0  0  0  0  1  0  0  0]
 [19  0  0  0  0  0  1  0  0  0]
 [ 5  1  0  0  0  0  9  0  0  0]
 [16  4  0  0  0  0  0  0  0  0]
 [ 9  1  0  0  0  0 12  0  0  0]
 [11  2  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.  0.  0.2 0.  0.2 0. ]
 [0.  0.  0.1 0.  0.1 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.  0.2 0.  0.2 0. ]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[11  0  4  0  0  0  2  0  0  0]
 [ 0 24  2  0  0  0  0  0  0  0]
 [ 6  1 14  0  0  0  1  0  0  0]
 [ 1 12  3  0  0  0  0  0  0  0]
 [ 1  1 14  0  0  0  1  0  0  0]
 [ 0  0 19  0  0  0  1  0  0  0]
 [ 0  1  5  0  0  0  9  0  0  0]
 [15  4  1  0  0  0  0  0  0  0]
 [ 2  1  7  0  0  0 12  0  0  0]
 [ 1  2 10  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.1 0.3 0.  0.3 0.1]
 [0.  0.  0.1 0.  0.1 0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.  0.2 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 2.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  1.  0.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1.  1.]]
confusion matrix
[[11  0  0  0  3  1  2  0  0  0]
 [ 0 24  0  0  2  0  0  0  0  0]
 [ 6  1 12  0  1  1  1  0  0  0]
 [ 1  3  1  9  0  2  0  0  0  0]
 [ 1  1  2  0  9  3  1  0  0  0]
 [ 0  0  1  0  0 18  1  0  0  0]
 [ 0  1  1  0  3  1  9  0  0  0]
 [15  3  0  1  0  1  0  0  0  0]
 [ 2  1  2  0  1  4 12  0  0  0]
 [ 1  0  0  2  1  9  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.2 0.1 0.4 0.  0.4 0.1]
 [0.  0.  0.2 0.1 0.1 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.2 0.1 0.1 0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.5  0.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  1.  0.]
 [-1.  1.  1. -1.  0.]
 [ 1.  1.  1.  0.  0.]
 [-1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1.]]
confusion matrix
[[10  0  4  0  0  0  0  1  2  0]
 [ 0 24  1  0  1  0  0  0  0  0]
 [ 5  1 13  0  0  1  0  1  1  0]
 [ 0  3  1  9  0  2  0  1  0  0]
 [ 0  1  2  0  9  3  1  1  0  0]
 [ 0  0  3  0  0 16  0  0  1  0]
 [ 0  1  1  0  3  1  0  0  9  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  1  2  0  1  4  0  0 12  0]
 [ 0  0  0  2  1  9  0  1  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.3 0.2 0.5 0.1 0.4 0.2]
 [0.  0.  0.2 0.2 0.2 0.3 0.2 0.4 0.1 0.3]
 [0.  0.  0.  0.3 0.2 0.2 0.4 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 1.2 0.6 1.2]
 [0.  0.  0.8 0.6 1. ]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.]
 [-1.  1.  1. -1.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.]]
confusion matrix
[[10  0  1  0  3  0  0  1  2  0]
 [ 0 24  0  0  2  0  0  0  0  0]
 [ 5  1 12  0  1  0  0  1  1  1]
 [ 0  3  1  9  0  1  0  1  0  1]
 [ 0  1  1  0 10  2  0  1  1  1]
 [ 0  0  3  0  0 16  1  0  0  0]
 [ 0  1  1  0  1  1  8  0  3  0]
 [ 3  3  0  1  0  0  0 12  0  1]
 [ 2  1  2  0  0  4  5  0  8  0]
 [ 0  0  0  2  1  7  0  1  0  2]]
row HD
[[0.  0.4 0.2 0.4 0.4 0.3 0.5 0.1 0.5 0.2]
 [0.  0.  0.3 0.2 0.2 0.3 0.3 0.5 0.1 0.4]
 [0.  0.  0.  0.4 0.3 0.3 0.4 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.4 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.   0.5  1.   1.17]
 [0.   0.   0.67 0.5  0.83 0.83]
 [0.   0.   0.   1.17 1.17 0.5 ]
 [0.   0.   0.   0.   0.5  1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.  1.]
 [-1.  1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1.  0.  0. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.]]
confusion matrix
[[10  0  0  0  3  0  0  1  2  1]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 5  1 12  0  1  0  0  1  1  1]
 [ 0  0  1 12  0  1  0  1  0  1]
 [ 0  1  1  0 10  2  0  1  1  1]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  1  1  6  0  3  0]
 [ 3  3  0  1  0  0  0 12  0  1]
 [ 2  1  3  0  0  4  2  0 10  0]
 [ 0  0  0  2  1  7  0  1  0  2]]
row HD
[[0.  0.4 0.2 0.5 0.4 0.4 0.6 0.1 0.5 0.3]
 [0.  0.  0.3 0.3 0.2 0.4 0.4 0.5 0.1 0.5]
 [0.  0.  0.  0.5 0.3 0.4 0.5 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.86 0.43 0.86 1.   0.57]
 [0.   0.   0.57 0.43 0.71 0.71 0.57]
 [0.   0.   0.   1.   1.   0.43 0.86]
 [0.   0.   0.   0.   0.43 1.   1.  ]
 [0.   0.   0.   0.   0.   1.   1.14]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.  1.  0.]
 [-1.  1.  1. -1.  0.  1.  1.  0.]
 [ 1.  1.  1.  0.  0. -1.  1.  0.]
 [-1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.]
 [-1. -1.  1. -1.  0.  1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.]]
confusion matrix
[[10  0  0  0  3  0  0  0  2  2]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 5  1 12  0  1  0  0  1  1  1]
 [ 0  2  1 10  0  1  0  1  0  1]
 [ 0  1  1  0 10  2  0  1  1  1]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  1  1  6  0  3  0]
 [ 3  3  0  1  0  0  0 12  0  1]
 [ 2  1  3  0  0  4  2  0 10  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.4 0.2 0.6 0.4 0.5 0.7 0.1 0.5 0.4]
 [0.  0.  0.3 0.4 0.2 0.5 0.5 0.5 0.1 0.6]
 [0.  0.  0.  0.6 0.3 0.5 0.6 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.5 0.1 0.5 0.5 0.5 0.2]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.75 0.38 0.75 0.88 0.5  0.88]
 [0.   0.   0.5  0.38 0.62 0.62 0.5  0.75]
 [0.   0.   0.   0.88 0.88 0.38 0.75 0.88]
 [0.   0.   0.   0.   0.38 0.88 0.88 0.62]
 [0.   0.   0.   0.   0.   0.88 1.   0.25]
 [0.   0.   0.   0.   0.   0.   0.62 0.88]
 [0.   0.   0.   0.   0.   0.   0.   1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.  1.  0. -1.]
 [-1.  1.  1. -1.  0.  1.  1.  0. -1.]
 [ 1.  1.  1.  0.  0. -1.  1.  0.  1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0. -1.]
 [-1. -1.  1. -1.  0.  1.  1.  0. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.]]
confusion matrix
[[10  3  0  0  0  0  0  0  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 16  0  0  0  0  1  1  1]
 [ 0  2  1 10  0  1  0  1  0  1]
 [ 0  1  1  0 10  2  0  1  1  1]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  1  1  6  0  3  0]
 [ 3  3  0  1  0  0  0 12  0  1]
 [ 2  1  3  0  0  4  2  0 10  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.4 0.3 0.6 0.5 0.6 0.7 0.1 0.5 0.5]
 [0.  0.  0.4 0.4 0.3 0.6 0.5 0.5 0.1 0.7]
 [0.  0.  0.  0.7 0.3 0.5 0.7 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.6 0.2 0.5 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.7 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.67 0.33 0.67 0.78 0.44 0.78 0.22]
 [0.   0.   0.44 0.33 0.56 0.56 0.44 0.67 0.44]
 [0.   0.   0.   0.78 0.78 0.33 0.67 0.78 0.44]
 [0.   0.   0.   0.   0.33 0.78 0.78 0.56 0.56]
 [0.   0.   0.   0.   0.   0.78 0.89 0.22 0.78]
 [0.   0.   0.   0.   0.   0.   0.56 0.78 0.56]
 [0.   0.   0.   0.   0.   0.   0.   1.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 0.  0.  0.  1.  0.  1. -1.  0.  0.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.  1.  0. -1. -1.]
 [-1.  1.  1. -1.  0.  1.  1.  0. -1.  1.]
 [ 1.  1.  1.  0.  0. -1.  1.  0.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0. -1.  1.]
 [-1. -1.  1. -1.  0.  1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1. -1.]]
confusion matrix
[[ 9  0  0  0  3  0  0  1  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 2  2 16  0  0  0  0  0  1  1]
 [ 1  2  1 10  0  1  0  0  0  1]
 [ 1  1  0  0 10  2  0  0  1  2]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  1  1  6  0  3  0]
 [ 2  3  0  1  0  0  0 13  0  1]
 [ 2  1  3  0  0  4  2  0 10  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.5 0.4 0.6 0.5 0.6 0.8 0.2 0.6 0.5]
 [0.  0.  0.4 0.5 0.4 0.7 0.5 0.5 0.1 0.8]
 [0.  0.  0.  0.8 0.4 0.6 0.7 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.6 0.2 0.6 0.6 0.6 0.3]
 [0.  0.  0.  0.  0.  0.4 0.7 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.6 0.8 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.6 0.3 0.6 0.7 0.4 0.7 0.2 0.7]
 [0.  0.  0.4 0.3 0.5 0.5 0.4 0.6 0.4 0.7]
 [0.  0.  0.  0.7 0.7 0.3 0.6 0.7 0.4 0.5]
 [0.  0.  0.  0.  0.3 0.7 0.7 0.5 0.5 0.8]
 [0.  0.  0.  0.  0.  0.7 0.8 0.2 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  11 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.  1.  0. -1. -1.  1.]
 [-1.  1.  1. -1.  0.  1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  0.  0. -1.  1.  0.  1.  1.  0.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  0.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  0.]
 [ 1.  1. -1.  1.  1. -1.  1.  0. -1.  1.  1.]
 [-1. -1.  1. -1.  0.  1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1. -1.  0.]]
confusion matrix
[[ 9  0  0  0  3  0  0  1  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 2  2 16  0  0  0  0  0  1  1]
 [ 1  2  1 10  0  1  0  0  0  1]
 [ 1  1  0  0 10  2  0  0  1  2]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  1  1  6  0  3  0]
 [ 2  3  0  1  0  0  0 13  0  1]
 [ 2  1  3  0  0  4  2  0 10  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.6 0.5 0.7 0.6 0.7 0.9 0.2 0.7 0.6]
 [0.  0.  0.5 0.5 0.4 0.7 0.6 0.6 0.1 0.9]
 [0.  0.  0.  0.9 0.5 0.7 0.7 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.2 0.7 0.7 0.6 0.4]
 [0.  0.  0.  0.  0.  0.4 0.8 0.7 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.9 0.7 0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.55 0.27 0.55 0.64 0.36 0.64 0.18 0.64 0.45]
 [0.   0.   0.36 0.27 0.45 0.45 0.36 0.55 0.36 0.64 0.64]
 [0.   0.   0.   0.64 0.64 0.27 0.55 0.64 0.36 0.45 0.91]
 [0.   0.   0.   0.   0.27 0.64 0.64 0.45 0.45 0.73 0.36]
 [0.   0.   0.   0.   0.   0.64 0.73 0.18 0.64 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.45 0.64 0.45 0.55 0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.82 0.55 0.27 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.91 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  0.  1. -1.  1. -1.  1. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1. -1.  1.  0. -1.  1.  0. -1. -1.  1.  1.]
 [-1.  1.  1. -1.  0.  1.  1.  0. -1.  1. -1. -1.]
 [ 1.  1.  1.  0.  0. -1.  1.  0.  1.  1.  0.  0.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  0.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  0.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  0.  1.  1.  0. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1. -1.  0.  1.]]
confusion matrix
[[ 9  0  0  0  3  0  0  1  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 2  2 16  0  0  0  0  0  1  1]
 [ 1  2  1 10  0  1  0  0  0  1]
 [ 1  1  0  0 10  2  0  0  1  2]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  0  2  6  0  3  0]
 [ 2  3  0  1  0  0  0 13  0  1]
 [ 2  1  3  0  0  4  4  0  8  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.7 0.6 0.7 0.7 0.7 0.9 0.2 0.8 0.6]
 [0.  0.  0.6 0.6 0.4 0.8 0.7 0.7 0.1 1. ]
 [0.  0.  0.  1.  0.6 0.8 0.8 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.7 0.2 0.7 0.7 0.7 0.4]
 [0.  0.  0.  0.  0.  0.5 0.9 0.8 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 0.7 0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.5  0.25 0.5  0.58 0.33 0.58 0.17 0.58 0.42 0.33]
 [0.   0.   0.33 0.25 0.42 0.42 0.33 0.5  0.33 0.58 0.58 0.33]
 [0.   0.   0.   0.58 0.58 0.25 0.5  0.58 0.33 0.42 0.83 0.5 ]
 [0.   0.   0.   0.   0.25 0.58 0.58 0.42 0.42 0.67 0.33 0.08]
 [0.   0.   0.   0.   0.   0.58 0.67 0.17 0.58 0.67 0.58 0.33]
 [0.   0.   0.   0.   0.   0.   0.42 0.58 0.42 0.5  0.83 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.75 0.5  0.25 0.5  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.83 0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.58 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.824, 0.915, 0.883, 0.807, 0.693, 0.75, 0.846, 0.656, 0.84, 0.835, 0.812, 0.771]
cutting matrix
[[ 1.  1. -1.  1.  0. -1. -1.  1.]
 [-1.  1.  1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0.]
 [-1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  0.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.  1.  0.]
 [ 1.  1. -1.  1.  0. -1.  1.  1.]
 [-1. -1.  1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1.  0.]]
cutting matrix's confusion matrix
[[ 9  0  0  0  3  0  0  1  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 2  2 15  0  1  1  0  0  1  0]
 [ 1  2  1 10  0  2  0  0  0  0]
 [ 1  1  0  0 11  0  0  0  1  3]
 [ 0  0  0  0  0 16  1  0  0  3]
 [ 0  1  3  0  0  2  6  0  3  0]
 [ 2  3  0  1  0  0  0 13  0  1]
 [ 2  1  3  0  0  4  2  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]


SVM classifier
Time: 2019-01-05 23:01:55
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
confusion matrix
[[13  3  0  0  0  0  0  0  0  1]
 [ 0 26  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  3]
 [ 4 16  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [ 0  9  0  0  0  0  0  0  0  4]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  0.]
 [-1. -1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [-1.  1.]
 [ 1.  0.]]
confusion matrix
[[12  3  1  0  0  0  0  0  0  1]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 2  2 17  0  0  0  0  1  0  0]
 [ 0  4  1  8  0  0  0  3  0  0]
 [ 0 12  1  0  0  0  0  1  0  3]
 [ 3 16  1  0  0  0  0  0  0  0]
 [10  2  3  0  0  0  0  0  0  0]
 [ 3  4  0  1  0  0  0 12  0  0]
 [15  4  3  0  0  0  0  0  0  0]
 [ 0  7  0  2  0  0  0  0  0  4]]
row HD
[[0.  0.2 0.1 0.1 0.2 0.2 0.  0.1 0.  0.2]
 [0.  0.  0.2 0.1 0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 0.  0. -1.]
 [-1. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]
 [-1.  0. -1.]
 [-1.  1.  1.]
 [ 1.  0.  1.]]
confusion matrix
[[12  0  1  0  3  0  0  0  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 3  1 17  0  0  1  0  0  0  0]
 [ 1  0  1  8  0  4  0  2  0  0]
 [ 0  2  1  0 10  0  0  1  0  3]
 [ 3  0  1  0  0 16  0  0  0  0]
 [10  0  3  0  0  2  0  0  0  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [15  0  3  0  0  4  0  0  0  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.3 0.1 0.2 0.2 0.3 0.  0.2 0.  0.2]
 [0.  0.  0.3 0.2 0.1 0.1 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.3 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2. 2.]
 [0. 0. 2.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 0.  0. -1.  1.]
 [-1. -1.  1.  1.]
 [ 0.  1.  0.  1.]
 [ 0.  0.  1.  1.]
 [ 0.  0.  0. -1.]
 [-1.  1.  1.  1.]
 [-1.  0. -1.  0.]
 [-1.  1.  1.  1.]
 [ 1.  0.  1.  1.]]
confusion matrix
[[10  0  1  0  0  4  2  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 17  0  0  0  2  0  0  0]
 [ 1  4  1  8  0  0  0  2  0  0]
 [ 0  2  1  0 10  0  0  1  0  3]
 [ 2 16  1  0  0  0  1  0  0  0]
 [ 1  2  3  0  0  0  9  0  0  0]
 [ 2  5  0  1  0  1  0 11  0  0]
 [ 2  4  3  0  0  0 13  0  0  0]
 [ 0  6  0  2  1  1  0  0  0  3]]
row HD
[[0.  0.4 0.2 0.3 0.3 0.3 0.1 0.3 0.1 0.3]
 [0.  0.  0.3 0.2 0.1 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.4 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.5  2.  ]
 [0.   0.   1.5  1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1. -1.]
 [ 0.  0. -1.  1.  0.]
 [-1. -1.  1.  1.  0.]
 [ 0.  1.  0.  1.  0.]
 [ 0.  0.  1.  1. -1.]
 [ 0.  0.  0. -1. -1.]
 [-1.  1.  1.  1. -1.]
 [-1.  0. -1.  0. -1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  0.  1.  1.  1.]]
confusion matrix
[[10  0  1  0  0  4  2  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  1 17  0  1  0  2  0  0  0]
 [ 1  0  1  8  4  0  0  2  0  0]
 [ 0  2  1  0 12  0  0  1  0  1]
 [ 2  0  1  0 16  0  1  0  0  0]
 [ 1  0  3  0  2  0  9  0  0  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  3  0  4  0 13  0  0  0]
 [ 0  0  0  2 10  1  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.4 0.3 0.3 0.1 0.3 0.1 0.4]
 [0.  0.  0.3 0.2 0.2 0.3 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.3 0.5 0.2 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.2 1.6 0.6]
 [0.  0.  1.2 1.2 1.8]
 [0.  0.  0.  1.  1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  0.  1.  0.  1. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1. -1.  1.]
 [ 0.  0. -1.  1.  0.  0.]
 [-1. -1.  1.  1.  0.  1.]
 [ 0.  1.  0.  1.  0.  0.]
 [ 0.  0.  1.  1. -1. -1.]
 [ 0.  0.  0. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1.  0. -1.  0. -1.  1.]
 [-1.  1.  1.  1. -1.  1.]
 [ 1.  0.  1.  1.  1. -1.]]
confusion matrix
[[ 9  0  1  0  0  5  2  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  1 17  0  1  0  2  0  0  0]
 [ 1  0  1  8  4  2  0  0  0  0]
 [ 0  2  0  0 12  1  1  0  0  1]
 [ 0  0  0  0 17  2  1  0  0  0]
 [ 1  0  3  0  2  0  9  0  0  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  3  0  4  0 13  0  0  0]
 [ 0  0  0  2 10  1  0  0  0  0]]
row HD
[[0.  0.6 0.3 0.5 0.4 0.4 0.1 0.3 0.1 0.5]
 [0.  0.  0.4 0.2 0.3 0.4 0.5 0.4 0.5 0.4]
 [0.  0.  0.  0.4 0.4 0.6 0.2 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.6 0.4 0.5]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   1.33 0.5  1.33]
 [0.   0.   1.   1.   1.5  1.  ]
 [0.   0.   0.   0.83 1.17 0.83]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.761, 0.674, 0.836, 0.821, 0.782, 0.849]
cutting matrix
[[ 1. -1.  1.]
 [-1.  0.  0.]
 [ 1.  0.  1.]
 [ 0.  0.  0.]
 [ 1. -1. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]]
cutting matrix's confusion matrix
[[12  0  3  0  2  0  0  0  0  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 2  1 18  0  0  1  0  0  0  0]
 [ 1  0  1  8  0  6  0  0  0  0]
 [ 1  0  0  0 13  3  0  0  0  0]
 [ 1  0  0  0  3 16  0  0  0  0]
 [12  0  1  0  0  2  0  0  0  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [15  0  3  0  0  4  0  0  0  0]
 [ 0  0  0  2  5  6  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:02:00
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.  0.2]
 [0.  0.  0.4 0.2 0. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.75]
 [0.   0.   0.5  0.75]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.696, 0.839, 0.857, 0.839]
cutting matrix
[[ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:02:01
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0. -1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  1  4  0  0]
 [ 3  1  1  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [-1. -1.]
 [ 0. -1.]
 [ 0. -1.]
 [-1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  1  4  0  0]
 [ 3  1  1  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1. -1. -1.  1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [-1. -1. -1.]
 [ 0. -1. -1.]
 [ 0. -1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  4  1]
 [ 3  0  0  1  1]
 [ 2  0  0  0  1]]
row HD
[[0.  0.6 0.6 0.4 0.4]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  1.  1.]
 [-1. -1. -1.  0.]
 [ 0. -1. -1. -1.]
 [ 0. -1.  1.  1.]
 [-1.  1.  1.  0.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  5  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 0.8 0.4 0.6]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 1.  ]
 [0.   0.   0.5  1.  ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  1.  1. -1.]
 [-1. -1. -1.  0.  1.]
 [ 0. -1. -1. -1. -1.]
 [ 0. -1.  1.  1. -1.]
 [-1.  1.  1.  0.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  5  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.  0.8 0.4 0.8]
 [0.  0.  0.6 0.8 0.4]
 [0.  0.  0.  0.4 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.8 1. ]
 [0.  0.  0.4 0.8 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  0.  1.  1. -1.  0.]
 [-1. -1. -1.  0.  1.  0.]
 [ 0. -1. -1. -1. -1. -1.]
 [ 0. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  0.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  5  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.  1.  0.6 1. ]
 [0.  0.  0.8 1.  0.6]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.67 0.83 0.83]
 [0.   0.   0.33 0.67 0.33 0.17]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.619, 0.29, 0.589, 0.667, 0.696, 0.294]
cutting matrix
[[ 1. -1.  0.]
 [-1.  1.  0.]
 [ 0. -1. -1.]
 [ 0. -1. -1.]
 [-1.  1.  1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  5  0  0]
 [ 3  0  2  0  0]
 [ 2  0  1  0  0]]


SVM classifier
Time: 2019-01-05 23:02:02
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  7  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.   0.  ]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  0  7  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.17 0.   0.  ]
 [0.   0.   0.33 0.5  0.33 0.33]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1.  1. -1.  1.]
 [-1. -1. -1. -1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  0  2]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.5  0.5  0.33 0.   0.17]
 [0.   0.   0.33 0.5  0.5  0.33]
 [0.   0.   0.   0.17 0.5  0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.25 0.75]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1.  0.]
 [-1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  0.]
 [-1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  0  2]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.67 0.67 0.5  0.   0.33]
 [0.   0.   0.5  0.5  0.67 0.33]
 [0.   0.   0.   0.33 0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.2 0.6 1. ]
 [0.  0.  0.4 0.4 1.2]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  0. -1.]
 [-1.  1.  1.  1. -1.  0.]
 [-1.  1. -1.  1.  0.  0.]
 [-1. -1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  0.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  0  2]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.83 0.83 0.67 0.   0.5 ]
 [0.   0.   0.67 0.67 0.83 0.5 ]
 [0.   0.   0.   0.33 0.83 0.5 ]
 [0.   0.   0.   0.   0.67 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.17 0.5  0.83 1.  ]
 [0.   0.   0.33 0.33 1.   0.83]
 [0.   0.   0.   0.33 1.   1.  ]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  0. -1. -1.]
 [-1.  1.  1.  1. -1.  0. -1.]
 [-1.  1. -1.  1.  0.  0.  0.]
 [-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  0.  0.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  0  2]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   1.   1.   0.83 0.   0.67]
 [0.   0.   0.67 0.83 1.   0.67]
 [0.   0.   0.   0.5  1.   0.67]
 [0.   0.   0.   0.   0.83 0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.14 0.43 0.71 0.86 0.71]
 [0.   0.   0.29 0.29 0.86 0.71 0.71]
 [0.   0.   0.   0.29 0.86 0.86 0.86]
 [0.   0.   0.   0.   0.86 0.86 0.86]
 [0.   0.   0.   0.   0.   0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
efficient_count == 3

**********      classifier acc  **************
[0.955, 0.985, 0.955, 0.985, 1.0, 0.975, 0.98]
cutting matrix
[[-1. -1.  1.]
 [-1.  1.  0.]
 [ 1.  1. -1.]
 [ 1.  1.  0.]
 [-1. -1.  1.]
 [-1.  1.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:02:04
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [12  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1.  1.  0. -1.  1.  1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [ 1. -1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.   0.17 0.33]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0. -1. -1.  1.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [ 1. -1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.   0.17 0.33]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0.  0.  0.  1. -1.  0.]
select_j_column
[-1.  1.  1. -1. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0.  1.  0.]
 [ 1.  1.  0.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1.  0.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 10  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.17 0.33 0.33]
 [0.   0.   0.17 0.33 0.5  0.33]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.933, 0.949, 0.947]
cutting matrix
[[ 0. -1.  0.]
 [ 0.  1.  0.]
 [ 1.  1.  0.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1.  0.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 1 10  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]


SVM classifier
Time: 2019-01-05 23:02:05
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [ 7 19  0  0  0  0  0  0  0  0]
 [11  6  0  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3 14  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0 17  0  0  0  0  0  0  0]
 [ 7  0 19  0  0  0  0  0  0  0]
 [11  0  6  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3  0 14  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.1 0.2 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
8
new_column
None


============== iter  3 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0 17  0  0  0  0  0  0  0]
 [ 7  0 19  0  0  0  0  0  0  0]
 [11  0  6  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3  0 14  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.1 0.2 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]]
confusion matrix
[[13  0  1  4  0  0  0  0  0  0]
 [ 0  0  0  5 17  0  0  0  0  0]
 [ 1  0 19  6  0  0  0  0  0  0]
 [ 0  0  1 11  5  0  0  0  0  0]
 [ 0  0  0 23  0  0  0  0  0  0]
 [ 0  0  0 19  0  0  0  0  0  0]
 [ 2  0  0 17  0  0  0  0  0  0]
 [ 0  0  2  3 12  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.1 0.2 0.2 0.1 0.1]
 [0.  0.  0.2 0.2 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.67]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [ 1. -1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [ 1. -1.  1.  1.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[14  0  0  0  0  4  0  0  0  0]
 [ 0  0  0  4 17  1  0  0  0  0]
 [ 3  0 17  2  0  4  0  0  0  0]
 [ 0  0  1 10  5  1  0  0  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 18  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 2  0  0  1 12  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.2 0.1 0.3 0.2 0.1 0.1]
 [0.  0.  0.3 0.3 0.1 0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.25 1.  ]
 [0.   0.   1.75 1.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4 17  1  0  0  0  0]
 [ 1  0 19  2  0  4  0  0  0  0]
 [ 0  0  1 10  5  1  0  0  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 18  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 0  0  2  1 12  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.3 0.2 0.1 0.4 0.2 0.1 0.1]
 [0.  0.  0.3 0.3 0.2 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.4 0.1 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  0.8 1.4]
 [0.  0.  1.4 1.2 0.6]
 [0.  0.  0.  0.6 1.2]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4 17  1  0  0  0  0]
 [ 1  0 19  2  0  4  0  0  0  0]
 [ 0  0  1 10  5  1  0  0  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 18  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 0  0  2  1 12  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.4 0.3 0.2 0.5 0.3 0.2 0.2]
 [0.  0.  0.3 0.3 0.2 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.4 0.1 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.83 0.67 1.17 1.  ]
 [0.   0.   1.17 1.   0.5  1.33]
 [0.   0.   0.   0.5  1.   0.17]
 [0.   0.   0.   0.   1.5  0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.]
 [-1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.]
 [-1. -1.  1. -1.  1.  1.  0.]
 [-1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4 17  1  0  0  0  0]
 [ 1  0 19  2  0  3  0  0  1  0]
 [ 0  0  1 10  5  0  0  0  1  0]
 [ 0  0  0  2  0  2  0  0 19  0]
 [ 0  0  0  1  0  5  0  0 13  0]
 [ 2  0  0  0  0 16  0  0  1  0]
 [ 0  0  2  1 12  2  0  0  0  0]
 [ 2  0  0  0  0 10  0  0  2  0]
 [ 0  0  0  3  0  1  0  0  9  0]]
row HD
[[0.  0.6 0.5 0.5 0.4 0.3 0.6 0.4 0.3 0.3]
 [0.  0.  0.4 0.4 0.2 0.4 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.2 0.4 0.4 0.1 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.4 0.2 0.1 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.71 0.57 1.   0.86 0.86]
 [0.   0.   1.   0.86 0.43 1.14 0.86]
 [0.   0.   0.   0.43 0.86 0.14 1.43]
 [0.   0.   0.   0.   1.29 0.57 1.29]
 [0.   0.   0.   0.   0.   0.71 0.86]
 [0.   0.   0.   0.   0.   0.   1.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1.  0.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.]
 [-1. -1.  1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.]
 [-1. -1.  1. -1.  1.  1.  0.  0.]
 [-1. -1.  1.  1. -1.  1. -1.  0.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  3  0  0  1  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  2  0  0 19  0]
 [ 0  0  0  1  0  5  0  0 13  0]
 [ 2  0  0  0  0 16  0  0  1  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0 10  0  0  2  0]
 [ 0  0  0  3  0  1  0  0  9  0]]
row HD
[[0.  0.7 0.6 0.6 0.4 0.3 0.7 0.5 0.3 0.4]
 [0.  0.  0.5 0.5 0.3 0.5 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.2 0.5 0.5 0.1 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.5 0.3 0.1 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.2 0.4 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.62 0.5  0.88 0.75 0.75 0.75]
 [0.   0.   0.88 0.75 0.38 1.   0.75 1.25]
 [0.   0.   0.   0.38 0.75 0.12 1.25 0.88]
 [0.   0.   0.   0.   1.12 0.5  1.12 0.75]
 [0.   0.   0.   0.   0.   0.62 0.75 1.25]
 [0.   0.   0.   0.   0.   0.   1.25 0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  3  0  0  1  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  2  0  0 19  0]
 [ 0  0  0  1  0  5  0  0 13  0]
 [ 2  0  0  0  0 16  0  0  1  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0 10  0  0  2  0]
 [ 0  0  0  3  0  1  0  0  9  0]]
row HD
[[0.  0.8 0.7 0.7 0.4 0.3 0.8 0.5 0.3 0.4]
 [0.  0.  0.6 0.6 0.4 0.6 0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.2 0.6 0.6 0.1 0.5 0.7 0.6]
 [0.  0.  0.  0.  0.6 0.4 0.1 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.2 0.5 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.56 0.44 0.78 0.67 0.67 0.67 0.78]
 [0.   0.   0.78 0.67 0.33 0.89 0.67 1.11 0.44]
 [0.   0.   0.   0.33 0.67 0.11 1.11 0.78 0.78]
 [0.   0.   0.   0.   1.   0.44 1.   0.67 1.11]
 [0.   0.   0.   0.   0.   0.56 0.67 1.11 0.11]
 [0.   0.   0.   0.   0.   0.   1.11 0.78 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.  1.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1. -1.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1. -1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.8 0.7 0.7 0.4 0.4 0.8 0.6 0.3 0.5]
 [0.  0.  0.6 0.6 0.4 0.7 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.2 0.6 0.7 0.1 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.6 0.5 0.1 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.5 0.4 0.7 0.6 0.6 0.6 0.7 0.6]
 [0.  0.  0.7 0.6 0.3 0.8 0.6 1.  0.4 0.6]
 [0.  0.  0.  0.3 0.6 0.1 1.  0.7 0.7 0.5]
 [0.  0.  0.  0.  0.9 0.4 0.9 0.6 1.  0.6]
 [0.  0.  0.  0.  0.  0.5 0.6 1.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  1.  0.7 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1. -1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.  1.  1.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.8 0.7 0.7 0.5 0.5 0.8 0.7 0.4 0.6]
 [0.  0.  0.6 0.6 0.5 0.8 0.5 0.6 0.6 0.7]
 [0.  0.  0.  0.2 0.7 0.8 0.1 0.7 0.8 0.8]
 [0.  0.  0.  0.  0.7 0.6 0.1 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.3 0.6 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.45 0.36 0.64 0.55 0.55 0.55 0.64 0.55 0.55]
 [0.   0.   0.64 0.55 0.27 0.73 0.55 0.91 0.36 0.55 0.36]
 [0.   0.   0.   0.27 0.55 0.09 0.91 0.64 0.64 0.45 0.64]
 [0.   0.   0.   0.   0.82 0.36 0.82 0.55 0.91 0.55 0.73]
 [0.   0.   0.   0.   0.   0.45 0.55 0.91 0.09 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.91 0.64 0.55 0.36 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.55 0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.91 0.64 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.  1.  1.  0.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.  1.  1.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1.  0.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1.  0.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1. -1.]]
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.9 0.8 0.8 0.6 0.6 0.9 0.8 0.5 0.7]
 [0.  0.  0.6 0.7 0.6 0.8 0.6 0.6 0.7 0.8]
 [0.  0.  0.  0.3 0.8 0.8 0.2 0.7 0.9 0.9]
 [0.  0.  0.  0.  0.7 0.7 0.1 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.4 0.6 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.8 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.42 0.33 0.58 0.5  0.5  0.5  0.58 0.5  0.5  0.58]
 [0.   0.   0.58 0.5  0.25 0.67 0.5  0.83 0.33 0.5  0.33 0.42]
 [0.   0.   0.   0.25 0.5  0.08 0.83 0.58 0.58 0.42 0.58 0.83]
 [0.   0.   0.   0.   0.75 0.33 0.75 0.5  0.83 0.5  0.67 0.58]
 [0.   0.   0.   0.   0.   0.42 0.5  0.83 0.08 0.25 0.08 0.58]
 [0.   0.   0.   0.   0.   0.   0.83 0.58 0.5  0.33 0.5  0.83]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.5  0.58 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.83 0.58 0.75 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1.  0.  1.  1. -1. -1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.  1.  1.  0.  1.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.  1.  1.  0.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1.  0.  1.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1.  0. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1. -1. -1.]]
confusion matrix
[[13  0  1  0  0  0  0  0  1  3]
 [ 0  0  0  4  0  0  0 17  0  1]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 19  0  0  0  2]
 [ 0  0  0  1  0 13  0  0  2  3]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  0  0 12  0  2]
 [ 2  0  0  0  0  2  0  0  9  1]
 [ 0  0  0  3  0  9  0  0  0  1]]
row HD
[[0.  1.  0.9 0.9 0.7 0.7 1.  0.8 0.6 0.7]
 [0.  0.  0.6 0.7 0.6 0.8 0.6 0.7 0.7 0.9]
 [0.  0.  0.  0.3 0.8 0.8 0.2 0.8 0.9 1. ]
 [0.  0.  0.  0.  0.7 0.7 0.1 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.4 0.6 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.46 0.38 0.31 0.54 0.46 0.46 0.46 0.54 0.46 0.46 0.54 0.46]
 [0.   0.   0.54 0.46 0.23 0.62 0.46 0.77 0.31 0.46 0.31 0.38 0.46]
 [0.   0.   0.   0.23 0.46 0.08 0.77 0.54 0.54 0.38 0.54 0.77 0.23]
 [0.   0.   0.   0.   0.69 0.31 0.69 0.46 0.77 0.46 0.62 0.54 0.46]
 [0.   0.   0.   0.   0.   0.38 0.46 0.77 0.08 0.23 0.08 0.54 0.23]
 [0.   0.   0.   0.   0.   0.   0.77 0.54 0.46 0.31 0.46 0.77 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.46 0.54 0.38 0.31 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.77 0.54 0.69 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.62 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  15 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  0.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.  1.  1.  0.  1.  0.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.  1.  1.  0.  1.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.  1.  0.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.  0.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1.  0.  1.  0.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1.  0. -1.  1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1. -1. -1.  0.]]
confusion matrix
[[13  0  1  0  0  0  0  0  1  3]
 [ 0  0  0  4  0  0  0 17  0  1]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 19  0  0  0  2]
 [ 0  0  0  1  0 13  0  0  2  3]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  0  0 12  0  2]
 [ 2  0  0  0  0  2  0  0  9  1]
 [ 0  0  0  3  0  9  0  0  0  1]]
row HD
[[0.  1.  0.9 0.9 0.7 0.7 1.1 0.9 0.7 0.7]
 [0.  0.  0.6 0.7 0.6 0.8 0.7 0.8 0.8 0.9]
 [0.  0.  0.  0.3 0.8 0.8 0.3 0.9 1.  1. ]
 [0.  0.  0.  0.  0.7 0.7 0.2 1.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.4 0.7 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.9 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.36 0.29 0.5  0.43 0.43 0.43 0.5  0.43 0.43 0.5  0.43 0.64]
 [0.   0.   0.5  0.43 0.21 0.57 0.43 0.71 0.29 0.43 0.29 0.36 0.43 0.57]
 [0.   0.   0.   0.21 0.43 0.07 0.71 0.5  0.5  0.36 0.5  0.71 0.21 0.64]
 [0.   0.   0.   0.   0.64 0.29 0.64 0.43 0.71 0.43 0.57 0.5  0.43 0.57]
 [0.   0.   0.   0.   0.   0.36 0.43 0.71 0.07 0.21 0.07 0.5  0.21 0.64]
 [0.   0.   0.   0.   0.   0.   0.71 0.5  0.43 0.29 0.43 0.71 0.14 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.5  0.36 0.29 0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.71 0.5  0.64 0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.43 0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.57 0.14 0.71]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  16 ================
current matrix is 
[[ 1. -1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  0.  0.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  0.  1.  1.  0.  1.  0.  0.]
 [-1. -1. -1. -1.  1.  1.  0.  0.  1.  1.  1.  0.  1.  0. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.  1.  0. -1.]
 [-1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.  0. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1.  0.  1.  0.  1.]
 [-1. -1.  1. -1.  1.  1.  0.  0.  1.  1.  1. -1.  1. -1. -1.]
 [-1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1.  0. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  0. -1. -1. -1. -1. -1.  0.  0.]]
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  2  0  0 19  0]
 [ 0  0  0  1  0  3  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0 11  0]
 [ 0  0  0  3  0  1  0  0  9  0]]
row HD
[[0.  1.  1.  1.  0.8 0.8 1.2 1.  0.8 0.7]
 [0.  0.  0.7 0.8 0.7 0.9 0.8 0.9 0.9 0.9]
 [0.  0.  0.  0.3 0.8 0.9 0.3 1.  1.  1.1]
 [0.  0.  0.  0.  0.7 0.8 0.2 1.1 0.7 0.8]
 [0.  0.  0.  0.  0.  0.5 0.7 0.6 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  1.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.33 0.27 0.47 0.4  0.4  0.4  0.47 0.4  0.4  0.47 0.4  0.6
  0.4 ]
 [0.   0.   0.47 0.4  0.2  0.53 0.4  0.67 0.27 0.4  0.27 0.33 0.4  0.53
  0.33]
 [0.   0.   0.   0.2  0.4  0.07 0.67 0.47 0.47 0.33 0.47 0.67 0.2  0.6
  0.47]
 [0.   0.   0.   0.   0.6  0.27 0.6  0.4  0.67 0.4  0.53 0.47 0.4  0.53
  0.33]
 [0.   0.   0.   0.   0.   0.33 0.4  0.67 0.07 0.2  0.07 0.47 0.2  0.6
  0.53]
 [0.   0.   0.   0.   0.   0.   0.67 0.47 0.4  0.27 0.4  0.67 0.13 0.6
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.47 0.33 0.27 0.53 0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.47 0.6  0.47 0.47 0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.4  0.27 0.53
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.53 0.13 0.67
  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.6
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.66, 0.883, 0.91, 0.771, 0.691, 0.947, 0.785, 0.635, 0.675, 0.67, 0.681, 0.673, 0.729, 0.74, 0.644]
cutting matrix
[[-1. -1.  1. -1. -1.  0.  0.]
 [ 1.  1.  1.  1.  1.  0.  0.]
 [-1. -1. -1.  1.  1.  0. -1.]
 [-1.  1. -1.  1.  1.  0. -1.]
 [-1.  1.  1.  1.  1.  0. -1.]
 [-1.  1.  1.  1.  1.  0.  1.]
 [-1.  1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  0.  0.]]
cutting matrix's confusion matrix
[[13  0  1  0  0  0  0  3  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  0  2  0  0]
 [ 0  0  0  1 13  0  0  3  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  2  1  0  0  0 14  0  0]
 [ 2  0  0  0  2  0  0  1  9  0]
 [ 0  0  0  3  9  0  0  1  0  0]]


SVM classifier
Time: 2019-01-05 23:02:19
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [21  0  0  0  0  1  0  0  0  0]
 [25  0  0  0  0  1  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [15  0  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [-1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [-1. -1.]
 [ 0. -1.]]
confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0 21  0  0  0  1  0  0  0  0]
 [ 4  4 17  0  0  1  0  0  0  0]
 [ 0 15  1  0  0  1  0  0  0  0]
 [ 0  2  0  0  0 21  0  0  0  0]
 [ 2  1  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 0 15  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 0  3  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.2 0.2 0.1 0.1 0.1 0. ]
 [0.  0.  0.1 0.2 0.2 0.2 0.  0.  0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0.  1. -1.]
 [ 0.  0.  0.]
 [ 1.  0.  0.]
 [ 1.  0. -1.]
 [-1.  0. -1.]
 [ 0.  1.  0.]
 [ 0.  1. -1.]
 [-1. -1.  1.]
 [ 0. -1.  0.]]
confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0 21  0  0  0  1  0  0  0  0]
 [ 4  4 17  0  0  1  0  0  0  0]
 [ 0 15  1  0  0  1  0  0  0  0]
 [ 0  2  0  0  0 21  0  0  0  0]
 [ 2  1  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 0 15  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 0  3  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.3 0.3 0.1 0.2 0.2 0. ]
 [0.  0.  0.2 0.3 0.2 0.2 0.1 0.  0.3 0.2]
 [0.  0.  0.  0.1 0.2 0.2 0.1 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 1.67]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  0.  0.  0.  0.  1.  1. -1. -1.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0. -1.  0. -1.]
 [ 0.  1. -1.  1.]
 [ 0.  0.  0. -1.]
 [ 1.  0.  0.  1.]
 [ 1.  0. -1.  1.]
 [-1.  0. -1.  0.]
 [ 0.  1.  0. -1.]
 [ 0.  1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 0. -1.  0. -1.]]
confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0 21  0  0  0  1  0  0  0  0]
 [ 4  4 17  0  0  1  0  0  0  0]
 [ 0 15  1  0  0  1  0  0  0  0]
 [ 0  2  0  0  0 21  0  0  0  0]
 [ 2  1  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 0 15  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 0  3  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.3 0.4 0.4 0.1 0.3 0.2 0. ]
 [0.  0.  0.3 0.3 0.2 0.3 0.2 0.  0.4 0.3]
 [0.  0.  0.  0.2 0.3 0.3 0.1 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.3 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.2 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.25 1.75]
 [0.   0.   2.   1.  ]
 [0.   0.   0.   2.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1.  1.  0. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1.  0. -1.  0.]
 [ 0.  1. -1.  1.  1.]
 [ 0.  0.  0. -1.  0.]
 [ 1.  0.  0.  1.  1.]
 [ 1.  0. -1.  1. -1.]
 [-1.  0. -1.  0.  1.]
 [ 0.  1.  0. -1.  1.]
 [ 0.  1. -1.  1.  0.]
 [-1. -1.  1. -1.  1.]
 [ 0. -1.  0. -1.  1.]]
confusion matrix
[[13  1  0  0  0  3  0  0  0  1]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  4 17  0  0  1  0  0  0  3]
 [ 0 10  1  0  0  1  0  5  0  0]
 [ 0  2  0  0  0 21  0  0  0  0]
 [ 0  1  0  0  0 16  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  0  9]
 [ 0  3  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.1 0.4 0.5 0.5 0.2 0.3 0.3 0.1]
 [0.  0.  0.4 0.3 0.3 0.3 0.2 0.1 0.4 0.3]
 [0.  0.  0.  0.3 0.4 0.4 0.2 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.  1.4 1.2]
 [0.  0.  1.6 0.8 1.4]
 [0.  0.  0.  2.  1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.26, 0.592, 0.832, 0.769, 0.606]
cutting matrix
[[-1.  0. -1.]
 [ 1. -1.  1.]
 [ 0.  0. -1.]
 [ 0.  0.  1.]
 [ 0. -1.  1.]
 [ 0. -1.  0.]
 [ 1.  0. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [-1.  0. -1.]]
cutting matrix's confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0 21  0  0  0  1  0  0  0  0]
 [ 4  4 18  0  0  0  0  0  0  0]
 [ 0 15  2  0  0  0  0  0  0  0]
 [ 0  2 19  0  0  2  0  0  0  0]
 [ 2  1 13  0  0  3  0  0  0  0]
 [18  0  1  0  0  0  0  0  0  0]
 [ 0 15  0  0  0  2  0  0  0  0]
 [11  0  2  0  0  1  0  0  0  0]
 [ 0  3  9  0  0  1  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:02:23
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  0.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1.  0.]
 [-1.  1.  1.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.2 0.2]
 [0.  0.  0.2 0.8 0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 1.  ]
 [0.   0.   0.25 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.911, 0.696, 0.125]
cutting matrix
[[ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:02:24
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  0.  1.  0.  1.]
confusion matrix
[[29  5  0  0  0]
 [ 5  2  2  0  0]
 [ 1  5  1  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  0.]
 [ 1. -1.]
 [ 0.  1.]
 [ 1.  0.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  2  0  2  0]
 [ 1  4  0  2  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 0.  0.  1.]
 [ 1. -1.  1.]
 [ 0.  1.  1.]
 [ 1.  0. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  2  0  2  0]
 [ 1  4  0  2  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.6]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0.  0.]
select_j_column
[ 1.  0. -1.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[-1.  1.  1.]
 [ 0.  0.  1.]
 [ 1. -1.  1.]
 [ 0.  1.  1.]
 [ 1.  0. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 5  2  0  2  0]
 [ 1  4  0  2  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.6]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.674, 0.982]
cutting matrix
[[ 1.]
 [ 1.]
 [ 1.]
 [ 1.]
 [-1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:02:24
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.17 0.   0.  ]
 [0.   0.   0.17 0.33 0.17 0.17]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.17]
 [0.   0.   0.17 0.5  0.33 0.33]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [-1. -1. -1.  1.]
 [-1.  1. -1.  0.]
 [-1.  1. -1.  0.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.17 0.5  0.5  0.33 0.33]
 [0.   0.   0.33 0.67 0.5  0.5 ]
 [0.   0.   0.   0.33 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.25 1.  ]
 [0.   0.   0.75 1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.]
 [-1.  1. -1.  0. -1.]
 [-1.  1. -1.  0. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.17 0.5  0.5  0.5  0.5 ]
 [0.   0.   0.33 0.67 0.67 0.67]
 [0.   0.   0.   0.33 0.83 0.83]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.2 0.8 0.4]
 [0.  0.  0.6 1.2 0.8]
 [0.  0.  0.  1.  0.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1.  1. -1.  0. -1.  1.]
 [-1.  1. -1.  0. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.17 0.5  0.67 0.5  0.5 ]
 [0.   0.   0.33 0.83 0.67 0.67]
 [0.   0.   0.   0.5  0.83 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.17 0.67 0.33 0.5 ]
 [0.   0.   0.5  1.   0.67 0.17]
 [0.   0.   0.   0.83 0.17 0.33]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 0.955, 0.925, 0.948, 1.0, 0.955]
cutting matrix
[[-1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1.  1.  0. -1.  1.]
 [-1.  1.  0. -1.  1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]


SVM classifier
Time: 2019-01-05 23:02:25
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0.  0.  0. -1.]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0.  1.  0. -1.  0.]
select_j_column
[ 0.  0. -1. -1. -1.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0.  0.]
 [ 0.  1.]
 [-1.  0.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.17 0.33 0.17]
 [0.   0.   0.17 0.   0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.963, 1.0]
cutting matrix
[[ 1.  0.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0.  0.]
 [ 0.  1.]
 [-1.  0.]]
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:02:26
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
confusion matrix
[[13  0  7  0  0  0  0  0  0  0]
 [18  0  3  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  0 13  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]]
confusion matrix
[[13  1  6  0  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  4 15  0  0  0  0  0  0  0]
 [ 0  5 14  0  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.  0.1 0.  0.1 0.1 0.1]
 [0.  0.  0.2 0.2 0.1 0.2 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.1 0.  0.1 0.  0.  0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]]
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 14  1  0  0  0  0  0  0]
 [ 0  5 13  1  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [19  0  1  1  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.3 0.2 0.2 0.2 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.  0.1 0.2]
 [0.  0.  0.  0.  0.2 0.  0.2 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.2 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1. -1.]]
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 14  1  0  0  0  0  0  0]
 [ 0  5 13  1  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [19  0  1  1  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.1 0.2 0.1 0.2 0.2 0.3]
 [0.  0.  0.4 0.2 0.3 0.2 0.3 0.4 0.2 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.  0.2 0.3]
 [0.  0.  0.  0.  0.3 0.  0.3 0.2 0.  0.3]
 [0.  0.  0.  0.  0.  0.3 0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   1.5 ]
 [0.   0.   1.25 0.75]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  0.]
 [-1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  0.]
 [-1. -1. -1. -1.  0.]]
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 14  1  0  0  0  0  0  0]
 [ 0  5 13  1  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [19  0  1  1  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.3 0.2 0.3 0.2 0.3 0.3 0.4]
 [0.  0.  0.5 0.3 0.4 0.2 0.3 0.5 0.3 0.2]
 [0.  0.  0.  0.2 0.1 0.3 0.2 0.  0.2 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.  0.3]
 [0.  0.  0.  0.  0.  0.4 0.1 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 1.2 1.6]
 [0.  0.  1.  0.6 1.6]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
most_cplx_inx
7
new_column
None


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  0.]
 [-1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  0.]
 [-1. -1. -1. -1.  0.]]
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 14  1  0  0  0  0  0  0]
 [ 0  5 13  1  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [19  0  1  1  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.3 0.2 0.3 0.2 0.3 0.3 0.4]
 [0.  0.  0.5 0.3 0.4 0.2 0.3 0.5 0.3 0.2]
 [0.  0.  0.  0.2 0.1 0.3 0.2 0.  0.2 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.  0.3]
 [0.  0.  0.  0.  0.  0.4 0.1 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 1.2 1.6]
 [0.  0.  1.  0.6 1.6]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.681, 0.819, 0.601, 0.681, 0.437]
cutting matrix
[[-1.  1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1.  0.]
 [ 1.  1. -1.  0.]
 [-1.  1.  1.  0.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  0.]
 [ 1.  1. -1.  0.]
 [-1. -1. -1.  0.]]
cutting matrix's confusion matrix
[[ 0  1  4  2  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  2  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]


SVM classifier
Time: 2019-01-05 23:02:30
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
confusion matrix
[[20  0  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [15  0  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0. -1.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  0.]]
confusion matrix
[[13  5  0  0  2  0  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 4 18  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0 15  0  0  0  0  0  0  0  0]
 [20  1  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.  0.2 0.1 0.2]
 [0.  0.  0.1 0.  0.1 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]
 [ 0.  1. -1.]
 [ 0.  0.  0.]
 [ 0.  0.  0.]
 [ 0. -1. -1.]
 [-1.  0.  0.]
 [-1. -1. -1.]
 [ 1.  0.  1.]]
confusion matrix
[[13  4  0  1  2  0  0  0  0  0]
 [ 1 14  0  2  4  0  0  0  0  0]
 [ 4 13  0  5  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.2 0.1 0.1 0.1 0.2 0.2 0.3]
 [0.  0.  0.2 0.1 0.2 0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.1 0.3 0.3 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[-1.  1.  1.  1.  0.  0. -1.  0. -1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0. -1.  0.  1.]
 [ 0.  1.  1.  0.]
 [ 1.  1. -1.  1.]
 [ 0.  1. -1.  1.]
 [ 0.  0.  0. -1.]
 [ 0.  0.  0.  1.]
 [ 0. -1. -1.  1.]
 [-1.  0.  0.  1.]
 [-1. -1. -1. -1.]
 [ 1.  0.  1.  0.]]
confusion matrix
[[11  0  0  5  4  0  0  0  0  0]
 [ 0 13  0  3  5  0  0  0  0  0]
 [ 4  1  0 17  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [13  0  0  0  1  0  0  0  0  0]
 [ 0  2  0 13  0  0  0  0  0  0]
 [15  0  0  1  5  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.2 0.1 0.1 0.2 0.3 0.4]
 [0.  0.  0.3 0.2 0.3 0.3 0.3 0.4 0.4 0.2]
 [0.  0.  0.  0.1 0.4 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.25 1.75]
 [0.   0.   1.   1.5 ]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0. -1.  0.  1.  0.]
 [ 0.  1.  1.  0.  0.]
 [ 1.  1. -1.  1.  0.]
 [ 0.  1. -1.  1.  1.]
 [ 0.  0.  0. -1. -1.]
 [ 0.  0.  0.  1. -1.]
 [ 0. -1. -1.  1. -1.]
 [-1.  0.  0.  1.  0.]
 [-1. -1. -1. -1. -1.]
 [ 1.  0.  1.  0.  0.]]
confusion matrix
[[11  4  1  0  4  0  0  0  0  0]
 [ 0 14  2  0  5  0  0  0  0  0]
 [ 4 13  3  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [13  0  0  0  1  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [15  0  0  1  5  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.3 0.3 0.2 0.2 0.2 0.4 0.4]
 [0.  0.  0.3 0.3 0.4 0.4 0.4 0.4 0.5 0.2]
 [0.  0.  0.  0.2 0.5 0.4 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.1 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  1.4 1.4]
 [0.  0.  0.8 1.2 1. ]
 [0.  0.  0.  1.8 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0. -1.  0.  1.  0. -1.]
 [ 0.  1.  1.  0.  0.  1.]
 [ 1.  1. -1.  1.  0.  1.]
 [ 0.  1. -1.  1.  1.  0.]
 [ 0.  0.  0. -1. -1.  1.]
 [ 0.  0.  0.  1. -1. -1.]
 [ 0. -1. -1.  1. -1. -1.]
 [-1.  0.  0.  1.  0. -1.]
 [-1. -1. -1. -1. -1. -1.]
 [ 1.  0.  1.  0.  0. -1.]]
confusion matrix
[[11  4  1  0  2  0  0  0  2  0]
 [ 0 14  2  0  4  0  0  0  1  0]
 [ 4 13  3  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 17  0  0  0  2  0]
 [13  0  0  0  3  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  1  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [15  0  0  1  0  0  0  0  5  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4 0.2 0.2 0.2 0.4 0.4]
 [0.  0.  0.3 0.4 0.4 0.5 0.5 0.5 0.6 0.3]
 [0.  0.  0.  0.3 0.5 0.5 0.4 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.3 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.2 0.4 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.83 1.17 1.17 1.  ]
 [0.   0.   0.67 1.   0.83 0.83]
 [0.   0.   0.   1.5  1.   1.17]
 [0.   0.   0.   0.   0.83 1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1. -1. -1.  0.  0. -1.  0. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0. -1.  0.  1.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  1. -1.]
 [ 1.  1. -1.  1.  0.  1. -1.]
 [ 0.  1. -1.  1.  1.  0. -1.]
 [ 0.  0.  0. -1. -1.  1. -1.]
 [ 0.  0.  0.  1. -1. -1. -1.]
 [ 0. -1. -1.  1. -1. -1.  1.]
 [-1.  0.  0.  1.  0. -1.  0.]
 [-1. -1. -1. -1. -1. -1. -1.]
 [ 1.  0.  1.  0.  0. -1. -1.]]
confusion matrix
[[11  4  1  0  2  2  0  0  0  0]
 [ 1 14  2  0  4  0  0  0  0  0]
 [ 3 13  3  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.5 0.5 0.3 0.3 0.2 0.5 0.5]
 [0.  0.  0.3 0.4 0.4 0.5 0.6 0.6 0.6 0.3]
 [0.  0.  0.  0.3 0.5 0.5 0.5 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.2 0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.71 1.   1.   0.86 1.14]
 [0.   0.   0.57 0.86 0.71 0.71 1.14]
 [0.   0.   0.   1.29 0.86 1.   0.71]
 [0.   0.   0.   0.   0.71 1.14 1.  ]
 [0.   0.   0.   0.   0.   1.   0.71]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[-1.  1.  1.  0.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0. -1.  0.  1.  0. -1.  0.  0.]
 [ 0.  1.  1.  0.  0.  1. -1.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  1.]
 [ 0.  1. -1.  1.  1.  0. -1.  0.]
 [ 0.  0.  0. -1. -1.  1. -1.  0.]
 [ 0.  0.  0.  1. -1. -1. -1.  0.]
 [ 0. -1. -1.  1. -1. -1.  1.  0.]
 [-1.  0.  0.  1.  0. -1.  0.  1.]
 [-1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  0.  1.  0.  0. -1. -1. -1.]]
confusion matrix
[[11  4  1  0  2  2  0  0  0  0]
 [ 1 14  2  0  4  0  0  0  0  0]
 [ 3 13  3  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.5 0.6 0.5 0.5 0.3 0.3 0.3 0.6 0.6]
 [0.  0.  0.4 0.4 0.4 0.5 0.6 0.7 0.7 0.4]
 [0.  0.  0.  0.4 0.6 0.6 0.6 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.2 0.5 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.62 0.88 0.88 0.75 1.   0.38]
 [0.   0.   0.5  0.75 0.62 0.62 1.   0.88]
 [0.   0.   0.   1.12 0.75 0.88 0.62 0.88]
 [0.   0.   0.   0.   0.62 1.   0.88 0.88]
 [0.   0.   0.   0.   0.   0.88 0.62 1.  ]
 [0.   0.   0.   0.   0.   0.   0.88 0.88]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 0. -1.  0.  1.  0. -1.  0.  0. -1.]
 [ 0.  1.  1.  0.  0.  1. -1.  0. -1.]
 [ 1.  1. -1.  1.  0.  1. -1.  1.  0.]
 [ 0.  1. -1.  1.  1.  0. -1.  0.  1.]
 [ 0.  0.  0. -1. -1.  1. -1.  0. -1.]
 [ 0.  0.  0.  1. -1. -1. -1.  0.  0.]
 [ 0. -1. -1.  1. -1. -1.  1.  0. -1.]
 [-1.  0.  0.  1.  0. -1.  0.  1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1.  0.  1.  0.  0. -1. -1. -1.  0.]]
confusion matrix
[[13  5  0  0  2  0  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 4 16  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.7 0.6 0.5 0.4 0.3 0.3 0.6 0.7]
 [0.  0.  0.5 0.5 0.4 0.6 0.6 0.7 0.7 0.5]
 [0.  0.  0.  0.5 0.7 0.6 0.7 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.5 0.5 0.8 0.7 0.8]
 [0.  0.  0.  0.  0.  0.3 0.5 0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.56 0.78 0.78 0.67 0.89 0.33 0.78]
 [0.   0.   0.44 0.67 0.56 0.56 0.89 0.78 0.44]
 [0.   0.   0.   1.   0.67 0.78 0.56 0.78 0.78]
 [0.   0.   0.   0.   0.56 0.89 0.78 0.78 0.67]
 [0.   0.   0.   0.   0.   0.78 0.56 0.89 0.44]
 [0.   0.   0.   0.   0.   0.   0.78 0.78 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1. -1. -1. -1.  0. -1.  0.]
select_j_column
[ 0.  0.  0.  1. -1. -1. -1.  0. -1.  0.]
most_cplx_inx
7
new_column
None


============== iter  10 ================
current matrix is 
[[ 0. -1.  0.  1.  0. -1.  0.  0. -1.]
 [ 0.  1.  1.  0.  0.  1. -1.  0. -1.]
 [ 1.  1. -1.  1.  0.  1. -1.  1.  0.]
 [ 0.  1. -1.  1.  1.  0. -1.  0.  1.]
 [ 0.  0.  0. -1. -1.  1. -1.  0. -1.]
 [ 0.  0.  0.  1. -1. -1. -1.  0.  0.]
 [ 0. -1. -1.  1. -1. -1.  1.  0. -1.]
 [-1.  0.  0.  1.  0. -1.  0.  1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1.  0.  1.  0.  0. -1. -1. -1.  0.]]
confusion matrix
[[13  5  0  0  2  0  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 4 16  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.7 0.6 0.5 0.4 0.3 0.3 0.6 0.7]
 [0.  0.  0.5 0.5 0.4 0.6 0.6 0.7 0.7 0.5]
 [0.  0.  0.  0.5 0.7 0.6 0.7 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.5 0.5 0.8 0.7 0.8]
 [0.  0.  0.  0.  0.  0.3 0.5 0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.56 0.78 0.78 0.67 0.89 0.33 0.78]
 [0.   0.   0.44 0.67 0.56 0.56 0.89 0.78 0.44]
 [0.   0.   0.   1.   0.67 0.78 0.56 0.78 0.78]
 [0.   0.   0.   0.   0.56 0.89 0.78 0.78 0.67]
 [0.   0.   0.   0.   0.   0.78 0.56 0.89 0.44]
 [0.   0.   0.   0.   0.   0.   0.78 0.78 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.0, 0.846, 0.396, 0.719, 0.542, 0.598, 0.647, 0.0, 0.86]
cutting matrix
[[ 0. -1.  0.  1.  0. -1.  0.  0. -1.]
 [ 0.  1.  1.  0.  0.  1. -1.  0. -1.]
 [ 1.  1. -1.  1.  0.  1. -1.  1.  0.]
 [ 0.  1. -1.  1.  1.  0. -1.  0.  1.]
 [ 0.  0.  0. -1. -1.  1. -1.  0. -1.]
 [ 0.  0.  0.  1. -1. -1. -1.  0.  0.]
 [ 0. -1. -1.  1. -1. -1.  1.  0. -1.]
 [-1.  0.  0.  1.  0. -1.  0.  1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1.  0.  1.  0.  0. -1. -1. -1.  0.]]
cutting matrix's confusion matrix
[[13  5  0  0  2  0  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 4 16  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:02:35
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.4 0.4 0.2 0. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 4  0  0  5  0]
 [ 3  0  0  4  0]
 [ 1  0  0  6  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.6 0.6 0.4 0. ]
 [0.  0.  0.2 0.4 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1.  1.  0.  0.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1.  1. -1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.8 0.8 0.6 0.2]
 [0.  0.  0.4 0.6 0.8]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.   0.75]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  0.]
 [ 1.  1.  0.  0.  0.]
 [ 1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1.  1. -1.  0.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  5  1]
 [ 3  0  0  4  0]
 [ 0  0  0  6  1]
 [ 0  0  0  3  0]]
row HD
[[0.  0.8 1.  0.8 0.2]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.8 0.6 1. ]
 [0.  0.  1.  0.8 0.8]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.839, 0.66, 0.723, 0.071]
cutting matrix
[[-1. -1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1.  0.]]
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]


SVM classifier
Time: 2019-01-05 23:02:36
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  1.]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [ 1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  1  0  0]
 [ 4  2  1  0  0]
 [ 4  2  1  0  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [ 0.  1.  1.]
 [ 0.  0. -1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 5  2  0  0  0]
 [ 5  2  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  1.  0.]
 [ 0.  1.  1. -1.]
 [ 0.  0. -1.  0.]
 [-1.  0.  1. -1.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 5  2  0  0  0]
 [ 5  2  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 0.5 ]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  1.  0.  1.]
 [ 0.  1.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.]
 [-1.  0.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 5  2  0  0  0]
 [ 5  2  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.6]
 [0.  0.  0.8 0.4 0.8]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.4 0.6]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.675, 0.25, 0.875, 0.263, 0.898]
cutting matrix
[[ 1.  1.]
 [ 1.  1.]
 [-1.  0.]
 [ 1.  1.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:02:37
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  0.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1.  0. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.5 ]
 [0.   0.   0.25 0.25]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: None}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1.  0. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.17 0.5  0.5  0.5 ]
 [0.   0.   0.17 0.5  0.5  0.5 ]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.6 0.4 0.8]
 [0.  0.  0.2 0.2 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1.  1.  0. -1. -1.  0.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.33 0.5  0.5  0.67]
 [0.   0.   0.33 0.5  0.5  0.67]
 [0.   0.   0.   0.83 0.83 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  0.33 0.67 0.33]
 [0.   0.   0.17 0.17 0.5  0.67]
 [0.   0.   0.   0.17 0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  0. -1. -1.  0.  0.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.5  0.67 0.67 0.67]
 [0.   0.   0.5  0.67 0.67 0.67]
 [0.   0.   0.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.43 0.29 0.57 0.29 0.57]
 [0.   0.   0.14 0.14 0.43 0.57 0.86]
 [0.   0.   0.   0.14 0.43 0.43 0.71]
 [0.   0.   0.   0.   0.29 0.57 0.86]
 [0.   0.   0.   0.   0.   0.86 0.86]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 3  0  0  4  0  0]
 [ 0  0  0 10  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.67 0.83 0.83 0.67]
 [0.   0.   0.67 0.83 0.83 0.67]
 [0.   0.   0.   1.   1.   1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.38 0.25 0.5  0.25 0.5  0.25]
 [0.   0.   0.12 0.12 0.38 0.5  0.75 0.62]
 [0.   0.   0.   0.12 0.38 0.38 0.62 0.62]
 [0.   0.   0.   0.   0.25 0.5  0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.75 0.75 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 3  0  0  0  4  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.67 1.   0.83 0.67]
 [0.   0.   0.67 1.   0.83 0.67]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   0.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33 0.22 0.44 0.22 0.44 0.22 0.22]
 [0.   0.   0.11 0.11 0.33 0.44 0.67 0.56 0.11]
 [0.   0.   0.   0.11 0.33 0.33 0.56 0.56 0.22]
 [0.   0.   0.   0.   0.22 0.44 0.67 0.44 0.22]
 [0.   0.   0.   0.   0.   0.67 0.67 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
None


============== iter  10 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 3  0  0  0  4  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.67 1.   0.83 0.67]
 [0.   0.   0.67 1.   0.83 0.67]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   0.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33 0.22 0.44 0.22 0.44 0.22 0.22]
 [0.   0.   0.11 0.11 0.33 0.44 0.67 0.56 0.11]
 [0.   0.   0.   0.11 0.33 0.33 0.56 0.56 0.22]
 [0.   0.   0.   0.   0.22 0.44 0.67 0.44 0.22]
 [0.   0.   0.   0.   0.   0.67 0.67 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
None


============== iter  11 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 3  0  0  0  4  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.67 1.   0.83 0.67]
 [0.   0.   0.67 1.   0.83 0.67]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   0.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33 0.22 0.44 0.22 0.44 0.22 0.22]
 [0.   0.   0.11 0.11 0.33 0.44 0.67 0.56 0.11]
 [0.   0.   0.   0.11 0.33 0.33 0.56 0.56 0.22]
 [0.   0.   0.   0.   0.22 0.44 0.67 0.44 0.22]
 [0.   0.   0.   0.   0.   0.67 0.67 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 2  0  0  3  1  1]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.   1.17 1.17 1.17]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.3 0.2 0.4 0.2 0.4 0.2 0.2 0.4]
 [0.  0.  0.1 0.1 0.3 0.4 0.6 0.5 0.1 0.3]
 [0.  0.  0.  0.1 0.3 0.3 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.6 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  0.]
select_j_column
[ 1.  1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
None


============== iter  13 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 2  0  0  3  1  1]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.   1.17 1.17 1.17]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.3 0.2 0.4 0.2 0.4 0.2 0.2 0.4]
 [0.  0.  0.1 0.1 0.3 0.4 0.6 0.5 0.1 0.3]
 [0.  0.  0.  0.1 0.3 0.3 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.6 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
None


============== iter  14 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 2  0  0  3  1  1]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.   1.17 1.17 1.17]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.3 0.2 0.4 0.2 0.4 0.2 0.2 0.4]
 [0.  0.  0.1 0.1 0.3 0.4 0.6 0.5 0.1 0.3]
 [0.  0.  0.  0.1 0.3 0.3 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.6 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
None


============== iter  15 ================
current matrix is 
[[ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  0. -1. -1.  0.  0. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 2  0  0  3  1  1]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.83 1.17 0.83 0.83]
 [0.   0.   0.   1.17 1.17 1.17]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.3 0.2 0.4 0.2 0.4 0.2 0.2 0.4]
 [0.  0.  0.1 0.1 0.3 0.4 0.6 0.5 0.1 0.3]
 [0.  0.  0.  0.1 0.3 0.3 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.6 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.94, 0.91, 0.937, 0.955, 0.985, 0.984, 0.938, 0.97, 0.896, 0.925]
cutting matrix
[[ 1.  1. -1.  1.  0. -1. -1.]
 [ 1.  1. -1.  1.  0. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.]
 [-1. -1. -1.  0.  0. -1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 14  1  0  0]
 [ 1  0  0  4  2  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]


SVM classifier
Time: 2019-01-05 23:02:41
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1.  1.  0. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  2  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  1. -1.  1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 0.  1.]
 [-1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  0  1]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.33 0.33 0.17 0.33]
 [0.   0.   0.33 0.   0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  0.]
 [ 0.  1. -1.]
 [-1.  1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  0 14  0  0  1]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.5  0.5  0.33 0.33 0.5 ]
 [0.   0.   0.5  0.17 0.17 0.17]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.949, 0.98, 0.952]
cutting matrix
[[ 0.  0.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 0.  1.]
 [-1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  0  1]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-05 23:02:42
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
confusion matrix
[[11  6  0  0  0  0  0  0  0  0]
 [ 1 25  0  0  0  0  0  0  0  0]
 [ 0 22  0  0  0  0  0  0  0  0]
 [ 0 16  0  0  0  0  0  0  0  0]
 [10  7  0  0  0  0  0  0  0  0]
 [ 1 19  0  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]]
confusion matrix
[[11  6  0  0  0  0  0  0  0  0]
 [ 1 25  0  0  0  0  0  0  0  0]
 [ 0  4 18  0  0  0  0  0  0  0]
 [ 0 14  2  0  0  0  0  0  0  0]
 [10  5  2  0  0  0  0  0  0  0]
 [ 1 18  1  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  0  0  0  0]
 [ 5 15  2  0  0  0  0  0  0  0]
 [ 0 11  2  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.  0.1 0.  0.1 0.1 0.2]
 [0.  0.  0.1 0.  0.1 0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.1 0.2 0.1 0.2 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.1 0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]]
confusion matrix
[[10  4  0  2  0  0  1  0  0  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0  3 17  1  0  0  0  0  0  1]
 [ 0  2  1 12  0  0  0  0  0  1]
 [10  2  2  3  0  0  0  0  0  0]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 4  3  0  1  0  0  7  0  0  0]
 [ 0 17  0  3  0  0  0  0  0  0]
 [ 3 11  2  4  0  0  2  0  0  0]
 [ 0  1  0 10  0  0  0  0  0  2]]
row HD
[[0.  0.1 0.2 0.2 0.  0.2 0.1 0.1 0.1 0.3]
 [0.  0.  0.1 0.1 0.1 0.1 0.2 0.  0.  0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.3 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1.  1.  1.  0.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1. -1.  0.]
 [-1.  1. -1.  0.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1. -1.  0.]]
confusion matrix
[[10  0  0  0  0  2  1  2  2  0]
 [ 1 21  0  1  0  0  0  3  0  0]
 [ 0  1 17  0  0  1  0  0  2  1]
 [ 0  0  1  8  0  4  0  2  0  1]
 [10  0  2  0  0  3  0  2  0  0]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 4  0  0  0  0  1  7  0  3  0]
 [ 0  3  0  1  0  2  0 14  0  0]
 [ 3  0  2  0  0  4  2  2  9  0]
 [ 0  0  0  2  0  8  0  0  1  2]]
row HD
[[0.  0.2 0.2 0.3 0.  0.3 0.2 0.1 0.2 0.4]
 [0.  0.  0.2 0.2 0.2 0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.3 0.2 0.3 0.4 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.25 1.5 ]
 [0.   0.   1.   1.75]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0. -1.  1. -1.  0.  0. -1.  1.  0.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  0.]
 [ 1.  1.  1.  0.  1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.]
 [ 1.  1. -1.  0. -1.]
 [-1.  1. -1.  0.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.]
 [ 1. -1. -1.  0.  1.]]
confusion matrix
[[ 7  0  0  0  3  2  1  2  2  0]
 [ 0 21  0  1  1  0  0  3  0  0]
 [ 0  1 17  0  0  1  0  0  2  1]
 [ 0  0  1  8  0  4  0  2  0  1]
 [ 0  2  2  0 10  0  0  3  0  0]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 0  3  0  1  0  2  0 14  0  0]
 [ 2  0  3  0  0  4  2  2  9  0]
 [ 0  1  0  2  0  7  0  0  1  2]]
row HD
[[0.  0.3 0.3 0.4 0.1 0.4 0.3 0.2 0.3 0.5]
 [0.  0.  0.2 0.3 0.2 0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.4 0.2 0.4 0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.  1.2 1.2]
 [0.  0.  0.8 1.4 1.2]
 [0.  0.  0.  1.8 0.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.]
 [ 1.  1.  1.  0.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.]
 [-1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  0. -1. -1.]
 [-1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1.  0.  1.  1.]]
confusion matrix
[[ 7  0  0  1  3  1  1  2  2  0]
 [ 0 21  0  1  1  0  0  3  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  2  2  0 10  0  0  3  0  0]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 0  3  0  2  0  1  0 14  0  0]
 [ 2  0  3  3  0  1  2  2  9  0]
 [ 0  1  0  9  0  0  0  0  1  2]]
row HD
[[0.  0.3 0.3 0.4 0.1 0.5 0.3 0.2 0.3 0.5]
 [0.  0.  0.2 0.3 0.2 0.3 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.4 0.2 0.5 0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.2 0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.5 0.2 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.83 1.   1.   0.67]
 [0.   0.   0.67 1.17 1.   0.5 ]
 [0.   0.   0.   1.5  0.67 0.5 ]
 [0.   0.   0.   0.   1.67 1.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.]
 [ 1.  1.  1.  0.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.]
 [ 1.  1. -1.  1. -1.  1.  0.]
 [-1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1. -1.  0. -1. -1. -1.]
 [-1.  1. -1.  0.  1.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1. -1.]]
confusion matrix
[[ 7  0  0  1  3  1  1  2  2  0]
 [ 0 21  0  1  1  0  0  3  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  0  2  0 10  0  0  3  0  2]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 0  3  0  2  0  1  0 14  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0  9  0  0  0  0  1  3]]
row HD
[[0.  0.4 0.3 0.4 0.1 0.6 0.3 0.2 0.4 0.6]
 [0.  0.  0.3 0.4 0.3 0.4 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.4 0.2 0.6 0.4 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.2 0.1 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.71 0.86 0.86 0.57 1.14]
 [0.   0.   0.57 1.   0.86 0.43 1.  ]
 [0.   0.   0.   1.29 0.57 0.43 0.86]
 [0.   0.   0.   0.   1.43 1.14 1.14]
 [0.   0.   0.   0.   0.   0.43 1.  ]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.]
 [ 1.  1.  1.  0.  1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.]
 [-1.  1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.]
 [-1.  1. -1.  0.  1.  1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.]]
confusion matrix
[[ 7  2  0  1  3  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  1  2  0 10  0  1  1  0  2]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 0  6  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0  9  0  0  0  0  1  3]]
row HD
[[0.  0.4 0.3 0.4 0.1 0.6 0.3 0.3 0.4 0.6]
 [0.  0.  0.3 0.4 0.3 0.4 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.4 0.2 0.6 0.4 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.2 0.2 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.62 0.75 0.75 0.5  1.   0.5 ]
 [0.   0.   0.5  0.88 0.75 0.38 0.88 0.38]
 [0.   0.   0.   1.12 0.5  0.38 0.75 0.62]
 [0.   0.   0.   0.   1.25 1.   1.   0.88]
 [0.   0.   0.   0.   0.   0.38 0.88 0.62]
 [0.   0.   0.   0.   0.   0.   0.88 0.25]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1.]]
confusion matrix
[[ 9  0  0  1  3  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  1  2  0 10  0  1  1  0  2]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0  9  0  0  0  0  1  3]]
row HD
[[0.  0.5 0.3 0.5 0.2 0.7 0.3 0.3 0.5 0.7]
 [0.  0.  0.4 0.5 0.3 0.5 0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.5 0.3 0.7 0.4 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.3 0.4 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.7 0.3 0.3 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.56 0.67 0.67 0.44 0.89 0.44 0.67]
 [0.   0.   0.44 0.78 0.67 0.33 0.78 0.33 0.89]
 [0.   0.   0.   1.   0.44 0.33 0.67 0.56 1.11]
 [0.   0.   0.   0.   1.11 0.89 0.89 0.78 0.78]
 [0.   0.   0.   0.   0.   0.33 0.78 0.56 0.78]
 [0.   0.   0.   0.   0.   0.   0.78 0.22 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
select_j_column
[ 0.  1.  1. -1.  1. -1.  1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.  0.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1. -1.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.  1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1. -1.]]
confusion matrix
[[12  0  0  1  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  1  2  0 10  0  3  1  0  0]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 1  0  2  0  1  2  6  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0  9  0  0  1  0  1  2]]
row HD
[[0.  0.6 0.4 0.6 0.3 0.8 0.4 0.4 0.6 0.8]
 [0.  0.  0.5 0.6 0.3 0.6 0.4 0.4 0.3 0.5]
 [0.  0.  0.  0.5 0.4 0.7 0.5 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.6 0.3 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.8 0.3 0.3 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.8 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.5 0.6 0.6 0.4 0.8 0.4 0.6 0.8]
 [0.  0.  0.4 0.7 0.6 0.3 0.7 0.3 0.8 0.4]
 [0.  0.  0.  0.9 0.4 0.3 0.6 0.5 1.  0.4]
 [0.  0.  0.  0.  1.  0.8 0.8 0.7 0.7 0.9]
 [0.  0.  0.  0.  0.  0.3 0.7 0.5 0.7 0.2]
 [0.  0.  0.  0.  0.  0.  0.7 0.2 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.  0.  0.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0. -1.  0.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1. -1. -1.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1. -1.  0.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1. -1. -1.]]
confusion matrix
[[12  0  0  1  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  2  0  8  0  3  1  0  0]
 [ 0  0  1  2  0 16  1  0  0  0]
 [ 2  0  2  0  0  2  6  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0  9  0  0  1  0  1  2]]
row HD
[[0.  0.7 0.4 0.7 0.4 0.8 0.4 0.4 0.7 0.9]
 [0.  0.  0.6 0.6 0.4 0.7 0.5 0.5 0.3 0.5]
 [0.  0.  0.  0.6 0.5 0.7 0.5 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.7 0.4 0.6 0.7 0.3 0.4]
 [0.  0.  0.  0.  0.  0.9 0.4 0.4 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.8 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.45 0.55 0.55 0.36 0.73 0.36 0.55 0.73 0.91]
 [0.   0.   0.36 0.64 0.55 0.27 0.64 0.27 0.73 0.36 0.73]
 [0.   0.   0.   0.82 0.36 0.27 0.55 0.45 0.91 0.36 0.64]
 [0.   0.   0.   0.   0.91 0.73 0.73 0.64 0.64 0.82 0.73]
 [0.   0.   0.   0.   0.   0.27 0.64 0.45 0.64 0.18 0.55]
 [0.   0.   0.   0.   0.   0.   0.64 0.18 0.73 0.45 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.73 0.55 0.55 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.64 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  1. -1.  1. -1.  1.  1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.  0.  0.  0.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1.  1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1. -1.  0. -1.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.  1.  0. -1.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1. -1. -1. -1.]]
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  1  2  0 10  0  3  1  0  0]
 [ 0  0  1  2  0 16  1  0  0  0]
 [ 2  0  2  0  0  2  6  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0  9  0  0  1  0  1  2]]
row HD
[[0.  0.8 0.5 0.8 0.5 0.9 0.5 0.5 0.8 1. ]
 [0.  0.  0.7 0.7 0.4 0.8 0.6 0.5 0.4 0.6]
 [0.  0.  0.  0.6 0.6 0.7 0.5 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.8 0.4 0.6 0.8 0.3 0.4]
 [0.  0.  0.  0.  0.  1.  0.5 0.4 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.6 0.9 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.42 0.5  0.5  0.33 0.67 0.33 0.5  0.67 0.83 0.58]
 [0.   0.   0.33 0.58 0.5  0.25 0.58 0.25 0.67 0.33 0.67 0.42]
 [0.   0.   0.   0.75 0.33 0.25 0.5  0.42 0.83 0.33 0.58 0.25]
 [0.   0.   0.   0.   0.83 0.67 0.67 0.58 0.58 0.75 0.67 0.75]
 [0.   0.   0.   0.   0.   0.25 0.58 0.42 0.58 0.17 0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.58 0.17 0.67 0.42 0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.5  0.5  0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.58 0.75 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.33 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1. -1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0. -1.  0. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1. -1. -1. -1.  0.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1. -1.  0. -1.  0.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.  1.  0. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.  1.  0.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1.  0.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1. -1. -1. -1.  1.]]
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  1  2  2 10  0  1  1  0  0]
 [ 0  0  1  2  0 16  1  0  0  0]
 [ 2  0  2  0  0  2  6  0  3  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0 10  0  0  0  0  1  2]]
row HD
[[0.  0.9 0.5 0.9 0.6 1.  0.5 0.6 0.9 1. ]
 [0.  0.  0.8 0.8 0.4 0.9 0.7 0.5 0.5 0.7]
 [0.  0.  0.  0.7 0.7 0.8 0.5 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.9 0.4 0.7 0.9 0.3 0.5]
 [0.  0.  0.  0.  0.  1.1 0.6 0.4 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 1.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.46 0.46 0.31 0.62 0.31 0.46 0.62 0.77 0.54 0.54]
 [0.   0.   0.31 0.54 0.46 0.23 0.54 0.23 0.62 0.31 0.62 0.38 0.62]
 [0.   0.   0.   0.69 0.31 0.23 0.46 0.38 0.77 0.31 0.54 0.23 0.62]
 [0.   0.   0.   0.   0.77 0.62 0.62 0.54 0.54 0.69 0.62 0.69 0.54]
 [0.   0.   0.   0.   0.   0.23 0.54 0.38 0.54 0.15 0.46 0.23 0.54]
 [0.   0.   0.   0.   0.   0.   0.54 0.15 0.62 0.38 0.69 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.62 0.46 0.46 0.38 0.46 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.54 0.69 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.31 0.62 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.08 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.77]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1. -1.  1. -1. -1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  1.  0.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0. -1.  0. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1. -1. -1. -1.  0.  1.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1. -1.  0. -1.  0.  1.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.  1.  0. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1.  0. -1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]]
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 0  1  2  2 10  0  1  1  0  0]
 [ 0  0  0  2  0 16  1  0  0  1]
 [ 2  0  2  0  0  2  6  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  2  3  3  0  1  2  0  9  0]
 [ 0  0  0 10  0  0  0  0  1  2]]
row HD
[[0.  1.  0.6 1.  0.7 1.1 0.6 0.7 1.  1.1]
 [0.  0.  0.9 0.8 0.4 0.9 0.8 0.6 0.6 0.7]
 [0.  0.  0.  0.8 0.8 0.9 0.5 0.5 0.7 0.6]
 [0.  0.  0.  0.  0.9 0.4 0.8 1.  0.4 0.5]
 [0.  0.  0.  0.  0.  1.1 0.7 0.5 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.8 1.1 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.36 0.43 0.43 0.29 0.57 0.29 0.43 0.57 0.71 0.5  0.5  0.36]
 [0.   0.   0.29 0.5  0.43 0.21 0.5  0.21 0.57 0.29 0.57 0.36 0.57 0.36]
 [0.   0.   0.   0.64 0.29 0.21 0.43 0.36 0.71 0.29 0.5  0.21 0.57 0.5 ]
 [0.   0.   0.   0.   0.71 0.57 0.57 0.5  0.5  0.64 0.57 0.64 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.21 0.5  0.36 0.5  0.14 0.43 0.21 0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.5  0.14 0.57 0.36 0.64 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.36 0.43 0.64 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.64 0.57 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.29 0.57 0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.07 0.64 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.71 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
select_j_column
[ 0.  1.  0.  0.  0. -1.  0.  0.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  1.  0.  1.]
 [ 1.  1.  1.  0.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.  0. -1.  0. -1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  0.  1.  1. -1. -1. -1.  0.  1. -1.]
 [-1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  0. -1. -1. -1.  1.  1. -1.  0. -1.  0.  1.  1.]
 [-1.  1. -1.  0.  1.  1.  0.  1.  0.  1.  0. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1.  0. -1. -1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.  1.]]
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  0  0  1  0  0  2  1]
 [ 0  0  1  8  0  4  0  2  0  1]
 [ 1  2  2  0  9  0  0  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 2  0  2  0  0  2  6  0  3  0]
 [ 3  3  0  1  0  2  0 11  0  0]
 [ 2  2  3  0  0  4  2  0  9  0]
 [ 0  0  0  2  0  7  0  0  1  3]]
row HD
[[0.  1.1 0.6 1.1 0.7 1.1 0.7 0.7 1.1 1.1]
 [0.  0.  1.  0.8 0.5 1.  0.8 0.7 0.6 0.8]
 [0.  0.  0.  0.9 0.8 0.9 0.6 0.5 0.8 0.6]
 [0.  0.  0.  0.  1.  0.5 0.8 1.1 0.4 0.6]
 [0.  0.  0.  0.  0.  1.1 0.8 0.5 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.9 1.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.4  0.4  0.27 0.53 0.27 0.4  0.53 0.67 0.47 0.47 0.33
  0.33]
 [0.   0.   0.27 0.47 0.4  0.2  0.47 0.2  0.53 0.27 0.53 0.33 0.53 0.33
  0.4 ]
 [0.   0.   0.   0.6  0.27 0.2  0.4  0.33 0.67 0.27 0.47 0.2  0.53 0.47
  0.27]
 [0.   0.   0.   0.   0.67 0.53 0.53 0.47 0.47 0.6  0.53 0.6  0.47 0.47
  0.67]
 [0.   0.   0.   0.   0.   0.2  0.47 0.33 0.47 0.13 0.4  0.2  0.47 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.47 0.13 0.53 0.33 0.6  0.4  0.4  0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.53 0.4  0.4  0.33 0.4  0.6  0.53
  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.6  0.53 0.33 0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.27 0.53 0.47 0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.07 0.6  0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.53 0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.872, 0.862, 0.846, 0.684, 0.749, 0.936, 0.728, 0.936, 0.754, 0.825, 0.638, 0.883, 0.738, 0.83, 0.824]
cutting matrix
[[-1.  1.  1.  1.  0.  1.  0.  0.  0.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  0.  1. -1.  0. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  0.  1. -1. -1. -1.  0.  1. -1.]
 [-1.  1.  1.  1.  0.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1.  0. -1.  0.  1.  1.]
 [-1.  1. -1.  1.  0.  1.  1.  0. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  0. -1.  1.  0.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  0. -1. -1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 17  1  0  1  0  1  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  2  2  3  9  0  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 2  0  2  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  4  0  6  0  0  0  3]]


SVM classifier
Time: 2019-01-05 23:02:54
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 4 22  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  2  0  0  0]
 [ 2  9  0  0  0  0  5  0  0  0]
 [11  2  0  0  0  0  4  0  0  0]
 [16  2  0  0  0  0  2  0  0  0]
 [ 3 10  0  0  0  0  2  0  0  0]
 [ 2  4  0  0  0  0 14  0  0  0]
 [ 3 15  0  0  0  0  4  0  0  0]
 [ 2  2  0  0  0  0  9  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  0.]
 [-1.  0.]
 [ 1.  1.]
 [ 1. -1.]
 [ 0.  0.]
 [ 1.  1.]]
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  3 17  1  0  0  0  1  0  0]
 [ 0  2  1  8  2  0  2  1  0  0]
 [ 0  1  2  0 11  0  2  1  0  0]
 [ 2  3  1  0 14  0  0  0  0  0]
 [ 1  9  1  0  2  0  0  2  0  0]
 [ 1  3  0  1  1  0  0 14  0  0]
 [ 2 15  2  1  1  0  0  1  0  0]
 [ 1  6  0  2  1  0  1  2  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.1 0.2 0.2 0.  0.2]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
5
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  0.]
 [ 0.  0. -1.]
 [ 0. -1.  0.]
 [ 0.  1.  0.]
 [-1.  0. -1.]
 [-1.  0. -1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [ 0.  0.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[12  4  0  0  0  0  0  0  1  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  3 17  1  0  0  0  0  1  0]
 [ 0  3  1  8  2  0  2  0  0  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 2  2  1  0 14  0  0  0  1  0]
 [ 1  0  1  0  2  0  0  2  9  0]
 [ 1  4  2  1  1  0  0 11  0  0]
 [ 2  4  2  1  1  0  0  1 11  0]
 [ 1  8  0  2  1  0  0  0  0  1]]
row HD
[[0.  0.3 0.1 0.2 0.2 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.2 0.2 0.1 0.1 0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.1 0.3 0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  0. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  0.  1.]
 [ 0.  0. -1. -1.]
 [ 0. -1.  0.  1.]
 [ 0.  1.  0. -1.]
 [-1.  0. -1. -1.]
 [-1.  0. -1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  1.  0.]
 [ 0.  0.  1. -1.]
 [ 1.  1. -1. -1.]]
confusion matrix
[[10  1  3  0  2  0  0  0  1  0]
 [ 0 20  1  1  4  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  2  2  8  2  0  2  0  0  0]
 [ 0  3  0  0 11  0  0  1  0  2]
 [ 1  3  1  0 15  0  0  0  0  0]
 [ 1  0  7  0  2  0  0  2  3  0]
 [ 1  4  2  1  1  0  0 11  0  0]
 [ 2  4  4  1  1  0  0  1  9  0]
 [ 0  8  0  2  2  0  0  0  0  1]]
row HD
[[0.  0.4 0.1 0.3 0.3 0.3 0.3 0.3 0.4 0.4]
 [0.  0.  0.3 0.2 0.1 0.1 0.4 0.4 0.1 0.2]
 [0.  0.  0.  0.2 0.4 0.4 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   1.75]
 [0.   0.   2.25 2.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  0. -1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  0. -1.  1.  0.  0.  1. -1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  0.  1.  0.]
 [ 0.  0. -1. -1.  0.]
 [ 0. -1.  0.  1.  0.]
 [ 0.  1.  0. -1.  0.]
 [-1.  0. -1. -1.  0.]
 [-1.  0. -1. -1.  0.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1.  1.  0. -1.]
 [ 0.  0.  1. -1.  0.]
 [ 1.  1. -1. -1. -1.]]
confusion matrix
[[10  1  3  0  2  0  0  0  1  0]
 [ 0 20  1  1  4  0  0  0  0  0]
 [ 0  2 18  1  0  0  0  0  1  0]
 [ 0  2  2 10  2  0  0  0  0  0]
 [ 0  3  0  0 11  0  0  1  0  2]
 [ 1  3  1  0 15  0  0  0  0  0]
 [ 1  0  9  0  2  0  0  0  3  0]
 [ 1  4  2  1  1  0  0 11  0  0]
 [ 2  4  5  1  1  0  0  0  9  0]
 [ 0  8  0  2  2  0  0  0  0  1]]
row HD
[[0.  0.4 0.1 0.3 0.3 0.3 0.4 0.4 0.4 0.5]
 [0.  0.  0.3 0.2 0.1 0.1 0.5 0.5 0.1 0.3]
 [0.  0.  0.  0.2 0.4 0.4 0.4 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 1.4 1. ]
 [0.  0.  1.8 1.8 0.8]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 1. -1.  1. -1. -1. -1.  1.  0. -1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.]
 [ 0.  0. -1. -1.  0.  1.]
 [ 0. -1.  0.  1.  0.  0.]
 [ 0.  1.  0. -1.  0.  1.]
 [-1.  0. -1. -1.  0. -1.]
 [-1.  0. -1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  0. -1.  0.]
 [ 0.  0.  1. -1.  0.  0.]
 [ 1.  1. -1. -1. -1.  0.]]
confusion matrix
[[10  1  3  0  2  0  0  0  1  0]
 [ 0 20  1  1  1  3  0  0  0  0]
 [ 0  0 19  1  0  0  0  0  2  0]
 [ 0  1  3  8  0  2  0  2  0  0]
 [ 0  0  0  0 10  1  0  1  2  3]
 [ 1  2  1  0  1 14  0  0  1  0]
 [ 1  0  9  0  0  2  0  0  3  0]
 [ 1  3  3  1  0  1  0 11  0  0]
 [ 2  4  5  1  0  1  0  0  9  0]
 [ 0  8  0  2  1  1  0  0  0  1]]
row HD
[[0.  0.5 0.1 0.4 0.4 0.4 0.5 0.4 0.4 0.5]
 [0.  0.  0.4 0.2 0.2 0.1 0.6 0.6 0.2 0.4]
 [0.  0.  0.  0.3 0.5 0.5 0.5 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 1.17 0.83 1.17]
 [0.   0.   1.5  1.5  0.67 1.33]
 [0.   0.   0.   0.83 0.83 1.17]
 [0.   0.   0.   0.   1.33 1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
6
new_column
None


============== iter  7 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.]
 [ 0.  0. -1. -1.  0.  1.]
 [ 0. -1.  0.  1.  0.  0.]
 [ 0.  1.  0. -1.  0.  1.]
 [-1.  0. -1. -1.  0. -1.]
 [-1.  0. -1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  0. -1.  0.]
 [ 0.  0.  1. -1.  0.  0.]
 [ 1.  1. -1. -1. -1.  0.]]
confusion matrix
[[10  1  3  0  2  0  0  0  1  0]
 [ 0 20  1  1  1  3  0  0  0  0]
 [ 0  0 19  1  0  0  0  0  2  0]
 [ 0  1  3  8  0  2  0  2  0  0]
 [ 0  0  0  0 10  1  0  1  2  3]
 [ 1  2  1  0  1 14  0  0  1  0]
 [ 1  0  9  0  0  2  0  0  3  0]
 [ 1  3  3  1  0  1  0 11  0  0]
 [ 2  4  5  1  0  1  0  0  9  0]
 [ 0  8  0  2  1  1  0  0  0  1]]
row HD
[[0.  0.5 0.1 0.4 0.4 0.4 0.5 0.4 0.4 0.5]
 [0.  0.  0.4 0.2 0.2 0.1 0.6 0.6 0.2 0.4]
 [0.  0.  0.  0.3 0.5 0.5 0.5 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 1.17 0.83 1.17]
 [0.   0.   1.5  1.5  0.67 1.33]
 [0.   0.   0.   0.83 0.83 1.17]
 [0.   0.   0.   0.   1.33 1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.  0.]
 [ 0.  0. -1. -1.  0.  1.  0.]
 [ 0. -1.  0.  1.  0.  0.  0.]
 [ 0.  1.  0. -1.  0.  1.  0.]
 [-1.  0. -1. -1.  0. -1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.  0.]
 [ 1. -1.  1.  0. -1.  0.  1.]
 [ 0.  0.  1. -1.  0.  0.  0.]
 [ 1.  1. -1. -1. -1.  0. -1.]]
confusion matrix
[[10  1  3  0  0  2  0  0  1  0]
 [ 0 20  1  1  1  3  0  0  0  0]
 [ 0  0 19  1  0  0  0  0  2  0]
 [ 0  1  3  8  0  2  0  2  0  0]
 [ 0  0  0  0 11  1  0  1  2  2]
 [ 1  2  1  0  0 15  0  0  1  0]
 [ 1  0  9  0  0  2  0  0  3  0]
 [ 1  3  3  1  0  1  0 11  0  0]
 [ 2  4  5  1  0  1  0  0  9  0]
 [ 0  6  0  2  0  2  0  0  0  3]]
row HD
[[0.  0.5 0.1 0.4 0.5 0.4 0.5 0.5 0.4 0.6]
 [0.  0.  0.4 0.2 0.3 0.1 0.6 0.7 0.2 0.5]
 [0.  0.  0.  0.3 0.6 0.5 0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.5 0.3 0.5 0.7 0.3 0.5]
 [0.  0.  0.  0.  0.  0.2 0.6 0.6 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.57 1.   0.71 1.   0.71]
 [0.   0.   1.29 1.29 0.57 1.14 1.  ]
 [0.   0.   0.   0.71 0.71 1.   0.71]
 [0.   0.   0.   0.   1.14 1.14 1.29]
 [0.   0.   0.   0.   0.   1.   0.43]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0.  1. -1.  0. -1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.  0. -1.]
 [ 0.  0. -1. -1.  0.  1.  0.  0.]
 [ 0. -1.  0.  1.  0.  0.  0. -1.]
 [ 0.  1.  0. -1.  0.  1.  0.  0.]
 [-1.  0. -1. -1.  0. -1.  1.  0.]
 [-1.  0. -1. -1.  0.  1.  0.  0.]
 [ 1.  1.  1.  1.  1. -1.  0.  0.]
 [ 1. -1.  1.  0. -1.  0.  1.  1.]
 [ 0.  0.  1. -1.  0.  0.  0. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.]]
confusion matrix
[[10  1  3  0  0  1  0  0  2  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  2  0]
 [ 0  2  2  8  0  2  0  2  0  0]
 [ 0  0  0  0 11  1  0  1  2  2]
 [ 1  2  1  0  0 14  0  0  2  0]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 1  3  1  1  0  1  0 13  0  0]
 [ 2  4  4  1  0  1  1  0  9  0]
 [ 0  6  0  2  0  2  0  0  0  3]]
row HD
[[0.  0.6 0.1 0.5 0.6 0.5 0.6 0.6 0.4 0.7]
 [0.  0.  0.5 0.2 0.3 0.1 0.6 0.8 0.3 0.5]
 [0.  0.  0.  0.4 0.7 0.6 0.6 0.6 0.3 0.7]
 [0.  0.  0.  0.  0.5 0.3 0.5 0.8 0.4 0.5]
 [0.  0.  0.  0.  0.  0.2 0.6 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.8 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.5  0.88 0.62 0.88 0.62 0.75]
 [0.   0.   1.12 1.12 0.5  1.   0.88 0.62]
 [0.   0.   0.   0.62 0.62 0.88 0.62 1.  ]
 [0.   0.   0.   0.   1.   1.   1.12 1.12]
 [0.   0.   0.   0.   0.   0.88 0.38 0.75]
 [0.   0.   0.   0.   0.   0.   0.88 1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  0. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.  0. -1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0.  0.  1.]
 [ 0. -1.  0.  1.  0.  0.  0. -1.  0.]
 [ 0.  1.  0. -1.  0.  1.  0.  0. -1.]
 [-1.  0. -1. -1.  0. -1.  1.  0.  0.]
 [-1.  0. -1. -1.  0.  1.  0.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.  0.  0.  0.]
 [ 1. -1.  1.  0. -1.  0.  1.  1.  1.]
 [ 0.  0.  1. -1.  0.  0.  0. -1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0. -1.]]
confusion matrix
[[11  1  3  0  1  0  0  0  1  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  2  0]
 [ 0  1  2  9  0  2  0  2  0  0]
 [ 0  2  0  0 11  1  0  1  2  0]
 [ 2  0  1  2  0 14  0  0  1  0]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 1  3  3  1  0  1  0 11  0  0]
 [ 2  1  4  4  0  1  1  0  9  0]
 [ 0  1  0  8  1  1  0  0  0  2]]
row HD
[[0.  0.7 0.1 0.6 0.6 0.6 0.6 0.7 0.5 0.8]
 [0.  0.  0.6 0.3 0.4 0.1 0.7 0.8 0.3 0.6]
 [0.  0.  0.  0.5 0.7 0.7 0.6 0.7 0.4 0.8]
 [0.  0.  0.  0.  0.6 0.4 0.6 0.9 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.6 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.44 0.78 0.56 0.78 0.56 0.67 0.89]
 [0.   0.   1.   1.   0.44 0.89 0.78 0.56 1.  ]
 [0.   0.   0.   0.56 0.56 0.78 0.56 0.89 0.56]
 [0.   0.   0.   0.   0.89 0.89 1.   1.   0.89]
 [0.   0.   0.   0.   0.   0.78 0.33 0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.78 1.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
9
new_column
None


============== iter  11 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.  0. -1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0.  0.  1.]
 [ 0. -1.  0.  1.  0.  0.  0. -1.  0.]
 [ 0.  1.  0. -1.  0.  1.  0.  0. -1.]
 [-1.  0. -1. -1.  0. -1.  1.  0.  0.]
 [-1.  0. -1. -1.  0.  1.  0.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.  0.  0.  0.]
 [ 1. -1.  1.  0. -1.  0.  1.  1.  1.]
 [ 0.  0.  1. -1.  0.  0.  0. -1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0. -1.]]
confusion matrix
[[11  1  3  0  1  0  0  0  1  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  2  0]
 [ 0  1  2  9  0  2  0  2  0  0]
 [ 0  2  0  0 11  1  0  1  2  0]
 [ 2  0  1  2  0 14  0  0  1  0]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 1  3  3  1  0  1  0 11  0  0]
 [ 2  1  4  4  0  1  1  0  9  0]
 [ 0  1  0  8  1  1  0  0  0  2]]
row HD
[[0.  0.7 0.1 0.6 0.6 0.6 0.6 0.7 0.5 0.8]
 [0.  0.  0.6 0.3 0.4 0.1 0.7 0.8 0.3 0.6]
 [0.  0.  0.  0.5 0.7 0.7 0.6 0.7 0.4 0.8]
 [0.  0.  0.  0.  0.6 0.4 0.6 0.9 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.6 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.44 0.78 0.56 0.78 0.56 0.67 0.89]
 [0.   0.   1.   1.   0.44 0.89 0.78 0.56 1.  ]
 [0.   0.   0.   0.56 0.56 0.78 0.56 0.89 0.56]
 [0.   0.   0.   0.   0.89 0.89 1.   1.   0.89]
 [0.   0.   0.   0.   0.   0.78 0.33 0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.78 1.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[-1.  0. -1.  1.  0.  0.  1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  12 ================
current matrix is 
[[-1. -1.  0.  1.  0.  0.  0. -1.  0.  0.]
 [ 0.  0. -1. -1.  0.  1.  0.  0.  1.  0.]
 [ 0. -1.  0.  1.  0.  0.  0. -1.  0.  0.]
 [ 0.  1.  0. -1.  0.  1.  0.  0. -1.  0.]
 [-1.  0. -1. -1.  0. -1.  1.  0.  0.  0.]
 [-1.  0. -1. -1.  0.  1.  0.  0.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.  0.  0.  0. -1.]
 [ 1. -1.  1.  0. -1.  0.  1.  1.  1.  1.]
 [ 0.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
 [ 1.  1. -1. -1. -1.  0. -1.  0. -1.  0.]]
confusion matrix
[[11  1  3  0  1  0  0  0  1  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  2  0]
 [ 0  1  2  9  0  2  0  2  0  0]
 [ 0  2  0  0 11  1  0  1  2  0]
 [ 2  0  1  2  0 14  0  0  1  0]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 1  3  3  1  0  1  0 11  0  0]
 [ 2  1  4  4  0  1  1  0  9  0]
 [ 0  1  0  8  1  1  0  0  0  2]]
row HD
[[0.  0.7 0.1 0.6 0.6 0.6 0.7 0.8 0.5 0.8]
 [0.  0.  0.6 0.3 0.4 0.1 0.8 0.9 0.3 0.6]
 [0.  0.  0.  0.5 0.7 0.7 0.7 0.8 0.4 0.8]
 [0.  0.  0.  0.  0.6 0.4 0.7 1.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.7 0.9 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.4 0.7 0.5 0.7 0.5 0.6 0.8 0.5]
 [0.  0.  0.9 0.9 0.4 0.8 0.7 0.5 0.9 0.6]
 [0.  0.  0.  0.5 0.5 0.7 0.5 0.8 0.5 0.6]
 [0.  0.  0.  0.  0.8 0.8 0.9 0.9 0.8 1. ]
 [0.  0.  0.  0.  0.  0.7 0.3 0.6 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.7 0.9 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.627, 0.563, 0.752, 0.827, 0.375, 0.702, 0.58, 0.778, 0.726, 0.4]
cutting matrix
[[-1.  1.  0.  0. -1.  0.  0.]
 [ 0. -1.  0.  0.  0.  1.  0.]
 [ 0.  1.  0.  0. -1.  0.  0.]
 [ 0. -1.  0.  0.  0. -1.  0.]
 [-1. -1.  0.  1.  0.  0.  0.]
 [-1. -1.  0.  0.  0.  1.  0.]
 [ 1.  1.  1.  0.  0.  0. -1.]
 [ 1.  0. -1.  1.  1.  1.  1.]
 [ 0. -1.  0.  0. -1.  1.  0.]
 [ 1. -1. -1. -1.  0. -1.  0.]]
cutting matrix's confusion matrix
[[10  0  3  1  1  0  0  0  2  0]
 [ 0 20  1  1  4  0  0  0  0  0]
 [ 0  0 18  0  0  0  0  0  3  1]
 [ 0  0  2  9  0  2  0  2  0  1]
 [ 0  3  0  0 11  0  0  1  2  0]
 [ 1  0  1  2  1 14  0  0  1  0]
 [ 1  0  7  0  0  2  2  0  3  0]
 [ 1  3  0  1  0  1  2 11  0  1]
 [ 2  0  4  3  0  1  1  0 11  0]
 [ 0  1  0  9  1  0  0  0  0  2]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:03:03
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1. -1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0. ]
 [0.  0.  0.4 0.  0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0. ]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [ 1.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1. -1.]]
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 0  0  0  0  5]
 [ 0  0  0  0  3]]
row HD
[[0.  0.6 0.4 0.4 0.2]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   0.75]
 [0.   0.   0.5  0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1.  1. -1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 0.6 0.4]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.8 0.4]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67 0.5  0.33 0.17]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.  1.]]
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  0.8 0.4 1.  0.6]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.57 0.43 0.29 0.14 0.14]
 [0.   0.   0.29 0.43 0.29 0.43 0.14]
 [0.   0.   0.   0.43 0.29 0.43 0.43]
 [0.   0.   0.   0.   0.43 0.29 0.57]
 [0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
efficient_count == 3

**********      classifier acc  **************
[0.661, 0.839, 0.75, 0.804, 0.857, 0.911, 0.625]
cutting matrix
[[ 1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1.  1. -1.]]
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]


SVM classifier
Time: 2019-01-05 23:03:04
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0. -1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  1  4  0  0]
 [ 3  1  1  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [ 0. -1.]
 [ 0. -1.]
 [-1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  5  0  0]
 [ 3  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.4]
 [0.  0.  0.4 0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1.  1.  0.]
 [ 0. -1.  0.]
 [ 0. -1.  1.]
 [-1.  1.  0.]]
confusion matrix
[[24  0  0  1  0]
 [13  0  0  1  0]
 [ 4  0  2  3  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.6 0.4 0.4 0.6]
 [0.  0.  0.4 0.6 0. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [-1.  1.  0. -1.]
 [ 0. -1.  0.  1.]
 [ 0. -1.  1.  1.]
 [-1.  1.  0. -1.]]
confusion matrix
[[24  0  0  1  0]
 [12  0  1  1  0]
 [ 2  0  4  3  0]
 [ 2  0  1  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.8 0.6 0.6 0.8]
 [0.  0.  0.6 0.8 0. ]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   0.75]
 [0.   0.   1.   1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[-1.  0.  0.  1.  0.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [-1.  1.  0. -1.]
 [ 0. -1.  0.  1.]
 [ 0. -1.  1.  1.]
 [-1.  1.  0. -1.]]
confusion matrix
[[24  0  0  1  0]
 [12  0  1  1  0]
 [ 2  0  4  3  0]
 [ 2  0  1  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.8 0.6 0.6 0.8]
 [0.  0.  0.6 0.8 0. ]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   0.75]
 [0.   0.   1.   1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  0.  1.]
 [-1.  1.  0. -1.  1.]
 [ 0. -1.  0.  1.  1.]
 [ 0. -1.  1.  1. -1.]
 [-1.  1.  0. -1.  1.]]
confusion matrix
[[24  0  1  0  0]
 [12  0  2  0  0]
 [ 2  0  7  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.8 0.6 0.8 0.8]
 [0.  0.  0.6 1.  0. ]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 0.6 0.8]
 [0.  0.  0.8 1.  0.4]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
None


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  0.  1.]
 [-1.  1.  0. -1.  1.]
 [ 0. -1.  0.  1.  1.]
 [ 0. -1.  1.  1. -1.]
 [-1.  1.  0. -1.  1.]]
confusion matrix
[[24  0  1  0  0]
 [12  0  2  0  0]
 [ 2  0  7  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.8 0.6 0.8 0.8]
 [0.  0.  0.6 1.  0. ]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 0.6 0.8]
 [0.  0.  0.8 1.  0.4]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.619, 0.696, 0.767, 0.258, 0.911]
cutting matrix
[[ 1. -1. -1.  0.  1.]
 [-1.  1.  0. -1.  1.]
 [ 0. -1.  0.  1.  1.]
 [ 0. -1.  1.  1. -1.]
 [-1.  1.  0. -1.  1.]]
cutting matrix's confusion matrix
[[24  0  1  0  0]
 [12  0  2  0  0]
 [ 2  0  7  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]


SVM classifier
Time: 2019-01-05 23:03:05
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0 11  0  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  1  0  6  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0. -1.]
 [ 1.  0.  1.]
 [ 1.  0. -1.]
 [ 1. -1.  1.]
 [-1.  1.  0.]
 [ 1. -1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  1  0  6  0  0]]
row HD
[[0.   0.33 0.17 0.5  0.33 0.5 ]
 [0.   0.   0.17 0.17 0.5  0.17]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.5  0.  ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   0.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  0. -1.  1.]
 [ 1.  0.  1.  1.]
 [ 1.  0. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1.  1.  0.  1.]
 [ 1. -1.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.33 0.33 0.67 0.33 0.67]
 [0.   0.   0.33 0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.67 0.33]
 [0.   0.   0.   0.   0.67 0.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.5  0.5  1.25]
 [0.   0.   1.5  0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.985, 0.889, 0.982, 0.97]
cutting matrix
[[-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  0.  1.]
 [ 1.  1. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]


SVM classifier
Time: 2019-01-05 23:03:06
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [12  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0.  0. -1.  1. -1.]
select_j_column
[ 0. -1. -1.  1.  0.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [ 0.  0.]
 [ 1.  1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.   0.33 0.17]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0.  1.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  0. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  1.]
 [ 0. -1.  0.]
 [ 1. -1.  0.]
 [ 0.  0.  1.]
 [ 1.  1.  1.]
 [-1.  0. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.5  0.   0.33 0.33]
 [0.   0.   0.17 0.33 0.5  0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0.  1.  0. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1.  0.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1.  0.]
 [ 0. -1.  0. -1.]
 [ 1. -1.  0.  0.]
 [ 0.  0.  1. -1.]
 [ 1.  1.  1.  0.]
 [-1.  0. -1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.5  0.5  0.17 0.33 0.5 ]
 [0.   0.   0.33 0.33 0.67 0.67]
 [0.   0.   0.   0.67 0.33 0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.75 1.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.933, 0.971, 0.932, 0.929]
cutting matrix
[[ 0.  0.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1.  0.]
 [-1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-05 23:03:07
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  4  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 4  0  0  0  0 19  0  0  0  0]
 [ 4  0  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 4  0  0  0  0  9  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [-1.  0.]
 [-1.  0.]
 [-1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]]
confusion matrix
[[14  0  3  0  0  0  1  0  0  0]
 [21  0  1  0  0  0  0  0  0  0]
 [ 5  0 17  0  0  1  3  0  0  0]
 [15  0  1  0  0  1  0  0  0  0]
 [ 2  0  2  0  0 19  0  0  0  0]
 [ 1  0  3  0  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [15  0  2  0  0  0  0  0  0  0]
 [ 2  0  1  0  0  2  9  0  0  0]
 [ 3  0  1  0  0  9  0  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.1 0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 5.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  1.  1.]
 [-1.  0.  1.]
 [-1.  0.  1.]
 [-1.  0.  1.]
 [ 1.  0. -1.]
 [ 1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]]
confusion matrix
[[14  0  3  0  0  0  1  0  0  0]
 [21  0  1  0  0  0  0  0  0  0]
 [ 5  0 17  0  0  0  4  0  0  0]
 [15  0  1  0  0  0  1  0  0  0]
 [ 2  0  2  0  0  0 19  0  0  0]
 [ 1  0  3  0  0  0 15  0  0  0]
 [ 2  0  0  0  0  0 17  0  0  0]
 [15  0  2  0  0  0  0  0  0  0]
 [ 2  0  1  0  0  0 11  0  0  0]
 [ 3  0  1  0  0  0  9  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.1 0.3 0.2 0.  0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.3 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.33 2.33]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1.  1.  1.  0.]
 [-1.  0.  1.  0.]
 [-1.  0.  1. -1.]
 [-1.  0.  1. -1.]
 [ 1.  0. -1.  0.]
 [ 1. -1.  1. -1.]
 [-1.  1.  1.  0.]
 [ 1. -1.  1. -1.]
 [ 1. -1.  1. -1.]]
confusion matrix
[[13  1  3  0  0  0  1  0  0  0]
 [ 0 21  1  0  0  0  0  0  0  0]
 [ 1  4 17  0  0  0  4  0  0  0]
 [ 0 15  1  0  0  0  1  0  0  0]
 [ 0  2  2  0  0  0 19  0  0  0]
 [ 0  1  3  0  0  0 15  0  0  0]
 [ 2  0  0  0  0  0 17  0  0  0]
 [ 0 15  2  0  0  0  0  0  0  0]
 [ 2  0  1  0  0  0 11  0  0  0]
 [ 0  3  1  0  0  0  9  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.2 0.4 0.3 0.1 0.3 0.3]
 [0.  0.  0.1 0.2 0.2 0.3 0.3 0.  0.3 0.3]
 [0.  0.  0.  0.1 0.1 0.2 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.5  1.75 2.  ]
 [0.   0.   1.75 1.  ]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1. -1.]
 [-1.  1.  1.  0. -1.]
 [-1.  0.  1.  0.  1.]
 [-1.  0.  1. -1.  1.]
 [-1.  0.  1. -1.  1.]
 [ 1.  0. -1.  0.  1.]
 [ 1. -1.  1. -1.  1.]
 [-1.  1.  1.  0. -1.]
 [ 1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.]]
confusion matrix
[[13  1  3  0  0  0  1  0  0  0]
 [ 0 17  5  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  4  0  0  0]
 [ 0  5 11  0  0  0  1  0  0  0]
 [ 0  0  4  0  0  0 19  0  0  0]
 [ 0  0  4  0  0  0 15  0  0  0]
 [ 2  0  0  0  0  0 17  0  0  0]
 [ 0 14  3  0  0  0  0  0  0  0]
 [ 2  0  1  0  0  0 11  0  0  0]
 [ 0  0  4  0  0  0  9  0  0  0]]
row HD
[[0.  0.1 0.3 0.3 0.3 0.5 0.4 0.1 0.4 0.4]
 [0.  0.  0.2 0.3 0.3 0.4 0.4 0.  0.4 0.4]
 [0.  0.  0.  0.1 0.1 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.  1.4 1.6 0.6]
 [0.  0.  1.4 0.8 2. ]
 [0.  0.  0.  1.8 0.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1. -1.  0.]
 [-1.  1.  1.  0. -1. -1.]
 [-1.  0.  1.  0.  1.  0.]
 [-1.  0.  1. -1.  1.  0.]
 [-1.  0.  1. -1.  1.  1.]
 [ 1.  0. -1.  0.  1.  1.]
 [ 1. -1.  1. -1.  1.  0.]
 [-1.  1.  1.  0. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1.]]
confusion matrix
[[13  1  3  0  0  0  1  0  0  0]
 [ 0 17  5  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  3  0  1  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 0  0  4  0  0  0  0  0 19  0]
 [ 0  0  4  0  0  0  2  0 13  0]
 [ 2  0  0  0  0  0 16  0  1  0]
 [ 0 14  3  0  0  0  0  0  0  0]
 [ 2  0  1  0  0  0  9  0  2  0]
 [ 0  0  4  0  0  0  0  0  9  0]]
row HD
[[0.  0.2 0.3 0.3 0.4 0.6 0.4 0.2 0.5 0.5]
 [0.  0.  0.3 0.4 0.4 0.5 0.5 0.  0.5 0.4]
 [0.  0.  0.  0.1 0.2 0.3 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.1 0.4 0.2 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.17 1.33 0.5  1.  ]
 [0.   0.   1.17 0.67 1.67 1.17]
 [0.   0.   0.   1.5  0.67 1.33]
 [0.   0.   0.   0.   1.67 1.33]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1. -1.  0.  1.]
 [-1.  1.  1.  0. -1. -1.  0.]
 [-1.  0.  1.  0.  1.  0.  0.]
 [-1.  0.  1. -1.  1.  0.  0.]
 [-1.  0.  1. -1.  1.  1.  0.]
 [ 1.  0. -1.  0.  1.  1.  0.]
 [ 1. -1.  1. -1.  1.  0.  0.]
 [-1.  1.  1.  0. -1. -1.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.]
 [ 1. -1.  1. -1.  1. -1. -1.]]
confusion matrix
[[13  1  3  0  0  0  1  0  0  0]
 [ 0 17  5  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  3  0  1  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 0  0  4  0  0  0  0  0 19  0]
 [ 0  0  4  0  0  0  2  0 13  0]
 [ 2  0  0  0  0  0 16  0  1  0]
 [ 0 14  3  0  0  0  0  0  0  0]
 [ 2  0  1  0  0  0  9  0  2  0]
 [ 0  0  4  0  0  0  0  0  9  0]]
row HD
[[0.  0.3 0.4 0.4 0.5 0.7 0.5 0.3 0.6 0.6]
 [0.  0.  0.3 0.4 0.4 0.5 0.5 0.  0.5 0.5]
 [0.  0.  0.  0.1 0.2 0.3 0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.1 0.4 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.43 1.   1.14 0.43 0.86 1.43]
 [0.   0.   1.   0.57 1.43 1.   0.57]
 [0.   0.   0.   1.29 0.57 1.14 1.29]
 [0.   0.   0.   0.   1.43 1.14 0.57]
 [0.   0.   0.   0.   0.   0.71 1.43]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.798, 0.728, 0.899, 0.673, 0.872, 0.685, 0.419]
cutting matrix
[[-1.  1. -1.  0.  1.]
 [-1.  1. -1. -1.  0.]
 [-1.  1.  1.  0.  0.]
 [-1.  1.  1.  0.  0.]
 [-1.  1.  1.  1.  0.]
 [ 1. -1.  1.  1.  0.]
 [ 1.  1.  1.  0.  0.]
 [-1.  1. -1. -1.  0.]
 [ 1.  1.  1.  1.  0.]
 [ 1.  1.  1. -1. -1.]]
cutting matrix's confusion matrix
[[13  1  0  0  3  0  1  0  0  0]
 [ 0 17  0  0  5  0  0  0  0  0]
 [ 1  2 17  0  2  0  3  0  1  0]
 [ 0  5  1  0 10  0  0  0  1  0]
 [ 0  0  0  0  4  0  0  0 19  0]
 [ 0  0  0  0  4  0  2  0 13  0]
 [ 2  0  0  0  0  0 16  0  1  0]
 [ 0 14  0  0  3  0  0  0  0  0]
 [ 2  0  0  0  1  0  9  0  2  0]
 [ 0  0  0  0  4  0  0  0  9  0]]


SVM classifier
Time: 2019-01-05 23:03:12
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [21  0  0  0  0  1  0  0  0  0]
 [25  0  0  0  0  1  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [15  0  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 1.  1.]
 [ 1.  0.]
 [-1. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 0. -1.]]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 8  0 18  0  0  0  0  0  0  0]
 [10  0  2  0  0  0  0  5  0  0]
 [ 2  0 19  0  0  2  0  0  0  0]
 [ 3  0 13  0  0  3  0  0  0  0]
 [18  0  1  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  2  0 12  0  0]
 [11  0  2  0  0  1  0  0  0  0]
 [ 3  0  9  0  0  1  0  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.2 0.2 0.  0.1 0.1 0.1]
 [0.  0.  0.1 0.1 0.2 0.2 0.  0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 1.  1.]
 [ 1.  0.]
 [-1. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 0. -1.]]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 8  0 18  0  0  0  0  0  0  0]
 [10  0  2  0  0  0  0  5  0  0]
 [ 2  0 19  0  0  2  0  0  0  0]
 [ 3  0 13  0  0  3  0  0  0  0]
 [18  0  1  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  2  0 12  0  0]
 [11  0  2  0  0  1  0  0  0  0]
 [ 3  0  9  0  0  1  0  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.2 0.2 0.  0.1 0.1 0.1]
 [0.  0.  0.1 0.1 0.2 0.2 0.  0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 [ 1.  1.  1.]
 [ 1.  0.  1.]
 [-1. -1.  1.]
 [ 0.  1.  0.]
 [ 0. -1.  1.]
 [-1.  1. -1.]
 [ 0. -1.  0.]]
confusion matrix
[[13  2  0  0  0  3  0  0  0  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  7 18  0  0  0  0  0  0  0]
 [ 0 10  2  0  0  0  0  5  0  0]
 [ 0  2 19  0  0  2  0  0  0  0]
 [ 0  3 13  0  0  3  0  0  0  0]
 [ 2 16  1  0  0  0  0  0  0  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  9  2  0  0  1  0  0  0  0]
 [ 0  3  9  0  0  1  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.2 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.2 0.2 0.3 0.3 0.  0.2 0.2 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.33]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  1.  0.]
 [ 0.  1.  0.  1.]
 [ 0.  0.  1.  0.]
 [ 1.  1.  1.  0.]
 [ 1.  0.  1. -1.]
 [-1. -1.  1.  0.]
 [ 0.  1.  0.  0.]
 [ 0. -1.  1.  0.]
 [-1.  1. -1.  0.]
 [ 0. -1.  0.  0.]]
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  0  0  1  4 17  0  0]
 [ 1  2 18  0  0  0  5  0  0  0]
 [ 0  0  2  0  0  0 10  5  0  0]
 [ 0  0 19  0  0  2  2  0  0  0]
 [ 0  0 13  0  0  3  3  0  0  0]
 [ 2  0  1  0  0  0 16  0  0  0]
 [ 0  2  0  0  0  2  1 12  0  0]
 [ 2  0  2  0  0  1  9  0  0  0]
 [ 0  0  9  0  0  1  3  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.3 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.3 0.3 0.4 0.4 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.   1.25]
 [0.   0.   2.   2.  ]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  1.  0. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  1.  0.  0.]
 [ 0.  1.  0.  1.  1.]
 [ 0.  0.  1.  0. -1.]
 [ 1.  1.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.]
 [-1. -1.  1.  0.  1.]
 [ 0.  1.  0.  0. -1.]
 [ 0. -1.  1.  0.  0.]
 [-1.  1. -1.  0. -1.]
 [ 0. -1.  0.  0.  0.]]
confusion matrix
[[13  0  0  0  0  3  2  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3  0 17  0  0  1  5  0  0  0]
 [10  0  1  0  0  1  0  5  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 1  0  0  0  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 1  0  0  0  0  2  2 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.4 0.3 0.2 0.1 0.3 0.2]
 [0.  0.  0.4 0.3 0.5 0.4 0.2 0.4 0.4 0.3]
 [0.  0.  0.  0.3 0.2 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 0.8 1.  1. ]
 [0.  0.  1.6 1.6 1.6]
 [0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.]
 [ 0.  1.  0.  1.  1. -1.]
 [ 0.  0.  1.  0. -1.  0.]
 [ 1.  1.  1.  0.  1. -1.]
 [ 1.  0.  1. -1. -1.  1.]
 [-1. -1.  1.  0.  1.  0.]
 [ 0.  1.  0.  0. -1.  1.]
 [ 0. -1.  1.  0.  0. -1.]
 [-1.  1. -1.  0. -1.  1.]
 [ 0. -1.  0.  0.  0.  0.]]
confusion matrix
[[14  0  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 3  0 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  0  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.3 0.5 0.3 0.3 0.2 0.4 0.2]
 [0.  0.  0.5 0.3 0.6 0.5 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.4 0.3 0.3 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 0.67 0.83 0.83 1.  ]
 [0.   0.   1.33 1.33 1.33 1.  ]
 [0.   0.   0.   1.33 1.   1.33]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0. -1.]
 [ 0.  1.  0.  1.  1. -1.  0.]
 [ 0.  0.  1.  0. -1.  0.  1.]
 [ 1.  1.  1.  0.  1. -1.  0.]
 [ 1.  0.  1. -1. -1.  1. -1.]
 [-1. -1.  1.  0.  1.  0. -1.]
 [ 0.  1.  0.  0. -1.  1. -1.]
 [ 0. -1.  1.  0.  0. -1.  1.]
 [-1.  1. -1.  0. -1.  1. -1.]
 [ 0. -1.  0.  0.  0.  0.  0.]]
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.4 0.5 0.3 0.3 0.3 0.4 0.3]
 [0.  0.  0.6 0.3 0.7 0.6 0.4 0.5 0.6 0.4]
 [0.  0.  0.  0.5 0.4 0.4 0.4 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.5 0.4 0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.57 0.71 0.71 0.86 0.86]
 [0.   0.   1.14 1.14 1.14 0.86 1.29]
 [0.   0.   0.   1.14 0.86 1.14 0.71]
 [0.   0.   0.   0.   0.71 0.86 1.  ]
 [0.   0.   0.   0.   0.   1.14 0.86]
 [0.   0.   0.   0.   0.   0.   1.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0. -1.  1.]
 [ 0.  1.  0.  1.  1. -1.  0.  1.]
 [ 0.  0.  1.  0. -1.  0.  1.  0.]
 [ 1.  1.  1.  0.  1. -1.  0.  1.]
 [ 1.  0.  1. -1. -1.  1. -1.  1.]
 [-1. -1.  1.  0.  1.  0. -1. -1.]
 [ 0.  1.  0.  0. -1.  1. -1.  0.]
 [ 0. -1.  1.  0.  0. -1.  1.  0.]
 [-1.  1. -1.  0. -1.  1. -1. -1.]
 [ 0. -1.  0.  0.  0.  0.  0. -1.]]
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.4 0.5 0.4 0.4 0.4 0.5 0.4]
 [0.  0.  0.7 0.3 0.7 0.7 0.5 0.6 0.7 0.5]
 [0.  0.  0.  0.6 0.5 0.5 0.4 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.6 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.6 0.5 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.5  0.62 0.62 0.75 0.75 0.38]
 [0.   0.   1.   1.   1.   0.75 1.12 0.5 ]
 [0.   0.   0.   1.   0.75 1.   0.62 0.62]
 [0.   0.   0.   0.   0.62 0.75 0.88 0.75]
 [0.   0.   0.   0.   0.   1.   0.75 0.75]
 [0.   0.   0.   0.   0.   0.   1.12 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1. -1.  1. -1.  0. -1.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0. -1.  1.  0.]
 [ 0.  1.  0.  1.  1. -1.  0.  1.  1.]
 [ 0.  0.  1.  0. -1.  0.  1.  0.  0.]
 [ 1.  1.  1.  0.  1. -1.  0.  1. -1.]
 [ 1.  0.  1. -1. -1.  1. -1.  1.  0.]
 [-1. -1.  1.  0.  1.  0. -1. -1.  1.]
 [ 0.  1.  0.  0. -1.  1. -1.  0. -1.]
 [ 0. -1.  1.  0.  0. -1.  1.  0.  0.]
 [-1.  1. -1.  0. -1.  1. -1. -1.  0.]
 [ 0. -1.  0.  0.  0.  0.  0. -1.  0.]]
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.5 0.5 0.5 0.5 0.4 0.5 0.4]
 [0.  0.  0.8 0.4 0.8 0.7 0.6 0.7 0.8 0.6]
 [0.  0.  0.  0.7 0.5 0.6 0.5 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.6 0.6 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.7 0.6 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.44 0.56 0.56 0.67 0.67 0.33 0.67]
 [0.   0.   0.89 0.89 0.89 0.67 1.   0.44 0.78]
 [0.   0.   0.   0.89 0.67 0.89 0.56 0.56 0.89]
 [0.   0.   0.   0.   0.56 0.67 0.78 0.67 0.44]
 [0.   0.   0.   0.   0.   0.89 0.67 0.67 0.44]
 [0.   0.   0.   0.   0.   0.   1.   0.89 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.26, 0.547, 0.694, 0.467, 0.571, 0.875, 0.868, 0.476, 0.39]
cutting matrix
[[ 0.  0. -1.  1.  0.]
 [ 1. -1.  0.  1.  1.]
 [-1.  0.  1.  0.  0.]
 [ 1. -1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.]
 [ 1.  0. -1. -1.  1.]
 [-1.  1. -1.  0. -1.]
 [ 0. -1.  1.  0.  0.]
 [-1.  1. -1. -1.  0.]
 [ 0.  0.  0. -1.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 3  0 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 4  0  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:03:21
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.  0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.2 0.6 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1. -1.  0.]
 [-1. -1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.2]
 [0.  0.  0.2 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  0.25]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.821, 0.911, 0.765]
cutting matrix
[[ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  0.]
 [-1.  1. -1.]]
cutting matrix's confusion matrix
[[31  0  3  0  0]
 [ 6  0  3  0  0]
 [ 3  0  4  0  0]
 [ 3  0  2  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:03:22
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[ 1. -1.  1.  0. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 0.  0.]
 [ 0. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.  0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0. -1.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [ 0.  0.  1.]
 [ 0. -1.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1.  0.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1. -1. -1.  0.]
 [ 1.  1.  1. -1.]
 [ 0.  0.  1. -1.]
 [ 0. -1.  0.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  2  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  1.  ]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.86, 0.863, 0.836, 0.674]
cutting matrix
[[-1. -1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [ 0.  0.  1.]
 [ 0. -1.  0.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:03:22
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1.  1.]
 [ 1.  0.]
 [-1. -1.]
 [-1.  0.]
 [-1.  0.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.   0.  ]
 [0.   0.   0.33 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [-1.  1. -1.]
 [ 1.  0.  1.]
 [-1. -1. -1.]
 [-1.  0. -1.]
 [-1.  0.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.33 0.17 0.  ]
 [0.   0.   0.5  0.17 0.17 0.33]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  0.  1.  0.]
 [-1. -1. -1. -1.]
 [-1.  0. -1.  0.]
 [-1.  0.  1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.5  0.33 0.  ]
 [0.   0.   0.67 0.33 0.33 0.33]
 [0.   0.   0.   0.67 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 0.5  1.25]
 [0.   0.   1.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  0.  1.  0. -1.]
 [-1. -1. -1. -1. -1.]
 [-1.  0. -1.  0.  1.]
 [-1.  0.  1.  1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.5  0.5  0.  ]
 [0.   0.   0.67 0.33 0.5  0.33]
 [0.   0.   0.   0.67 0.5  0.33]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.  0.4 1.  0.4]
 [0.  0.  1.  0.4 1. ]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1. -1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  0.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1.]
 [ 1.  0.  1.  0. -1. -1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1.  0. -1.  0.  1.  1.]
 [-1.  0.  1.  1. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.5  0.67 0.5  0.17]
 [0.   0.   0.83 0.5  0.5  0.5 ]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.83 0.33 0.83 0.33 0.67]
 [0.   0.   0.83 0.33 0.83 0.67]
 [0.   0.   0.   0.5  0.67 0.67]
 [0.   0.   0.   0.   0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.833, 1.0, 0.933, 1.0, 0.955]
cutting matrix
[[-1.  1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [-1. -1.  1.]
 [-1.  1. -1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:03:24
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0.  0.  0. -1.]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0.  1.  0. -1.  0.]
select_j_column
[ 1.  0.  1. -1. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  0.]]
confusion matrix
[[21  0  0  0  1  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  5  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.33 0.33 0.17 0.33]
 [0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.963, 0.942]
cutting matrix
[[ 1.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  0.]]
cutting matrix's confusion matrix
[[21  0  0  0  1  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  5  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:03:24
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
confusion matrix
[[16  0  4  0  0  0  0  0  0  0]
 [20  0  1  0  0  0  0  0  0  0]
 [10  0 12  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  2  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[ 0 16  4  0  0  0  0  0  0  0]
 [ 0 20  1  0  0  0  0  0  0  0]
 [ 0 10 12  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0 16  0  0  0  0  0  0  0  0]
 [ 0 14  0  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0 21  0  0  0  0  0  0  0  0]
 [ 0 14  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.2 0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1.  0.]]
confusion matrix
[[ 0 16  4  0  0  0  0  0  0  0]
 [ 0 20  1  0  0  0  0  0  0  0]
 [ 0 10 12  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0 16  0  0  0  0  0  0  0  0]
 [ 0 14  0  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0 21  0  0  0  0  0  0  0  0]
 [ 0 14  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0. ]
 [0.  0.  0.3 0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 3.33]
 [0.   0.   3.33]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1.  1.  0.  1.]]
confusion matrix
[[ 0  7  4  0  0  0  9  0  0  0]
 [ 0 20  1  0  0  0  0  0  0  0]
 [ 0  7 12  0  0  0  3  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0 16  0  0  0  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  7  0  0  0  0 14  0  0  0]
 [ 0 12  0  0  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.3 0.2 0.3 0.1]
 [0.  0.  0.3 0.  0.  0.  0.1 0.  0.1 0.3]
 [0.  0.  0.  0.3 0.3 0.3 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  2.5  1.  ]
 [0.   0.   2.5  1.  ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.]]
confusion matrix
[[ 0  1  4  6  0  0  0  0  9  0]
 [ 0 15  1  5  0  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  7  0  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.2 0.2 0.2 0.2 0.4 0.2 0.3 0.1]
 [0.  0.  0.4 0.1 0.1 0.1 0.1 0.1 0.2 0.4]
 [0.  0.  0.  0.3 0.3 0.3 0.5 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 2.  0.8 1.4]
 [0.  0.  2.  0.8 1. ]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  0.]
 [-1. -1.  1. -1.  1.  0.]
 [-1. -1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  0.]
 [-1.  1.  0.  1.  1.  0.]]
confusion matrix
[[ 0  1  4  2  4  0  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.4 0.3 0.3 0.3 0.3 0.5 0.3 0.4 0.2]
 [0.  0.  0.5 0.2 0.1 0.1 0.1 0.1 0.3 0.5]
 [0.  0.  0.  0.3 0.4 0.4 0.6 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.3 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.67 0.67 1.17 1.5 ]
 [0.   0.   1.67 0.67 0.83 1.67]
 [0.   0.   0.   1.17 0.83 0.67]
 [0.   0.   0.   0.   1.17 1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  0.  0.]
 [-1. -1.  1. -1.  1.  0.  0.]
 [-1. -1.  1. -1.  1.  1.  0.]
 [-1. -1.  1. -1.  1.  1.  0.]
 [-1. -1.  1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.  0.]
 [-1. -1.  1.  1.  1.  0.  0.]
 [-1.  1.  0.  1.  1.  0. -1.]]
confusion matrix
[[ 0  1  4  2  4  0  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.5 0.4 0.4 0.4 0.4 0.6 0.4 0.5 0.2]
 [0.  0.  0.6 0.3 0.2 0.2 0.1 0.2 0.4 0.6]
 [0.  0.  0.  0.3 0.4 0.4 0.7 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.1 0.1 0.4 0.1 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 1.43 0.57 1.   1.29 1.14]
 [0.   0.   1.43 0.57 0.71 1.43 1.43]
 [0.   0.   0.   1.   0.71 0.57 1.14]
 [0.   0.   0.   0.   1.   1.14 1.14]
 [0.   0.   0.   0.   0.   1.   1.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  0. -1.  1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1. -1. -1.  1.  0.  0. -1.]
 [-1. -1.  1. -1.  1.  0.  0. -1.]
 [-1. -1.  1. -1.  1.  1.  0. -1.]
 [-1. -1.  1. -1.  1.  1.  0. -1.]
 [-1. -1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.  0. -1.]
 [-1. -1.  1.  1.  1.  0.  0.  1.]
 [-1.  1.  0.  1.  1.  0. -1.  1.]]
confusion matrix
[[ 0  1  4  2  4  0  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.4 0.4 0.4 0.4 0.7 0.4 0.6 0.3]
 [0.  0.  0.7 0.4 0.3 0.3 0.2 0.3 0.5 0.7]
 [0.  0.  0.  0.3 0.4 0.4 0.8 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.1 0.1 0.5 0.1 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.5  0.88 1.12 1.   0.62]
 [0.   0.   1.25 0.5  0.62 1.25 1.25 0.62]
 [0.   0.   0.   0.88 0.62 0.5  1.   0.88]
 [0.   0.   0.   0.   0.88 1.   1.   0.12]
 [0.   0.   0.   0.   0.   0.88 1.25 1.  ]
 [0.   0.   0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 0.  1. -1.  1.  1.  1.  1.  1.  1.  0.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
None


============== iter  9 ================
current matrix is 
[[-1.  1.  0. -1.  1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1. -1. -1.  1.  0.  0. -1.]
 [-1. -1.  1. -1.  1.  0.  0. -1.]
 [-1. -1.  1. -1.  1.  1.  0. -1.]
 [-1. -1.  1. -1.  1.  1.  0. -1.]
 [-1. -1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.  0. -1.]
 [-1. -1.  1.  1.  1.  0.  0.  1.]
 [-1.  1.  0.  1.  1.  0. -1.  1.]]
confusion matrix
[[ 0  1  4  2  4  0  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.4 0.4 0.4 0.4 0.7 0.4 0.6 0.3]
 [0.  0.  0.7 0.4 0.3 0.3 0.2 0.3 0.5 0.7]
 [0.  0.  0.  0.3 0.4 0.4 0.8 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.1 0.1 0.5 0.1 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.5  0.88 1.12 1.   0.62]
 [0.   0.   1.25 0.5  0.62 1.25 1.25 0.62]
 [0.   0.   0.   0.88 0.62 0.5  1.   0.88]
 [0.   0.   0.   0.   0.88 1.   1.   0.12]
 [0.   0.   0.   0.   0.   0.88 1.25 1.  ]
 [0.   0.   0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 0.771, 0.604, 0.83, 0.819, 0.562, 0.464, 0.725]
cutting matrix
[[-1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  0.]
 [ 1.  1. -1.  1.  0. -1.]
 [-1. -1. -1.  1.  0. -1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  0.  1.]
 [-1.  1.  1.  1.  0.  1.]]
cutting matrix's confusion matrix
[[ 0  1  4  2  4  0  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  3  0  0  0  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  5  0  0  0 14  0]
 [ 0  0  0 12  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-05 23:03:30
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
confusion matrix
[[13  5  2  0  0  0  0  0  0  0]
 [ 5 16  0  0  0  0  0  0  0  0]
 [ 3 16  3  0  0  0  0  0  0  0]
 [ 0  5 14  0  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4 11  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [-1. -1.]
 [ 0.  0.]
 [-1. -1.]
 [ 0. -1.]
 [ 1.  1.]
 [ 0.  1.]]
confusion matrix
[[11  5  0  0  2  0  0  0  0  2]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 2  2  0  0 17  0  0  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  0  0  0  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2 0.2 0.2 0.2 0.  0.1]
 [0.  0.  0.  0.1 0.2 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  0.]
 [ 1.  1.  1.]
 [ 0.  0. -1.]
 [ 0. -1.  0.]
 [-1. -1.  0.]
 [ 0.  0. -1.]
 [-1. -1. -1.]
 [ 0. -1. -1.]
 [ 1.  1.  1.]
 [ 0.  1. -1.]]
confusion matrix
[[11  5  0  0  2  0  0  0  0  2]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 2  2  0  0 17  0  0  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  0  0  0  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
row HD
[[0.  0.3 0.2 0.2 0.1 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.3 0.3 0.3 0.3 0.3 0.3 0.  0.2]
 [0.  0.  0.  0.2 0.3 0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 2.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  0. -1.]
 [ 1.  1.  1.  1.]
 [ 0.  0. -1.  1.]
 [ 0. -1.  0.  0.]
 [-1. -1.  0.  1.]
 [ 0.  0. -1. -1.]
 [-1. -1. -1. -1.]
 [ 0. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [ 0.  1. -1. -1.]]
confusion matrix
[[11  5  0  0  2  0  0  0  0  2]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 2  2  0  0 17  0  0  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  0  0  0  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
row HD
[[0.  0.4 0.3 0.3 0.2 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.3 0.4 0.3 0.4 0.4 0.4 0.1 0.3]
 [0.  0.  0.  0.3 0.3 0.1 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.5  1.5 ]
 [0.   0.   1.25 1.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  1. -1.  0.  0. -1. -1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1.  0.  0. -1.  0.]
 [ 1.  1.  1.  1.  0.]
 [ 0.  0. -1.  1.  0.]
 [ 0. -1.  0.  0.  0.]
 [-1. -1.  0.  1.  0.]
 [ 0.  0. -1. -1.  1.]
 [-1. -1. -1. -1.  0.]
 [ 0. -1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1.]
 [ 0.  1. -1. -1.  0.]]
confusion matrix
[[11  5  0  0  2  0  0  0  0  2]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 2  2  0  0 17  0  0  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  0  0  0  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
row HD
[[0.  0.4 0.3 0.3 0.2 0.3 0.2 0.4 0.4 0.3]
 [0.  0.  0.3 0.4 0.3 0.5 0.4 0.5 0.2 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.3 0.3 0.5 0.2]
 [0.  0.  0.  0.  0.2 0.4 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.2 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.2 1.2 1.4]
 [0.  0.  1.  1.4 1.4]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.608, 0.531, 0.122, 0.598, 0.0]
cutting matrix
[[-1.  0. -1.  0.]
 [ 1.  1.  1.  0.]
 [ 0.  0.  1.  0.]
 [ 0. -1.  0.  0.]
 [-1. -1.  1.  0.]
 [ 0.  0. -1.  1.]
 [-1. -1. -1.  0.]
 [ 0. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [ 0.  1. -1.  0.]]
cutting matrix's confusion matrix
[[11  5  0  0  2  0  0  0  0  2]
 [ 1 16  0  0  4  0  0  0  0  0]
 [ 3 16  0  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 2  2  0  0 17  0  0  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  0  0  0  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:03:34
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1.  0.]
 [-1. -1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  2  0  0]
 [ 6  0  1  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [ 1.  0. -1.]
 [-1. -1.  0.]
 [-1. -1.  1.]
 [-1.  1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  1  1  0]
 [ 6  0  1  0  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.4 0.4 0.2 0.4]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1.  1.]
 [ 1.  0. -1. -1.]
 [-1. -1.  0.  0.]
 [-1. -1.  1.  1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  1  1  0]
 [ 6  0  1  0  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.6 0.6 0.2 0.4]
 [0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   1.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  1.  1.  1.]
 [ 1.  0. -1. -1.  1.]
 [-1. -1.  0.  0.  1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  1  1  0]
 [ 6  0  1  0  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.6 0.6 0.2 0.6]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 1.  0.6]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.176, 0.735, 0.776, 0.946]
cutting matrix
[[-1.  1.  1.]
 [ 1. -1.  1.]
 [-1.  0.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]


SVM classifier
Time: 2019-01-05 23:03:35
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0. -1.]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 3  2  2  0  0]
 [ 0  2  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [-1.  0.]
 [ 0.  0.]
 [-1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 3  2  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.2 0.  0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 0.  0. -1.]
 [-1.  0.  1.]
 [ 0.  0. -1.]
 [-1. -1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 3  3  1  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.4 0.  0.6]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1. -1.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  0.]
 [ 0.  0. -1.  0.]
 [-1.  0.  1.  0.]
 [ 0.  0. -1.  1.]
 [-1. -1.  1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 3  3  1  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.6 0.6 0.8 0.8]
 [0.  0.  0.4 0.2 0.8]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.75]
 [0.   0.   1.25 0.5 ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  0.  0.]
 [ 0.  0. -1.  0.  1.]
 [-1.  0.  1.  0. -1.]
 [ 0.  0. -1.  1.  1.]
 [-1. -1.  1. -1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 3  3  1  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.8 0.8 1.  1. ]
 [0.  0.  0.6 0.2 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 1.  0.6 0.8]
 [0.  0.  1.  0.4 1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0.  0. -1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
2
new_column
None


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  0.  0.]
 [ 0.  0. -1.  0.  1.]
 [-1.  0.  1.  0. -1.]
 [ 0.  0. -1.  1.  1.]
 [-1. -1.  1. -1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 3  3  1  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.8 0.8 1.  1. ]
 [0.  0.  0.6 0.2 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 1.  0.6 0.8]
 [0.  0.  1.  0.4 1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.675, 0.788, 0.269, 0.0, 0.385]
cutting matrix
[[ 1.  0.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0.  1.]
 [-1. -1.]]
cutting matrix's confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 4  3  0  0  0]
 [ 0  2  0  1  0]]


SVM classifier
Time: 2019-01-05 23:03:36
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [15  0  0  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.   0.33 0.33 0.17]
 [0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [15  0  0  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.   0.5  0.33 0.17]
 [0.   0.   0.17 0.33 0.17 0.  ]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [15  0  0  0  0  0]
 [ 2  4  0  1  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.33 0.   0.5  0.5  0.33]
 [0.   0.   0.33 0.5  0.17 0.  ]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.25 0.75]
 [0.   0.   0.75 0.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1.  0.]
 [-1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  0.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.5  0.17 0.67 0.67 0.33]
 [0.   0.   0.5  0.5  0.17 0.17]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 1.  0.6 0.6]
 [0.  0.  0.6 0.2 1.2]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.  0.  0.]
 [-1. -1.  1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  0.]
 [ 1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  0.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 1  5  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.67 0.17 0.83 0.83 0.5 ]
 [0.   0.   0.67 0.67 0.17 0.17]
 [0.   0.   0.   0.83 0.83 0.67]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.83 0.5  0.5  0.83]
 [0.   0.   0.5  0.17 1.   0.83]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1.  0.  0. -1.]
 [-1. -1.  1. -1.  1.  1.  0.]
 [-1.  1.  1.  1. -1.  0. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.]
 [-1. -1.  1. -1.  0.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 1  5  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.83 0.17 0.83 1.   0.67]
 [0.   0.   0.83 0.83 0.17 0.33]
 [0.   0.   0.   0.83 1.   0.83]
 [0.   0.   0.   0.   0.67 1.  ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.71 0.43 0.43 0.71 0.57]
 [0.   0.   0.43 0.14 0.86 0.71 0.71]
 [0.   0.   0.   0.57 0.57 0.29 0.57]
 [0.   0.   0.   0.   0.71 0.86 0.86]
 [0.   0.   0.   0.   0.   0.43 0.71]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1.  0.  0. -1.  1.]
 [-1. -1.  1. -1.  1.  1.  0.  1.]
 [-1.  1.  1.  1. -1.  0. -1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  1.]
 [-1. -1.  1. -1.  0.  1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 1  5  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.83 0.17 0.83 1.   0.83]
 [0.   0.   0.83 0.83 0.17 0.5 ]
 [0.   0.   0.   0.83 1.   1.  ]
 [0.   0.   0.   0.   0.67 1.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.62 0.38 0.38 0.62 0.5  0.38]
 [0.   0.   0.38 0.12 0.75 0.62 0.62 0.38]
 [0.   0.   0.   0.5  0.5  0.25 0.5  0.25]
 [0.   0.   0.   0.   0.62 0.75 0.75 0.25]
 [0.   0.   0.   0.   0.   0.38 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 1.0, 0.896, 0.94, 0.978, 0.824, 0.841, 0.94]
cutting matrix
[[-1.  1.  1.  0.  1.]
 [-1. -1. -1.  1.  1.]
 [-1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.]
 [-1. -1. -1.  0. -1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:03:38
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  0.  1.  0.  0.]
confusion matrix
[[17  0  1  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 5  0  0  2  0  0]
 [ 0  0 10  0  0  0]
 [ 2  0  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[ 0.  1. -1.  1.  0. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1. -1.]
 [ 0. -1.]
 [ 1.  1.]
 [ 0.  0.]
 [ 0. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  5  2  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  2  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.33]
 [0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0.  1.  0.  0.]
select_j_column
[ 1.  0. -1. -1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  1.]
 [-1. -1. -1.]
 [ 0. -1.  1.]
 [ 1.  1. -1.]
 [ 0.  0.  0.]
 [ 0. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  5  0  0  2  0]
 [ 0  0  0  0 10  0]
 [ 2  0  2  0  0  0]]
row HD
[[0.   0.33 0.33 0.5  0.33 0.33]
 [0.   0.   0.33 0.33 0.5  0.33]
 [0.   0.   0.   0.5  0.33 0.  ]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0. -1. -1.  1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  1.  1.]
 [-1. -1. -1. -1.]
 [ 0. -1.  1. -1.]
 [ 1.  1. -1.  0.]
 [ 0.  0.  0.  0.]
 [ 0. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  5  0  0  2  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.5  0.5  0.67 0.5  0.33]
 [0.   0.   0.33 0.5  0.67 0.5 ]
 [0.   0.   0.   0.67 0.5  0.17]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   1.   0.75]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1.  0.  1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  1.  1.  0.]
 [-1. -1. -1. -1. -1.]
 [ 0. -1.  1. -1. -1.]
 [ 1.  1. -1.  0. -1.]
 [ 0.  0.  0.  0.  0.]
 [ 0. -1.  1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  5  0  2  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 0.67 0.83 0.5  0.5 ]
 [0.   0.   0.33 0.5  0.83 0.67]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.8 0.8 0.8]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1.  0.  1.]
select_j_column
[ 1. -1.  1. -1.  0.  1.]
most_cplx_inx
5
new_column
None


============== iter  6 ================
current matrix is 
[[-1.  0.  1.  1.  0.]
 [-1. -1. -1. -1. -1.]
 [ 0. -1.  1. -1. -1.]
 [ 1.  1. -1.  0. -1.]
 [ 0.  0.  0.  0.  0.]
 [ 0. -1.  1.  1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  5  0  2  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 0.67 0.83 0.5  0.5 ]
 [0.   0.   0.33 0.5  0.83 0.67]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.8 0.8 0.8]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 1. -1.  0.  0.  0.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1.  0.  1.  1.  0.  0.]
 [-1. -1. -1. -1. -1.  1.]
 [ 0. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  0. -1.  1.]
 [ 0.  0.  0.  0.  0. -1.]
 [ 0. -1.  1.  1.  1.  0.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  5  0  2  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.83 0.83 1.   0.67 0.5 ]
 [0.   0.   0.5  0.5  1.   0.83]
 [0.   0.   0.   0.83 0.67 0.5 ]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.67 0.67 0.67 0.67]
 [0.   0.   0.67 0.5  0.33 0.5 ]
 [0.   0.   0.   0.33 0.33 1.  ]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.842, 0.821, 0.982, 0.96, 0.897, 1.0]
cutting matrix
[[-1.  1.  1.  0.  0.]
 [-1. -1. -1. -1.  1.]
 [ 0.  1. -1. -1. -1.]
 [ 1. -1.  0. -1.  1.]
 [ 0.  0.  0.  0. -1.]
 [ 0.  1.  1.  1.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  5  0  2  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:03:40
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
confusion matrix
[[13  4  0  0  0  0  0  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [16  6  0  0  0  0  0  0  0  0]
 [ 1 15  0  0  0  0  0  0  0  0]
 [11  6  0  0  0  0  0  0  0  0]
 [ 1 19  0  0  0  0  0  0  0  0]
 [10  5  0  0  0  0  0  0  0  0]
 [ 2 18  0  0  0  0  0  0  0  0]
 [ 7 15  0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  0.]
 [ 1.  1.]
 [-1.  0.]
 [ 1.  0.]
 [-1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  0.]
 [-1.  0.]]
confusion matrix
[[10  3  0  0  3  0  0  1  0  0]
 [ 0 24  0  0  2  0  0  0  0  0]
 [15  2  0  0  1  0  0  4  0  0]
 [ 1 12  0  0  0  0  0  3  0  0]
 [ 1  4  0  0 10  0  0  2  0  0]
 [ 0 16  0  0  1  0  0  3  0  0]
 [ 4  5  0  0  6  0  0  0  0  0]
 [ 2  5  0  0  0  0  0 13  0  0]
 [ 5 14  0  0  2  0  0  1  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.2 0.  0.1 0.  0.2 0.1 0.  0. ]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.2 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [-1.  0. -1.]
 [ 1.  1.  0.]
 [-1.  0.  0.]
 [ 1.  0. -1.]
 [-1.  0.  0.]
 [ 1. -1.  0.]
 [-1.  1.  0.]
 [-1.  0. -1.]
 [-1.  0.  1.]]
confusion matrix
[[10  2  0  0  3  0  0  1  0  1]
 [ 0 23  0  1  2  0  0  0  0  0]
 [15  1  0  1  1  0  0  4  0  0]
 [ 1  0  0 12  0  0  0  3  0  0]
 [ 1  1  0  0 10  0  0  2  0  3]
 [ 0  0  0 16  1  0  0  3  0  0]
 [ 4  3  0  2  6  0  0  0  0  0]
 [ 2  3  0  2  0  0  0 13  0  0]
 [ 5 10  0  4  2  0  0  1  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.3 0.  0.2 0.2 0.2 0.1 0.1 0.3 0.3]
 [0.  0.  0.3 0.1 0.1 0.1 0.3 0.2 0.  0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.1 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.67]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  1.]
 [-1.  0. -1.  1.]
 [ 1.  1.  0.  1.]
 [-1.  0.  0.  1.]
 [ 1.  0. -1.  1.]
 [-1.  0.  0. -1.]
 [ 1. -1.  0.  1.]
 [-1.  1.  0. -1.]
 [-1.  0. -1.  1.]
 [-1.  0.  1.  1.]]
confusion matrix
[[10  2  0  0  3  0  0  1  0  1]
 [ 0 23  0  1  2  0  0  0  0  0]
 [15  1  0  4  1  1  0  0  0  0]
 [ 1  0  0 10  0  3  0  2  0  0]
 [ 1  1  0  0 10  0  0  2  0  3]
 [ 0  0  0  2  1 14  0  3  0  0]
 [ 4  3  0  1  6  1  0  0  0  0]
 [ 2  3  0  3  0  1  0 11  0  0]
 [ 5 10  0  4  2  1  0  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.3 0.  0.2 0.2 0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.3 0.1 0.1 0.2 0.3 0.3 0.  0.1]
 [0.  0.  0.  0.2 0.2 0.3 0.1 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.   1.  ]
 [0.   0.   2.   2.  ]
 [0.   0.   0.   2.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  1.  0.]
 [-1.  0. -1.  1.  0.]
 [ 1.  1.  0.  1. -1.]
 [-1.  0.  0.  1.  1.]
 [ 1.  0. -1.  1. -1.]
 [-1.  0.  0. -1.  1.]
 [ 1. -1.  0.  1. -1.]
 [-1.  1.  0. -1.  1.]
 [-1.  0. -1.  1.  0.]
 [-1.  0.  1.  1.  1.]]
confusion matrix
[[10  2  0  0  3  0  0  1  0  1]
 [ 0 23  0  1  2  0  0  0  0  0]
 [ 0  2 15  3  1  1  0  0  0  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 0  1  1  0 10  0  0  2  0  3]
 [ 0  0  0  2  1 14  0  3  0  0]
 [ 1  3  3  1  6  1  0  0  0  0]
 [ 2  4  0  2  0  1  0 11  0  0]
 [ 2 11  3  3  2  1  0  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.3 0.1 0.3 0.3 0.4 0.2 0.3 0.3 0.4]
 [0.  0.  0.4 0.2 0.2 0.3 0.4 0.4 0.  0.2]
 [0.  0.  0.  0.3 0.2 0.4 0.1 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.4 0.2 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.6 0.8 2. ]
 [0.  0.  1.6 1.6 1.2]
 [0.  0.  0.  1.8 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1.]
 [-1.  0. -1.  1.  0. -1.]
 [ 1.  1.  0.  1. -1. -1.]
 [-1.  0.  0.  1.  1. -1.]
 [ 1.  0. -1.  1. -1.  1.]
 [-1.  0.  0. -1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1.]
 [-1.  1.  0. -1.  1. -1.]
 [-1.  0. -1.  1.  0. -1.]
 [-1.  0.  1.  1.  1. -1.]]
confusion matrix
[[ 8  2  2  0  3  0  0  1  0  1]
 [ 0 23  1  1  1  0  0  0  0  0]
 [ 0  2 16  3  0  1  0  0  0  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 0  1  1  0 10  0  0  2  0  3]
 [ 0  0  0  2  1 14  0  3  0  0]
 [ 4  3  0  1  6  1  0  0  0  0]
 [ 0  4  2  2  0  1  0 11  0  0]
 [ 3 11  2  3  2  1  0  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.4 0.2 0.4 0.3 0.5 0.2 0.4 0.4 0.5]
 [0.  0.  0.4 0.2 0.3 0.3 0.5 0.4 0.  0.2]
 [0.  0.  0.  0.3 0.3 0.4 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.1 0.4 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.5 0.2 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33 0.67 1.67 0.17]
 [0.   0.   1.33 1.33 1.   1.5 ]
 [0.   0.   0.   1.5  1.17 1.33]
 [0.   0.   0.   0.   1.33 0.83]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 0.  0. -1.  1. -1.  1. -1.  1.  0.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.]
 [-1.  0. -1.  1.  0. -1.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.]
 [-1.  0.  0.  1.  1. -1. -1.]
 [ 1.  0. -1.  1. -1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.]
 [-1.  1.  0. -1.  1. -1. -1.]
 [-1.  0. -1.  1.  0. -1.  1.]
 [-1.  0.  1.  1.  1. -1. -1.]]
confusion matrix
[[ 8  2  2  0  3  0  0  1  0  1]
 [ 0 25  0  0  1  0  0  0  0  0]
 [ 0  3 15  3  0  1  0  0  0  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  1  1  0 10  0  0  2  0  3]
 [ 0  0  0  2  1 14  0  3  0  0]
 [ 1  4  0  0  9  1  0  0  0  0]
 [ 0  3  2  3  0  1  0 11  0  0]
 [ 2 11  2  3  3  1  0  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.5 0.3 0.4 0.4 0.5 0.3 0.4 0.5 0.5]
 [0.  0.  0.5 0.3 0.3 0.4 0.5 0.5 0.  0.3]
 [0.  0.  0.  0.4 0.4 0.5 0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.1 0.5 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.6 0.2 0.7 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.1 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.14 0.57 1.43 0.14 0.57]
 [0.   0.   1.14 1.14 0.86 1.29 1.43]
 [0.   0.   0.   1.29 1.   1.14 1.29]
 [0.   0.   0.   0.   1.14 0.71 0.57]
 [0.   0.   0.   0.   0.   1.29 1.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  0. -1.  0.  0.  0. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0.]
 [-1.  0.  0.  1.  1. -1. -1.  0.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.]
 [-1.  1.  0. -1.  1. -1. -1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.]]
confusion matrix
[[ 8  2  2  0  0  0  3  1  0  1]
 [ 0 25  0  0  1  0  0  0  0  0]
 [ 0  2 16  3  0  1  0  0  0  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  1  1  0  9  0  1  2  0  3]
 [ 0  0  0  2  0 14  1  3  0  0]
 [ 2  4  0  0  2  1  6  0  0  0]
 [ 0  3  2  3  0  1  0 11  0  0]
 [ 2 10  3  3  1  1  2  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.6 0.3 0.4 0.5 0.5 0.3 0.4 0.6 0.6]
 [0.  0.  0.6 0.4 0.4 0.5 0.6 0.6 0.  0.4]
 [0.  0.  0.  0.4 0.5 0.5 0.3 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.6 0.1 0.5 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.7 0.3 0.8 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.1 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.5  1.25 0.12 0.5  0.88]
 [0.   0.   1.   1.   0.75 1.12 1.25 1.  ]
 [0.   0.   0.   1.12 0.88 1.   1.12 0.12]
 [0.   0.   0.   0.   1.   0.62 0.5  1.  ]
 [0.   0.   0.   0.   0.   1.12 1.25 1.  ]
 [0.   0.   0.   0.   0.   0.   0.5  0.88]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0. -1.  1. -1.  1. -1.  1.  0.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.]]
confusion matrix
[[10  2  0  0  0  0  3  1  0  1]
 [ 0 25  0  0  1  0  0  0  0  0]
 [ 0  4 15  2  0  1  0  0  0  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  1  1  0  9  0  1  2  0  3]
 [ 0  0  0  2  0 14  1  3  0  0]
 [ 2  4  0  0  2  1  6  0  0  0]
 [ 2  3  0  3  0  1  0 11  0  0]
 [ 2 11  2  3  1  1  2  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.7 0.4 0.4 0.5 0.5 0.3 0.4 0.7 0.6]
 [0.  0.  0.7 0.5 0.5 0.6 0.7 0.7 0.  0.5]
 [0.  0.  0.  0.5 0.6 0.6 0.4 0.5 0.7 0.7]
 [0.  0.  0.  0.  0.6 0.1 0.5 0.2 0.5 0.2]
 [0.  0.  0.  0.  0.  0.7 0.3 0.8 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.1 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.89 0.44 1.11 0.11 0.44 0.78 0.78]
 [0.   0.   0.89 0.89 0.67 1.   1.11 0.89 0.67]
 [0.   0.   0.   1.   0.78 0.89 1.   0.11 1.  ]
 [0.   0.   0.   0.   0.89 0.56 0.44 0.89 0.56]
 [0.   0.   0.   0.   0.   1.   1.11 0.89 0.33]
 [0.   0.   0.   0.   0.   0.   0.44 0.78 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.]]
confusion matrix
[[10  2  0  0  3  0  0  1  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 15  3  0  1  0  0  0  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 1  1  0  0 10  0  0  2  0  3]
 [ 0  0  0  2  1 14  0  3  0  0]
 [ 2  3  0  1  8  1  0  0  0  0]
 [ 2  3  0  3  0  1  0 11  0  0]
 [ 2 11  2  3  3  1  0  0  0  0]
 [ 0  1  0  8  0  0  0  0  0  4]]
row HD
[[0.  0.8 0.5 0.4 0.6 0.5 0.3 0.4 0.8 0.7]
 [0.  0.  0.8 0.6 0.5 0.7 0.8 0.8 0.  0.6]
 [0.  0.  0.  0.6 0.7 0.7 0.5 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.7 0.1 0.5 0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.8 0.4 0.9 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.1 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.8 0.4 1.  0.1 0.4 0.7 0.7 0.7]
 [0.  0.  0.8 0.8 0.6 0.9 1.  0.8 0.6 0.7]
 [0.  0.  0.  0.9 0.7 0.8 0.9 0.1 0.9 0.1]
 [0.  0.  0.  0.  0.8 0.5 0.4 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.9 1.  0.8 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1.]]
confusion matrix
[[10  2  0  0  3  0  0  1  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 1  1  0  0 10  0  0  2  0  3]
 [ 0  0  0  0  1 14  0  3  0  2]
 [ 2  4  0  0  8  1  0  0  0  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2 11  2  0  3  1  0  0  0  3]
 [ 0  1  0  2  0  0  0  0  0 10]]
row HD
[[0.  0.8 0.5 0.5 0.6 0.5 0.3 0.4 0.8 0.7]
 [0.  0.  0.8 0.7 0.5 0.7 0.8 0.8 0.  0.6]
 [0.  0.  0.  0.7 0.7 0.7 0.5 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.8 0.2 0.6 0.3 0.7 0.4]
 [0.  0.  0.  0.  0.  0.8 0.4 0.9 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.1 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.73 0.73 0.36 0.91 0.09 0.36 0.64 0.64 0.64 0.45]
 [0.   0.   0.73 0.73 0.55 0.82 0.91 0.73 0.55 0.64 0.64]
 [0.   0.   0.   0.82 0.64 0.73 0.82 0.09 0.82 0.09 0.82]
 [0.   0.   0.   0.   0.73 0.45 0.36 0.73 0.45 0.73 0.27]
 [0.   0.   0.   0.   0.   0.82 0.91 0.73 0.27 0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.36 0.64 0.55 0.73 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.73 0.73 0.91 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.18 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1.  1.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.]]
confusion matrix
[[10  2  0  0  3  0  0  1  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  0  1  2  0  3]
 [ 0  0  0  0  1 14  0  3  0  2]
 [ 2  4  0  0  6  1  2  0  0  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2 11  2  0  2  1  1  0  0  3]
 [ 0  1  0  2  0  0  0  0  0 10]]
row HD
[[0.  0.9 0.5 0.6 0.7 0.6 0.3 0.5 0.9 0.7]
 [0.  0.  0.9 0.8 0.6 0.8 0.9 0.9 0.  0.7]
 [0.  0.  0.  0.8 0.8 0.8 0.5 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.8 0.2 0.7 0.3 0.8 0.5]
 [0.  0.  0.  0.  0.  0.8 0.5 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67 0.33 0.83 0.08 0.33 0.58 0.58 0.58 0.42 0.67]
 [0.   0.   0.67 0.67 0.5  0.75 0.83 0.67 0.5  0.58 0.58 0.5 ]
 [0.   0.   0.   0.75 0.58 0.67 0.75 0.08 0.75 0.08 0.75 0.83]
 [0.   0.   0.   0.   0.67 0.42 0.33 0.67 0.42 0.67 0.25 0.67]
 [0.   0.   0.   0.   0.   0.75 0.83 0.67 0.25 0.58 0.58 0.25]
 [0.   0.   0.   0.   0.   0.   0.33 0.58 0.5  0.67 0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.67 0.83 0.42 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.17 0.67 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1.  0. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.]]
confusion matrix
[[11  2  2  0  0  0  0  1  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  0  1  2  0  3]
 [ 0  0  0  0  1 14  0  3  0  2]
 [ 0  4  0  0  6  1  4  0  0  0]
 [ 0  3  2  2  0  1  0 12  0  0]
 [ 2 11  2  0  2  1  1  0  0  3]
 [ 0  1  0  2  0  0  0  0  0 10]]
row HD
[[0.  1.  0.6 0.7 0.8 0.7 0.4 0.6 1.  0.8]
 [0.  0.  0.9 0.8 0.6 0.8 0.9 0.9 0.  0.7]
 [0.  0.  0.  0.8 0.8 0.8 0.5 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.8 0.2 0.7 0.3 0.8 0.5]
 [0.  0.  0.  0.  0.  0.8 0.5 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.62 0.31 0.77 0.08 0.31 0.54 0.54 0.54 0.38 0.62 0.54]
 [0.   0.   0.62 0.62 0.46 0.69 0.77 0.62 0.46 0.54 0.54 0.46 0.62]
 [0.   0.   0.   0.69 0.54 0.62 0.69 0.08 0.69 0.08 0.69 0.77 0.69]
 [0.   0.   0.   0.   0.62 0.38 0.31 0.62 0.38 0.62 0.23 0.62 0.23]
 [0.   0.   0.   0.   0.   0.69 0.77 0.62 0.23 0.54 0.54 0.23 0.46]
 [0.   0.   0.   0.   0.   0.   0.31 0.54 0.46 0.62 0.46 0.54 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.62 0.62 0.77 0.38 0.54 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.15 0.62 0.69 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.31 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.77 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
None


============== iter  14 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.]]
confusion matrix
[[11  2  2  0  0  0  0  1  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  0  1  2  0  3]
 [ 0  0  0  0  1 14  0  3  0  2]
 [ 0  4  0  0  6  1  4  0  0  0]
 [ 0  3  2  2  0  1  0 12  0  0]
 [ 2 11  2  0  2  1  1  0  0  3]
 [ 0  1  0  2  0  0  0  0  0 10]]
row HD
[[0.  1.  0.6 0.7 0.8 0.7 0.4 0.6 1.  0.8]
 [0.  0.  0.9 0.8 0.6 0.8 0.9 0.9 0.  0.7]
 [0.  0.  0.  0.8 0.8 0.8 0.5 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.8 0.2 0.7 0.3 0.8 0.5]
 [0.  0.  0.  0.  0.  0.8 0.5 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.62 0.31 0.77 0.08 0.31 0.54 0.54 0.54 0.38 0.62 0.54]
 [0.   0.   0.62 0.62 0.46 0.69 0.77 0.62 0.46 0.54 0.54 0.46 0.62]
 [0.   0.   0.   0.69 0.54 0.62 0.69 0.08 0.69 0.08 0.69 0.77 0.69]
 [0.   0.   0.   0.   0.62 0.38 0.31 0.62 0.38 0.62 0.23 0.62 0.23]
 [0.   0.   0.   0.   0.   0.69 0.77 0.62 0.23 0.54 0.54 0.23 0.46]
 [0.   0.   0.   0.   0.   0.   0.31 0.54 0.46 0.62 0.46 0.54 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.62 0.62 0.77 0.38 0.54 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.15 0.62 0.69 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.31 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.77 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1.]]
confusion matrix
[[13  2  0  0  0  0  0  1  0  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  0  1  2  0  3]
 [ 0  0  0  0  1 14  0  3  0  2]
 [ 0  4  1  0  6  1  3  0  0  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2 11  2  0  2  1  1  0  0  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.1 0.7 0.7 0.8 0.8 0.4 0.7 1.1 0.9]
 [0.  0.  0.9 0.9 0.7 0.8 1.  0.9 0.  0.7]
 [0.  0.  0.  0.9 0.9 0.8 0.6 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.8 0.3 0.7 0.4 0.9 0.6]
 [0.  0.  0.  0.  0.  0.9 0.5 1.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.8 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.29 0.71 0.07 0.29 0.5  0.5  0.5  0.36 0.57 0.5  0.57]
 [0.   0.   0.57 0.57 0.43 0.64 0.71 0.57 0.43 0.5  0.5  0.43 0.57 0.5 ]
 [0.   0.   0.   0.64 0.5  0.57 0.64 0.07 0.64 0.07 0.64 0.71 0.64 0.57]
 [0.   0.   0.   0.   0.57 0.36 0.29 0.57 0.36 0.57 0.21 0.57 0.21 0.43]
 [0.   0.   0.   0.   0.   0.64 0.71 0.57 0.21 0.5  0.5  0.21 0.43 0.36]
 [0.   0.   0.   0.   0.   0.   0.29 0.5  0.43 0.57 0.43 0.5  0.57 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.71 0.36 0.5  0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.14 0.57 0.64 0.57 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.29 0.21 0.29 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.71 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  0. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.  0.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1. -1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1.]]
confusion matrix
[[13  2  0  0  0  0  0  1  0  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  0  1  2  0  3]
 [ 0  0  0  0  0 14  1  3  0  2]
 [ 0  4  1  0  0  1  9  0  0  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2 11  2  0  0  1  3  0  0  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.1 0.8 0.8 0.9 0.8 0.4 0.7 1.1 0.9]
 [0.  0.  1.  1.  0.8 0.8 1.  0.9 0.  0.7]
 [0.  0.  0.  1.  1.  0.9 0.7 0.8 1.  0.8]
 [0.  0.  0.  0.  0.8 0.4 0.8 0.5 1.  0.7]
 [0.  0.  0.  0.  0.  1.  0.6 1.1 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.1 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.53 0.53 0.27 0.67 0.07 0.27 0.47 0.47 0.47 0.33 0.53 0.47 0.53
  0.27]
 [0.   0.   0.53 0.53 0.4  0.6  0.67 0.53 0.4  0.47 0.47 0.4  0.53 0.47
  0.6 ]
 [0.   0.   0.   0.6  0.47 0.53 0.6  0.07 0.6  0.07 0.6  0.67 0.6  0.53
  0.47]
 [0.   0.   0.   0.   0.53 0.33 0.27 0.53 0.33 0.53 0.2  0.53 0.2  0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.6  0.67 0.53 0.2  0.47 0.47 0.2  0.4  0.33
  0.53]
 [0.   0.   0.   0.   0.   0.   0.27 0.47 0.4  0.53 0.4  0.47 0.53 0.6
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.53 0.53 0.67 0.33 0.47 0.33 0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.13 0.53 0.6  0.53 0.6
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.27 0.2  0.27 0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.67 0.53 0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.13 0.2
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1.  0.  0.  1.  0.  0.  0. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1. -1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.  0.  0.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.  1.  0.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1. -1.  0.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]]
confusion matrix
[[13  2  0  0  0  0  0  1  0  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  3 16  1  0  1  0  0  0  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  0  1  0 10  0  1  2  0  3]
 [ 0  0  0  0  0 14  1  3  0  2]
 [ 0  4  1  0  0  1  9  0  0  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2 11  2  0  0  1  3  0  0  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.2 0.8 0.8 1.  0.8 0.4 0.7 1.2 1. ]
 [0.  0.  1.1 1.1 0.9 0.9 1.1 1.  0.  0.7]
 [0.  0.  0.  1.  1.1 0.9 0.7 0.8 1.1 0.9]
 [0.  0.  0.  0.  0.9 0.4 0.8 0.5 1.1 0.8]
 [0.  0.  0.  0.  0.  1.1 0.7 1.2 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.8 0.1 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.25 0.62 0.06 0.25 0.44 0.44 0.44 0.31 0.5  0.44 0.5
  0.25 0.38]
 [0.   0.   0.5  0.5  0.38 0.56 0.62 0.5  0.38 0.44 0.44 0.38 0.5  0.44
  0.56 0.5 ]
 [0.   0.   0.   0.56 0.44 0.5  0.56 0.06 0.56 0.06 0.56 0.62 0.56 0.5
  0.44 0.12]
 [0.   0.   0.   0.   0.5  0.31 0.25 0.5  0.31 0.5  0.19 0.5  0.19 0.38
  0.38 0.56]
 [0.   0.   0.   0.   0.   0.56 0.62 0.5  0.19 0.44 0.44 0.19 0.38 0.31
  0.5  0.56]
 [0.   0.   0.   0.   0.   0.   0.25 0.44 0.38 0.5  0.38 0.44 0.5  0.56
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.62 0.31 0.44 0.31 0.38
  0.25 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.12 0.5  0.56 0.5  0.56
  0.38 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.25 0.19 0.25 0.44
  0.5  0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.62 0.5  0.44
  0.5  0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.12 0.19
  0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38
  0.31 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.5  0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1. -1.  0. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.  0.  0.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.  1.  0.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1. -1.  0. -1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1. -1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.]]
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  0  2  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  0  1  0 10  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  1  0  0  1  9  0  3  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.3 0.9 0.9 1.1 0.9 0.4 0.7 1.2 1.1]
 [0.  0.  1.1 1.1 0.9 0.9 1.2 1.1 0.1 0.7]
 [0.  0.  0.  1.  1.1 0.9 0.8 0.9 1.2 0.9]
 [0.  0.  0.  0.  0.9 0.4 0.9 0.6 1.2 0.8]
 [0.  0.  0.  0.  0.  1.1 0.8 1.3 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.9 0.2 1.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.47 0.24 0.59 0.06 0.24 0.41 0.41 0.41 0.29 0.47 0.41 0.47
  0.24 0.35 0.35]
 [0.   0.   0.47 0.47 0.35 0.53 0.59 0.47 0.35 0.41 0.41 0.35 0.47 0.41
  0.53 0.47 0.47]
 [0.   0.   0.   0.53 0.41 0.47 0.53 0.06 0.53 0.06 0.53 0.59 0.53 0.47
  0.41 0.12 0.47]
 [0.   0.   0.   0.   0.47 0.29 0.24 0.47 0.29 0.47 0.18 0.47 0.18 0.35
  0.35 0.53 0.24]
 [0.   0.   0.   0.   0.   0.53 0.59 0.47 0.18 0.41 0.41 0.18 0.35 0.29
  0.47 0.53 0.35]
 [0.   0.   0.   0.   0.   0.   0.24 0.41 0.35 0.47 0.35 0.41 0.47 0.53
  0.24 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.59 0.29 0.41 0.29 0.35
  0.24 0.41 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.12 0.47 0.53 0.47 0.53
  0.35 0.06 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.24 0.18 0.24 0.41
  0.47 0.53 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.59 0.47 0.41
  0.47 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.12 0.18
  0.53 0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35
  0.29 0.47 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.41 0.53 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47 0.59 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  0.  1.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  19 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1. -1.  0. -1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.  0.  0.  1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.  1.  0.  1.  0.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0. -1.  0.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1. -1.  1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  0.]]
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  0  2  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  1  0  0  1  9  0  3  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.4 1.  0.9 1.2 0.9 0.5 0.7 1.3 1.1]
 [0.  0.  1.1 1.2 1.  1.  1.2 1.2 0.1 0.8]
 [0.  0.  0.  1.1 1.2 1.  0.8 1.  1.2 1. ]
 [0.  0.  0.  0.  1.  0.4 1.  0.6 1.3 0.8]
 [0.  0.  0.  0.  0.  1.2 0.9 1.4 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.  0.2 1.1 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.44 0.22 0.56 0.06 0.22 0.39 0.39 0.39 0.28 0.44 0.39 0.44
  0.22 0.33 0.33 0.44]
 [0.   0.   0.44 0.44 0.33 0.5  0.56 0.44 0.33 0.39 0.39 0.33 0.44 0.39
  0.5  0.44 0.44 0.33]
 [0.   0.   0.   0.5  0.39 0.44 0.5  0.06 0.5  0.06 0.5  0.56 0.5  0.44
  0.39 0.11 0.44 0.28]
 [0.   0.   0.   0.   0.44 0.28 0.22 0.44 0.28 0.44 0.17 0.44 0.17 0.33
  0.33 0.5  0.22 0.33]
 [0.   0.   0.   0.   0.   0.5  0.56 0.44 0.17 0.39 0.39 0.17 0.33 0.28
  0.44 0.5  0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.39 0.33 0.44 0.33 0.39 0.44 0.5
  0.22 0.33 0.39 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.56 0.28 0.39 0.28 0.33
  0.22 0.39 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.11 0.44 0.5  0.44 0.5
  0.33 0.06 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.22 0.17 0.22 0.39
  0.44 0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.56 0.44 0.39
  0.44 0.17 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.11 0.17
  0.5  0.5  0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33
  0.28 0.44 0.28 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.39 0.5  0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.44 0.56 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.28 0.22 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  20 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1. -1.  0. -1.  0.
  -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1.  1.  1.
   1.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.  0.  0.  1.  1.
   1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.  1.  0.  1.  0.
  -1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1.  0.
   1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1. -1.  0. -1.  1.
  -1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0. -1.  0.
  -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1. -1.  1.
  -1.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  0.
   1.]]
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  0  2  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  1  0  0  1  9  0  3  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.5 1.1 0.9 1.3 1.  0.5 0.7 1.3 1.2]
 [0.  0.  1.1 1.3 1.  1.  1.3 1.3 0.2 0.8]
 [0.  0.  0.  1.2 1.2 1.  0.9 1.1 1.3 1. ]
 [0.  0.  0.  0.  1.1 0.5 1.  0.6 1.3 0.9]
 [0.  0.  0.  0.  0.  1.2 1.  1.5 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  1.1 0.3 1.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.42 0.21 0.53 0.05 0.21 0.37 0.37 0.37 0.26 0.42 0.37 0.42
  0.21 0.32 0.32 0.42 0.26]
 [0.   0.   0.42 0.42 0.32 0.47 0.53 0.42 0.32 0.37 0.37 0.32 0.42 0.37
  0.47 0.42 0.42 0.32 0.42]
 [0.   0.   0.   0.47 0.37 0.42 0.47 0.05 0.47 0.05 0.47 0.53 0.47 0.42
  0.37 0.11 0.42 0.26 0.42]
 [0.   0.   0.   0.   0.42 0.26 0.21 0.42 0.26 0.42 0.16 0.42 0.16 0.32
  0.32 0.47 0.21 0.32 0.26]
 [0.   0.   0.   0.   0.   0.47 0.53 0.42 0.16 0.37 0.37 0.16 0.32 0.26
  0.42 0.47 0.32 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.21 0.37 0.32 0.42 0.32 0.37 0.42 0.47
  0.21 0.32 0.37 0.47 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.53 0.26 0.37 0.26 0.32
  0.21 0.37 0.32 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.11 0.42 0.47 0.42 0.47
  0.32 0.05 0.37 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.21 0.16 0.21 0.37
  0.42 0.47 0.32 0.47 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.53 0.42 0.37
  0.42 0.16 0.37 0.21 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.11 0.16
  0.47 0.47 0.26 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32
  0.26 0.42 0.26 0.53 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16
  0.37 0.47 0.16 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.42 0.53 0.21 0.32 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.21 0.53 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.42 0.32 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.42 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  0. -1.  1.  1.  1. -1.  1.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  21 ================
current matrix is 
[[ 1.  1.  0.  1.  0.  1. -1.  0.  1.  0.  1. -1. -1. -1. -1.  0. -1.  0.
  -1.  1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1.  1.  1.
   1.  0.]
 [ 1.  1.  0.  1. -1. -1.  0.  0. -1.  1.  1. -1.  1.  1.  0.  0.  1.  1.
   1.  1.]
 [-1.  0.  0.  1.  1. -1. -1.  0.  1.  0. -1.  1.  1. -1.  1.  0.  1.  0.
  -1.  1.]
 [ 1.  0. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.]
 [-1.  0.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.  1.  0.  1. -1.  1. -1. -1.  0. -1.  1.
  -1. -1.]
 [-1.  1.  0. -1.  1. -1. -1.  0.  1.  0.  1.  1.  1.  1. -1.  0. -1.  0.
  -1. -1.]
 [-1.  0. -1.  1.  0. -1.  1. -1.  0. -1.  1.  0.  1.  1. -1. -1. -1.  1.
  -1.  0.]
 [-1.  0.  1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  0.
   1. -1.]]
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  0  2  1]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  1  0  9  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.6 1.1 0.9 1.4 1.  0.6 0.8 1.4 1.3]
 [0.  0.  1.2 1.4 1.1 1.1 1.4 1.4 0.2 0.9]
 [0.  0.  0.  1.2 1.3 1.  1.  1.2 1.4 1.1]
 [0.  0.  0.  0.  1.2 0.5 1.1 0.7 1.4 1. ]
 [0.  0.  0.  0.  0.  1.3 1.  1.5 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  1.2 0.4 1.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.4  0.2  0.5  0.05 0.2  0.35 0.35 0.35 0.25 0.4  0.35 0.4
  0.2  0.3  0.3  0.4  0.25 0.3 ]
 [0.   0.   0.4  0.4  0.3  0.45 0.5  0.4  0.3  0.35 0.35 0.3  0.4  0.35
  0.45 0.4  0.4  0.3  0.4  0.25]
 [0.   0.   0.   0.45 0.35 0.4  0.45 0.05 0.45 0.05 0.45 0.5  0.45 0.4
  0.35 0.1  0.4  0.25 0.4  0.45]
 [0.   0.   0.   0.   0.4  0.25 0.2  0.4  0.25 0.4  0.15 0.4  0.15 0.3
  0.3  0.45 0.2  0.3  0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.45 0.5  0.4  0.15 0.35 0.35 0.15 0.3  0.25
  0.4  0.45 0.3  0.4  0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.2  0.35 0.3  0.4  0.3  0.35 0.4  0.45
  0.2  0.3  0.35 0.45 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.5  0.25 0.35 0.25 0.3
  0.2  0.35 0.3  0.35 0.25 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.1  0.4  0.45 0.4  0.45
  0.3  0.05 0.35 0.3  0.35 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.2  0.15 0.2  0.35
  0.4  0.45 0.3  0.45 0.35 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.5  0.4  0.35
  0.4  0.15 0.35 0.2  0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.1  0.15
  0.45 0.45 0.25 0.3  0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3
  0.25 0.4  0.25 0.5  0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15
  0.35 0.45 0.15 0.3  0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4  0.5  0.2  0.3  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.2  0.5  0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.4  0.3  0.4  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.4  0.05 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.4  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.819, 0.608, 0.667, 0.883, 0.724, 0.872, 0.807, 0.641, 0.821, 0.71, 0.941, 0.721, 0.952, 0.777, 0.843, 0.577, 0.878, 0.765, 0.835, 0.721]
cutting matrix
[[ 1.  1.  0.  1. -1.  0.  1. -1. -1. -1.  0. -1.  0. -1.  1.]
 [-1.  1.  0. -1.  1. -1.  1.  0.  1. -1. -1.  1.  1.  1.  0.]
 [ 1.  1. -1. -1.  0.  1.  1. -1.  1.  0.  0.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  0.  1.  1.  1. -1.  0.  1.  0.  1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1. -1.  1. -1.  0. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  0.  1.  1.  1. -1.  0. -1.  0. -1. -1.]
 [-1.  1.  0. -1.  1. -1.  1.  0.  1. -1. -1. -1.  1. -1.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  0.  1. -1.]]
cutting matrix's confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  0  0 10  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  1  0  0  1  9  0  3  0]
 [ 1  3  0  2  0  1  1 12  0  0]
 [ 2  0  2  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]


SVM classifier
Time: 2019-01-05 23:04:00
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
confusion matrix
[[16  0  1  0  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 3  0 18  1  0  0  0  0  0  0]
 [ 3  0  3 10  0  0  0  0  0  0]
 [13  0  4  0  0  0  0  0  0  0]
 [ 3  0 17  0  0  0  0  0  0  0]
 [12  0  3  0  0  0  0  0  0  0]
 [18  0  1  1  0  0  0  0  0  0]
 [15  0  6  1  0  0  0  0  0  0]
 [ 1  0 10  2  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0. -1.]
 [ 1.  0.]
 [-1.  0.]
 [ 0. -1.]
 [ 1.  1.]
 [ 0.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  1.]]
confusion matrix
[[14  0  0  0  0  1  0  2  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 1  0 17  1  0  1  0  2  0  0]
 [ 0  0  1 10  0  2  0  3  0  0]
 [11  0  2  0  0  2  0  2  0  0]
 [ 0  0  1  0  0 16  0  3  0  0]
 [ 2  0  1  0  0  1  2  9  0  0]
 [ 6  0  0  1  0  1  0 12  0  0]
 [ 3  0  2  1  0  4  1 11  0  0]
 [ 1  0  0  2  0 10  0  0  0  0]]
row HD
[[0.  0.  0.2 0.2 0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.2 0.2 0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  1.]
 [ 0. -1.  1.]
 [ 1.  0.  1.]
 [-1.  0.  1.]
 [ 0. -1.  0.]
 [ 1.  1.  0.]
 [ 0.  0.  1.]
 [ 0.  1. -1.]
 [ 0.  1.  0.]
 [ 1.  1.  1.]]
confusion matrix
[[13  0  0  0  1  0  1  0  1  1]
 [21  0  0  1  4  0  0  0  0  0]
 [ 1  0 17  1  0  1  1  0  1  0]
 [ 0  0  1  8  0  2  1  2  2  0]
 [ 0  0  2  0 11  0  0  1  1  2]
 [ 0  0  1  0  0 16  2  0  1  0]
 [ 1  0  1  0  1  1  2  0  9  0]
 [ 6  0  0  1  0  1  1 11  0  0]
 [ 2  0  2  1  1  4  1  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.  0.2 0.2 0.1 0.3 0.1 0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.1 0.3 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.3 0.2 0.1 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.3 0.3 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0. -1.  1.  1.]
 [ 0. -1.  1. -1.]
 [ 1.  0.  1.  0.]
 [-1.  0.  1.  1.]
 [ 0. -1.  0.  0.]
 [ 1.  1.  0.  0.]
 [ 0.  0.  1.  1.]
 [ 0.  1. -1.  1.]
 [ 0.  1.  0. -1.]
 [ 1.  1.  1.  0.]]
confusion matrix
[[10  4  0  0  0  0  1  0  1  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  1  0  1  0]
 [ 0  3  1  5  0  2  1  2  2  0]
 [ 0  0  2  0 11  1  0  1  0  2]
 [ 0  0  1  0  0 16  2  1  0  0]
 [ 1  0  1  0  1  1  2  6  3  0]
 [ 3  3  0  1  0  1  1 11  0  0]
 [ 2  1  2  1  0  4  1  2  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.1 0.3 0.2 0.2 0.4 0.1 0.2 0.3 0.3]
 [0.  0.  0.3 0.3 0.2 0.4 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.2 0.3 0.2 0.2 0.4 0.4 0.1]
 [0.  0.  0.  0.  0.4 0.4 0.1 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  2.25]
 [0.   0.   2.25 1.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1.  1.  1.  1.]
 [ 0. -1.  1. -1.  1.]
 [ 1.  0.  1.  0.  0.]
 [-1.  0.  1.  1. -1.]
 [ 0. -1.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.]
 [ 0.  0.  1.  1. -1.]
 [ 0.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1.]
 [ 1.  1.  1.  0.  1.]]
confusion matrix
[[10  3  0  0  0  0  0  0  2  2]
 [ 0 21  0  0  4  0  0  0  1  0]
 [ 0  1 17  1  0  1  0  0  1  1]
 [ 0  0  1  5  0  2  0  2  5  1]
 [ 0  0  2  0 11  1  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  0  2]
 [ 1  0  2  0  0  1  8  0  3  0]
 [ 3  3  0  1  0  1  0 11  0  1]
 [ 2  0  2  1  0  4  3  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.1 0.4 0.3 0.2 0.5 0.2 0.2 0.4 0.3]
 [0.  0.  0.4 0.4 0.2 0.5 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.4 0.2 0.3 0.5 0.5 0.2]
 [0.  0.  0.  0.  0.5 0.5 0.1 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.8 1.6]
 [0.  0.  1.8 1.4 1.4]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0. -1.  1.  1.  1.  1.]
 [ 0. -1.  1. -1.  1. -1.]
 [ 1.  0.  1.  0.  0.  0.]
 [-1.  0.  1.  1. -1.  1.]
 [ 0. -1.  0.  0.  1.  0.]
 [ 1.  1.  0.  0.  0.  0.]
 [ 0.  0.  1.  1. -1.  0.]
 [ 0.  1. -1.  1.  1.  0.]
 [ 0.  1.  0. -1. -1.  0.]
 [ 1.  1.  1.  0.  1.  0.]]
confusion matrix
[[10  0  0  0  3  0  0  0  2  2]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  1  1]
 [ 0  0  1  8  0  2  0  2  2  1]
 [ 0  0  2  0 11  1  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  0  2]
 [ 1  0  2  0  0  1  8  0  3  0]
 [ 3  3  0  1  0  1  0 11  0  1]
 [ 2  0  2  1  0  4  3  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.2 0.5 0.3 0.3 0.6 0.3 0.3 0.5 0.4]
 [0.  0.  0.5 0.5 0.3 0.6 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.4 0.2 0.3 0.5 0.5 0.2]
 [0.  0.  0.  0.  0.6 0.6 0.2 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   1.5  1.33 1.  ]
 [0.   0.   1.5  1.17 1.17 1.17]
 [0.   0.   0.   0.83 1.   0.83]
 [0.   0.   0.   0.   0.83 0.5 ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0. -1.  1.  1.  1.  1.  0.]
 [ 0. -1.  1. -1.  1. -1.  0.]
 [ 1.  0.  1.  0.  0.  0.  0.]
 [-1.  0.  1.  1. -1.  1.  0.]
 [ 0. -1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1. -1.  0. -1.]
 [ 0.  1. -1.  1.  1.  0.  0.]
 [ 0.  1.  0. -1. -1.  0.  0.]
 [ 1.  1.  1.  0.  1.  0.  1.]]
confusion matrix
[[11  0  0  0  3  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  1  1]
 [ 0  0  1  8  0  2  0  2  2  1]
 [ 0  0  2  0 11  1  0  1  0  2]
 [ 2  0  1  0  0 17  0  0  0  0]
 [ 1  0  2  0  0  7  2  0  3  0]
 [ 3  3  0  1  0  1  0 11  0  1]
 [ 2  0  2  1  0  6  1  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.2 0.5 0.3 0.3 0.6 0.4 0.3 0.5 0.5]
 [0.  0.  0.5 0.5 0.3 0.6 0.5 0.4 0.4 0.5]
 [0.  0.  0.  0.4 0.4 0.2 0.4 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.6 0.6 0.3 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 1.29 1.14 0.86 0.57]
 [0.   0.   1.29 1.   1.   1.   1.  ]
 [0.   0.   0.   0.71 0.86 0.71 0.86]
 [0.   0.   0.   0.   0.71 0.43 1.  ]
 [0.   0.   0.   0.   0.   1.   0.86]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0. -1.  1.  1.  1.  1.  0.  1.]
 [ 0. -1.  1. -1.  1. -1.  0.  0.]
 [ 1.  0.  1.  0.  0.  0.  0.  0.]
 [-1.  0.  1.  1. -1.  1.  0.  0.]
 [ 0. -1.  0.  0.  1.  0.  0. -1.]
 [ 1.  1.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1. -1.  0. -1.  0.]
 [ 0.  1. -1.  1.  1.  0.  0.  1.]
 [ 0.  1.  0. -1. -1.  0.  0. -1.]
 [ 1.  1.  1.  0.  1.  0.  1. -1.]]
confusion matrix
[[11  3  1  0  0  0  0  0  2  0]
 [ 1 21  0  1  3  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  8  0  4  0  3  0  0]
 [ 1  0  2  0 10  1  0  1  0  2]
 [ 2  0  1  0  0 17  0  0  0  0]
 [ 1  0  2  0  0  7  2  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  1  0  6  1  0 10  0]
 [ 0  0  1  2  1  6  0  0  0  3]]
row HD
[[0.  0.3 0.6 0.4 0.4 0.7 0.5 0.3 0.6 0.6]
 [0.  0.  0.5 0.5 0.4 0.6 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.4 0.5 0.2 0.4 0.6 0.6 0.4]
 [0.  0.  0.  0.  0.7 0.6 0.3 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.4 0.6 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 1.12 1.   0.75 0.5  1.  ]
 [0.   0.   1.12 0.88 0.88 0.88 0.88 0.62]
 [0.   0.   0.   0.62 0.75 0.62 0.75 1.  ]
 [0.   0.   0.   0.   0.62 0.38 0.88 0.62]
 [0.   0.   0.   0.   0.   0.88 0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.62 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1.  0.  0.  1.]
select_j_column
[ 1. -1.  0.  1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
8
new_column
None


============== iter  9 ================
current matrix is 
[[ 0. -1.  1.  1.  1.  1.  0.  1.]
 [ 0. -1.  1. -1.  1. -1.  0.  0.]
 [ 1.  0.  1.  0.  0.  0.  0.  0.]
 [-1.  0.  1.  1. -1.  1.  0.  0.]
 [ 0. -1.  0.  0.  1.  0.  0. -1.]
 [ 1.  1.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1. -1.  0. -1.  0.]
 [ 0.  1. -1.  1.  1.  0.  0.  1.]
 [ 0.  1.  0. -1. -1.  0.  0. -1.]
 [ 1.  1.  1.  0.  1.  0.  1. -1.]]
confusion matrix
[[11  3  1  0  0  0  0  0  2  0]
 [ 1 21  0  1  3  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  8  0  4  0  3  0  0]
 [ 1  0  2  0 10  1  0  1  0  2]
 [ 2  0  1  0  0 17  0  0  0  0]
 [ 1  0  2  0  0  7  2  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  1  0  6  1  0 10  0]
 [ 0  0  1  2  1  6  0  0  0  3]]
row HD
[[0.  0.3 0.6 0.4 0.4 0.7 0.5 0.3 0.6 0.6]
 [0.  0.  0.5 0.5 0.4 0.6 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.4 0.5 0.2 0.4 0.6 0.6 0.4]
 [0.  0.  0.  0.  0.7 0.6 0.3 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.4 0.6 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 1.12 1.   0.75 0.5  1.  ]
 [0.   0.   1.12 0.88 0.88 0.88 0.88 0.62]
 [0.   0.   0.   0.62 0.75 0.62 0.75 1.  ]
 [0.   0.   0.   0.   0.62 0.38 0.88 0.62]
 [0.   0.   0.   0.   0.   0.88 0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.62 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.775, 0.793, 0.682, 0.655, 0.753, 0.729, 0.214, 0.629]
cutting matrix
[[ 0.  1.  1.  1.  0.  1.]
 [ 0.  1.  1. -1.  0.  0.]
 [ 1.  1.  0.  0.  0.  0.]
 [-1.  1. -1.  1.  0.  0.]
 [ 0.  0.  1.  0.  0. -1.]
 [ 1.  0.  0.  0.  0.  0.]
 [ 0.  1. -1.  0. -1.  0.]
 [ 0. -1.  1.  0.  0.  1.]
 [ 0.  0. -1.  0.  0. -1.]
 [ 1.  1.  1.  0.  1. -1.]]
cutting matrix's confusion matrix
[[15  0  0  0  0  0  0  0  2  0]
 [ 0 21  0  1  3  0  0  1  0  0]
 [ 1  1 17  1  0  1  0  0  1  0]
 [ 1  0  1 10  2  2  0  0  0  0]
 [ 0  0  2  0 11  0  0  2  0  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 1  0  0  2  1  6  0  0  0  3]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:04:07
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.]
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.4 0.  0. ]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  0. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1. -1.  1.]
 [-1.  0.  0.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.4]
 [0.  0.  0.6 0.2 0. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [-1.  0.  0.  1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.6 0.6 0.8 0.6]
 [0.  0.  0.6 0.2 0. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.75 0.25]
 [0.   0.   0.5  1.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [-1.  0.  0.  1.  0.]
 [ 1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.6 0.8 0.8 0.8]
 [0.  0.  0.8 0.2 0.2]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.6 0.2 0.6]
 [0.  0.  0.4 1.  0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.]
 [-1.  0.  0.  1.  0. -1.]
 [ 1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 2  5  1  1  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.6 1.  1.  1. ]
 [0.  0.  1.  0.4 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.5  0.17 0.5  0.5 ]
 [0.   0.   0.33 0.83 0.33 0.33]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1.]
 [-1.  0.  0.  1.  0. -1. -1.]
 [ 1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 2  5  1  1  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.6 1.2 1.  1.2]
 [0.  0.  1.2 0.4 0.6]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.43 0.14 0.43 0.43 0.29]
 [0.   0.   0.29 0.71 0.29 0.29 0.43]
 [0.   0.   0.   0.43 0.29 0.29 0.43]
 [0.   0.   0.   0.   0.43 0.57 0.43]
 [0.   0.   0.   0.   0.   0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  0. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1.  0.]
 [-1.  0.  0.  1.  0. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.8 1.2 1.2 1.4]
 [0.  0.  1.4 0.6 0.8]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.38 0.12 0.38 0.38 0.25 0.12]
 [0.   0.   0.25 0.62 0.25 0.25 0.38 0.62]
 [0.   0.   0.   0.38 0.25 0.25 0.38 0.5 ]
 [0.   0.   0.   0.   0.38 0.5  0.38 0.25]
 [0.   0.   0.   0.   0.   0.25 0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1.  0.  1.]
 [-1.  0.  0.  1.  0. -1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 2  5  1  1  0]
 [ 0  3  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.8 1.2 1.4 1.6]
 [0.  0.  1.4 0.8 1. ]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.33 0.11 0.33 0.33 0.22 0.11 0.44]
 [0.   0.   0.22 0.56 0.22 0.22 0.33 0.56 0.22]
 [0.   0.   0.   0.33 0.22 0.22 0.33 0.44 0.22]
 [0.   0.   0.   0.   0.33 0.44 0.33 0.22 0.33]
 [0.   0.   0.   0.   0.   0.22 0.11 0.44 0.22]
 [0.   0.   0.   0.   0.   0.   0.11 0.44 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  0. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1.  0.  1.  1.]
 [-1.  0.  0.  1.  0. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.  1.2 1.4 1.8]
 [0.  0.  1.6 1.  1. ]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.3 0.1 0.3 0.3 0.2 0.1 0.4 0.1]
 [0.  0.  0.2 0.5 0.2 0.2 0.3 0.5 0.2 0.4]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
None


============== iter  11 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1.  0.  1.  1.]
 [-1.  0.  0.  1.  0. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.  1.2 1.4 1.8]
 [0.  0.  1.6 1.  1. ]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.3 0.1 0.3 0.3 0.2 0.1 0.4 0.1]
 [0.  0.  0.2 0.5 0.2 0.2 0.3 0.5 0.2 0.4]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.625, 0.723, 0.894, 0.804, 0.936, 0.839, 0.786, 0.714, 0.857, 0.696]
cutting matrix
[[ 1.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]
 [ 0.  0.  1.  0. -1. -1.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1. -1.  1.]]
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 5  8  1  0  0]
 [ 3  2  4  0  0]
 [ 0  2  3  0  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 23:04:09
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0. -1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  1  4  0  0]
 [ 3  1  1  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 0.  0.]
 [ 0.  1.]
 [-1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  1  2  2  0]
 [ 3  1  0  1  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.2 0.4 0.2 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [-1.  1.  1.]
 [ 0.  0. -1.]
 [ 0.  1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  2  3  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.2 0.6]
 [0.  0.  0.6 0.4 0.2]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.  1.]
 [-1.  1.  1.  0.]
 [ 0.  0. -1. -1.]
 [ 0.  1. -1.  1.]
 [-1. -1.  1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  5  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.2 0.8]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.25 0.75]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
1
new_column
None


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  1.]
 [-1.  1.  1.  0.]
 [ 0.  0. -1. -1.]
 [ 0.  1. -1.  1.]
 [-1. -1.  1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  5  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.2 0.8]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.25 0.75]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  0.  1. -1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  1. -1.]
 [-1.  1.  1.  0. -1.]
 [ 0.  0. -1. -1. -1.]
 [ 0.  1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.8]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 1.  0.6 0.6]
 [0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.619, 0.936, 0.696, 0.619, 0.911]
cutting matrix
[[ 1. -1. -1.]
 [ 1.  1. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:10
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1  9  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  7  0  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.  ]
 [0.   0.   0.33 0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1  9  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  2  5  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.17 0.  ]
 [0.   0.   0.33 0.5  0.33 0.17]
 [0.   0.   0.   0.17 0.   0.17]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [-1.  1. -1.  0.]
 [-1.  1.  1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1  9  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  0  5  2  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.5  0.33 0.  ]
 [0.   0.   0.5  0.67 0.5  0.17]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.5  0.75]
 [0.   0.   0.5  1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [-1.  1. -1.  0. -1.]
 [-1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1  9  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.5  0.5  0.  ]
 [0.   0.   0.5  0.83 0.5  0.33]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.4 0.6 0.8]
 [0.  0.  0.4 1.2 0.8]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1.  1.  0.]
 [ 1. -1. -1.  1. -1.  0.]
 [-1.  1. -1.  0. -1.  0.]
 [-1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1  9  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.5  0.67 0.67 0.17]
 [0.   0.   0.5  1.   0.67 0.5 ]
 [0.   0.   0.   0.67 0.33 0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.33 0.5  0.67 0.67]
 [0.   0.   0.33 1.   0.67 0.67]
 [0.   0.   0.   0.83 0.33 0.83]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.955, 0.955, 0.955, 0.982, 0.985, 0.889]
cutting matrix
[[ 1.  1.]
 [ 1. -1.]
 [ 0. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:12
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1. -1.  0.]
confusion matrix
[[17  0  0  0  0  0]
 [11  0  0  1  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  0. -1.  1.  1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1. -1.]
 [-1. -1.]
 [ 0.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 10  0  1  0  0]
 [ 0 11  0  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [ 0.  0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 10  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.17 0.17 0.17]
 [0.   0.   0.17 0.5  0.5  0.33]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.947, 0.949, 0.945]
cutting matrix
[[ 0. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [ 0.  0.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 1 10  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]


SVM classifier
Time: 2019-01-05 23:04:13
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 4 18  0  0  0  0  0  0  0  0]
 [ 3 23  0  0  0  0  0  0  0  0]
 [10  7  0  0  0  0  0  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 4 18  0  0  0  0  0  0  0  0]
 [ 3 23  0  0  0  0  0  0  0  0]
 [10  7  0  0  0  0  0  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.  0.2 0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.  0.  0. ]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.  0.  0. ]
 [0.  0.  0.  0.  0.2 0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  6 17  2  0  0  0  0  0  0]
 [ 0  6  1 10  0  0  0  0  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 18  0  1  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.2 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.1 0.2 0.1 0.2 0.2 0.  0.  0. ]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.3 0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  3 17  2  0  0  0  0  3  0]
 [ 0  6  1 10  0  0  0  0  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  3  0  0  0  0  0  0  9  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.3 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.2 0.3 0.1 0.2 0.3 0.  0.1 0. ]
 [0.  0.  0.  0.1 0.3 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.4 0.1 0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.5  1.75]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.]]
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  3 17  2  0  0  0  0  3  0]
 [ 0  6  1 10  0  0  0  0  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  3  0  0  0  0  0  0  9  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.3 0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.3 0.3 0.2 0.2 0.3 0.  0.1 0. ]
 [0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.5 0.1 0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.5 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.4 1.4 1. ]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  0.]
 [-1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  0.]
 [-1.  1. -1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1. -1.  1. -1.]]
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  3 17  2  0  0  0  0  3  0]
 [ 0  6  1 10  0  0  0  0  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  3  0  0  0  0  0  0  9  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.2 0.4 0.3 0.2 0.4 0.3 0.4]
 [0.  0.  0.4 0.4 0.3 0.3 0.4 0.  0.2 0. ]
 [0.  0.  0.  0.3 0.3 0.4 0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.6 0.1 0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.5 0.6 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.33 1.17 0.83 1.67]
 [0.   0.   0.83 0.67 0.33 1.  ]
 [0.   0.   0.   1.17 0.83 1.5 ]
 [0.   0.   0.   0.   1.   0.67]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  0.  1.]
 [-1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  0. -1.]
 [-1.  1. -1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  0. -1.]
 [ 1.  1.  1. -1.  1. -1. -1.]]
confusion matrix
[[13  1  0  0  0  0  0  3  1  0]
 [ 0 17  0  4  0  0  0  1  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  5  1 10  0  0  0  1  0  0]
 [ 0  0  0  2  0  0  0 21  0  0]
 [ 0  0  0  1  0  0  0 16  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0 14  0  1  0  0  0  2  0  0]
 [ 2  0  0  0  0  0  0  3  9  0]
 [ 0  0  0  3  0  0  0 10  0  0]]
row HD
[[0.  0.5 0.4 0.3 0.4 0.4 0.3 0.4 0.3 0.4]
 [0.  0.  0.4 0.4 0.4 0.3 0.4 0.1 0.3 0.1]
 [0.  0.  0.  0.3 0.4 0.4 0.3 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.7 0.1 0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.6 0.7 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.29 1.   0.71 1.43 1.  ]
 [0.   0.   0.71 0.57 0.29 0.86 0.57]
 [0.   0.   0.   1.   0.71 1.29 1.29]
 [0.   0.   0.   0.   0.86 0.57 0.57]
 [0.   0.   0.   0.   0.   1.   0.57]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  0.  1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  0. -1.  0.]
 [-1.  1. -1. -1.  1.  1.  1.  0.]
 [-1.  1. -1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  0. -1.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.]]
confusion matrix
[[13  1  0  0  0  0  0  3  1  0]
 [ 0 17  0  4  0  0  0  1  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  5  1 10  0  0  0  1  0  0]
 [ 0  0  0  2  0  0  0 21  0  0]
 [ 0  0  0  1  0  0  0 16  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0 14  0  1  0  0  0  2  0  0]
 [ 2  0  0  0  0  0  0  3  9  0]
 [ 0  0  0  3  0  0  0 10  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.5 0.5 0.4 0.5 0.4 0.5]
 [0.  0.  0.5 0.5 0.5 0.4 0.5 0.1 0.4 0.1]
 [0.  0.  0.  0.4 0.5 0.5 0.4 0.6 0.4 0.6]
 [0.  0.  0.  0.  0.7 0.1 0.  0.6 0.4 0.6]
 [0.  0.  0.  0.  0.  0.6 0.7 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.25 0.88 0.62 1.25 0.88 1.12]
 [0.   0.   0.62 0.5  0.25 0.75 0.5  1.  ]
 [0.   0.   0.   0.88 0.62 1.12 1.12 1.12]
 [0.   0.   0.   0.   0.75 0.5  0.5  0.62]
 [0.   0.   0.   0.   0.   0.88 0.5  1.25]
 [0.   0.   0.   0.   0.   0.   0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.  0.]
 [ 1.  1. -1.  1. -1.  0.  1.  1.  0.]
 [-1.  1. -1.  1.  1.  1.  1.  0.  0.]
 [ 1. -1.  1. -1. -1.  0. -1.  0.  0.]
 [-1.  1. -1. -1.  1.  1.  1.  0.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  0.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.  0.]
 [ 1.  1.  1.  1.  1.  0. -1.  0.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1.]]
confusion matrix
[[13  1  0  0  0  0  0  3  1  0]
 [ 0 17  0  4  0  0  0  1  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  5  1 10  0  0  0  1  0  0]
 [ 0  0  0  2  0  0  0 21  0  0]
 [ 0  0  0  1  0  0  0 16  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0 14  0  1  0  0  0  2  0  0]
 [ 2  0  0  0  0  0  0  3  9  0]
 [ 0  0  0  3  0  0  0 10  0  0]]
row HD
[[0.  0.7 0.5 0.5 0.6 0.5 0.5 0.6 0.5 0.6]
 [0.  0.  0.5 0.5 0.5 0.5 0.5 0.1 0.4 0.2]
 [0.  0.  0.  0.4 0.5 0.6 0.4 0.6 0.4 0.7]
 [0.  0.  0.  0.  0.7 0.2 0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.7 0.7 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.22 0.78 0.56 1.11 0.78 1.   1.11]
 [0.   0.   0.56 0.44 0.22 0.67 0.44 0.89 0.89]
 [0.   0.   0.   0.78 0.56 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.67 0.44 0.44 0.56 0.89]
 [0.   0.   0.   0.   0.   0.78 0.44 1.11 1.  ]
 [0.   0.   0.   0.   0.   0.   0.56 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  0.  0.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1. -1.  1. -1.  0.  1.  1.  0. -1.]
 [-1.  1. -1.  1.  1.  1.  1.  0.  0.  1.]
 [ 1. -1.  1. -1. -1.  0. -1.  0.  0.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  0.  1.  0.]
 [-1.  1. -1.  1.  1.  1.  1.  0.  0.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1.  0. -1.  0.  0.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1.]]
confusion matrix
[[13  1  0  0  0  0  0  3  1  0]
 [ 0 17  0  4  0  0  0  1  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  5  1 10  0  0  0  1  0  0]
 [ 0  0  0  2  0  0  0 21  0  0]
 [ 0  0  0  1  0  0  0 16  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0 14  0  1  0  0  0  2  0  0]
 [ 2  0  0  0  0  0  0  3  9  0]
 [ 0  0  0  3  0  0  0 10  0  0]]
row HD
[[0.  0.7 0.6 0.5 0.6 0.6 0.5 0.6 0.5 0.7]
 [0.  0.  0.6 0.5 0.5 0.6 0.5 0.1 0.4 0.3]
 [0.  0.  0.  0.5 0.6 0.7 0.5 0.7 0.5 0.7]
 [0.  0.  0.  0.  0.7 0.3 0.  0.6 0.4 0.8]
 [0.  0.  0.  0.  0.  0.8 0.7 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.2 0.7 0.5 1.  0.7 0.9 1.  0.6]
 [0.  0.  0.5 0.4 0.2 0.6 0.4 0.8 0.8 0.4]
 [0.  0.  0.  0.7 0.5 0.9 0.9 0.9 0.9 0.4]
 [0.  0.  0.  0.  0.6 0.4 0.4 0.5 0.8 0.5]
 [0.  0.  0.  0.  0.  0.7 0.4 1.  0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.67, 0.878, 0.681, 0.84, 0.787, 0.656, 0.654, 0.74, 0.38, 0.811]
cutting matrix
[[ 1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1. -1.  0.  1.  1.  0. -1.]
 [ 1.  1.  1.  1.  1.  0.  0.  1.]
 [-1. -1. -1.  0. -1.  0.  0.  1.]
 [ 1. -1.  1.  1.  1.  0.  1.  0.]
 [ 1.  1.  1.  1.  1.  0.  0.  1.]
 [ 1. -1.  1. -1. -1. -1.  0.  1.]
 [ 1.  1.  1.  0. -1.  0.  0.  1.]
 [ 1. -1.  1. -1. -1. -1. -1. -1.]]
cutting matrix's confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0 17  0  4  0  1  0  0  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  5  1 10  0  0  0  1  0  0]
 [ 0  0  0  2  0  2  0 19  0  0]
 [ 0  0  0  1  0  3  0 13  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0 14  0  1  0  2  0  0  0  0]
 [ 2  0  0  0  0  1  0  2  9  0]
 [ 0  0  0  3  0  1  0  9  0  0]]


SVM classifier
Time: 2019-01-05 23:04:20
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [17  5  0  0  0  0  0  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [ 6 11  0  0  0  0  0  0  0  0]
 [19  4  0  0  0  0  0  0  0  0]
 [13  6  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [12  5  0  0  0  0  0  0  0  0]
 [ 4 10  0  0  0  0  0  0  0  0]
 [ 9  4  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [-1.  0.]
 [-1.  1.]
 [ 0.  0.]
 [ 0.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [-1. -1.]
 [ 0.  1.]]
confusion matrix
[[13  1  4  0  0  0  0  0  0  0]
 [ 0  4  1  0  0  0  0 17  0  0]
 [ 2  4 20  0  0  0  0  0  0  0]
 [ 1 10  1  0  0  0  0  5  0  0]
 [19  2  2  0  0  0  0  0  0  0]
 [13  1  5  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 0  3  2  0  0  0  0 12  0  0]
 [ 4  0 10  0  0  0  0  0  0  0]
 [ 9  3  1  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.  0.1 0.1 0.1 0.2 0. ]
 [0.  0.  0.1 0.1 0.2 0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.2 0.1 0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  1. -1.]
 [-1.  0.  1.]
 [-1.  1.  1.]
 [ 0.  0. -1.]
 [ 0.  1.  0.]
 [-1.  1.  1.]
 [ 1.  1.  0.]
 [ 0. -1. -1.]
 [-1. -1. -1.]
 [ 0.  1. -1.]]
confusion matrix
[[16  1  1  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  2  1 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  9  0  2  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.1 0.1 0.2 0.2 0.1 0.2 0. ]
 [0.  0.  0.1 0.2 0.3 0.1 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.3 0.2 0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1.  1. -1. -1.  1.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1. -1.  1.]
 [-1.  0.  1.  0.]
 [-1.  1.  1.  1.]
 [ 0.  0. -1. -1.]
 [ 0.  1.  0.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  0. -1.]
 [ 0. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 0.  1. -1. -1.]]
confusion matrix
[[16  1  1  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  2  1 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  9  0  2  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.1 0.2 0.3 0.1 0.2 0.1]
 [0.  0.  0.2 0.3 0.4 0.2 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.4 0.2 0.  0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.   2.5 ]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  1. -1.  1.  0.]
 [-1.  0.  1.  0.  1.]
 [-1.  1.  1.  1. -1.]
 [ 0.  0. -1. -1. -1.]
 [ 0.  1.  0.  1. -1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1.  0. -1.  0.]
 [ 0. -1. -1.  1.  0.]
 [-1. -1. -1.  1.  1.]
 [ 0.  1. -1. -1.  0.]]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 4  2 17  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 5  0  0  1 13  0  0  0  0  0]
 [18  0  0  0  1  0  0  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [12  0  0  0  2  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.3 0.2 0.3 0.3 0.1 0.3 0.1]
 [0.  0.  0.3 0.4 0.5 0.3 0.5 0.5 0.3 0.5]
 [0.  0.  0.  0.4 0.2 0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.6 2.  1. ]
 [0.  0.  1.2 1.  2. ]
 [0.  0.  0.  1.2 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  1. -1.  1.  0. -1.]
 [-1.  0.  1.  0.  1. -1.]
 [-1.  1.  1.  1. -1. -1.]
 [ 0.  0. -1. -1. -1.  1.]
 [ 0.  1.  0.  1. -1.  0.]
 [-1.  1.  1.  1. -1. -1.]
 [ 1.  1.  0. -1.  0. -1.]
 [ 0. -1. -1.  1.  0.  0.]
 [-1. -1. -1.  1.  1.  0.]
 [ 0.  1. -1. -1.  0.  1.]]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 4  2 17  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 5  0  0  1 13  0  0  0  0  0]
 [18  0  0  0  1  0  0  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [12  0  0  0  2  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.4 0.3 0.3 0.3 0.2 0.4 0.2]
 [0.  0.  0.3 0.5 0.6 0.3 0.5 0.6 0.4 0.6]
 [0.  0.  0.  0.5 0.3 0.  0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.5 0.5 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.33 1.67 0.83 0.83]
 [0.   0.   1.   0.83 1.67 1.5 ]
 [0.   0.   0.   1.   1.17 1.33]
 [0.   0.   0.   0.   1.33 1.5 ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.45, 0.799, 0.493, 0.639, 0.595, 0.582]
cutting matrix
[[ 1. -1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]
 [ 0. -1. -1.]
 [ 1.  0. -1.]
 [ 1.  1. -1.]
 [ 1.  0.  0.]
 [-1. -1.  0.]
 [-1. -1.  1.]
 [ 1. -1.  0.]]
cutting matrix's confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  3  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  2  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  9  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:04:26
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1. -1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  0.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 3  4  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.  0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1.  0. -1.]
 [ 1. -1.  0.]
 [-1.  1.  1.]
 [-1.  0.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  1  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.6]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  0. -1.  1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [ 1.  0. -1.  0.]
 [ 1. -1.  0. -1.]
 [-1.  1.  1. -1.]
 [-1.  0.  0.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.8]
 [0.  0.  0.6 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   0.75]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1.  0.]
 [ 1.  0. -1.  0.  0.]
 [ 1. -1.  0. -1.  1.]
 [-1.  1.  1. -1.  1.]
 [-1.  0.  0.  0. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.6 0.8 1. ]
 [0.  0.  0.8 1.  0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 0.6 0.6]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 0.  0.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0.]
 [ 1.  0. -1.  0.  0.  1.]
 [ 1. -1.  0. -1.  1.  1.]
 [-1.  1.  1. -1.  1.  1.]
 [-1.  0.  0.  0. -1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.8 0.8 1.  1.2]
 [0.  0.  0.8 1.  0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 0.5  0.5  0.33]
 [0.   0.   0.5  0.33 0.5  0.67]
 [0.   0.   0.   0.5  0.67 0.67]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1.]
 [ 1.  0. -1.  0.  0.  1.  1.]
 [ 1. -1.  0. -1.  1.  1.  0.]
 [-1.  1.  1. -1.  1.  1.  1.]
 [-1.  0.  0.  0. -1. -1. -1.]]
confusion matrix
[[32  2  0  0  0]
 [ 6  1  2  0  0]
 [ 2  3  2  0  0]
 [ 3  2  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.  1.  1.2 1.2]
 [0.  0.  1.  1.  1. ]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.57 0.43 0.43 0.29 0.43]
 [0.   0.   0.43 0.29 0.43 0.57 0.43]
 [0.   0.   0.   0.43 0.57 0.57 0.43]
 [0.   0.   0.   0.   0.57 0.71 0.71]
 [0.   0.   0.   0.   0.   0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0.  1.  1. -1.]
select_j_column
[-1.  1.  0.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1. -1.]
 [ 1.  0. -1.  0.  0.  1.  1.  1.]
 [ 1. -1.  0. -1.  1.  1.  0.  1.]
 [-1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  0.  0.  0. -1. -1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.2 1.2 1.2 1.4]
 [0.  0.  1.  1.2 1. ]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.5  0.38 0.38 0.25 0.38 0.25]
 [0.   0.   0.38 0.25 0.38 0.5  0.38 0.5 ]
 [0.   0.   0.   0.38 0.5  0.5  0.38 0.62]
 [0.   0.   0.   0.   0.5  0.62 0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.12 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1. -1.  1.]
 [ 1.  0. -1.  0.  0.  1.  1.  1.  1.]
 [ 1. -1.  0. -1.  1.  1.  0.  1. -1.]
 [-1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  0.  0.  0. -1. -1. -1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.2 1.4 1.2 1.6]
 [0.  0.  1.2 1.2 1.2]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.44 0.33 0.33 0.22 0.33 0.22 0.22]
 [0.   0.   0.33 0.22 0.33 0.44 0.33 0.44 0.33]
 [0.   0.   0.   0.33 0.44 0.44 0.33 0.56 0.33]
 [0.   0.   0.   0.   0.44 0.56 0.56 0.44 0.33]
 [0.   0.   0.   0.   0.   0.11 0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.22 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 0.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1. -1.  1.  0.]
 [ 1.  0. -1.  0.  0.  1.  1.  1.  1. -1.]
 [ 1. -1.  0. -1.  1.  1.  0.  1. -1.  1.]
 [-1.  1.  1. -1.  1.  1.  1. -1.  1. -1.]
 [-1.  0.  0.  0. -1. -1. -1.  1. -1. -1.]]
confusion matrix
[[32  0  0  2  0]
 [ 8  0  0  1  0]
 [ 3  0  0  4  0]
 [ 3  0  0  2  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.4 1.6 1.4 1.8]
 [0.  0.  1.4 1.2 1.2]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.4 0.3 0.3 0.2 0.3 0.2 0.2 0.2]
 [0.  0.  0.3 0.2 0.3 0.4 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.3 0.4 0.4 0.3 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.5 0.5 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1. -1.  1.  0. -1.]
 [ 1.  0. -1.  0.  0.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  0. -1.  1.  1.  0.  1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  0.  0.  0. -1. -1. -1.  1. -1. -1.  1.]]
confusion matrix
[[32  0  0  2  0]
 [ 8  0  0  1  0]
 [ 3  0  0  4  0]
 [ 3  0  0  2  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.6 1.6 1.4 2. ]
 [0.  0.  1.6 1.4 1.2]
 [0.  0.  0.  1.4 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.36 0.27 0.27 0.18 0.27 0.18 0.18 0.18 0.27]
 [0.   0.   0.27 0.18 0.27 0.36 0.27 0.36 0.27 0.45 0.27]
 [0.   0.   0.   0.27 0.36 0.36 0.27 0.45 0.27 0.36 0.45]
 [0.   0.   0.   0.   0.36 0.45 0.45 0.36 0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.09 0.27 0.36 0.27 0.18 0.45]
 [0.   0.   0.   0.   0.   0.   0.18 0.27 0.18 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1. -1.  1.  0. -1.  1.]
 [ 1.  0. -1.  0.  0.  1.  1.  1.  1. -1.  1.  0.]
 [ 1. -1.  0. -1.  1.  1.  0.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [-1.  0.  0.  0. -1. -1. -1.  1. -1. -1.  1.  0.]]
confusion matrix
[[32  0  0  2  0]
 [ 8  0  0  1  0]
 [ 3  0  0  4  0]
 [ 3  0  0  2  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.8 1.8 1.4 2.2]
 [0.  0.  1.8 1.6 1.2]
 [0.  0.  0.  1.6 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.33 0.25 0.25 0.17 0.25 0.17 0.17 0.17 0.25 0.33]
 [0.   0.   0.25 0.17 0.25 0.33 0.25 0.33 0.25 0.42 0.25 0.08]
 [0.   0.   0.   0.25 0.33 0.33 0.25 0.42 0.25 0.33 0.42 0.17]
 [0.   0.   0.   0.   0.33 0.42 0.42 0.33 0.25 0.33 0.25 0.08]
 [0.   0.   0.   0.   0.   0.08 0.25 0.33 0.25 0.17 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.17 0.25 0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.33 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.08 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1.  1.  0.  0. -1. -1.  1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  0.  1.  1.  1.  1. -1.  1.  0.  1.]
 [ 1. -1.  0. -1.  1.  1.  0.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  0.]
 [-1.  0.  0.  0. -1. -1. -1.  1. -1. -1.  1.  0.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  2.  1.8 1.6 2.4]
 [0.  0.  2.  1.8 1.4]
 [0.  0.  0.  1.8 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.31 0.23 0.23 0.15 0.23 0.15 0.15 0.15 0.23 0.31 0.31]
 [0.   0.   0.23 0.15 0.23 0.31 0.23 0.31 0.23 0.38 0.23 0.08 0.15]
 [0.   0.   0.   0.23 0.31 0.31 0.23 0.38 0.23 0.31 0.38 0.15 0.31]
 [0.   0.   0.   0.   0.31 0.38 0.38 0.31 0.23 0.31 0.23 0.08 0.23]
 [0.   0.   0.   0.   0.   0.08 0.23 0.31 0.23 0.15 0.38 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.15 0.23 0.15 0.15 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.15 0.31 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.08 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.893, 0.696, 0.812, 0.674, 0.154, 0.5, 0.755, 0.696, 0.857, 0.273, 0.821, 0.674, 0.8]
cutting matrix
[[ 1.  1.  0.  1. -1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  0.  1. -1. -1.]
 [-1.  1.  1.  1. -1.]
 [-1.  0. -1. -1.  1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:29
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  0.  0.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0.  1.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  4  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
2
new_column
None


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0.  1.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  4  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  0.  0.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[-1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0.  1.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  4  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  0.]
 [-1.  0.  1.]
 [ 1. -1. -1.]
 [ 0.  0.  0.]
 [ 0.  1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  4  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.86, 0.738, 0.118]
cutting matrix
[[-1.]
 [-1.]
 [ 1.]
 [ 0.]
 [ 0.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:29
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.5  0.17 0.   0.  ]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [-1. -1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.17 0.67 0.33 0.17 0.17]
 [0.   0.   0.5  0.5  0.33 0.33]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.5  0.5 ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.17 0.67 0.5  0.17 0.17]
 [0.   0.   0.5  0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.4 0.4 1. ]
 [0.  0.  0.2 0.6 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  0  1  1]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.67 0.5  0.33 0.17]
 [0.   0.   0.67 0.83 0.33 0.5 ]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.33 0.33 0.83 0.33]
 [0.   0.   0.17 0.5  0.67 0.5 ]
 [0.   0.   0.   0.67 0.5  0.67]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.955, 1.0, 0.91, 0.925, 0.955, 0.91]
cutting matrix
[[-1. -1. -1. -1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  0  1  1]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:04:31
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1.  0.  1.  0.]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1. -1.  1.  0. -1.]
select_j_column
[-1. -1.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 1. -1.]
 [-1.  0.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0  7  0  0  3  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.   0.17 0.  ]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  0. -1. -1.  0.  1.]
select_j_column
[-1.  0.  1.  0.  1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  1.]
 [ 1. -1.  0.]
 [-1.  0.  0.]
 [ 0.  1. -1.]
 [ 1.  1.  1.]
 [ 0.  1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0  7  0  0  3  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.5  0.5  0.17 0.17 0.  ]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  0.  0. -1.  1.  1.]
select_j_column
[-1.  0.  0.  1.  0.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  1. -1.]
 [ 1. -1.  0.  0.]
 [-1.  0.  0.  0.]
 [ 0.  1. -1.  1.]
 [ 1.  1.  1.  1.]
 [ 0.  1.  1.  1.]]
confusion matrix
[[21  0  0  0  0  1]
 [ 0  7  0  0  3  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.67 0.67 0.33 0.33 0.17]
 [0.   0.   0.33 0.67 0.5  0.67]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 1.25 1.25]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.878, 0.923, 0.897]
cutting matrix
[[ 0.  1. -1.]
 [ 1.  0.  0.]
 [-1.  0.  0.]
 [ 0. -1.  1.]
 [ 1.  1.  1.]
 [ 0.  1.  1.]]
cutting matrix's confusion matrix
[[21  0  0  0  0  1]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:04:32
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
confusion matrix
[[13  0  7  0  0  0  0  0  0  0]
 [18  0  3  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  0 13  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  0.]
 [ 1.  0.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  0.]
 [-1.  1.]]
confusion matrix
[[11  2  4  0  0  3  0  0  0  0]
 [ 1 17  1  0  0  2  0  0  0  0]
 [ 3  1 14  0  0  4  0  0  0  0]
 [ 0  5 13  0  0  1  0  0  0  0]
 [ 2 19  0  0  0  5  0  0  0  0]
 [ 0  3  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [19  0  1  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.2 0.2 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  4.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [-1.  0.  1.]
 [ 1.  0. -1.]
 [-1.  1.  1.]
 [ 1.  0. -1.]
 [ 1.  0. -1.]
 [-1.  1.  1.]]
confusion matrix
[[11  2  5  0  0  2  0  0  0  0]
 [ 1 17  3  0  0  0  0  0  0  0]
 [ 3  1 15  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2 19  0  0  0  5  0  0  0  0]
 [ 0  3  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.1 0.3 0.1 0.3 0.3 0.1]
 [0.  0.  0.2 0.3 0.  0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.   3.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [-1.  0.  1.  1.]
 [ 1. -1.  1.  0.]
 [ 1. -1. -1.  0.]
 [-1.  0.  1.  1.]
 [ 1.  0. -1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 1.  0. -1.  0.]
 [-1.  1.  1.  0.]]
confusion matrix
[[ 0 13  5  0  0  0  0  0  2  0]
 [ 0 18  3  0  0  0  0  0  0  0]
 [ 0  4 15  2  0  0  0  0  1  0]
 [ 0  5  0 13  0  0  0  0  1  0]
 [ 0 21  0  0  0  0  0  0  5  0]
 [ 0  3  0  0  0  0  0  0 13  0]
 [ 0 14  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0 19  0  1  0  0  0  0  1  0]
 [ 0  2  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.2 0.3 0.2 0.4 0.2 0.4 0.4 0.2]
 [0.  0.  0.3 0.4 0.  0.2 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.1 0.3 0.3 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.25 2.25 1.75]
 [0.   0.   1.75 1.75]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [-1.  0.  1.  1.  1.]
 [ 1. -1.  1.  0. -1.]
 [ 1. -1. -1.  0.  1.]
 [-1.  0.  1.  1. -1.]
 [ 1.  0. -1.  1.  1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.]
 [-1.  1.  1.  0. -1.]]
confusion matrix
[[ 0 12  4  0  2  0  0  0  2  0]
 [ 0 16  1  0  4  0  0  0  0  0]
 [ 0  7 12  0  0  0  0  2  1  0]
 [ 0  5  0  0  0  0  0 13  1  0]
 [ 0  4  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [ 0 14  0  0  0  0  0  0  0  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 0 19  0  0  0  0  0  1  1  0]
 [ 0  2  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.3 0.3 0.3 0.4 0.3 0.5 0.4 0.3]
 [0.  0.  0.4 0.4 0.1 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.4 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.5 0.2 0.5 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.3 0.1 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.8 1.8 1.4 0.8]
 [0.  0.  1.4 1.4 1.8]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[-1.  1.  0.  0.  1.  1.  1.  1.  0.  0.]
most_cplx_inx
0
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1.]
 [-1.  0.  1.  1.  1.  1.]
 [ 1. -1.  1.  0. -1.  0.]
 [ 1. -1. -1.  0.  1.  0.]
 [-1.  0.  1.  1. -1.  1.]
 [ 1.  0. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.]
 [ 1.  0. -1.  1. -1.  1.]
 [ 1.  0. -1.  0.  1.  0.]
 [-1.  1.  1.  0. -1.  0.]]
confusion matrix
[[11  1  4  0  2  0  0  0  2  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 12  0  0  0  0  2  1  0]
 [ 0  5  0  0  0  0  0 13  1  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [19  0  0  0  0  0  0  1  1  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.3 0.4 0.4 0.4 0.5 0.3 0.6 0.5 0.4]
 [0.  0.  0.5 0.5 0.1 0.2 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.2 0.4 0.5 0.4 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.6 0.3 0.6 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.  0.3 0.2 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.1 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.5  1.17 0.67 1.  ]
 [0.   0.   1.17 1.17 1.5  1.33]
 [0.   0.   0.   1.17 1.17 1.33]
 [0.   0.   0.   0.   1.33 0.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.681, 0.64, 0.718, 0.562, 0.601, 0.634]
cutting matrix
[[-1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1.  1. -1.  0.]
 [ 1. -1.  1.  0.]
 [-1.  1. -1.  1.]
 [ 1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  1.  0.]
 [-1.  1. -1.  0.]]
cutting matrix's confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 12  1  0  0  0  2  0  0]
 [ 0  5  0  1  0  0  0 13  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [19  0  0  1  0  0  0  1  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:37
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
confusion matrix
[[18  0  0  0  0  2  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [21  0  0  0  0  5  0  0  0  0]
 [ 3  0  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  0.]
 [ 0.  0.]
 [ 1.  1.]
 [ 0.  0.]
 [-1.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [-1.  0.]
 [ 0.  0.]]
confusion matrix
[[18  0  0  0  0  2  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  1  0  2  0  0]
 [ 5  0  0  0  0  1  0 13  0  0]
 [21  0  0  0  0  5  0  0  0  0]
 [ 3  0  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0  0  0  0  0 11  0  0]
 [19  0  0  0  0  1  0  1  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.  0.  0.2 0.  0.1 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.2 0.  0.1 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.2 0.  0.1 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0.  0. -1.]
 [ 0.  0. -1.]
 [ 1.  1.  1.]
 [ 0.  0. -1.]
 [-1.  0.  1.]
 [ 0. -1. -1.]
 [ 1. -1. -1.]
 [-1.  0. -1.]
 [ 0.  0. -1.]]
confusion matrix
[[15  3  0  0  0  0  2  0  0  0]
 [ 2 19  0  0  0  0  0  0  0  0]
 [15  4  0  0  0  0  1  2  0  0]
 [ 0  5  0  0  0  0  1 13  0  0]
 [ 2 19  0  0  0  0  5  0  0  0]
 [ 0  3  0  0  0  0 13  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0 11  0  0]
 [19  0  0  0  0  0  1  1  0  0]
 [ 2  0  0  0  0  0 12  0  0  0]]
row HD
[[0.  0.1 0.1 0.3 0.1 0.2 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.3 0.  0.2 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.3 0.  0.2 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 2.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [ 0.  0. -1.  1.]
 [ 0.  0. -1.  1.]
 [ 1.  1.  1.  1.]
 [ 0.  0. -1. -1.]
 [-1.  0.  1. -1.]
 [ 0. -1. -1.  1.]
 [ 1. -1. -1. -1.]
 [-1.  0. -1.  1.]
 [ 0.  0. -1.  1.]]
confusion matrix
[[15  1  0  0  2  0  2  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  3  0  0  0]
 [ 0  5  0  0  0  0 14  0  0  0]
 [ 2  2  0  0 17  0  5  0  0  0]
 [ 0  0  0  0  3  0 13  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  2  0  0  0]
 [ 2  0  0  0  0  0 12  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.2 0.3 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.3 0.1 0.3 0.1 0.3 0.1 0. ]
 [0.  0.  0.  0.3 0.1 0.3 0.1 0.3 0.1 0. ]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.75 1.75]
 [0.   0.   1.5  1.75]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 0. -1. -1.  1. -1.  1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0. -1.  1.  0.]
 [ 0.  0. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.]
 [ 0.  0. -1. -1.  1.]
 [-1.  0.  1. -1.  0.]
 [ 0. -1. -1.  1.  0.]
 [ 1. -1. -1. -1. -1.]
 [-1.  0. -1.  1.  1.]
 [ 0.  0. -1.  1. -1.]]
confusion matrix
[[15  1  2  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  3  0  0  0  0  0  0  0]
 [ 0  5 14  0  0  0  0  0  0  0]
 [ 2  2  5  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2 11  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.5 0.3 0.3 0.3 0.5 0.4 0.3]
 [0.  0.  0.1 0.4 0.2 0.3 0.1 0.4 0.2 0.1]
 [0.  0.  0.  0.3 0.2 0.4 0.2 0.3 0.2 0. ]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.4 1.4 1.4]
 [0.  0.  1.2 1.4 1.2]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.535, 0.229, 0.458, 0.446, 0.487]
cutting matrix
[[ 0.  0.  0.  0.]
 [ 0.  0.  1.  0.]
 [ 0.  0.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 0.  0. -1.  1.]
 [-1.  0. -1.  0.]
 [ 0. -1.  1.  0.]
 [ 1. -1. -1. -1.]
 [-1.  0.  1.  1.]
 [ 0.  0.  1. -1.]]
cutting matrix's confusion matrix
[[15  1  2  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  3  0  0  0  0  0  0  0]
 [ 0  5 14  0  0  0  0  0  0  0]
 [ 2  2  5  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2 11  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:04:41
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1. -1.]
 [ 1. -1.  0.]
 [ 1. -1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  1  1  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.2 0.4 0.2 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1. -1. -1.  0.]
 [ 1. -1.  0. -1.]
 [ 1. -1.  1. -1.]
 [-1.  1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  1  1  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.2]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 1.25]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  0.]
 [-1. -1. -1.  0.  0.]
 [ 1. -1.  0. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 5  1  0  1  0]
 [ 5  0  1  1  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.4 0.8 0.6 0.4]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.6 1.  1. ]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.  0.  1.]
 [-1. -1. -1.  0.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 5  1  0  1  0]
 [ 5  0  0  2  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.6 1.  0.6 0.4]
 [0.  0.  1.  1.  1. ]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.83 0.83 0.67]
 [0.   0.   0.5  0.33 0.33 0.5 ]
 [0.   0.   0.   0.5  0.67 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1.  0.  1. -1.]
 [-1. -1. -1.  0.  0.  0. -1.]
 [ 1. -1.  0. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 5  1  0  1  0]
 [ 5  0  0  2  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.6 1.2 0.6 0.4]
 [0.  0.  1.2 1.  1. ]
 [0.  0.  0.  0.6 1.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.43 0.71 0.71 0.57 0.14]
 [0.   0.   0.43 0.29 0.29 0.43 0.29]
 [0.   0.   0.   0.43 0.57 0.29 0.57]
 [0.   0.   0.   0.   0.14 0.14 0.57]
 [0.   0.   0.   0.   0.   0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1.  0.  1. -1.  0.]
 [-1. -1. -1.  0.  0.  0. -1.  1.]
 [ 1. -1.  0. -1. -1. -1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 5  1  0  1  0]
 [ 5  0  0  2  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.8 1.2 0.8 0.6]
 [0.  0.  1.4 1.  1.2]
 [0.  0.  0.  0.8 1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.62 0.62 0.5  0.12 0.38]
 [0.   0.   0.38 0.25 0.25 0.38 0.25 0.62]
 [0.   0.   0.   0.38 0.5  0.25 0.5  0.38]
 [0.   0.   0.   0.   0.12 0.12 0.5  0.62]
 [0.   0.   0.   0.   0.   0.25 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1.  0.  1. -1.  0. -1.]
 [-1. -1. -1.  0.  0.  0. -1.  1.  1.]
 [ 1. -1.  0. -1. -1. -1.  1.  0.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  2  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.  1.4 0.8 0.8]
 [0.  0.  1.4 1.2 1.2]
 [0.  0.  0.  1.  1.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.56 0.56 0.44 0.11 0.33 0.33]
 [0.   0.   0.33 0.22 0.22 0.33 0.22 0.56 0.22]
 [0.   0.   0.   0.33 0.44 0.22 0.44 0.33 0.44]
 [0.   0.   0.   0.   0.11 0.11 0.44 0.56 0.33]
 [0.   0.   0.   0.   0.   0.22 0.44 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.56 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.768, 0.946, 0.776, 0.66, 0.176, 0.702, 0.875, 0.263, 0.661]
cutting matrix
[[-1. -1.  1.  0. -1.  0. -1.]
 [-1. -1. -1.  0. -1.  1.  1.]
 [ 1. -1.  0. -1.  1.  0.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]


SVM classifier
Time: 2019-01-05 23:04:43
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  1. -1.]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1.  1.]
 [-1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 1.  0.  1.]
 [ 0. -1.  1.]
 [ 1.  1.  0.]
 [-1.  1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  0.  0.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [ 1.  0.  1. -1.]
 [ 0. -1.  1. -1.]
 [ 1.  1.  0.  1.]
 [-1.  1. -1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  0.5 ]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.  1.]
 [ 1.  0.  1. -1.  1.]
 [ 0. -1.  1. -1. -1.]
 [ 1.  1.  0.  1.  1.]
 [-1.  1. -1. -1. -1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.8 0.6 1. ]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  0.  1.  1.]
 [ 1.  0.  1. -1.  1.  1.]
 [ 0. -1.  1. -1. -1. -1.]
 [ 1.  1.  0.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 1.  0.6 1. ]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.33 0.33 0.33 0.5 ]
 [0.   0.   0.67 0.33 0.5  0.33]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  0.  0.  1.  1.  1.]
 [ 1.  0.  1. -1.  1.  1. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.8 1.  0.6 1. ]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.29 0.29 0.29 0.43 0.57]
 [0.   0.   0.57 0.29 0.43 0.29 0.43]
 [0.   0.   0.   0.43 0.43 0.57 0.57]
 [0.   0.   0.   0.   0.29 0.43 0.43]
 [0.   0.   0.   0.   0.   0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.263, 0.176, 0.368, 0.423, 0.821, 0.875, 0.839]
cutting matrix
[[ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:44
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1.  1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1.  0.]
 [ 1. -1.  0.]
 [ 1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1.  0.  1.]
 [ 1. -1.  0.  1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 2  0  4  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.67 0.5  0.17]
 [0.   0.   0.17 0.67 0.5  0.17]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 1.25 1.  ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1.  0.  1.  1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  1.  1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 2  0  4  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.67 0.5  0.33]
 [0.   0.   0.17 0.67 0.5  0.33]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 1.  0.8 0.4]
 [0.  0.  1.  1.  0.6]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
None


============== iter  6 ================
current matrix is 
[[ 1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1.  0.  1.  1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  1.  1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 2  0  4  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.67 0.5  0.33]
 [0.   0.   0.17 0.67 0.5  0.33]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 1.  0.8 0.4]
 [0.  0.  1.  1.  0.6]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  0.  0.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1. -1.  0.  1.  1.  0.]
 [ 1. -1.  0.  1.  1.  0.]
 [ 1.  1.  1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 3  0  3  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.83 0.67 0.5 ]
 [0.   0.   0.33 0.83 0.67 0.5 ]
 [0.   0.   0.   0.67 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.83 0.67 0.33 0.67]
 [0.   0.   0.83 0.83 0.5  0.67]
 [0.   0.   0.   0.67 1.   0.17]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.896, 0.91, 0.88, 0.97, 0.94, 0.9]
cutting matrix
[[-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  0.]
 [ 1.  1.  0.]
 [-1. -1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 14  1  0  0]
 [ 2  0  0  5  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:04:46
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  0. -1.]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0 15  0  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  0  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [ 0.  1.]
 [-1. -1.]
 [ 0.  1.]
 [-1. -1.]]
confusion matrix
[[17  0  1  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  2  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.17 0.33 0.17 0.33]
 [0.   0.   0.   0.33 0.   0.33]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  1. -1.]
 [-1. -1. -1.]
 [ 0.  1. -1.]
 [-1. -1.  0.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 11  1  0  0  1]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.5  0.5  0.5  0.5 ]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.33 0.   0.5 ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  1. -1.  1.  0. -1.]
most_cplx_inx
4
new_column
None


============== iter  4 ================
current matrix is 
[[ 1.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  1. -1.]
 [-1. -1. -1.]
 [ 0.  1. -1.]
 [-1. -1.  0.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 11  1  0  0  1]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.5  0.5  0.5  0.5 ]
 [0.   0.   0.33 0.5  0.33 0.5 ]
 [0.   0.   0.   0.33 0.   0.5 ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  1.  0.]
 [ 0.  0.  1.  0.]
 [ 0.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [ 0.  1. -1. -1.]
 [-1. -1.  0. -1.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 11  1  0  0  1]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.67 0.67 0.67 0.67]
 [0.   0.   0.5  0.67 0.5  0.67]
 [0.   0.   0.   0.5  0.   0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   1.25 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
None


============== iter  6 ================
current matrix is 
[[ 1.  0.  1.  0.]
 [ 0.  0.  1.  0.]
 [ 0.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [ 0.  1. -1. -1.]
 [-1. -1.  0. -1.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 0 11  1  0  0  1]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.67 0.67 0.67 0.67]
 [0.   0.   0.5  0.67 0.5  0.67]
 [0.   0.   0.   0.5  0.   0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   1.25 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.862, 0.889, 0.984, 0.889]
cutting matrix
[[ 1.  1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1. -1.]
 [ 0. -1.]
 [-1.  0.]]
cutting matrix's confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-05 23:04:48
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [19  0  0  3  0  0  0  0  0  0]
 [ 4  0  0 12  0  0  0  0  0  0]
 [15  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 17  0  0  0  0  0  0]
 [10  0  0  5  0  0  0  0  0  0]
 [17  0  0  3  0  0  0  0  0  0]
 [ 9  0  0 13  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]]
confusion matrix
[[14  0  0  1  0  0  0  0  2  0]
 [25  0  0  1  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  1  0]
 [ 4  0  0 12  0  0  0  0  0  0]
 [15  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 17  0  0  0  0  0  0]
 [10  0  0  2  0  0  0  0  3  0]
 [17  0  0  3  0  0  0  0  0  0]
 [ 9  0  0  5  0  0  0  0  8  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.  0.1 0.  0.  0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.  0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [-1.  1.  1.]]
confusion matrix
[[14  0  0  1  0  0  0  0  2  0]
 [25  0  0  1  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  1  0]
 [ 2  0  0 12  0  0  0  2  0  0]
 [14  0  0  2  0  0  0  1  0  0]
 [ 3  0  0 17  0  0  0  0  0  0]
 [10  0  0  2  0  0  0  0  3  0]
 [ 6  0  0  3  0  0  0 11  0  0]
 [ 9  0  0  5  0  0  0  0  8  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1. -1.  1.]
 [-1. -1.  1.  1.]
 [-1.  1.  1.  1.]]
confusion matrix
[[12  3  0  0  0  0  0  0  2  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0 19  0  2  0  0  0  0  1  0]
 [ 0  2  0 12  0  0  0  2  0  0]
 [11  3  0  2  0  0  0  1  0  0]
 [ 0  3  0 17  0  0  0  0  0  0]
 [ 0 10  0  2  0  0  0  0  3  0]
 [ 0  6  0  3  0  0  0 11  0  0]
 [ 2  7  0  5  0  0  0  0  8  0]
 [ 2  0  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.  0.2 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.  0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.25 1.5 ]
 [0.   0.   0.5  0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1.  0.]
 [-1. -1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.]]
confusion matrix
[[11  0  3  1  0  0  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  0  0  2  0  0  1  0]
 [ 0  0  2  8  0  4  0  2  0  0]
 [ 3  2  1  2  8  0  0  1  0  0]
 [ 0  1  2  0  0 17  0  0  0  0]
 [ 0  8  2  0  0  2  0  0  3  0]
 [ 0  3  3  1  0  2  0 11  0  0]
 [ 2  5  2  0  0  5  0  0  8  0]
 [ 0  0  0  6  1  6  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.3 0.1 0.2 0.2 0.2 0.4 0.3]
 [0.  0.  0.1 0.1 0.2 0.2 0.  0.2 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.1 0.1 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.1 0.3 0.1 0. ]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 1.  1.2 1.2]
 [0.  0.  0.4 0.6 1.6]
 [0.  0.  0.  0.6 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  0.  1.]
 [-1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  0.  1.]
 [-1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.]]
confusion matrix
[[13  0  0  1  1  0  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 3  1 16  0  0  1  0  0  1  0]
 [ 1  0  1  8  0  4  0  2  0  0]
 [ 0  6  1  0  9  0  0  1  0  0]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 1  8  1  0  0  2  0  0  3  0]
 [ 1  3  2  1  0  2  0 11  0  0]
 [ 2  5  3  0  0  4  0  0  8  0]
 [ 1  1  0  5  0  6  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.2 0.2 0.3 0.3 0.5 0.3]
 [0.  0.  0.1 0.2 0.2 0.3 0.  0.2 0.2 0.2]
 [0.  0.  0.  0.3 0.2 0.2 0.1 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.2 0.4 0.2 0. ]
 [0.  0.  0.  0.  0.  0.4 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.83 1.   1.   0.33]
 [0.   0.   0.33 0.5  1.33 0.83]
 [0.   0.   0.   0.5  1.5  0.83]
 [0.   0.   0.   0.   1.67 0.67]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  0.  1.  1.]
 [-1.  1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  0. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  0.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.]]
confusion matrix
[[11  2  0  0  1  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 3  1 16  1  0  0  0  0  1  0]
 [ 1  0  1 11  0  1  0  2  0  0]
 [ 0  2  3  0 10  0  0  0  0  2]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 1  6  3  0  0  2  0  0  3  0]
 [ 0  6  0  3  0  0  0 11  0  0]
 [ 2  5  3  0  0  4  0  0  8  0]
 [ 1  0  0  2  0  6  0  0  0  4]]
row HD
[[0.  0.4 0.2 0.4 0.2 0.2 0.4 0.4 0.6 0.3]
 [0.  0.  0.2 0.2 0.3 0.4 0.  0.2 0.2 0.3]
 [0.  0.  0.  0.4 0.2 0.2 0.2 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.5 0.2 0.2 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.71 0.86 0.86 0.29 0.71]
 [0.   0.   0.29 0.43 1.14 0.71 0.57]
 [0.   0.   0.   0.43 1.29 0.71 0.57]
 [0.   0.   0.   0.   1.43 0.57 1.  ]
 [0.   0.   0.   0.   0.   1.   0.71]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0.]
 [-1.  1.  1.  1. -1. -1. -1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.]
 [-1. -1.  1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.]]
confusion matrix
[[11  0  0  2  1  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 3  0 16  2  0  0  0  0  1  0]
 [ 1  0  1 11  0  1  0  2  0  0]
 [ 0  2  3  0 10  0  0  0  0  2]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 1  6  3  0  0  2  0  0  3  0]
 [ 0  3  0  4  0  0  2 11  0  0]
 [ 2  4  3  1  0  4  0  0  8  0]
 [ 1  0  0  2  0  6  0  0  0  4]]
row HD
[[0.  0.5 0.2 0.4 0.3 0.2 0.4 0.4 0.7 0.4]
 [0.  0.  0.3 0.3 0.3 0.5 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.4 0.3 0.2 0.2 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.6 0.2 0.2 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.62 0.75 0.75 0.25 0.62 1.12]
 [0.   0.   0.25 0.38 1.   0.62 0.5  1.  ]
 [0.   0.   0.   0.38 1.12 0.62 0.5  1.12]
 [0.   0.   0.   0.   1.25 0.5  0.88 1.  ]
 [0.   0.   0.   0.   0.   0.88 0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.88 1.25]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.]]
confusion matrix
[[11  0  0  2  1  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  1 17  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  2  1  0 10  0  1  1  0  2]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 1  6  1  0  0  2  2  0  3  0]
 [ 0  3  0  4  0  0  2 11  0  0]
 [ 2  4  2  1  0  4  1  0  8  0]
 [ 1  0  0  2  0  6  0  0  0  4]]
row HD
[[0.  0.5 0.3 0.4 0.3 0.2 0.4 0.4 0.7 0.4]
 [0.  0.  0.4 0.3 0.3 0.5 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.5 0.4 0.3 0.3 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.2 0.2 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.56 0.67 0.67 0.22 0.56 1.   0.56]
 [0.   0.   0.22 0.33 0.89 0.56 0.44 0.89 0.22]
 [0.   0.   0.   0.33 1.   0.56 0.44 1.   0.22]
 [0.   0.   0.   0.   1.11 0.44 0.78 0.89 0.33]
 [0.   0.   0.   0.   0.   0.78 0.56 0.44 1.  ]
 [0.   0.   0.   0.   0.   0.   0.78 1.11 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0.]]
confusion matrix
[[11  0  0  2  1  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  1  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  2  1  0 10  0  1  1  0  2]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 0  6  1  0  0  3  2  0  3  0]
 [ 0  5  0  4  0  0  0 11  0  0]
 [ 2  5  2  0  0  4  1  0  8  0]
 [ 0  0  0  2  0  7  0  0  0  4]]
row HD
[[0.  0.6 0.4 0.5 0.4 0.3 0.5 0.5 0.8 0.5]
 [0.  0.  0.4 0.4 0.4 0.6 0.2 0.4 0.2 0.5]
 [0.  0.  0.  0.6 0.5 0.4 0.4 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.6 0.2 0.2 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.3 0.5 0.6 0.6 0.2 0.5 0.9 0.5 0.8]
 [0.  0.  0.2 0.3 0.8 0.5 0.4 0.8 0.2 0.8]
 [0.  0.  0.  0.3 0.9 0.5 0.4 0.9 0.2 0.9]
 [0.  0.  0.  0.  1.  0.4 0.7 0.8 0.3 1. ]
 [0.  0.  0.  0.  0.  0.7 0.5 0.4 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 1.  0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.]]
confusion matrix
[[11  0  0  0  1  0  2  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  1  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  2  1  0 10  0  1  1  0  2]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 0  6  1  0  0  3  2  0  3  0]
 [ 0  5  0  3  0  0  1 11  0  0]
 [ 2  5  2  0  0  4  1  0  8  0]
 [ 1  0  0  2  0  6  0  0  0  4]]
row HD
[[0.  0.6 0.4 0.6 0.4 0.4 0.5 0.6 0.9 0.6]
 [0.  0.  0.4 0.5 0.4 0.7 0.2 0.5 0.3 0.6]
 [0.  0.  0.  0.7 0.5 0.5 0.4 0.5 0.7 0.7]
 [0.  0.  0.  0.  0.7 0.2 0.3 0.5 0.5 0.2]
 [0.  0.  0.  0.  0.  0.6 0.4 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.7 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.45 0.55 0.55 0.18 0.45 0.82 0.45 0.73 0.55]
 [0.   0.   0.18 0.27 0.73 0.45 0.36 0.73 0.18 0.73 0.82]
 [0.   0.   0.   0.27 0.82 0.45 0.36 0.82 0.18 0.82 0.82]
 [0.   0.   0.   0.   0.91 0.36 0.64 0.73 0.27 0.91 0.73]
 [0.   0.   0.   0.   0.   0.64 0.45 0.36 0.82 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.64 0.91 0.45 0.91 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.55 0.64 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.36 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0. -1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0. -1.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.  1.]]
confusion matrix
[[12  0  0  2  0  0  0  0  2  1]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 17  1  0  0  1  0  1  0]
 [ 0  0  2  9  0  3  0  2  0  0]
 [ 1  1  1  0  9  2  2  1  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 0  5  0  4  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  6  0  8  0]
 [ 0  0  0  2  0 10  0  0  0  1]]
row HD
[[0.  0.6 0.5 0.6 0.5 0.5 0.6 0.6 1.  0.6]
 [0.  0.  0.5 0.5 0.5 0.8 0.3 0.5 0.4 0.6]
 [0.  0.  0.  0.8 0.5 0.5 0.4 0.6 0.7 0.8]
 [0.  0.  0.  0.  0.8 0.3 0.4 0.5 0.6 0.2]
 [0.  0.  0.  0.  0.  0.6 0.4 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.42 0.5  0.5  0.17 0.42 0.75 0.42 0.67 0.5  0.42]
 [0.   0.   0.17 0.25 0.67 0.42 0.33 0.67 0.17 0.67 0.75 0.33]
 [0.   0.   0.   0.25 0.75 0.42 0.33 0.75 0.17 0.75 0.75 0.5 ]
 [0.   0.   0.   0.   0.83 0.33 0.58 0.67 0.25 0.83 0.67 0.42]
 [0.   0.   0.   0.   0.   0.58 0.42 0.33 0.75 0.5  0.5  0.67]
 [0.   0.   0.   0.   0.   0.   0.58 0.83 0.42 0.83 0.42 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.58 0.5  0.58 0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.33 0.58 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 0. -1.  0.  0. -1.  0.  0.  0. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0. -1.  1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0. -1.  1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1. -1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0. -1.  1.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.  1.  1.]]
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 17  1  0  0  1  0  1  0]
 [ 0  0  2  9  0  3  0  2  0  0]
 [ 1  1  1  0  9  2  2  1  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  6  0  8  0]
 [ 0  0  0  2  1  9  0  0  0  1]]
row HD
[[0.  0.6 0.5 0.7 0.5 0.6 0.6 0.6 1.1 0.6]
 [0.  0.  0.5 0.6 0.5 0.9 0.3 0.5 0.5 0.6]
 [0.  0.  0.  0.9 0.5 0.6 0.4 0.6 0.8 0.8]
 [0.  0.  0.  0.  0.9 0.3 0.5 0.6 0.7 0.3]
 [0.  0.  0.  0.  0.  0.7 0.4 0.7 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.38 0.46 0.46 0.15 0.38 0.69 0.38 0.62 0.46 0.38 0.23]
 [0.   0.   0.15 0.23 0.62 0.38 0.31 0.62 0.15 0.62 0.69 0.31 0.15]
 [0.   0.   0.   0.23 0.69 0.38 0.31 0.69 0.15 0.69 0.69 0.46 0.31]
 [0.   0.   0.   0.   0.77 0.31 0.54 0.62 0.23 0.77 0.62 0.38 0.38]
 [0.   0.   0.   0.   0.   0.54 0.38 0.31 0.69 0.46 0.46 0.62 0.54]
 [0.   0.   0.   0.   0.   0.   0.54 0.77 0.38 0.77 0.38 0.54 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.54 0.46 0.54 0.69 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.31 0.54 0.54 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.62 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.54 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0. -1.  1.  0. -1.  0. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0. -1.  1.  1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.  1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0. -1.  1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1. -1.  0. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0. -1.  1.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.  1.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.  1.  1.  1.]]
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 16  1  0  1  1  0  1  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  1  0  0 11  2  2  1  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  6  0  8  0]
 [ 1  0  0  2  0  7  0  0  0  3]]
row HD
[[0.  0.6 0.5 0.7 0.6 0.7 0.7 0.7 1.1 0.6]
 [0.  0.  0.5 0.6 0.6 1.  0.4 0.6 0.5 0.6]
 [0.  0.  0.  0.9 0.6 0.7 0.5 0.7 0.8 0.8]
 [0.  0.  0.  0.  1.  0.4 0.6 0.7 0.7 0.3]
 [0.  0.  0.  0.  0.  0.7 0.5 0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.36 0.43 0.43 0.14 0.36 0.64 0.36 0.57 0.43 0.36 0.21 0.43]
 [0.   0.   0.14 0.21 0.57 0.36 0.29 0.57 0.14 0.57 0.64 0.29 0.14 0.36]
 [0.   0.   0.   0.21 0.64 0.36 0.29 0.64 0.14 0.64 0.64 0.43 0.29 0.21]
 [0.   0.   0.   0.   0.71 0.29 0.5  0.57 0.21 0.71 0.57 0.36 0.36 0.29]
 [0.   0.   0.   0.   0.   0.5  0.36 0.29 0.64 0.43 0.43 0.57 0.5  0.71]
 [0.   0.   0.   0.   0.   0.   0.5  0.71 0.36 0.71 0.36 0.5  0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.43 0.5  0.64 0.43 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.29 0.5  0.5  0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.29 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.5  0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.64 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  0. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.  1.  0.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1. -1.  0. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0. -1.  1.  0.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.  1.  1.  1.  1.]]
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 17  1  0  0  1  0  1  0]
 [ 0  0  2  9  0  3  0  2  0  0]
 [ 0  1  1  0 10  2  2  1  0  0]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 0  7  1  0  0  2  2  0  3  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  4  2  0  0  4  2  0  8  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.7 0.5 0.8 0.7 0.8 0.8 0.7 1.2 0.6]
 [0.  0.  0.6 0.6 0.6 1.  0.5 0.7 0.5 0.7]
 [0.  0.  0.  1.  0.7 0.8 0.6 0.7 0.9 0.8]
 [0.  0.  0.  0.  1.  0.4 0.7 0.8 0.7 0.4]
 [0.  0.  0.  0.  0.  0.7 0.6 0.8 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.8 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.33 0.4  0.4  0.13 0.33 0.6  0.33 0.53 0.4  0.33 0.2  0.4
  0.27]
 [0.   0.   0.13 0.2  0.53 0.33 0.27 0.53 0.13 0.53 0.6  0.27 0.13 0.33
  0.33]
 [0.   0.   0.   0.2  0.6  0.33 0.27 0.6  0.13 0.6  0.6  0.4  0.27 0.2
  0.47]
 [0.   0.   0.   0.   0.67 0.27 0.47 0.53 0.2  0.67 0.53 0.33 0.33 0.27
  0.4 ]
 [0.   0.   0.   0.   0.   0.47 0.33 0.27 0.6  0.4  0.4  0.53 0.47 0.67
  0.47]
 [0.   0.   0.   0.   0.   0.   0.47 0.67 0.33 0.67 0.33 0.47 0.33 0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.4  0.47 0.6  0.4  0.33 0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.27 0.47 0.47 0.4  0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.53 0.27 0.27 0.33
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.4  0.53
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.6  0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.  0.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0. -1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.  1.  0.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1. -1.  0. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.  1.  1.  1.  1. -1.]]
confusion matrix
[[12  3  0  0  0  0  0  0  2  0]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 17  1  0  0  1  0  1  0]
 [ 0  0  2  9  0  3  0  2  0  0]
 [ 0  1  1  0 10  2  2  1  0  0]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 0  7  1  0  0  2  2  0  3  0]
 [ 1  3  0  3  0  0  2 11  0  0]
 [ 2  4  2  0  0  4  2  0  8  0]
 [ 1  0  0  2  1  7  0  0  0  2]]
row HD
[[0.  0.8 0.6 0.9 0.8 0.9 0.9 0.7 1.3 0.7]
 [0.  0.  0.6 0.6 0.6 1.  0.6 0.8 0.5 0.7]
 [0.  0.  0.  1.  0.7 0.8 0.7 0.8 0.9 0.8]
 [0.  0.  0.  0.  1.  0.4 0.8 0.9 0.7 0.4]
 [0.  0.  0.  0.  0.  0.7 0.7 0.9 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.9 0.9 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.31 0.38 0.38 0.12 0.31 0.56 0.31 0.5  0.38 0.31 0.19 0.38
  0.25 0.25]
 [0.   0.   0.12 0.19 0.5  0.31 0.25 0.5  0.12 0.5  0.56 0.25 0.12 0.31
  0.31 0.44]
 [0.   0.   0.   0.19 0.56 0.31 0.25 0.56 0.12 0.56 0.56 0.38 0.25 0.19
  0.44 0.56]
 [0.   0.   0.   0.   0.62 0.25 0.44 0.5  0.19 0.62 0.5  0.31 0.31 0.25
  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.44 0.31 0.25 0.56 0.38 0.38 0.5  0.44 0.62
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.44 0.62 0.31 0.62 0.31 0.44 0.31 0.38
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.38 0.44 0.56 0.38 0.31 0.38
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.25 0.44 0.44 0.38 0.44
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.25 0.25 0.31
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.38 0.5
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.56 0.44
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  0.  1.  1.  0. -1. -1.  0. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1. -1. -1.  0.  1.  0. -1.  1.  0.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  0. -1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  0. -1.  1.  0.  1.  0. -1. -1.  0. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.  1.  0.  0. -1.  1.  0.  0.  0.  1.]
 [ 1.  1. -1.  1.  0.  1. -1.  0.  1.  0.  1.  1.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.  0. -1.  1.  1.  1.  1. -1.  1.]]
confusion matrix
[[12  3  0  0  0  0  0  0  2  0]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 17  1  0  0  1  0  1  0]
 [ 0  0  2  9  0  3  0  2  0  0]
 [ 0  1  1  0 10  2  2  1  0  0]
 [ 2  1  0  0  0 17  0  0  0  0]
 [ 0  7  1  0  0  2  2  0  3  0]
 [ 1  3  0  3  0  0  2 11  0  0]
 [ 2  4  2  0  0  4  2  0  8  0]
 [ 1  0  0  2  1  7  0  0  0  2]]
row HD
[[0.  0.8 0.6 1.  0.8 0.9 0.9 0.8 1.3 0.7]
 [0.  0.  0.6 0.7 0.6 1.  0.6 0.9 0.5 0.7]
 [0.  0.  0.  1.1 0.7 0.8 0.7 0.9 0.9 0.8]
 [0.  0.  0.  0.  1.1 0.5 0.9 0.9 0.8 0.5]
 [0.  0.  0.  0.  0.  0.7 0.7 1.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.9 1.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.29 0.35 0.35 0.12 0.29 0.53 0.29 0.47 0.35 0.29 0.18 0.35
  0.24 0.24 0.24]
 [0.   0.   0.12 0.18 0.47 0.29 0.24 0.47 0.12 0.47 0.53 0.24 0.12 0.29
  0.29 0.41 0.18]
 [0.   0.   0.   0.18 0.53 0.29 0.24 0.53 0.12 0.53 0.53 0.35 0.24 0.18
  0.41 0.53 0.06]
 [0.   0.   0.   0.   0.59 0.24 0.41 0.47 0.18 0.59 0.47 0.29 0.29 0.24
  0.35 0.47 0.24]
 [0.   0.   0.   0.   0.   0.41 0.29 0.24 0.53 0.35 0.35 0.47 0.41 0.59
  0.41 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.41 0.59 0.29 0.59 0.29 0.41 0.29 0.35
  0.35 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.41 0.35 0.41 0.53 0.35 0.29 0.35
  0.24 0.35 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.24 0.41 0.41 0.35 0.41
  0.29 0.35 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.24 0.24 0.29
  0.41 0.41 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.41 0.35 0.47
  0.35 0.29 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.41
  0.35 0.29 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.24
  0.24 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.29 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.824, 0.894, 0.936, 0.915, 0.651, 0.862, 0.835, 0.667, 0.957, 0.77, 0.703, 0.824, 0.776, 0.85, 0.798, 0.861, 0.91]
cutting matrix
[[ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  0.  0.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1. -1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.  1.]]
cutting matrix's confusion matrix
[[15  0  0  0  0  0  0  0  2  0]
 [ 0 23  0  1  1  0  1  0  0  0]
 [ 1  1 17  1  0  0  0  0  2  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  0  0 12  2  1  1  0  0]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 0  0  1  0  0  2  8  0  3  1]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 1  0  0  2  0 10  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:05:06
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
confusion matrix
[[11  5  1  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 1  3 18  0  0  0  0  0  0  0]
 [ 1 11  4  0  0  0  0  0  0  0]
 [ 2 13  2  0  0  0  0  0  0  0]
 [ 2  1 17  0  0  0  0  0  0  0]
 [ 1 11  3  0  0  0  0  0  0  0]
 [ 2 16  2  0  0  0  0  0  0  0]
 [ 6 13  3  0  0  0  0  0  0  0]
 [ 8  3  2  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  0.]
 [-1. -1.]]
confusion matrix
[[10  5  1  0  0  0  0  0  0  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 1  2 18  1  0  0  0  0  0  0]
 [ 1  0  4 11  0  0  0  0  0  0]
 [ 0  0  2  1 12  0  0  0  0  2]
 [ 2  1 17  0  0  0  0  0  0  0]
 [ 1  9  3  2  0  0  0  0  0  0]
 [ 2  3  2 13  0  0  0  0  0  0]
 [ 6 12  3  1  0  0  0  0  0  0]
 [ 6  0  2  2  1  0  0  0  0  2]]
row HD
[[0.  0.2 0.2 0.1 0.2 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.1 0.1 0.1 0.1 0.1 0.1 0.  0.2]
 [0.  0.  0.  0.2 0.2 0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 0.  0. -1.]
 [ 1.  0. -1.]
 [ 0.  1.  0.]
 [ 0. -1.  1.]
 [ 1.  0. -1.]
 [ 0.  1.  1.]
 [ 0.  1. -1.]
 [ 0.  0.  1.]
 [-1. -1.  0.]]
confusion matrix
[[10  3  1  0  0  0  0  0  2  1]
 [ 0 22  0  1  0  0  3  0  0  0]
 [ 1  1 18  0  0  0  0  1  1  0]
 [ 1  0  4  8  0  0  0  3  0  0]
 [ 0  3  2  0  9  0  1  0  0  2]
 [ 2  0 17  0  0  0  0  0  1  0]
 [ 1  0  2  0  0  0  2  0 10  0]
 [ 2  3  2  1  0  0  0 12  0  0]
 [ 6  0  2  0  0  0  1  0 13  0]
 [ 6  0  2  2  1  0  0  0  0  2]]
row HD
[[0.  0.2 0.2 0.2 0.3 0.2 0.2 0.1 0.3 0.2]
 [0.  0.  0.1 0.2 0.2 0.1 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.3 0.3 0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.67]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1.  0. -1.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 0.  0. -1. -1.]
 [ 1.  0. -1.  0.]
 [ 0.  1.  0.  1.]
 [ 0. -1.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 0.  1.  1.  1.]
 [ 0.  1. -1. -1.]
 [ 0.  0.  1.  0.]
 [-1. -1.  0.  1.]]
confusion matrix
[[10  0  0  0  0  4  0  0  2  1]
 [ 0 21  0  1  0  1  0  0  3  0]
 [ 2  1 17  0  0  1  0  0  1  0]
 [ 2  0  1  8  0  3  0  2  0  0]
 [ 0  0  2  0  9  3  0  0  1  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  0  0  0  2  2  0 10  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 6  0  1  0  0  1  1  0 13  0]
 [ 6  0  0  2  3  0  0  0  0  2]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.2 0.2 0.2 0.4 0.2]
 [0.  0.  0.2 0.3 0.3 0.2 0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.4 0.4 0.1 0.4 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.   2.  ]
 [0.   0.   2.25 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1.  0.  1. -1.  1. -1.  1.  0.]
select_j_column
[-1. -1. -1.  0.  1. -1.  1. -1.  1.  0.]
most_cplx_inx
9
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 0.  0. -1. -1.]
 [ 1.  0. -1.  0.]
 [ 0.  1.  0.  1.]
 [ 0. -1.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 0.  1.  1.  1.]
 [ 0.  1. -1. -1.]
 [ 0.  0.  1.  0.]
 [-1. -1.  0.  1.]]
confusion matrix
[[10  0  0  0  0  4  0  0  2  1]
 [ 0 21  0  1  0  1  0  0  3  0]
 [ 2  1 17  0  0  1  0  0  1  0]
 [ 2  0  1  8  0  3  0  2  0  0]
 [ 0  0  2  0  9  3  0  0  1  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  0  0  0  2  2  0 10  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 6  0  1  0  0  1  1  0 13  0]
 [ 6  0  0  2  3  0  0  0  0  2]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.2 0.2 0.2 0.4 0.2]
 [0.  0.  0.2 0.3 0.3 0.2 0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.4 0.4 0.1 0.4 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.   2.  ]
 [0.   0.   2.25 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
6
new_column
None


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 0.  0. -1. -1.]
 [ 1.  0. -1.  0.]
 [ 0.  1.  0.  1.]
 [ 0. -1.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 0.  1.  1.  1.]
 [ 0.  1. -1. -1.]
 [ 0.  0.  1.  0.]
 [-1. -1.  0.  1.]]
confusion matrix
[[10  0  0  0  0  4  0  0  2  1]
 [ 0 21  0  1  0  1  0  0  3  0]
 [ 2  1 17  0  0  1  0  0  1  0]
 [ 2  0  1  8  0  3  0  2  0  0]
 [ 0  0  2  0  9  3  0  0  1  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  0  0  0  2  2  0 10  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 6  0  1  0  0  1  1  0 13  0]
 [ 6  0  0  2  3  0  0  0  0  2]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.2 0.2 0.2 0.4 0.2]
 [0.  0.  0.2 0.3 0.3 0.2 0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.4 0.4 0.1 0.4 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.   2.  ]
 [0.   0.   2.25 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [ 0.  0. -1. -1.  0.]
 [ 1.  0. -1.  0. -1.]
 [ 0.  1.  0.  1.  1.]
 [ 0. -1.  1.  1.  0.]
 [ 1.  0. -1.  1.  0.]
 [ 0.  1.  1.  1.  1.]
 [ 0.  1. -1. -1. -1.]
 [ 0.  0.  1.  0.  0.]
 [-1. -1.  0.  1.  1.]]
confusion matrix
[[10  0  1  0  1  3  0  0  2  0]
 [ 0 21  0  1  0  1  0  0  3  0]
 [ 1  2 17  0  0  1  0  0  1  0]
 [ 2  2  1  8  0  3  0  0  0  0]
 [ 0  0  3  0  9  2  0  0  1  2]
 [ 2  0  3  0  0 14  0  0  1  0]
 [ 1  0  0  0  0  2  0  0 12  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 5  1  1  0  0  1  0  0 14  0]
 [ 6  0  2  2  2  0  0  0  0  1]]
row HD
[[0.  0.4 0.3 0.3 0.4 0.3 0.3 0.2 0.5 0.3]
 [0.  0.  0.3 0.4 0.3 0.2 0.4 0.2 0.2 0.5]
 [0.  0.  0.  0.5 0.5 0.2 0.5 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.3 0.4 0.1 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.6 1.6 1.2]
 [0.  0.  1.8 1.  1. ]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.75, 0.612, 0.824, 0.819, 0.563]
cutting matrix
[[-1.  1. -1.  1.]
 [ 0.  0. -1. -1.]
 [ 1.  0. -1.  0.]
 [ 0.  1.  0.  1.]
 [ 0. -1.  1.  1.]
 [ 1.  0. -1.  1.]
 [ 0.  1.  1.  1.]
 [ 0.  1. -1. -1.]
 [ 0.  0.  1.  0.]
 [-1. -1.  0.  1.]]
cutting matrix's confusion matrix
[[10  0  0  0  0  4  0  0  2  1]
 [ 0 21  0  1  0  1  0  0  3  0]
 [ 2  1 17  0  0  1  0  0  1  0]
 [ 2  0  1  8  0  3  0  2  0  0]
 [ 0  0  2  0  9  3  0  0  1  2]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  0  0  0  2  2  0 10  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 6  0  1  0  0  1  1  0 13  0]
 [ 6  0  0  2  3  0  0  0  0  2]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:05:10
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.]
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.6]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.6]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.625, 0.804, 0.857]
cutting matrix
[[-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]


SVM classifier
Time: 2019-01-05 23:05:11
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  0.]
confusion matrix
[[21  3  0  1  0]
 [11  2  0  1  0]
 [ 3  3  0  3  0]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0. -1.]
 [ 0. -1.]
 [-1.  0.]
 [ 0.  0.]]
confusion matrix
[[23  1  0  1  0]
 [10  3  0  1  0]
 [ 3  5  0  1  0]
 [ 1  3  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [ 0. -1. -1.]
 [ 0. -1.  0.]
 [-1.  0.  0.]
 [ 0.  0.  1.]]
confusion matrix
[[23  1  0  1  0]
 [10  3  0  1  0]
 [ 3  3  2  1  0]
 [ 1  3  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.2 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.]
 [ 0. -1. -1.]
 [ 0. -1.  0.]
 [-1.  0.  0.]
 [ 0.  0.  1.]]
confusion matrix
[[23  1  0  1  0]
 [10  3  0  1  0]
 [ 3  3  2  1  0]
 [ 1  3  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.2 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  0.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  0.]
 [ 0. -1. -1.  0.]
 [ 0. -1.  0. -1.]
 [-1.  0.  0. -1.]
 [ 0.  0.  1.  1.]]
confusion matrix
[[23  1  0  1  0]
 [10  3  0  1  0]
 [ 2  3  3  1  0]
 [ 1  3  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.8 0.8 0.8]
 [0.  0.  0.4 0.8 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   0.75]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  0. -1.]
 [ 0. -1. -1.  0.  1.]
 [ 0. -1.  0. -1. -1.]
 [-1.  0.  0. -1. -1.]
 [ 0.  0.  1.  1.  1.]]
confusion matrix
[[23  0  1  1  0]
 [10  0  3  1  0]
 [ 2  0  6  1  0]
 [ 1  0  3  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.8 0.8 1. ]
 [0.  0.  0.6 1.  0.6]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.6 0.8]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[-1. -1.  0.  0.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1.  0. -1.  1.]
 [ 0. -1. -1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.]
 [-1.  0.  0. -1. -1. -1.]
 [ 0.  0.  1.  1.  1.  0.]]
confusion matrix
[[25  0  0  0  0]
 [12  1  0  1  0]
 [ 3  1  4  1  0]
 [ 2  0  2  1  0]
 [ 1  1  1  0  0]]
row HD
[[0.  0.6 1.  1.  1.2]
 [0.  0.  0.8 1.2 0.8]
 [0.  0.  0.  0.4 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.67 0.5  0.67 0.33]
 [0.   0.   0.5  0.67 0.67 0.33]
 [0.   0.   0.   0.67 0.5  0.83]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1. -1.  0.  0.  1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1.  0. -1.  1.  1.]
 [ 0. -1. -1.  0.  1.  1. -1.]
 [ 0. -1.  0. -1. -1. -1.  0.]
 [-1.  0.  0. -1. -1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 4  0  2  3  0]
 [ 2  0  1  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 1.2 1.  1.2]
 [0.  0.  1.  1.4 1. ]
 [0.  0.  0.  0.6 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.57 0.43 0.57 0.29 0.43]
 [0.   0.   0.43 0.57 0.57 0.29 0.43]
 [0.   0.   0.   0.57 0.43 0.71 0.29]
 [0.   0.   0.   0.   0.29 0.43 0.57]
 [0.   0.   0.   0.   0.   0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  0.  0.  1.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1. -1.  0. -1.  1.  1. -1.]
 [ 0. -1. -1.  0.  1.  1. -1. -1.]
 [ 0. -1.  0. -1. -1. -1.  0. -1.]
 [-1.  0.  0. -1. -1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 4  0  2  3  0]
 [ 2  0  1  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 1.2 1.  1.4]
 [0.  0.  1.  1.4 1.2]
 [0.  0.  0.  0.6 1.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.5  0.38 0.5  0.25 0.38 0.5 ]
 [0.   0.   0.38 0.5  0.5  0.25 0.38 0.38]
 [0.   0.   0.   0.5  0.38 0.62 0.25 0.25]
 [0.   0.   0.   0.   0.25 0.38 0.5  0.25]
 [0.   0.   0.   0.   0.   0.25 0.5  0.12]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.767, 0.667, 0.929, 0.294, 0.696, 0.849, 0.702, 0.946]
cutting matrix
[[ 1. -1.  0.  1. -1.]
 [-1. -1.  0.  1. -1.]
 [-1.  0. -1. -1. -1.]
 [ 0.  0. -1. -1. -1.]
 [ 0.  1.  1.  0.  1.]]
cutting matrix's confusion matrix
[[24  1  0  0  0]
 [10  3  0  1  0]
 [ 3  2  3  1  0]
 [ 1  1  2  1  0]
 [ 0  1  1  1  0]]


SVM classifier
Time: 2019-01-05 23:05:12
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.17 0.17 0.17]
 [0.   0.   0.17 0.   0.33 0.  ]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.33 0.33 0.17 0.33 0.17]
 [0.   0.   0.33 0.17 0.33 0.17]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.5  0.  ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1.  1. -1.  0.]
 [ 1. -1.  1.  0.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.5  0.5  0.17 0.5  0.17]
 [0.   0.   0.33 0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.67 0.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  1.25]
 [0.   0.   0.5  1.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1.  1. -1.  0.]
 [ 1. -1.  1.  0.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.5  0.5  0.17 0.5  0.17]
 [0.   0.   0.33 0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.67 0.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  1.25]
 [0.   0.   0.5  1.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  0.]
 [ 1.  1. -1.  0.  0.]
 [ 1. -1.  1.  0.  0.]
 [ 1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.5  0.5  0.33 0.67 0.33]
 [0.   0.   0.33 0.5  0.67 0.5 ]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.83 0.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.4 1.  1.2]
 [0.  0.  0.4 1.2 1.2]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.985, 1.0, 0.97, 0.932, 0.889]
cutting matrix
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  7  0  0]]


SVM classifier
Time: 2019-01-05 23:05:13
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0.  0.  0.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  1.  0. -1.  1.  1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  1.]
 [-1.  0.]
 [ 0. -1.]
 [ 0.  1.]
 [ 0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.33 0.33 0.33]
 [0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0. -1.  1. -1.  0.]
select_j_column
[-1.  0.  0. -1.  0.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0. -1.]
 [ 0.  1.  0.]
 [-1.  0. -1.]
 [ 0. -1.  0.]
 [ 0.  1. -1.]
 [ 0.  1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.5  0.17 0.5  0.33 0.5 ]
 [0.   0.   0.5  0.17 0.17 0.17]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.923, 0.957]
cutting matrix
[[ 1.  0. -1.]
 [ 0.  1.  0.]
 [-1.  0. -1.]
 [ 0. -1.  0.]
 [ 0.  1. -1.]
 [ 0.  1.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-05 23:05:14
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 3  0 23  0  0  0  0  0  0  0]
 [ 5  0 12  0  0  0  0  0  0  0]
 [ 2  0 21  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [ 3  0 11  0  0  0  0  0  0  0]
 [ 1  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  0.]
 [ 1.  0.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  0  4  1  0  0  0  0]
 [ 1  2 20  0  3  0  0  0  0  0]
 [ 0  5  1  0 11  0  0  0  0  0]
 [ 0  0  0  0 21  2  0  0  0  0]
 [ 0  0  2  0 14  3  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0 14  0  0  1  2  0  0  0  0]
 [ 2  0  9  0  2  1  0  0  0  0]
 [ 0  0  0  0 12  1  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.2 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.2 0.2 0.1 0.1 0.2 0.  0.1 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1.  0.]
 [ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 1. -1.  0.]
 [-1.  0.  1.]
 [ 1.  0.  0.]
 [-1. -1.  0.]
 [ 1. -1.  0.]
 [ 1. -1. -1.]]
confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0 17  0  0  4  1  0  0  0  0]
 [ 1  2 20  0  3  0  0  0  0  0]
 [ 0  5  1  0 11  0  0  0  0  0]
 [ 0  0  0  0 21  2  0  0  0  0]
 [ 0  0  2  0 14  3  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0 14  0  0  1  2  0  0  0  0]
 [ 2  0  9  0  2  1  0  0  0  0]
 [ 0  0  0  0 12  1  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.3 0.3 0.1 0.3 0.2 0.3 0.3]
 [0.  0.  0.2 0.2 0.1 0.2 0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 3.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1. -1.  0.  1.]
 [ 1.  0.  0.  1.]
 [ 1.  0.  0. -1.]
 [ 1. -1.  0.  1.]
 [-1.  0.  1. -1.]
 [ 1.  0.  0. -1.]
 [-1. -1.  0.  1.]
 [ 1. -1.  0.  1.]
 [ 1. -1. -1.  1.]]
confusion matrix
[[13  4  1  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 20  2  1  0  0  0  0  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  2  1 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1  9  0  2  0  0  0  0  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.3 0.4 0.1 0.3 0.3 0.4 0.4]
 [0.  0.  0.2 0.3 0.1 0.3 0.3 0.  0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.3 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.5  1.  ]
 [0.   0.   1.25 2.5 ]
 [0.   0.   0.   2.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  0.]
 [-1. -1.  0.  1.  1.]
 [ 1.  0.  0.  1.  0.]
 [ 1.  0.  0. -1.  0.]
 [ 1. -1.  0.  1. -1.]
 [-1.  0.  1. -1.  1.]
 [ 1.  0.  0. -1.  0.]
 [-1. -1.  0.  1.  0.]
 [ 1. -1.  0.  1. -1.]
 [ 1. -1. -1.  1. -1.]]
confusion matrix
[[13  1  1  0  0  0  0  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  2 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  0  2  0  0]
 [ 0  0  2  1 13  0  0  3  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2  0  9  0  2  0  0  1  0  0]
 [ 0  0  0  3  9  0  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.3 0.5 0.2 0.3 0.3 0.5 0.5]
 [0.  0.  0.3 0.4 0.2 0.3 0.4 0.1 0.2 0.3]
 [0.  0.  0.  0.1 0.2 0.4 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.5 0.3 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 2.  0.8 2. ]
 [0.  0.  1.  2.  0.8]
 [0.  0.  0.  2.  0.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  0. -1.]
 [-1. -1.  0.  1.  1. -1.]
 [ 1.  0.  0.  1.  0. -1.]
 [ 1.  0.  0. -1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1.]
 [-1.  0.  1. -1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.]
 [-1. -1.  0.  1.  0. -1.]
 [ 1. -1.  0.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.]]
confusion matrix
[[13  1  0  0  1  0  0  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  2 17  2  3  0  0  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  2  0  0  3  0 13]
 [ 2  0  0  0 16  0  0  0  0  1]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2  0  0  0  9  0  0  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.4 0.4 0.4 0.6 0.2 0.4 0.3 0.6 0.5]
 [0.  0.  0.3 0.5 0.3 0.3 0.5 0.1 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.4 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.6 0.3 0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67 0.67 1.67 0.33]
 [0.   0.   0.83 1.67 0.67 1.17]
 [0.   0.   0.   1.67 0.67 1.5 ]
 [0.   0.   0.   0.   1.5  1.  ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.  0. -1. -1.]
 [-1. -1.  0.  1.  1. -1.  1.]
 [ 1.  0.  0.  1.  0. -1.  1.]
 [ 1.  0.  0. -1.  0.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.]
 [-1.  0.  1. -1.  1. -1.  1.]
 [ 1.  0.  0. -1.  0.  1.  1.]
 [-1. -1.  0.  1.  0. -1. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1.]]
confusion matrix
[[13  4  0  0  1  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  3  0  0  0  0  1]
 [ 0  5  1 10  0  0  0  0  0  1]
 [ 0  2  0  2  0  0  0  0  0 19]
 [ 0  3  0  1  2  0  0  0  0 13]
 [ 2  0  0  0 16  0  0  0  0  1]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1  0  0  9  0  0  0  0  2]
 [ 0  1  0  3  0  0  0  0  0  9]]
row HD
[[0.  0.5 0.5 0.5 0.7 0.3 0.5 0.3 0.7 0.6]
 [0.  0.  0.3 0.5 0.3 0.3 0.5 0.2 0.3 0.3]
 [0.  0.  0.  0.2 0.3 0.4 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.  0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.6 0.3 0.4 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.43 0.57 1.43 0.29 0.29]
 [0.   0.   0.71 1.43 0.57 1.   1.29]
 [0.   0.   0.   1.43 0.57 1.29 1.29]
 [0.   0.   0.   0.   1.29 0.86 0.57]
 [0.   0.   0.   0.   0.   1.29 1.14]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1. -1.  0.  0. -1.  0.  0. -1. -1. -1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1. -1.  0. -1. -1.  0.]
 [-1. -1.  0.  1.  1. -1.  1.  1.]
 [ 1.  0.  0.  1.  0. -1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.]
 [-1.  0.  1. -1.  1. -1.  1.  1.]
 [ 1.  0.  0. -1.  0.  1.  1.  1.]
 [-1. -1.  0.  1.  0. -1. -1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  0.]
 [ 1. -1. -1.  1. -1. -1.  1.  0.]]
confusion matrix
[[13  4  0  0  1  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  3  0  0  0  0  1]
 [ 0  5  1 10  0  0  0  0  0  1]
 [ 0  2  0  2  0  0  0  0  0 19]
 [ 0  3  0  1  2  0  0  0  0 13]
 [ 2  0  0  0 16  0  0  0  0  1]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1  0  0  9  0  0  0  0  2]
 [ 0  1  0  3  0  0  0  0  0  9]]
row HD
[[0.  0.6 0.6 0.6 0.8 0.4 0.6 0.4 0.7 0.6]
 [0.  0.  0.4 0.6 0.3 0.3 0.5 0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.4 0.5 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.5 0.1 0.6 0.4 0.6]
 [0.  0.  0.  0.  0.  0.6 0.3 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 0.5  1.25 0.25 0.25 1.  ]
 [0.   0.   0.62 1.25 0.5  0.88 1.12 1.25]
 [0.   0.   0.   1.25 0.5  1.12 1.12 1.  ]
 [0.   0.   0.   0.   1.12 0.75 0.5  0.75]
 [0.   0.   0.   0.   0.   1.12 1.   0.88]
 [0.   0.   0.   0.   0.   0.   0.5  0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.798, 0.785, 0.38, 0.67, 0.429, 0.718, 0.856, 0.839]
cutting matrix
[[-1.  1.  0. -1.  0.]
 [-1.  0.  1.  1.  1.]
 [ 1.  0.  0.  1. -1.]
 [ 1.  0.  0.  1. -1.]
 [ 1.  0. -1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1.  0.  0.  1.  1.]
 [-1.  0.  0. -1.  1.]
 [ 1.  0. -1.  1.  0.]
 [ 1. -1. -1.  1.  0.]]
cutting matrix's confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0 17  4  0  0  1  0  0  0  0]
 [ 1  2 19  0  1  0  3  0  0  0]
 [ 0  5 11  0  1  0  0  0  0  0]
 [ 0  0  2  0 19  2  0  0  0  0]
 [ 0  0  1  0 13  3  2  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 0 14  1  0  0  2  0  0  0  0]
 [ 2  0  0  0  2  1  9  0  0  0]
 [ 0  0  3  0  9  1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:05:21
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 17  0  0  0]
 [ 6  0 20  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  5  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  2  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 12  0  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0.  0.]
 [-1.  0.]
 [-1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
confusion matrix
[[16  1  1  0  0  0  0  0  0  0]
 [ 1  0  0  0  4  0 17  0  0  0]
 [ 1  2 20  0  3  0  0  0  0  0]
 [ 0  0  1  0 11  0  5  0  0  0]
 [ 2  0  0  0 21  0  0  0  0  0]
 [ 3  0  2  0 14  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 2  2  0  0  1  0 12  0  0  0]
 [ 3  0  9  0  2  0  0  0  0  0]
 [ 1  0  0  0 12  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.  0.1 0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.2 0.1 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0.  1.  1.]
 [ 1.  0.  1.]
 [ 0.  0. -1.]
 [ 0. -1.  0.]
 [ 0.  0. -1.]
 [-1.  0. -1.]
 [-1.  0. -1.]
 [ 1.  0.  1.]
 [ 1.  0.  1.]]
confusion matrix
[[13  1  1  3  0  0  0  0  0  0]
 [ 0  0  0  5  0  0 17  0  0  0]
 [ 1  2 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  5  0  0  0]
 [ 0  0  0  4 19  0  0  0  0  0]
 [ 0  0  2  4 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0  2  0  3  0  0 12  0  0  0]
 [ 2  0  9  1  2  0  0  0  0  0]
 [ 0  0  0  4  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2 0.2 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.3 0.2 0.2 0.2 0.  0. ]
 [0.  0.  0.  0.  0.2 0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.  ]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0.  1.  1.]
 [ 1.  0.  1.]
 [ 0.  0. -1.]
 [ 0. -1.  0.]
 [ 0.  0. -1.]
 [-1.  0. -1.]
 [-1.  0. -1.]
 [ 1.  0.  1.]
 [ 1.  0.  1.]]
confusion matrix
[[13  1  1  3  0  0  0  0  0  0]
 [ 0  0  0  5  0  0 17  0  0  0]
 [ 1  2 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  5  0  0  0]
 [ 0  0  0  4 19  0  0  0  0  0]
 [ 0  0  2  4 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0  2  0  3  0  0 12  0  0  0]
 [ 2  0  9  1  2  0  0  0  0  0]
 [ 0  0  0  4  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2 0.2 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.3 0.2 0.2 0.2 0.  0. ]
 [0.  0.  0.  0.  0.2 0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.  ]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1.  0.  0. -1.  0.  0.  0.  0.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  1.]
 [ 0.  1.  1.  1.]
 [ 1.  0.  1. -1.]
 [ 0.  0. -1.  0.]
 [ 0. -1.  0.  1.]
 [ 0.  0. -1. -1.]
 [-1.  0. -1.  0.]
 [-1.  0. -1.  0.]
 [ 1.  0.  1.  1.]
 [ 1.  0.  1.  0.]]
confusion matrix
[[16  1  0  0  0  0  0  0  0  1]
 [ 1  0  0  0  0  4 17  0  0  0]
 [ 1  2 17  0  0  3  0  0  0  3]
 [ 0  0  1  0  0 11  5  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 14  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 2  2  0  0  0  1 12  0  0  0]
 [ 3  0  0  0  0  2  0  0  0  9]
 [ 1  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.2 0.1 0.2 0.3 0.3 0.2 0.3]
 [0.  0.  0.3 0.3 0.2 0.3 0.4 0.4 0.2 0.3]
 [0.  0.  0.  0.3 0.4 0.2 0.3 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.3 0.1 0.1 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 0.75 2.  ]
 [0.   0.   2.   1.25]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  1. -1.]
 [ 0.  1.  1.  1.  0.]
 [ 1.  0.  1. -1.  0.]
 [ 0.  0. -1.  0. -1.]
 [ 0. -1.  0.  1.  1.]
 [ 0.  0. -1. -1.  1.]
 [-1.  0. -1.  0.  0.]
 [-1.  0. -1.  0.  1.]
 [ 1.  0.  1.  1.  1.]
 [ 1.  0.  1.  0.  0.]]
confusion matrix
[[13  1  0  0  3  0  0  0  0  1]
 [ 0  0  0  0  1  4  0 17  0  0]
 [ 1  2 17  0  0  3  0  0  0  3]
 [ 0  0  1  0  0 11  0  5  0  0]
 [ 0  0  0  0  2 21  0  0  0  0]
 [ 0  0  0  0  3 14  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 0  2  0  0  2  1  0 12  0  0]
 [ 2  0  0  0  1  2  0  0  0  9]
 [ 0  0  0  0  1 12  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.2 0.2 0.3 0.4 0.4 0.3 0.4]
 [0.  0.  0.3 0.4 0.3 0.4 0.4 0.5 0.3 0.3]
 [0.  0.  0.  0.4 0.5 0.3 0.3 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.4 0.2 0.2 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.5 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 0.6 1.6 1.6]
 [0.  0.  1.6 1.  1.4]
 [0.  0.  0.  1.4 1.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.461, 0.467, 0.442, 0.467, 0.62]
cutting matrix
[[ 0.  0. -1.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]
 [ 0.  0. -1.]
 [ 0. -1.  1.]
 [ 0.  0.  1.]
 [-1.  0.  0.]
 [-1.  0.  1.]
 [ 1.  0.  1.]
 [ 1.  0.  0.]]
cutting matrix's confusion matrix
[[13  1  1  0  0  3  0  0  0  0]
 [ 0  0  0  0  4  1  0 17  0  0]
 [ 1  2 20  0  3  0  0  0  0  0]
 [ 0  0  1  0 11  0  0  5  0  0]
 [ 0  0  0  0 21  2  0  0  0  0]
 [ 0  0  2  0 14  3  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 0  2  0  0  1  2  0 12  0  0]
 [ 2  0  9  0  2  1  0  0  0  0]
 [ 0  0  0  0 12  1  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:05:25
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.2]
 [0.  0.  0.2 0.4 0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.  0.4 0.2]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.6 0.4 0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.5 0.5]
 [0.  0.  1.  0.5]
 [0.  0.  0.  0.5]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.821, 0.911, 0.714, 0.875]
cutting matrix
[[ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]]
cutting matrix's confusion matrix
[[33  1  0  0  0]
 [ 7  2  0  0  0]
 [ 3  4  0  0  0]
 [ 4  1  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:05:26
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  1.  0.  0.]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 0.  0.]
 [ 0. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  1  0  1  0]
 [ 5  0  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0. ]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  1.]
 [-1.  1.  0.]
 [ 1.  0. -1.]
 [ 0.  0.  0.]
 [ 0. -1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  0  2]
 [ 5  1  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.2]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[ 0. -1.  1.]
 [-1.  1.  0.]
 [ 1.  0. -1.]
 [ 0.  0.  0.]
 [ 0. -1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  0  2]
 [ 5  1  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.2]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.125, 0.773, 0.714]
cutting matrix
[[-1.  1.]
 [ 1.  0.]
 [ 0. -1.]
 [ 0.  0.]
 [-1. -1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  0  2]
 [ 5  0  1  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:05:27
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1. -1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  2  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  5  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  5  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  5  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.33 0.33]
 [0.   0.   0.33 0.17 0.33 0.33]
 [0.   0.   0.   0.17 0.33 0.  ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 1  8  0  1  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  5  0  0  0]]
row HD
[[0.   0.17 0.33 0.17 0.5  0.33]
 [0.   0.   0.5  0.33 0.33 0.5 ]
 [0.   0.   0.   0.17 0.5  0.  ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.75 0.5 ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 1  8  0  1  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  5  0  0  0]]
row HD
[[0.   0.17 0.5  0.17 0.67 0.5 ]
 [0.   0.   0.67 0.33 0.5  0.67]
 [0.   0.   0.   0.33 0.5  0.  ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.6 0.4 1. ]
 [0.  0.  0.6 0.4 1. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1. -1. -1.  0.]
 [ 1.  1. -1.  1. -1.  0.]
 [-1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 1  8  0  1  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  5  0  0  0]]
row HD
[[0.   0.17 0.67 0.33 0.83 0.67]
 [0.   0.   0.83 0.5  0.67 0.83]
 [0.   0.   0.   0.5  0.67 0.  ]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.5  0.33 0.83 0.67]
 [0.   0.   0.5  0.33 0.83 1.  ]
 [0.   0.   0.   0.17 0.33 0.83]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1. -1.  1. -1.]
select_j_column
[ 0.  0.  1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1. -1. -1.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.]
 [-1. -1. -1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1.  1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 1  8  0  1  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  5  0  0  0]]
row HD
[[0.   0.17 0.83 0.5  1.   0.83]
 [0.   0.   1.   0.67 0.83 1.  ]
 [0.   0.   0.   0.67 0.67 0.  ]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.43 0.29 0.71 0.57 0.71]
 [0.   0.   0.43 0.29 0.71 0.86 0.71]
 [0.   0.   0.   0.14 0.29 0.71 0.57]
 [0.   0.   0.   0.   0.43 0.71 0.57]
 [0.   0.   0.   0.   0.   0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.925, 1.0, 1.0, 0.91, 1.0, 0.914, 0.914]
cutting matrix
[[ 1. -1. -1. -1.  0.]
 [ 1. -1.  1. -1.  0.]
 [-1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  5  0  0  0]]


SVM classifier
Time: 2019-01-05 23:05:28
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0. -1.  0.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  0. -1. -1.  0.  1.]
select_j_column
[-1. -1.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0. -1.]
 [ 1. -1.]
 [ 0.  1.]
 [-1.  1.]
 [ 0. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  5  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.   0.17 0.17]
 [0.   0.   0.17 0.17 0.33 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  0.  0.  0.  0. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 1. -1. -1.]
 [ 0.  1.  1.]
 [-1.  1.  1.]
 [ 0. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.17 0.33 0.33]
 [0.   0.   0.17 0.33 0.5  0.17]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   2.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.91, 0.925]
cutting matrix
[[ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 1. -1. -1.]
 [ 0.  1.  1.]
 [-1.  1.  1.]
 [ 0. -1.  1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 1  7  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:05:29
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
confusion matrix
[[20  0  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [15  0  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  0.]
 [ 1.  1.]
 [-1.  0.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  1.]]
confusion matrix
[[14  0  4  0  0  0  0  2  0  0]
 [20  0  1  0  0  0  0  0  0  0]
 [ 7  0 12  0  0  0  0  3  0  0]
 [ 5  0  0  0  0  0  0 14  0  0]
 [21  0  0  0  0  0  0  5  0  0]
 [ 3  0  0  0  0  0  0 13  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  0  2  0  0  0  0 11  0  0]
 [19  0  0  0  0  0  0  2  0  0]
 [ 2  0  0  0  0  0  0 12  0  0]]
row HD
[[0.  0.  0.1 0.2 0.  0.2 0.1 0.1 0.1 0. ]
 [0.  0.  0.1 0.2 0.  0.2 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [-1.  0.  1.]
 [ 1.  1.  1.]
 [-1.  0.  1.]
 [-1.  1. -1.]
 [ 1.  0.  1.]
 [ 1.  0. -1.]
 [ 1.  1. -1.]]
confusion matrix
[[ 5  0  4  0  0  0  0  2  0  9]
 [20  0  1  0  0  0  0  0  0  0]
 [ 4  0 12  0  0  0  0  3  0  3]
 [ 5  0  0  0  0  0  0 14  0  0]
 [21  0  0  0  0  0  0  5  0  0]
 [ 3  0  0  0  0  0  0 13  0  0]
 [ 1  0  0  0  0  0  0  0  0 13]
 [ 2  0  2  0  0  0  0 11  0  0]
 [ 5  0  0  0  0  0  0  2  0 14]
 [ 0  0  0  0  0  0  0 12  0  2]]
row HD
[[0.  0.  0.1 0.2 0.  0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.1 0.2 0.  0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.  0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.33]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [-1.  0.  1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  0.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1.  0.  1. -1.]
 [ 1.  0. -1.  1.]
 [ 1.  1. -1.  1.]]
confusion matrix
[[13  3  4  0  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  7 12  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.3 0.  0.3 0.2 0.1 0.3 0.2]
 [0.  0.  0.2 0.2 0.1 0.2 0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.3 0.1 0.3 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.   1.5 ]
 [0.   0.   1.75 1.75]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [-1.  0.  1.  1.  0.]
 [ 1.  1.  1. -1. -1.]
 [-1.  0.  1.  1.  0.]
 [-1.  1. -1. -1.  0.]
 [ 1.  0.  1. -1. -1.]
 [ 1.  0. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.]]
confusion matrix
[[ 4  3  4  0  0  0  0  0  0  9]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 0  7 12  0  0  0  0  0  0  3]
 [ 0 19  0  0  0  0  0  0  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0  0 13]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 5  2  0  0  0  0  0  0  0 14]
 [ 0 12  0  0  0  0  0  0  0  2]]
row HD
[[0.  0.2 0.1 0.4 0.  0.4 0.3 0.1 0.4 0.3]
 [0.  0.  0.3 0.3 0.2 0.3 0.4 0.3 0.2 0.1]
 [0.  0.  0.  0.4 0.1 0.4 0.4 0.1 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.  0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 0.8 1.2 1.4]
 [0.  0.  1.4 1.4 1. ]
 [0.  0.  0.  1.2 1.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.739, 0.709, 0.83, 0.681, 0.518]
cutting matrix
[[ 1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [ 1.  1. -1.]
 [-1.  1.  0.]
 [-1. -1.  0.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]]
cutting matrix's confusion matrix
[[10  1  0  0  0  0  0  0  9  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [15  4  0  0  0  0  0  0  3  0]
 [14  5  0  0  0  0  0  0  0  0]
 [24  2  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [13  2  0  0  0  0  0  0  0  0]
 [ 7  0  0  0  0  0  0  0 14  0]
 [12  0  0  0  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-05 23:05:34
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
confusion matrix
[[18  0  0  0  0  2  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [21  0  0  0  0  5  0  0  0  0]
 [ 3  0  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [-1.  1.]
 [ 0.  0.]
 [ 0.  1.]
 [-1. -1.]
 [-1. -1.]]
confusion matrix
[[17  3  0  0  0  0  0  0  0  0]
 [ 2 19  0  0  0  0  0  0  0  0]
 [16  4  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7 19  0  0  0  0  0  0  0  0]
 [13  3  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.2 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.2 0.  0.1 0.1 0.  0.2 0.2]
 [0.  0.  0.  0.2 0.  0.1 0.1 0.  0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0. -1.]
 [ 0.  1.  1.]
 [ 0.  1.  1.]
 [ 1.  0.  0.]
 [ 0.  1.  1.]
 [-1.  1. -1.]
 [ 0.  0. -1.]
 [ 0.  1. -1.]
 [-1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[13  7  0  0  0  0  0  0  0  0]
 [ 1 20  0  0  0  0  0  0  0  0]
 [ 4 16  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7 19  0  0  0  0  0  0  0  0]
 [13  3  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.3 0.  0.2 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.3 0.  0.2 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0. -1.  0.]
 [ 0.  1.  1. -1.]
 [ 0.  1.  1.  1.]
 [ 1.  0.  0.  0.]
 [ 0.  1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 0.  0. -1.  0.]
 [ 0.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1. -1. -1. -1.]]
confusion matrix
[[13  5  2  0  0  0  0  0  0  0]
 [ 1 16  4  0  0  0  0  0  0  0]
 [ 4 16  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2 17  0  0  0  0  0  0  0]
 [13  0  3  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.3 0.  0.2 0.3 0.3]
 [0.  0.  0.1 0.4 0.1 0.2 0.3 0.1 0.4 0.3]
 [0.  0.  0.  0.4 0.  0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.75 1.5 ]
 [0.   0.   1.   1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
select_j_column
[ 0.  1.  1.  0.  1.  1.  0.  1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0. -1.  0. -1.]
 [ 0.  1.  1. -1. -1.]
 [ 0.  1.  1.  1.  1.]
 [ 1.  0.  0.  0.  0.]
 [ 0.  1.  1.  1.  0.]
 [-1.  1. -1. -1.  1.]
 [ 0.  0. -1.  0. -1.]
 [ 0.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  0.]
 [-1. -1. -1. -1. -1.]]
confusion matrix
[[13  1  4  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.3 0.4 0.4 0.  0.3 0.4 0.3]
 [0.  0.  0.2 0.5 0.2 0.3 0.3 0.2 0.5 0.3]
 [0.  0.  0.  0.5 0.1 0.3 0.4 0.2 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.5 0.3 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.4 1.2 1.6]
 [0.  0.  0.8 0.8 1. ]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  1.  0.  1.  1.  0.  1. -1. -1.]
select_j_column
[-1.  1.  1.  0.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0. -1.  0. -1.  0.]
 [ 0.  1.  1. -1. -1.  1.]
 [ 0.  1.  1.  1.  1.  1.]
 [ 1.  0.  0.  0.  0.  0.]
 [ 0.  1.  1.  1.  0.  1.]
 [-1.  1. -1. -1.  1. -1.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0.  1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  0.  1.]
 [-1. -1. -1. -1. -1.  1.]]
confusion matrix
[[13  1  4  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.5 0.3 0.5 0.5 0.  0.4 0.5 0.4]
 [0.  0.  0.2 0.6 0.2 0.4 0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.6 0.1 0.4 0.5 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.5 0.6 0.3 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.17 1.   1.33 1.17]
 [0.   0.   0.67 0.67 0.83 0.67]
 [0.   0.   0.   0.67 0.83 0.67]
 [0.   0.   0.   0.   1.   0.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[-1.  1.  1.  0.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 0.  0. -1.  0. -1.  0. -1.]
 [ 0.  1.  1. -1. -1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.]
 [ 1.  0.  0.  0.  0.  0.  0.]
 [ 0.  1.  1.  1.  0.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1.]
 [ 0.  0. -1.  0. -1.  0. -1.]
 [ 0.  1. -1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  0.  1.  1.]
 [-1. -1. -1. -1. -1.  1.  0.]]
confusion matrix
[[13  1  4  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.4 0.6 0.5 0.  0.5 0.6 0.5]
 [0.  0.  0.3 0.7 0.2 0.5 0.5 0.3 0.5 0.4]
 [0.  0.  0.  0.7 0.2 0.4 0.5 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.6 0.7 0.4 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.6 0.6 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 1.   0.86 1.14 1.   1.29]
 [0.   0.   0.57 0.57 0.71 0.57 0.86]
 [0.   0.   0.   0.57 0.71 0.57 0.57]
 [0.   0.   0.   0.   0.86 0.29 0.86]
 [0.   0.   0.   0.   0.   1.14 0.86]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  1.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[-1. -1.  1.  0.  0.  1. -1.  1.  0. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 0.  0. -1.  0. -1.  0. -1. -1.]
 [ 0.  1.  1. -1. -1.  1.  1.  0.]
 [ 0.  1.  1.  1.  1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  1.  1.  1.  0.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1.  0.]
 [ 0.  0. -1.  0. -1.  0. -1. -1.]
 [ 0.  1. -1. -1.  1. -1.  1.  0.]
 [-1. -1. -1.  1.  0.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  1.  0.  0.]]
confusion matrix
[[ 9  1  4  4  2  0  0  0  0  0]
 [ 0 15  1  1  4  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  7 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [13  0  0  1  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  7  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.5 0.5 0.7 0.6 0.  0.6 0.7 0.6]
 [0.  0.  0.4 0.7 0.3 0.5 0.6 0.3 0.6 0.4]
 [0.  0.  0.  0.8 0.3 0.5 0.5 0.5 0.6 0.7]
 [0.  0.  0.  0.  0.7 0.7 0.5 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.7 0.7 0.5 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.2 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.88 0.75 1.   0.88 1.12 1.  ]
 [0.   0.   0.5  0.5  0.62 0.5  0.75 1.  ]
 [0.   0.   0.   0.5  0.62 0.5  0.5  0.75]
 [0.   0.   0.   0.   0.75 0.25 0.75 0.88]
 [0.   0.   0.   0.   0.   1.   0.75 0.88]
 [0.   0.   0.   0.   0.   0.   0.62 0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.557, 0.348, 0.598, 0.252, 0.475, 0.311, 0.574, 0.631]
cutting matrix
[[ 0. -1. -1. -1. -1.]
 [ 0.  1. -1.  1.  0.]
 [ 0.  1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.]
 [ 0.  1.  0.  1.  1.]
 [-1. -1.  1. -1.  0.]
 [ 0. -1. -1. -1. -1.]
 [ 0. -1.  1.  1.  0.]
 [-1. -1.  0.  1.  1.]
 [-1. -1. -1.  0.  0.]]
cutting matrix's confusion matrix
[[ 9  1  4  0  2  0  0  0  2  2]
 [ 0 15  1  0  4  0  0  0  1  0]
 [ 3  4 12  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  0  2  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [13  0  0  0  0  0  0  0  1  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  1  0  0  0  0  5  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:05:40
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [-1.  0.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.4 0.2 0.  0. ]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1. -1.  1.]
 [-1.  0.  0.]
 [-1.  1.  1.]
 [-1.  1. -1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  1  5  0]
 [ 3  0  1  3  0]
 [ 0  0  1  6  0]
 [ 0  0  1  2  0]]
row HD
[[0.  0.6 0.4 0.2 0. ]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  0.]
 [ 1. -1.  1. -1.]
 [-1.  0.  0.  1.]
 [-1.  1.  1. -1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.8 0.6 0.4 0.2]
 [0.  0.  0.8 0.4 0.8]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.5  1.  ]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  0. -1.]
 [ 1. -1.  1. -1.  1.]
 [-1.  0.  0.  1.  1.]
 [-1.  1.  1. -1.  0.]
 [-1.  1. -1.  1. -1.]]
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.  0.8 0.6 0.2]
 [0.  0.  0.8 0.6 1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.4 0.8 0.4]
 [0.  0.  0.6 0.6 1. ]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  0. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.]
 [-1.  0.  0.  1.  1. -1.]
 [-1.  1.  1. -1.  0. -1.]
 [-1.  1. -1.  1. -1.  1.]]
confusion matrix
[[29  0  0  1  0]
 [ 4  1  0  4  0]
 [ 4  1  0  2  0]
 [ 1  0  0  6  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.  1.  0.8 0.2]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.33 0.67 0.33 0.33]
 [0.   0.   0.5  0.5  0.83 0.5 ]
 [0.   0.   0.   0.83 0.33 0.67]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.839, 0.776, 0.816, 0.269, 0.735, 0.768]
cutting matrix
[[-1. -1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1.  0.  1.  1. -1.]
 [-1.  1. -1.  0. -1.]
 [-1. -1.  1. -1.  1.]]
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 4  5  0  0  0]
 [ 4  2  0  1  0]
 [ 1  4  0  2  0]
 [ 0  1  0  2  0]]


SVM classifier
Time: 2019-01-05 23:05:41
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  1.  0. -1.]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 0. -1.]
 [ 1. -1.]
 [ 0.  0.]
 [-1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.2 0.  0.4 0.4]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  0.]
 [ 0. -1.  0.]
 [ 1. -1. -1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  1  0  0]
 [ 3  2  1  1  0]
 [ 4  2  1  0  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.2 0.2 0.4 0.6]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  0.]
select_j_column
[-1. -1. -1.  0.  1.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[ 1. -1.  0.]
 [ 0. -1.  0.]
 [ 1. -1. -1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  3  1  0  0]
 [ 3  2  1  1  0]
 [ 4  2  1  0  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.2 0.2 0.4 0.6]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  0.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  0. -1.]
 [ 0. -1.  0.  1.]
 [ 1. -1. -1.  1.]
 [ 0.  0.  0.  1.]
 [-1.  1.  1.  0.]]
confusion matrix
[[27  3  0  0  0]
 [ 3  5  1  0  0]
 [ 2  3  1  1  0]
 [ 0  6  1  0  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.4 0.4 0.6 0.8]
 [0.  0.  0.4 0.2 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 1.  ]
 [0.   0.   0.5  1.  ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  0. -1.  0.]
 [ 0. -1.  0.  1.  0.]
 [ 1. -1. -1.  1.  1.]
 [ 0.  0.  0.  1. -1.]
 [-1.  1.  1.  0.  1.]]
confusion matrix
[[27  3  0  0  0]
 [ 3  6  0  0  0]
 [ 2  4  0  1  0]
 [ 0  7  0  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.4 0.6 0.8 1. ]
 [0.  0.  0.6 0.4 1. ]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.8 0.6]
 [0.  0.  0.4 0.8 0.8]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  0. -1.  0. -1.]
 [ 0. -1.  0.  1.  0.  0.]
 [ 1. -1. -1.  1.  1. -1.]
 [ 0.  0.  0.  1. -1. -1.]
 [-1.  1.  1.  0.  1.  1.]]
confusion matrix
[[27  3  0  0  0]
 [ 3  5  0  1  0]
 [ 2  3  0  2  0]
 [ 0  6  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.6 0.8 1.2]
 [0.  0.  0.8 0.6 1.2]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.67 0.5  0.67]
 [0.   0.   0.33 0.67 0.67 0.33]
 [0.   0.   0.   0.83 0.33 0.33]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0.  1. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  0. -1.  0. -1. -1.]
 [ 0. -1.  0.  1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1. -1.  1.]
 [ 0.  0.  0.  1. -1. -1. -1.]
 [-1.  1.  1.  0.  1.  1.  0.]]
confusion matrix
[[27  3  0  0  0]
 [ 3  5  0  1  0]
 [ 2  3  0  2  0]
 [ 0  6  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 0.8 0.8 1.4]
 [0.  0.  1.  0.8 1.2]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.43 0.57 0.43 0.57 0.43]
 [0.   0.   0.29 0.57 0.57 0.29 0.57]
 [0.   0.   0.   0.71 0.29 0.29 0.57]
 [0.   0.   0.   0.   0.57 0.57 0.29]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.75, 0.918, 0.1, 0.849, 0.059, 0.766, 0.705]
cutting matrix
[[-1.  0. -1. -1. -1.]
 [-1.  0.  1.  0.  0.]
 [-1. -1.  1. -1.  1.]
 [ 0.  0.  1. -1. -1.]
 [ 1.  1.  0.  1.  0.]]
cutting matrix's confusion matrix
[[27  1  0  2  0]
 [ 3  3  0  3  0]
 [ 2  2  0  3  0]
 [ 0  2  0  5  0]
 [ 0  1  0  2  0]]


SVM classifier
Time: 2019-01-05 23:05:43
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [-1. -1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.33]
 [0.   0.   0.33 0.17 0.17 0.17]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.75 1.  ]
 [0.   0.   1.   0.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.5  0.33 0.33]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.67 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.6 0.8 1. ]
 [0.  0.  0.8 0.2 0.8]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  1  0  0  9  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.5  0.5  0.33]
 [0.   0.   0.33 0.33 0.33 0.17]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  0.67 0.83 0.17]
 [0.   0.   0.67 0.17 0.67 0.33]
 [0.   0.   0.   0.5  0.33 0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.]
 [-1. -1. -1. -1.  1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.67 0.67 0.5 ]
 [0.   0.   0.33 0.5  0.5  0.33]
 [0.   0.   0.   0.83 0.83 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.43 0.57 0.71 0.14 0.43]
 [0.   0.   0.57 0.14 0.57 0.29 0.57]
 [0.   0.   0.   0.43 0.29 0.57 0.86]
 [0.   0.   0.   0.   0.43 0.43 0.71]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
None


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.]
 [-1. -1. -1. -1.  1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.67 0.67 0.5 ]
 [0.   0.   0.33 0.5  0.5  0.33]
 [0.   0.   0.   0.83 0.83 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.43 0.57 0.71 0.14 0.43]
 [0.   0.   0.57 0.14 0.57 0.29 0.57]
 [0.   0.   0.   0.43 0.29 0.57 0.86]
 [0.   0.   0.   0.   0.43 0.43 0.71]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  0.  0.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1.  1.]
 [-1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.  0.  0.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.]
 [-1. -1. -1. -1.  1. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.83 0.83 0.5 ]
 [0.   0.   0.5  0.67 0.67 0.5 ]
 [0.   0.   0.   1.   1.   0.67]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.38 0.5  0.62 0.12 0.38 0.62]
 [0.   0.   0.5  0.12 0.5  0.25 0.5  0.5 ]
 [0.   0.   0.   0.38 0.25 0.5  0.75 0.5 ]
 [0.   0.   0.   0.   0.38 0.38 0.62 0.38]
 [0.   0.   0.   0.   0.   0.5  0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1.  1. -1.]
 [-1. -1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1.  0.  0.  1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.   1.   0.5 ]
 [0.   0.   0.67 0.83 0.83 0.5 ]
 [0.   0.   0.   1.   1.   0.83]
 [0.   0.   0.   0.   0.33 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33 0.44 0.56 0.11 0.33 0.56 0.11]
 [0.   0.   0.44 0.11 0.44 0.22 0.44 0.44 0.22]
 [0.   0.   0.   0.33 0.22 0.44 0.67 0.44 0.22]
 [0.   0.   0.   0.   0.33 0.33 0.56 0.33 0.33]
 [0.   0.   0.   0.   0.   0.44 0.56 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.56 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 0.985, 0.94, 1.0, 0.896, 0.985, 0.88, 0.96, 0.97]
cutting matrix
[[-1.  1. -1.  1. -1.]
 [-1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1. -1.  0.  1.]
 [-1. -1.  1.  0.  1.]
 [-1. -1. -1.  1. -1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  2  0  5  0  0]
 [ 0  0  0  1  9  0]
 [ 0  0  0  0  0  4]]


SVM classifier
Time: 2019-01-05 23:05:45
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1. -1.  0.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  0.]
 [ 0.  0.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.33]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[ 1.  0.  0. -1.  0. -1.]
most_cplx_inx
4
new_column
None


============== iter  3 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  0.]
 [ 0.  0.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.33]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1. -1.  0.  0.  0.  0.]
select_j_column
[ 1.  0.  0. -1.  0. -1.]
most_cplx_inx
4
new_column
None


============== iter  4 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  0.]
 [ 0.  0.]]
confusion matrix
[[17  1  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.33]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0.]
 [-1.  0.  0.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [-1.  0.  1.]
 [ 0.  0. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.5 ]
 [0.   0.   0.33 0.5  0.17 0.33]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   2.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0.  0.]
 [-1.  0.  0.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  0.  1. -1.]
 [ 0.  0. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 1 11  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.5  0.5  0.5  0.67]
 [0.   0.   0.5  0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.17 0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.5  1.  ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  1. -1.  1. -1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0.  0.  0.]
 [-1.  0.  0.  1.  0.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  0.  1. -1. -1.]
 [ 0.  0. -1.  1.  0.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 2 11  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.67 0.67 0.67 0.67]
 [0.   0.   0.67 0.83 0.5  0.33]
 [0.   0.   0.   0.5  0.33 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 1.2 0.8 0.6]
 [0.  0.  1.  1.  0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  0.  0.  0.  0.]
 [-1.  0.  0.  1.  0. -1.]
 [-1. -1.  1. -1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1.  0.  1. -1. -1.  1.]
 [ 0.  0. -1.  1.  0. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.5  0.67 0.83 0.83 0.83]
 [0.   0.   0.83 1.   0.67 0.33]
 [0.   0.   0.   0.67 0.5  1.  ]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.   0.67 0.5  0.67]
 [0.   0.   0.83 0.83 0.5  0.83]
 [0.   0.   0.   0.67 0.5  0.5 ]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.889, 0.925, 0.889, 0.98, 0.938, 0.941]
cutting matrix
[[ 1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0. -1.]
 [-1.  1. -1.  1.  0.]
 [ 1. -1. -1.  1.  1.]
 [ 0.  1. -1. -1.  1.]
 [ 0. -1.  1.  0. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 1 11  0  0  0  1]
 [ 0  0 14  0  1  0]
 [ 2  0  0  4  1  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-05 23:05:47
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 8 14  0  0  0  0  0  0  0  0]
 [12  4  0  0  0  0  0  0  0  0]
 [ 5 12  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  0  0  0  0  0]
 [ 1 14  0  0  0  0  0  0  0  0]
 [17  3  0  0  0  0  0  0  0  0]
 [ 6 16  0  0  0  0  0  0  0  0]
 [12  1  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[12  2  0  3  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0 14  0  8  0  0  0  0  0  0]
 [ 0  4  0 12  0  0  0  0  0  0]
 [ 1 12  0  4  0  0  0  0  0  0]
 [ 1  1  0 18  0  0  0  0  0  0]
 [ 0 14  0  1  0  0  0  0  0  0]
 [ 0  3  0 17  0  0  0  0  0  0]
 [ 2 16  0  4  0  0  0  0  0  0]
 [ 1  1  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.2 0.1 0.2 0.1 0.2 0. ]
 [0.  0.  0.  0.1 0.  0.1 0.  0.1 0.  0.2]
 [0.  0.  0.  0.1 0.  0.1 0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [ 1. -1.  0.]
 [ 1. -1.  1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  0.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [ 1. -1.  0.]
 [-1.  1. -1.]]
confusion matrix
[[11  2  0  0  0  3  0  0  0  1]
 [ 0 21  4  0  0  0  1  0  0  0]
 [ 0  2 11  1  0  1  1  6  0  0]
 [ 0  0  1  6  0  4  3  2  0  0]
 [ 1  0 12  0  0  0  0  4  0  0]
 [ 1  1  0  0  0 17  0  1  0  0]
 [ 0 11  3  0  0  1  0  0  0  0]
 [ 0  3  0  2  0  4  0 11  0  0]
 [ 2 12  3  0  0  4  1  0  0  0]
 [ 0  0  0  2  0  6  1  3  0  1]]
row HD
[[0.  0.2 0.3 0.2 0.3 0.1 0.3 0.2 0.2 0.1]
 [0.  0.  0.1 0.2 0.1 0.1 0.1 0.2 0.  0.3]
 [0.  0.  0.  0.2 0.  0.2 0.1 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0. -1.]
 [ 1. -1.  0.  0.]
 [ 1. -1.  1. -1.]
 [-1. -1. -1.  0.]
 [ 1. -1.  1. -1.]
 [-1. -1.  0.  0.]
 [ 1. -1. -1.  0.]
 [-1. -1.  1.  1.]
 [ 1. -1.  0.  1.]
 [-1.  1. -1.  0.]]
confusion matrix
[[ 8  4  0  0  0  3  0  0  1  1]
 [ 0 21  4  0  0  0  1  0  0  0]
 [ 0  1 11  1  0  7  1  0  1  0]
 [ 0  0  1  6  0  4  3  2  0  0]
 [ 0  0 12  0  0  4  0  1  0  0]
 [ 1  0  0  0  0 18  0  0  1  0]
 [ 0  4  1  0  0  1  0  0  9  0]
 [ 0  3  0  2  0  4  0 11  0  0]
 [ 2  2  2  0  0  4  1  0 11  0]
 [ 0  0  0  2  0  9  1  0  0  1]]
row HD
[[0.  0.3 0.3 0.3 0.3 0.2 0.4 0.3 0.3 0.2]
 [0.  0.  0.2 0.2 0.2 0.1 0.1 0.3 0.1 0.3]
 [0.  0.  0.  0.3 0.  0.3 0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.3 0.1 0.1 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  2.  ]
 [0.   0.   2.   2.  ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0. -1. -1.]
 [ 1. -1.  0.  0. -1.]
 [ 1. -1.  1. -1.  0.]
 [-1. -1. -1.  0. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1.  0.  0. -1.]
 [ 1. -1. -1.  0.  1.]
 [-1. -1.  1.  1.  0.]
 [ 1. -1.  0.  1.  0.]
 [-1.  1. -1.  0.  0.]]
confusion matrix
[[ 8  3  1  0  0  3  0  0  1  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  1 11  1  0  7  0  0  2  0]
 [ 0  3  1  6  0  4  0  2  0  0]
 [ 0  0  1  0 11  2  0  3  0  0]
 [ 1  0  0  0  0 18  0  0  1  0]
 [ 0  2  3  0  0  1  0  0  9  0]
 [ 0  3  0  2  0  4  0 11  0  0]
 [ 2  0  4  0  0  4  0  0 12  0]
 [ 0  1  0  2  0  6  0  3  0  1]]
row HD
[[0.  0.3 0.4 0.3 0.3 0.2 0.5 0.4 0.4 0.3]
 [0.  0.  0.3 0.2 0.2 0.1 0.2 0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.1 0.4 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.3 0.1 0.2 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.6 1.2]
 [0.  0.  1.6 1.6 1.2]
 [0.  0.  0.  1.4 1.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1. -1.  1.  0. -1.  1.  0. -1.]
select_j_column
[-1.  0. -1.  0. -1.  0.  0.  1.  1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.]
 [ 1. -1.  0.  0. -1.  0.]
 [ 1. -1.  1. -1.  0.  0.]
 [-1. -1. -1.  0. -1. -1.]
 [ 1. -1.  1. -1. -1.  0.]
 [-1. -1.  0.  0. -1.  0.]
 [ 1. -1. -1.  0.  1. -1.]
 [-1. -1.  1.  1.  0. -1.]
 [ 1. -1.  0.  1.  0.  1.]
 [-1.  1. -1.  0.  0. -1.]]
confusion matrix
[[ 8  3  1  3  0  0  0  0  1  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  1 11  1  0  7  0  0  2  0]
 [ 0  3  1  6  0  4  0  2  0  0]
 [ 0  0  1  0 11  2  0  3  0  0]
 [ 1  1  0  1  0 17  0  0  0  0]
 [ 0  8  3  0  0  1  0  0  3  0]
 [ 0  3  0  5  0  1  0 11  0  0]
 [ 2  2  4  0  0  4  0  0 10  0]
 [ 0  1  0  2  0  6  0  3  0  1]]
row HD
[[0.  0.4 0.5 0.3 0.4 0.3 0.5 0.4 0.5 0.3]
 [0.  0.  0.3 0.3 0.2 0.1 0.3 0.5 0.3 0.5]
 [0.  0.  0.  0.5 0.1 0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.2 0.2 0.3 0.5 0.2]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   1.33 1.   0.83]
 [0.   0.   1.33 1.33 1.   1.17]
 [0.   0.   0.   1.17 1.33 0.83]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.]
 [ 1. -1.  0.  0. -1.  0.  1.]
 [ 1. -1.  1. -1.  0.  0. -1.]
 [-1. -1. -1.  0. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  0.  1.]
 [-1. -1.  0.  0. -1.  0. -1.]
 [ 1. -1. -1.  0.  1. -1.  1.]
 [-1. -1.  1.  1.  0. -1. -1.]
 [ 1. -1.  0.  1.  0.  1.  1.]
 [-1.  1. -1.  0.  0. -1.  1.]]
confusion matrix
[[ 8  4  0  2  0  1  0  0  1  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  1 11  1  0  7  0  0  2  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  1  0  2  0 16  0  0  0  0]
 [ 0  8  2  0  1  1  0  0  3  0]
 [ 0  3  0  3  0  3  0 11  0  0]
 [ 2  3  2  3  1  1  0  0 10  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.4 0.6 0.3 0.4 0.4 0.5 0.5 0.5 0.3]
 [0.  0.  0.4 0.3 0.2 0.2 0.3 0.6 0.3 0.5]
 [0.  0.  0.  0.6 0.2 0.4 0.5 0.3 0.4 0.6]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 1.14 0.86 0.71 0.57]
 [0.   0.   1.14 1.14 0.86 1.   0.71]
 [0.   0.   0.   1.   1.14 0.71 1.29]
 [0.   0.   0.   0.   1.   0.86 1.14]
 [0.   0.   0.   0.   0.   1.   1.14]
 [0.   0.   0.   0.   0.   0.   1.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.  1.]
 [ 1. -1.  0.  0. -1.  0.  1.  1.]
 [ 1. -1.  1. -1.  0.  0. -1. -1.]
 [-1. -1. -1.  0. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  0.  1.  1.]
 [-1. -1.  0.  0. -1.  0. -1.  1.]
 [ 1. -1. -1.  0.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  0. -1. -1.  1.]
 [ 1. -1.  0.  1.  0.  1.  1.  1.]
 [-1.  1. -1.  0.  0. -1.  1.  1.]]
confusion matrix
[[ 8  4  0  2  0  1  0  0  1  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  1 16  1  0  2  0  0  2  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  1  0  2  0 16  0  0  0  0]
 [ 0  8  0  0  1  1  0  2  3  0]
 [ 0  3  0  3  0  3  0 11  0  0]
 [ 2  3  1  3  1  1  0  1 10  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.4 0.7 0.3 0.4 0.4 0.5 0.5 0.5 0.3]
 [0.  0.  0.5 0.3 0.2 0.2 0.3 0.6 0.3 0.5]
 [0.  0.  0.  0.7 0.3 0.5 0.6 0.4 0.5 0.7]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 1.   0.75 0.62 0.5  0.75]
 [0.   0.   1.   1.   0.75 0.88 0.62 0.88]
 [0.   0.   0.   0.88 1.   0.62 1.12 1.  ]
 [0.   0.   0.   0.   0.88 0.75 1.   0.88]
 [0.   0.   0.   0.   0.   0.88 1.   1.12]
 [0.   0.   0.   0.   0.   0.   1.   1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.  1.  0.]
 [ 1. -1.  0.  0. -1.  0.  1.  1. -1.]
 [ 1. -1.  1. -1.  0.  0. -1. -1. -1.]
 [-1. -1. -1.  0. -1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  0.  1.  1. -1.]
 [-1. -1.  0.  0. -1.  0. -1.  1.  1.]
 [ 1. -1. -1.  0.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  1.  0.]
 [ 1. -1.  0.  1.  0.  1.  1.  1.  0.]
 [-1.  1. -1.  0.  0. -1.  1.  1.  1.]]
confusion matrix
[[ 8  4  0  2  0  1  0  0  1  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  2 15  1  0  3  0  0  1  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  1  0  2  0 16  0  0  0  0]
 [ 0  8  2  0  1  1  0  0  3  0]
 [ 0  3  0  3  0  1  0 13  0  0]
 [ 2  4  2  3  1  1  0  0  9  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.5 0.8 0.4 0.5 0.5 0.6 0.5 0.5 0.4]
 [0.  0.  0.5 0.4 0.2 0.3 0.3 0.7 0.4 0.6]
 [0.  0.  0.  0.8 0.3 0.6 0.6 0.5 0.6 0.8]
 [0.  0.  0.  0.  0.5 0.3 0.3 0.5 0.6 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.67 0.89 0.67 0.56 0.44 0.67 1.11]
 [0.   0.   0.89 0.89 0.67 0.78 0.56 0.78 0.56]
 [0.   0.   0.   0.78 0.89 0.56 1.   0.89 0.78]
 [0.   0.   0.   0.   0.78 0.67 0.89 0.78 0.89]
 [0.   0.   0.   0.   0.   0.78 0.89 1.   0.67]
 [0.   0.   0.   0.   0.   0.   0.89 1.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.  1.  0.  0.]
 [ 1. -1.  0.  0. -1.  0.  1.  1. -1.  0.]
 [ 1. -1.  1. -1.  0.  0. -1. -1. -1.  0.]
 [-1. -1. -1.  0. -1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  0.  1.  1. -1.  0.]
 [-1. -1.  0.  0. -1.  0. -1.  1.  1. -1.]
 [ 1. -1. -1.  0.  1. -1.  1.  1. -1.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  1.  0.  1.]
 [ 1. -1.  0.  1.  0.  1.  1.  1.  0.  1.]
 [-1.  1. -1.  0.  0. -1.  1.  1.  1. -1.]]
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  2 16  1  0  2  0  0  1  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  0  0  2  0 16  0  0  1  0]
 [ 0  2  2  0  1  1  0  0  9  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  2  3  1  1  0  0 12  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.5 0.8 0.5 0.5 0.6 0.6 0.6 0.6 0.5]
 [0.  0.  0.5 0.5 0.2 0.4 0.3 0.8 0.5 0.7]
 [0.  0.  0.  0.9 0.3 0.7 0.6 0.6 0.7 0.9]
 [0.  0.  0.  0.  0.6 0.3 0.4 0.6 0.7 0.2]
 [0.  0.  0.  0.  0.  0.6 0.4 0.7 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.6 0.8 0.6 0.5 0.4 0.6 1.  0.6]
 [0.  0.  0.8 0.8 0.6 0.7 0.5 0.7 0.5 0.8]
 [0.  0.  0.  0.7 0.8 0.5 0.9 0.8 0.7 0.5]
 [0.  0.  0.  0.  0.7 0.6 0.8 0.7 0.8 0.6]
 [0.  0.  0.  0.  0.  0.7 0.8 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1. -1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 1. -1.  1. -1.  0.  0. -1. -1. -1.  0.  1.]
 [-1. -1. -1.  0. -1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  0.  1.  1. -1.  0.  0.]
 [-1. -1.  0.  0. -1.  0. -1.  1.  1. -1.  0.]
 [ 1. -1. -1.  0.  1. -1.  1.  1. -1.  0. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  1.  0.  1.  1.]
 [ 1. -1.  0.  1.  0.  1.  1.  1.  0.  1.  0.]
 [-1.  1. -1.  0.  0. -1.  1.  1.  1. -1. -1.]]
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  1 16  1  0  2  1  0  1  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  0  0  2  0 16  0  0  1  0]
 [ 0  2  2  0  1  1  0  0  9  0]
 [ 1  3  0  2  0  3  0 11  0  0]
 [ 2  0  2  3  1  1  1  0 12  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.5 0.9 0.6 0.5 0.6 0.7 0.7 0.6 0.6]
 [0.  0.  0.6 0.6 0.2 0.4 0.4 0.9 0.5 0.8]
 [0.  0.  0.  1.  0.4 0.8 0.7 0.6 0.8 1. ]
 [0.  0.  0.  0.  0.7 0.4 0.4 0.7 0.8 0.2]
 [0.  0.  0.  0.  0.  0.6 0.5 0.8 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.55 0.73 0.55 0.45 0.36 0.55 0.91 0.55 0.64]
 [0.   0.   0.73 0.73 0.55 0.64 0.45 0.64 0.45 0.73 0.73]
 [0.   0.   0.   0.64 0.73 0.45 0.82 0.73 0.64 0.45 0.09]
 [0.   0.   0.   0.   0.64 0.55 0.73 0.64 0.73 0.55 0.64]
 [0.   0.   0.   0.   0.   0.64 0.73 0.82 0.55 0.64 0.73]
 [0.   0.   0.   0.   0.   0.   0.73 0.82 0.82 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.64 0.73 0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.55 0.73 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1. -1.  1.  0. -1.  1.  0. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1.  0.  0. -1.  0.  1.  1. -1.  0.  0.  0.]
 [ 1. -1.  1. -1.  0.  0. -1. -1. -1.  0.  1.  1.]
 [-1. -1. -1.  0. -1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  0.  1.  1. -1.  0.  0.  1.]
 [-1. -1.  0.  0. -1.  0. -1.  1.  1. -1.  0.  0.]
 [ 1. -1. -1.  0.  1. -1.  1.  1. -1.  0. -1.  1.]
 [-1. -1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.]
 [ 1. -1.  0.  1.  0.  1.  1.  1.  0.  1.  0.  0.]
 [-1.  1. -1.  0.  0. -1.  1.  1.  1. -1. -1. -1.]]
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  2 15  1  0  3  0  0  1  0]
 [ 0  3  1  7  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  0  0  2  0 16  0  0  1  0]
 [ 0  2  2  0  1  1  0  0  9  0]
 [ 1  3  0  2  0  3  0 11  0  0]
 [ 2  1  2  3  1  1  0  0 12  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.5 1.  0.7 0.6 0.6 0.8 0.8 0.6 0.7]
 [0.  0.  0.7 0.7 0.3 0.4 0.5 1.  0.5 0.9]
 [0.  0.  0.  1.1 0.4 0.9 0.7 0.7 0.9 1.1]
 [0.  0.  0.  0.  0.8 0.5 0.5 0.7 0.9 0.2]
 [0.  0.  0.  0.  0.  0.7 0.5 0.9 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.5  0.67 0.5  0.42 0.33 0.5  0.83 0.5  0.58 0.33]
 [0.   0.   0.67 0.67 0.5  0.58 0.42 0.58 0.42 0.67 0.67 0.67]
 [0.   0.   0.   0.58 0.67 0.42 0.75 0.67 0.58 0.42 0.08 0.17]
 [0.   0.   0.   0.   0.58 0.5  0.67 0.58 0.67 0.5  0.58 0.67]
 [0.   0.   0.   0.   0.   0.58 0.67 0.75 0.5  0.58 0.67 0.58]
 [0.   0.   0.   0.   0.   0.   0.67 0.75 0.75 0.33 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.58 0.67 0.83 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.67 0.75 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0. -1.  0.  0. -1. -1.  1. -1.]
select_j_column
[-1.  0. -1.  0. -1.  0.  0.  1.  1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  0. -1. -1. -1.  1.  1.  0.  0.  0.  0.  1.]
 [ 1. -1.  0.  0. -1.  0.  1.  1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1. -1.  0.  0. -1. -1. -1.  0.  1.  1. -1.]
 [-1. -1. -1.  0. -1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  0.  1.  1. -1.  0.  0.  1. -1.]
 [-1. -1.  0.  0. -1.  0. -1.  1.  1. -1.  0.  0.  0.]
 [ 1. -1. -1.  0.  1. -1.  1.  1. -1.  0. -1.  1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.  0.]
 [ 1. -1.  0.  1.  0.  1.  1.  1.  0.  1.  0.  0. -1.]
 [-1.  1. -1.  0.  0. -1.  1.  1.  1. -1. -1. -1. -1.]]
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 22  0  0  4  0  0  0  0  0]
 [ 0  2 15  1  0  3  0  0  1  0]
 [ 0  3  1  6  0  4  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 1  0  0  0  0 18  0  0  1  0]
 [ 0  2  2  0  1  1  0  0  9  0]
 [ 1  3  0  2  0  3  0 11  0  0]
 [ 2  1  2  0  1  4  0  0 12  0]
 [ 0  1  0  5  0  6  0  0  0  1]]
row HD
[[0.  0.6 1.1 0.8 0.7 0.7 0.9 0.9 0.7 0.8]
 [0.  0.  0.8 0.8 0.4 0.4 0.6 1.  0.6 1. ]
 [0.  0.  0.  1.1 0.4 1.  0.7 0.8 0.9 1.1]
 [0.  0.  0.  0.  0.8 0.6 0.5 0.8 0.9 0.2]
 [0.  0.  0.  0.  0.  0.8 0.5 1.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.46 0.62 0.46 0.38 0.31 0.46 0.77 0.46 0.54 0.31 0.62]
 [0.   0.   0.62 0.62 0.46 0.54 0.38 0.54 0.38 0.62 0.62 0.62 0.31]
 [0.   0.   0.   0.54 0.62 0.38 0.69 0.62 0.54 0.38 0.08 0.15 0.38]
 [0.   0.   0.   0.   0.54 0.46 0.62 0.54 0.62 0.46 0.54 0.62 0.46]
 [0.   0.   0.   0.   0.   0.54 0.62 0.69 0.46 0.54 0.62 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.62 0.69 0.69 0.31 0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.54 0.62 0.77 0.54 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.62 0.69 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.54 0.62 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.819, 0.888, 0.563, 0.704, 0.757, 0.621, 0.846, 0.957, 0.752, 0.703, 0.5, 0.592, 0.73]
cutting matrix
[[-1.  1.  0. -1.  1.  1.  0.  0.  0.  1.]
 [ 1. -1.  0. -1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1.  1.  0. -1. -1.  0.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  0.  0.  1. -1.]
 [-1. -1.  0. -1. -1.  1. -1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1.  1.  0. -1.  1. -1.]
 [-1. -1.  1.  0. -1.  1.  1.  1. -1.  0.]
 [ 1. -1.  0.  0.  1.  1.  1.  0.  0. -1.]
 [-1.  1. -1.  0.  1.  1. -1. -1. -1. -1.]]
cutting matrix's confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 15  1  0  1  0  2  2  0]
 [ 0  0  1 10  0  3  0  2  0  0]
 [ 0  0  0  2 12  2  0  1  0  0]
 [ 0  0  0  2  0 17  0  0  1  0]
 [ 0  2  2  0  1  1  0  0  9  0]
 [ 1  3  0  2  0  3  0 11  0  0]
 [ 2  0  2  3  1  1  0  0 13  0]
 [ 0  1  0 11  0  0  0  0  0  1]]


SVM classifier
Time: 2019-01-05 23:06:00
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 4 22  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  2  0  0  0]
 [ 2  9  0  0  0  0  5  0  0  0]
 [11  2  0  0  0  0  4  0  0  0]
 [16  2  0  0  0  0  2  0  0  0]
 [ 3 10  0  0  0  0  2  0  0  0]
 [ 2  4  0  0  0  0 14  0  0  0]
 [ 3 15  0  0  0  0  4  0  0  0]
 [ 2  2  0  0  0  0  9  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0.  1.]
 [-1. -1.]
 [-1.  0.]
 [ 1.  1.]
 [ 1.  1.]
 [ 0.  0.]
 [ 1. -1.]]
confusion matrix
[[11  5  0  0  1  0  0  0  0  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0 21  0  0  0  0  1  0  0  0]
 [ 0  3  0  8  0  2  3  0  0  0]
 [ 1  2  0  0 10  0  0  0  0  4]
 [ 2  4  0  0  0 14  0  0  0  0]
 [ 1 10  0  0  0  2  2  0  0  0]
 [ 1  3  0  1  0  1 14  0  0  0]
 [ 2 18  0  0  0  1  1  0  0  0]
 [ 0  6  0  2  2  0  0  0  0  3]]
row HD
[[0.  0.2 0.2 0.1 0.1 0.1 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.2 0.2 0.  0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.2 0.2 0.  0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  1. -1.]
 [-1. -1.  0.]
 [-1.  0.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [ 0.  0.  0.]
 [ 1. -1.  1.]]
confusion matrix
[[11  3  0  0  1  0  0  0  2  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0 19  0  1  0  0  1  0  1  0]
 [ 2  3  0  8  0  0  1  2  0  0]
 [ 1  2  0  0 10  0  0  0  0  4]
 [ 2  3  0  0  0 14  0  0  1  0]
 [ 1  1  0  0  0  2  0  2  9  0]
 [ 1  3  0  1  0  1  3 11  0  0]
 [ 2  5  0  1  0  1  0  1 12  0]
 [ 0  6  0  2  2  0  0  0  0  3]]
row HD
[[0.  0.3 0.3 0.2 0.1 0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.2 0.3 0.1 0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.2 0.3 0.1 0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 2.33]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0.  0.]
 [ 0.  0.  1. -1.]
 [ 0.  0.  1. -1.]
 [ 0.  1. -1. -1.]
 [-1. -1.  0.  1.]
 [-1.  0.  1. -1.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1.  0.]
 [ 0.  0.  0.  0.]
 [ 1. -1.  1.  1.]]
confusion matrix
[[11  3  0  0  1  0  0  0  2  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0 19  0  1  0  0  1  0  1  0]
 [ 0  2  0 10  0  0  1  2  0  1]
 [ 1  1  0  0 10  0  0  0  1  4]
 [ 2  1  0  0  0 14  0  0  1  2]
 [ 1  1  0  0  0  2  0  2  9  0]
 [ 1  3  0  1  0  1  1 13  0  0]
 [ 2  2  0  1  0  1  0  1 12  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.4 0.4 0.3 0.2 0.3 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.2 0.4 0.1 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.2 0.4 0.1 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.1 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.75 1.75]
 [0.   0.   2.   2.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0.  0. -1.]
 [ 0.  0.  1. -1.  1.]
 [ 0.  0.  1. -1. -1.]
 [ 0.  1. -1. -1.  0.]
 [-1. -1.  0.  1.  0.]
 [-1.  0.  1. -1.  0.]
 [ 1.  1. -1. -1.  0.]
 [ 1.  1.  1.  0.  1.]
 [ 0.  0.  0.  0.  0.]
 [ 1. -1.  1.  1.  1.]]
confusion matrix
[[10  0  3  0  1  0  0  0  3  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0  2 17  1  0  0  1  0  1  0]
 [ 0  1  1 10  0  0  1  2  0  1]
 [ 1  1  0  0 10  0  0  0  0  5]
 [ 1  1  0  0  0 14  0  0  2  2]
 [ 1  0  1  0  0  2  0  2  9  0]
 [ 1  3  0  1  0  1  1 13  0  0]
 [ 2  0  2  1  0  1  0  1 12  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.5 0.4 0.4 0.3 0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.1 0.3 0.5 0.2 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.5 0.2 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.1 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.4 1.4 1. ]
 [0.  0.  1.6 1.8 1.4]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.]
 [ 0.  0.  1. -1.  1.  0.]
 [ 0.  0.  1. -1. -1.  0.]
 [ 0.  1. -1. -1.  0.  0.]
 [-1. -1.  0.  1.  0.  0.]
 [-1.  0.  1. -1.  0.  0.]
 [ 1.  1. -1. -1.  0. -1.]
 [ 1.  1.  1.  0.  1. -1.]
 [ 0.  0.  0.  0.  0.  1.]
 [ 1. -1.  1.  1.  1.  1.]]
confusion matrix
[[11  0  3  0  1  0  0  0  2  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 1  2  0  0 10  0  0  0  0  4]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.5 0.4 0.4 0.3 0.4 0.5 0.4 0.4 0.6]
 [0.  0.  0.1 0.3 0.5 0.2 0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.3 0.5 0.2 0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.17 1.17 0.83 1.  ]
 [0.   0.   1.33 1.5  1.17 1.17]
 [0.   0.   0.   0.83 0.83 1.  ]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1.  0. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
8
new_column
None


============== iter  7 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.]
 [ 0.  0.  1. -1.  1.  0.]
 [ 0.  0.  1. -1. -1.  0.]
 [ 0.  1. -1. -1.  0.  0.]
 [-1. -1.  0.  1.  0.  0.]
 [-1.  0.  1. -1.  0.  0.]
 [ 1.  1. -1. -1.  0. -1.]
 [ 1.  1.  1.  0.  1. -1.]
 [ 0.  0.  0.  0.  0.  1.]
 [ 1. -1.  1.  1.  1.  1.]]
confusion matrix
[[11  0  3  0  1  0  0  0  2  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 1  2  0  0 10  0  0  0  0  4]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.5 0.4 0.4 0.3 0.4 0.5 0.4 0.4 0.6]
 [0.  0.  0.1 0.3 0.5 0.2 0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.3 0.5 0.2 0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.17 1.17 0.83 1.  ]
 [0.   0.   1.33 1.5  1.17 1.17]
 [0.   0.   0.   0.83 0.83 1.  ]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1. -1.  0.  0.  0.  0.  1.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
8
new_column
None


============== iter  8 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.]
 [ 0.  0.  1. -1.  1.  0.]
 [ 0.  0.  1. -1. -1.  0.]
 [ 0.  1. -1. -1.  0.  0.]
 [-1. -1.  0.  1.  0.  0.]
 [-1.  0.  1. -1.  0.  0.]
 [ 1.  1. -1. -1.  0. -1.]
 [ 1.  1.  1.  0.  1. -1.]
 [ 0.  0.  0.  0.  0.  1.]
 [ 1. -1.  1.  1.  1.  1.]]
confusion matrix
[[11  0  3  0  1  0  0  0  2  0]
 [ 3 21  0  1  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 1  2  0  0 10  0  0  0  0  4]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.5 0.4 0.4 0.3 0.4 0.5 0.4 0.4 0.6]
 [0.  0.  0.1 0.3 0.5 0.2 0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.3 0.5 0.2 0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.2 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.17 1.17 0.83 1.  ]
 [0.   0.   1.33 1.5  1.17 1.17]
 [0.   0.   0.   0.83 0.83 1.  ]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.  0.]
 [ 0.  0.  1. -1.  1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 0.  1. -1. -1.  0.  0.  1.]
 [-1. -1.  0.  1.  0.  0.  1.]
 [-1.  0.  1. -1.  0.  0. -1.]
 [ 1.  1. -1. -1.  0. -1.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.]
 [ 0.  0.  0.  0.  0.  1.  0.]
 [ 1. -1.  1.  1.  1.  1. -1.]]
confusion matrix
[[11  0  3  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 0  2  0  1 10  0  0  1  0  3]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  4  0  2  0  0  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.5 0.4 0.5 0.4 0.5 0.6 0.5 0.4 0.7]
 [0.  0.  0.1 0.4 0.6 0.3 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.4 0.6 0.3 0.6 0.6 0.4 0.6]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 1.   1.   0.71 0.86 0.57]
 [0.   0.   1.14 1.29 1.   1.   0.43]
 [0.   0.   0.   0.71 0.71 0.86 1.  ]
 [0.   0.   0.   0.   1.   1.   0.86]
 [0.   0.   0.   0.   0.   0.86 1.14]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[ 0.  1.  1. -1.  0.  1. -1.  1.  0.  1.]
most_cplx_inx
8
new_column
None


============== iter  10 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.  0.]
 [ 0.  0.  1. -1.  1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 0.  1. -1. -1.  0.  0.  1.]
 [-1. -1.  0.  1.  0.  0.  1.]
 [-1.  0.  1. -1.  0.  0. -1.]
 [ 1.  1. -1. -1.  0. -1.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.]
 [ 0.  0.  0.  0.  0.  1.  0.]
 [ 1. -1.  1.  1.  1.  1. -1.]]
confusion matrix
[[11  0  3  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 0  2  0  1 10  0  0  1  0  3]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  4  0  2  0  0  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.5 0.4 0.5 0.4 0.5 0.6 0.5 0.4 0.7]
 [0.  0.  0.1 0.4 0.6 0.3 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.4 0.6 0.3 0.6 0.6 0.4 0.6]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 1.   1.   0.71 0.86 0.57]
 [0.   0.   1.14 1.29 1.   1.   0.43]
 [0.   0.   0.   0.71 0.71 0.86 1.  ]
 [0.   0.   0.   0.   1.   1.   0.86]
 [0.   0.   0.   0.   0.   0.86 1.14]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
8
new_column
None


============== iter  11 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.  0.]
 [ 0.  0.  1. -1.  1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 0.  1. -1. -1.  0.  0.  1.]
 [-1. -1.  0.  1.  0.  0.  1.]
 [-1.  0.  1. -1.  0.  0. -1.]
 [ 1.  1. -1. -1.  0. -1.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.]
 [ 0.  0.  0.  0.  0.  1.  0.]
 [ 1. -1.  1.  1.  1.  1. -1.]]
confusion matrix
[[11  0  3  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 0  2  0  1 10  0  0  1  0  3]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  4  0  2  0  0  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.5 0.4 0.5 0.4 0.5 0.6 0.5 0.4 0.7]
 [0.  0.  0.1 0.4 0.6 0.3 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.4 0.6 0.3 0.6 0.6 0.4 0.6]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 1.   1.   0.71 0.86 0.57]
 [0.   0.   1.14 1.29 1.   1.   0.43]
 [0.   0.   0.   0.71 0.71 0.86 1.  ]
 [0.   0.   0.   0.   1.   1.   0.86]
 [0.   0.   0.   0.   0.   0.86 1.14]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[-1.  1.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1. -1.  1.  0.  0. -1.]
 [ 0.  0.  1. -1. -1.  0.  0. -1.]
 [ 0.  1. -1. -1.  0.  0.  1.  1.]
 [-1. -1.  0.  1.  0.  0.  1. -1.]
 [-1.  0.  1. -1.  0.  0. -1. -1.]
 [ 1.  1. -1. -1.  0. -1.  1.  0.]
 [ 1.  1.  1.  0.  1. -1.  1.  1.]
 [ 0.  0.  0.  0.  0.  1.  0.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  0.]]
confusion matrix
[[11  0  3  0  0  0  0  0  2  1]
 [ 3 21  0  0  1  0  1  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 2  1  1  6  0  0  3  2  0  1]
 [ 1  3  0  0 10  0  0  0  0  3]
 [ 2  1  0  0  0 14  0  0  1  2]
 [ 1  0  1  0  0  2  0  2  9  0]
 [ 1  5  0  2  0  0  0 12  0  0]
 [ 2  0  2  1  0  1  0  1 12  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.5 0.4 0.6 0.4 0.5 0.7 0.6 0.5 0.8]
 [0.  0.  0.1 0.5 0.6 0.3 0.7 0.6 0.5 0.6]
 [0.  0.  0.  0.5 0.6 0.3 0.7 0.7 0.5 0.7]
 [0.  0.  0.  0.  0.5 0.5 0.3 0.5 0.5 0.8]
 [0.  0.  0.  0.  0.  0.4 0.6 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.88 0.88 0.62 0.75 0.5  0.75]
 [0.   0.   1.   1.12 0.88 0.88 0.38 0.88]
 [0.   0.   0.   0.62 0.62 0.75 0.88 1.12]
 [0.   0.   0.   0.   0.88 0.88 0.75 0.88]
 [0.   0.   0.   0.   0.   0.75 1.   0.75]
 [0.   0.   0.   0.   0.   0.   0.88 1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.627, 0.612, 0.705, 0.791, 0.724, 0.471, 0.673, 0.794]
cutting matrix
[[-1.  1.  0.  0. -1.  0.  0.]
 [ 0.  0.  1. -1.  1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 0.  1. -1. -1.  0.  0.  1.]
 [-1. -1.  0.  1.  0.  0.  1.]
 [-1.  0.  1. -1.  0.  0. -1.]
 [ 1.  1. -1. -1.  0. -1.  1.]
 [ 1.  1.  1.  0.  1. -1.  1.]
 [ 0.  0.  0.  0.  0.  1.  0.]
 [ 1. -1.  1.  1.  1.  1. -1.]]
cutting matrix's confusion matrix
[[11  0  3  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 0  2  0  1 10  0  0  1  0  3]
 [ 3  1  0  0  0 14  0  0  0  2]
 [ 7  0  1  0  0  2  0  2  3  0]
 [ 1  4  0  2  0  0  0 13  0  0]
 [ 4  0  2  1  0  1  0  1 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:06:07
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1. -1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]]
confusion matrix
[[21  0  4  0  0]
 [ 5  0  9  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1.  0.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]]
confusion matrix
[[21  0  4  0  0]
 [10  0  4  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1.  0.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]]
confusion matrix
[[21  0  4  0  0]
 [10  0  4  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1.  1.  0. -1.]
 [-1.  1. -1.  0.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1. -1.]]
confusion matrix
[[21  0  0  0  4]
 [ 5  0  1  0  8]
 [ 2  0  3  0  4]
 [ 0  0  2  0  3]
 [ 0  0  1  0  2]]
row HD
[[0.  0.8 0.6 0.8 0.6]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 1.  ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
None


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1.  1.  0. -1.]
 [-1.  1. -1.  0.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1. -1.]]
confusion matrix
[[21  0  0  0  4]
 [ 5  0  1  0  8]
 [ 2  0  3  0  4]
 [ 0  0  2  0  3]
 [ 0  0  1  0  2]]
row HD
[[0.  0.8 0.6 0.8 0.6]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 1.  ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [ 1.  1.  0. -1.  1.]
 [-1.  1. -1.  0. -1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]]
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 1  0  0  0  4]
 [ 0  0  0  0  3]]
row HD
[[0.  0.8 0.8 0.8 0.6]
 [0.  0.  0.8 0.2 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.6 0.8 0.4]
 [0.  0.  1.  1.  0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  0. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1.]
 [ 1.  1.  0. -1.  1. -1.]
 [-1.  1. -1.  0. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.]]
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 1  0  0  0  4]
 [ 0  0  0  0  3]]
row HD
[[0.  1.  0.8 0.8 0.6]
 [0.  0.  1.  0.4 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.5  0.67 0.33 0.67]
 [0.   0.   0.83 0.83 0.33 0.33]
 [0.   0.   0.   0.33 0.5  0.67]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
efficient_count == 3

**********      classifier acc  **************
[0.661, 0.804, 0.786, 0.723, 0.839, 0.75]
cutting matrix
[[-1.  1.  1.  1.]
 [ 1.  0.  1. -1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  1.  1.]
 [ 1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[21  0  0  4  0]
 [10  0  0  4  0]
 [ 2  0  0  7  0]
 [ 0  0  0  5  0]
 [ 0  0  0  3  0]]


SVM classifier
Time: 2019-01-05 23:06:09
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1. -1.  0.]
confusion matrix
[[22  3  0  0  0]
 [10  2  2  0  0]
 [ 2  1  6  0  0]
 [ 2  1  2  0  0]
 [ 0  1  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0. -1.]
 [-1.  0.]
 [-1.  1.]
 [ 0. -1.]]
confusion matrix
[[22  3  0  0  0]
 [10  2  2  0  0]
 [ 2  2  4  1  0]
 [ 2  1  1  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.4 0.4 0. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0. -1.  0.]
 [-1.  0.  0.]
 [-1.  1.  1.]
 [ 0. -1. -1.]]
confusion matrix
[[22  3  0  0  0]
 [10  2  2  0  0]
 [ 2  2  4  1  0]
 [ 2  1  1  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.6]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0.  0.  1. -1.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0. -1.]
 [ 0. -1.  0.  0.]
 [-1.  0.  0.  1.]
 [-1.  1.  1. -1.]
 [ 0. -1. -1. -1.]]
confusion matrix
[[22  3  0  0  0]
 [10  2  0  2  0]
 [ 2  2  0  5  0]
 [ 2  1  0  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.6 0.8 0.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   0.75]
 [0.   0.   0.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.769, 0.182, 0.125, 0.667]
cutting matrix
[[ 1.  0.]
 [ 0.  0.]
 [-1.  0.]
 [-1.  1.]
 [ 0. -1.]]
cutting matrix's confusion matrix
[[22  3  0  0  0]
 [10  2  2  0  0]
 [ 2  1  4  2  0]
 [ 2  1  1  1  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 23:06:10
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.   0.17]
 [0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1. -1.  0.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1. -1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.5  0.   0.33]
 [0.   0.   0.17 0.33 0.33 0.  ]
 [0.   0.   0.   0.17 0.5  0.17]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 2.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  0.]
 [ 1. -1.  0.  1.]
 [ 1.  1.  0.  0.]
 [ 1.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1. -1.  0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  7  0  0  1  0]]
row HD
[[0.   0.5  0.5  0.67 0.17 0.5 ]
 [0.   0.   0.33 0.5  0.5  0.  ]
 [0.   0.   0.   0.33 0.67 0.33]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.5  0.75]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  0.  1.]
 [ 1. -1.  0.  1. -1.]
 [ 1.  1.  0.  0.  1.]
 [ 1.  1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  7  0  0  1  0]]
row HD
[[0.   0.67 0.5  0.83 0.17 0.67]
 [0.   0.   0.5  0.5  0.67 0.  ]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 1.2 0.6 1. ]
 [0.  0.  1.2 1.  0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  0.  1.  0.]
 [ 1. -1.  0.  1. -1.  0.]
 [ 1.  1.  0.  0.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  1  0  0  0  6]]
row HD
[[0.   0.67 0.67 1.   0.33 0.83]
 [0.   0.   0.67 0.67 0.83 0.17]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.   0.5  0.83 0.83]
 [0.   0.   1.   0.83 0.5  0.67]
 [0.   0.   0.   0.67 0.5  0.5 ]
 [0.   0.   0.   0.   0.83 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.985, 0.985, 0.972, 0.923, 0.985, 0.921]
cutting matrix
[[-1. -1.  1.  1.]
 [ 1. -1.  0. -1.]
 [ 1.  1.  0.  1.]
 [ 1.  1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1. -1.  0. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:06:11
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0.  0.  0.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0.  0.  0. -1.  1. -1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0 11  0  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.33 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 0.  0.  0. -1.  1. -1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0.  0.  0.]
 [-1.  1.  0.]
 [ 0. -1.  1.]
 [ 0. -1. -1.]
 [ 0.  1.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.5  0.5  0.5 ]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 0.921, 0.889]
cutting matrix
[[ 1.  0.]
 [ 0.  0.]
 [-1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  6  0  0]]


SVM classifier
Time: 2019-01-05 23:06:12
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [22  4  0  0  0  0  0  0  0  0]
 [16  1  0  0  0  0  0  0  0  0]
 [ 4 19  0  0  0  0  0  0  0  0]
 [ 4 15  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [ 3 11  0  0  0  0  0  0  0  0]
 [ 4  9  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  4  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 4  0  0  0  0 19  0  0  0  0]
 [ 4  0  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 4  0  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.1 0.  0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.1 0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[16  0  1  0  0  1  0  0  0  0]
 [ 5  0 17  0  0  0  0  0  0  0]
 [ 3  0 19  0  0  4  0  0  0  0]
 [10  0  6  0  0  1  0  0  0  0]
 [ 4  0  0  0  0 19  0  0  0  0]
 [ 4  0  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 3  0 14  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 4  0  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.2 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.1 0.2 0.  0.2 0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.1 0.1 0.3 0.1 0.  0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1.  1.  1.  0.]
 [-1.  1.  1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1.  1.]
 [ 1. -1. -1.  0.]
 [-1. -1.  1.  0.]
 [-1.  1.  1.  0.]
 [ 1. -1. -1.  0.]
 [-1. -1. -1. -1.]]
confusion matrix
[[16  0  0  0  0  1  0  1  0  0]
 [ 5  0  0  0  0  0  0 17  0  0]
 [ 3  0 17  0  0  4  0  2  0  0]
 [10  0  1  0  0  1  0  5  0  0]
 [ 4  0  0  0  0 19  0  0  0  0]
 [ 4  0  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 3  0  0  0  0  0  0 14  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 4  0  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.  0.2 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.2 0.3 0.1 0.2 0.2 0.1 0.2 0.4]
 [0.  0.  0.  0.1 0.1 0.4 0.2 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.25 2.  ]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [ 1.  1.  1.  0.  1.]
 [-1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.]
 [-1. -1.  1.  0.  1.]
 [-1.  1.  1.  0.  1.]
 [ 1. -1. -1.  0.  1.]
 [-1. -1. -1. -1.  1.]]
confusion matrix
[[13  0  1  3  0  1  0  0  0  0]
 [ 0  0  0  5  0  0  0 17  0  0]
 [ 1  0 19  2  0  4  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  4  0 19  0  0  0  0]
 [ 0  0  0  4  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 0  0  2  3  0  0  0 12  0  0]
 [ 2  0  0  1  0 11  0  0  0  0]
 [ 0  0  0  4  0  9  0  0  0  0]]
row HD
[[0.  0.4 0.1 0.1 0.3 0.4 0.4 0.3 0.4 0.3]
 [0.  0.  0.3 0.3 0.1 0.2 0.2 0.1 0.2 0.4]
 [0.  0.  0.  0.2 0.2 0.5 0.3 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  1.6 0.8]
 [0.  0.  0.6 1.  1.2]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  0.  1.  1.]
 [-1.  1.  1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1.]
 [-1. -1.  1.  0.  1.  1.]
 [-1.  1.  1.  0.  1.  1.]
 [ 1. -1. -1.  0.  1.  1.]
 [-1. -1. -1. -1.  1.  1.]]
confusion matrix
[[13  0  0  3  0  1  0  1  0  0]
 [ 0  0  0  5  0  0  0 17  0  0]
 [ 1  0 17  2  0  4  0  2  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  4  0 19  0  0  0  0]
 [ 0  0  0  4  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 0  0  0  3  0  0  0 14  0  0]
 [ 2  0  0  1  0 11  0  0  0  0]
 [ 0  0  0  4  0  9  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.1 0.3 0.4 0.4 0.3 0.4 0.3]
 [0.  0.  0.4 0.3 0.1 0.2 0.2 0.1 0.2 0.4]
 [0.  0.  0.  0.3 0.3 0.6 0.4 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.83 1.33 0.67 0.83]
 [0.   0.   0.5  0.83 1.   0.83]
 [0.   0.   0.   1.17 0.83 1.  ]
 [0.   0.   0.   0.   1.33 1.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1. -1.]
 [-1. -1.  1.  0.  1.  1.  1.]
 [-1.  1.  1.  0.  1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1.  1.]
 [-1. -1. -1. -1.  1.  1.  1.]]
confusion matrix
[[13  0  0  3  0  0  0  1  1  0]
 [ 0  0  0  5  0  0  0 17  0  0]
 [ 1  0 17  2  0  0  0  2  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  4  0  0  0  0 19  0]
 [ 0  0  0  4  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  0  3  0  0  0 14  0  0]
 [ 2  0  0  1  0  0  0  0 11  0]
 [ 0  0  0  4  0  0  0  0  9  0]]
row HD
[[0.  0.4 0.2 0.1 0.3 0.5 0.4 0.3 0.4 0.3]
 [0.  0.  0.4 0.3 0.1 0.3 0.2 0.1 0.2 0.4]
 [0.  0.  0.  0.3 0.3 0.7 0.4 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.2 0.4 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.4 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.71 1.14 0.57 0.71 1.  ]
 [0.   0.   0.43 0.71 0.86 0.71 0.43]
 [0.   0.   0.   1.   0.71 0.86 0.57]
 [0.   0.   0.   0.   1.14 1.   0.86]
 [0.   0.   0.   0.   0.   0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1.  0.  1.  1. -1. -1.]
 [-1. -1.  1.  0.  1.  1.  1.  0.]
 [-1.  1.  1.  0.  1.  1.  1.  0.]
 [ 1. -1. -1.  0.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1.  1.  0.]]
confusion matrix
[[14  0  0  3  0  0  0  0  1  0]
 [ 0  0  0  5  0  0  0 17  0  0]
 [ 3  0 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  4  0  0  0  0 19  0]
 [ 0  0  0  4  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  0  0  3  0  0  0 12  0  0]
 [ 2  0  0  1  0  0  0  0 11  0]
 [ 0  0  0  4  0  0  0  0  9  0]]
row HD
[[0.  0.5 0.2 0.2 0.4 0.6 0.5 0.4 0.5 0.4]
 [0.  0.  0.5 0.4 0.1 0.3 0.3 0.2 0.2 0.5]
 [0.  0.  0.  0.4 0.4 0.8 0.5 0.4 0.7 0.6]
 [0.  0.  0.  0.  0.3 0.5 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.62 1.   0.5  0.62 0.88 1.25]
 [0.   0.   0.38 0.62 0.75 0.62 0.38 0.75]
 [0.   0.   0.   0.88 0.62 0.75 0.5  0.88]
 [0.   0.   0.   0.   1.   0.88 0.75 0.75]
 [0.   0.   0.   0.   0.   0.12 0.38 1.25]
 [0.   0.   0.   0.   0.   0.   0.25 1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  0.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1.  0.  1.  1. -1. -1. -1.]
 [-1. -1.  1.  0.  1.  1.  1.  0.  1.]
 [-1.  1.  1.  0.  1.  1.  1.  0.  1.]
 [ 1. -1. -1.  0.  1.  1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1.  1.  0.  1.]]
confusion matrix
[[13  0  1  3  0  0  0  0  1  0]
 [ 0  0  0  5  0  0  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  4  0  0  0  0 19  0]
 [ 0  0  0  4  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  3  0  0  0 12  0  0]
 [ 2  0  0  1  0  0  0  0 11  0]
 [ 0  0  0  4  0  0  0  0  9  0]]
row HD
[[0.  0.6 0.3 0.3 0.5 0.6 0.6 0.5 0.6 0.5]
 [0.  0.  0.5 0.4 0.1 0.4 0.3 0.2 0.2 0.5]
 [0.  0.  0.  0.4 0.4 0.9 0.5 0.4 0.7 0.6]
 [0.  0.  0.  0.  0.3 0.6 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.56 0.89 0.44 0.56 0.78 1.11 0.67]
 [0.   0.   0.33 0.56 0.67 0.56 0.33 0.67 0.44]
 [0.   0.   0.   0.78 0.56 0.67 0.44 0.78 0.33]
 [0.   0.   0.   0.   0.89 0.78 0.67 0.67 0.78]
 [0.   0.   0.   0.   0.   0.11 0.33 1.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.22 1.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.654, 0.798, 0.66, 0.546, 0.91, 0.947, 0.899, 0.672, 0.84]
cutting matrix
[[ 1.  1. -1.  1.  1. -1.]
 [ 1.  0.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  0.  1.  1. -1. -1.]
 [-1.  0.  1.  1.  1.  1.]
 [ 1.  0.  1.  1.  1.  1.]
 [-1.  0.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[13  4  0  0  0  0  1  0  0  0]
 [ 0 22  0  0  0  0  0  0  0  0]
 [ 1  4 17  0  0  0  4  0  0  0]
 [ 0 15  1  0  0  0  1  0  0  0]
 [ 0  4  0  0  0  0 19  0  0  0]
 [ 0  4  0  0  0  0 15  0  0  0]
 [ 2  0  0  0  0  0 17  0  0  0]
 [ 0 17  0  0  0  0  0  0  0  0]
 [ 2  1  0  0  0  0 11  0  0  0]
 [ 0  4  0  0  0  0  9  0  0  0]]


SVM classifier
Time: 2019-01-05 23:06:19
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [21  0  0  0  0  1  0  0  0  0]
 [25  0  0  0  0  1  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [15  0  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 1.  0.]
 [-1. -1.]
 [ 0.  1.]
 [ 0.  0.]
 [-1. -1.]
 [ 0.  1.]]
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [25  0  0  0  0  1  0  0  0  0]
 [11  0  0  0  0  1  0  5  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 3  0  0  0  0  2  0 12  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.  0.2 0.2 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.1 0.2 0.2 0.2 0.  0.1 0.2 0. ]
 [0.  0.  0.  0.2 0.2 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  1.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 1.  0.  1.]
 [ 1.  0. -1.]
 [-1. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  0.  0.]
 [-1. -1. -1.]
 [ 0.  1.  1.]]
confusion matrix
[[14  0  1  0  0  3  0  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 6  0 19  0  0  1  0  0  0  0]
 [10  0  1  0  0  1  0  5  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.3 0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.1 0.3 0.2 0.3 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.3 0.2 0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[-1.  1. -1.  0.  0. -1.  1.  0. -1.  1.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[ 0. -1.  1.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 1.  0.  1.]
 [ 1.  0. -1.]
 [-1. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  0.  0.]
 [-1. -1. -1.]
 [ 0.  1.  1.]]
confusion matrix
[[14  0  1  0  0  3  0  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 6  0 19  0  0  1  0  0  0  0]
 [10  0  1  0  0  1  0  5  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.3 0.1 0.2 0.2 0.2 0.1]
 [0.  0.  0.1 0.3 0.2 0.3 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.3 0.2 0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
select_j_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1.  1. -1.]
 [ 0.  1. -1. -1.]
 [ 0. -1. -1.  0.]
 [ 1.  0.  1.  0.]
 [ 1.  0. -1.  0.]
 [-1. -1.  1.  0.]
 [ 0.  1.  0.  0.]
 [ 0.  0.  0.  0.]
 [-1. -1. -1.  0.]
 [ 0.  1.  1.  1.]]
confusion matrix
[[13  0  2  0  0  3  0  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3  0 22  0  0  1  0  0  0  0]
 [10  0  1  0  0  1  0  5  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 1  0  2  0  0 16  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.3 0.4 0.2 0.3 0.3 0.3 0.2]
 [0.  0.  0.2 0.4 0.3 0.4 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.2 0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  1.75]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.  0.  0. -1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0. -1.  1. -1.  1.]
 [ 0.  1. -1. -1. -1.]
 [ 0. -1. -1.  0.  0.]
 [ 1.  0.  1.  0. -1.]
 [ 1.  0. -1.  0.  1.]
 [-1. -1.  1.  0.  0.]
 [ 0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [-1. -1. -1.  0.  0.]
 [ 0.  1.  1.  1.  0.]]
confusion matrix
[[13  0  2  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 22  2  0  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  2  1  0 16  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.4 0.4 0.3 0.4 0.4 0.4 0.3]
 [0.  0.  0.3 0.4 0.4 0.5 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.4 0.3 0.2 0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.4 1. ]
 [0.  0.  1.2 1.  1.8]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.  0.  0. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0. -1.  1. -1.  1.  1.]
 [ 0.  1. -1. -1. -1.  0.]
 [ 0. -1. -1.  0.  0. -1.]
 [ 1.  0.  1.  0. -1.  0.]
 [ 1.  0. -1.  0.  1. -1.]
 [-1. -1.  1.  0.  0.  1.]
 [ 0.  1.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.]
 [-1. -1. -1.  0.  0.  1.]
 [ 0.  1.  1.  1.  0. -1.]]
confusion matrix
[[13  0  1  0  0  3  0  1  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  4  0  0]
 [ 0  0  1 10  0  0  0  6  0  0]
 [ 0  0  0  2  0  2  0 19  0  0]
 [ 0  0  0  1  0  3  0 15  0  0]
 [ 2  0  0  0  0  0  0 17  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0 11  0  0]
 [ 0  0  0  3  0  1  0  9  0  0]]
row HD
[[0.  0.4 0.4 0.5 0.5 0.3 0.5 0.5 0.4 0.4]
 [0.  0.  0.4 0.4 0.5 0.6 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.5 0.3 0.3 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   1.17 0.83 1.17]
 [0.   0.   1.   0.83 1.5  1.17]
 [0.   0.   0.   1.   1.   0.67]
 [0.   0.   0.   0.   0.67 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0. -1.  1. -1.  1.  1.  0.]
 [ 0.  1. -1. -1. -1.  0.  0.]
 [ 0. -1. -1.  0.  0. -1.  0.]
 [ 1.  0.  1.  0. -1.  0.  1.]
 [ 1.  0. -1.  0.  1. -1.  1.]
 [-1. -1.  1.  0.  0.  1.  1.]
 [ 0.  1.  0.  0.  0.  0. -1.]
 [ 0.  0.  0.  0.  0.  0. -1.]
 [-1. -1. -1.  0.  0.  1.  1.]
 [ 0.  1.  1.  1.  0. -1. -1.]]
confusion matrix
[[13  0  2  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 22  2  0  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  2  1  0 16  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  9  0  0  3  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.6 0.4 0.6 0.6 0.5 0.5]
 [0.  0.  0.4 0.5 0.6 0.7 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.6 0.4 0.4 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.5 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.6 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 1.   0.71 1.   0.71]
 [0.   0.   0.86 0.71 1.29 1.   1.43]
 [0.   0.   0.   0.86 0.86 0.57 1.14]
 [0.   0.   0.   0.   0.57 1.   1.29]
 [0.   0.   0.   0.   0.   1.   1.14]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1.  1.  0.  0.  1. -1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 0. -1.  1. -1.  1.  1.  0.  0.]
 [ 0.  1. -1. -1. -1.  0.  0. -1.]
 [ 0. -1. -1.  0.  0. -1.  0. -1.]
 [ 1.  0.  1.  0. -1.  0.  1.  1.]
 [ 1.  0. -1.  0.  1. -1.  1.  0.]
 [-1. -1.  1.  0.  0.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0. -1. -1.]
 [ 0.  0.  0.  0.  0.  0. -1.  0.]
 [-1. -1. -1.  0.  0.  1.  1.  1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.]]
confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  4  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 18  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.7 0.6 0.5 0.7 0.6 0.6 0.6]
 [0.  0.  0.4 0.6 0.7 0.8 0.4 0.6 0.7 0.5]
 [0.  0.  0.  0.7 0.5 0.5 0.4 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.6 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.6 0.7 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.1 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 0.88 0.62 0.88 0.62 0.88]
 [0.   0.   0.75 0.62 1.12 0.88 1.25 0.88]
 [0.   0.   0.   0.75 0.75 0.5  1.   0.62]
 [0.   0.   0.   0.   0.5  0.88 1.12 0.88]
 [0.   0.   0.   0.   0.   0.88 1.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.26, 0.466, 0.5, 0.34, 0.575, 0.602, 0.525, 0.331]
cutting matrix
[[ 0. -1. -1.  1.  1.  0.  0.]
 [ 0.  1. -1. -1.  0.  0. -1.]
 [ 0. -1.  0.  0. -1.  0. -1.]
 [ 1.  0.  0. -1.  0.  1.  1.]
 [ 1.  0.  0.  1. -1.  1.  0.]
 [-1. -1.  0.  0.  1.  1.  1.]
 [ 0.  1.  0.  0.  0. -1. -1.]
 [ 0.  0.  0.  0.  0. -1.  0.]
 [-1. -1.  0.  0.  1.  1.  1.]
 [ 0.  1.  1.  0. -1. -1. -1.]]
cutting matrix's confusion matrix
[[13  0  1  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  1  3  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  5  0  0  0  0]
 [ 2  0  0  0  1 16  0  0  0  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  2 10  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-05 23:06:25
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1.]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.2]
 [0.  0.  0.2 0.4 0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.4]
 [0.  0.  0.2 0.6 0. ]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.6]
 [0.  0.  0.2 0.6 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   0.25]
 [0.   0.   1.   0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.821, 0.911, 0.696, 0.982]
cutting matrix
[[ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:06:26
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0.  1.  1.]
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 2  4  1  0  0]
 [ 2  3  0  0  0]
 [ 0  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  1.]
 [ 1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  1  1  0]
 [ 2  2  0  0  1]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[-1.  0.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  0.  1.]
 [ 0.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]]
confusion matrix
[[29  5  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  1  1  0]
 [ 2  3  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0.  0.]
select_j_column
[ 1. -1.  1.  0. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 1.  0.  1.  1.]
 [ 0.  1.  1.  1.]
 [ 1.  1.  1.  0.]
 [ 1. -1. -1. -1.]]
confusion matrix
[[29  3  0  2  0]
 [ 6  3  0  0  0]
 [ 2  3  1  1  0]
 [ 3  2  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.6 0.4]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.75]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.714, 0.66, 0.982, 0.765]
cutting matrix
[[ 1.]
 [ 1.]
 [ 1.]
 [ 1.]
 [-1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:06:27
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.33 0.   0.  ]
 [0.   0.   0.17 0.33 0.   0.  ]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.33 0.   0.  ]
 [0.   0.   0.33 0.33 0.   0.  ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 0.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1. -1. -1.  0.]
 [-1.  1. -1.  1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.  0.  0.5 0.5 0.  0. ]
 [0.  0.  0.5 0.5 0.  0. ]
 [0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.25 1.5 ]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1.  0.  1.  1.]
most_cplx_inx
1
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1. -1. -1.  0.]
 [-1.  1. -1.  1.]
 [-1.  1. -1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.  0.  0.5 0.5 0.  0. ]
 [0.  0.  0.5 0.5 0.  0. ]
 [0.  0.  0.  0.5 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.25 1.5 ]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.955, 0.955, 1.0, 0.983]
cutting matrix
[[ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 23:06:28
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0.  0.  0. -1.]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 1. -1. -1.  1.  0. -1.]
select_j_column
[ 0.  1. -1.  0.  1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [-1. -1.]]
confusion matrix
[[21  0  1  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  5  0  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.17 0.17 0.17 0.33]
 [0.   0.   0.17 0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1. -1. -1.  1.  0. -1.]
select_j_column
[ 0.  1. -1.  0.  1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 0.  0.  1.]
 [ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 0.  1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.33 0.17 0.33 0.5 ]
 [0.   0.   0.33 0.17 0.33 0.5 ]
 [0.   0.   0.   0.17 0.17 0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.963, 0.947, 1.0]
cutting matrix
[[ 1.  1.  1.]
 [ 0.  0.  1.]
 [ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 0.  1. -1.]
 [-1. -1. -1.]]
cutting matrix's confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 23:06:29
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
confusion matrix
[[11  0  0  0  0  0  9  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  3  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [15  0  0  0  0  0  0  0  0  0]
 [ 7  0  0  0  0  0 14  0  0  0]
 [12  0  0  0  0  0  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  0.]
 [-1.  1.]]
confusion matrix
[[ 9  0  2  0  0  0  0  0  9  0]
 [21  0  0  0  0  0  0  0  0  0]
 [16  0  3  0  0  0  0  0  3  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 4  0 11  0  0  0  0  0  0  0]
 [ 5  0  2  0  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.  0.1 0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.  0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 5.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 0.  0. -1. -1.  0. -1.  1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  0.  0.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  0.  0.]
 [-1.  1.  1.]]
confusion matrix
[[ 9  0  2  0  0  0  0  0  9  0]
 [21  0  0  0  0  0  0  0  0  0]
 [16  0  3  0  0  0  0  0  3  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 4  0 11  0  0  0  0  0  0  0]
 [ 5  0  2  0  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.  0.2 0.2 0.  0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.2 0.2 0.  0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.2 0.  0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.  0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.33 2.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0.  1.]
 [ 1.  0.  0.  1.]
 [ 1. -1.  1.  1.]
 [ 1. -1.  1.  1.]
 [ 1.  0.  0.  1.]
 [ 1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1.  1.]
 [-1.  0.  0.  1.]
 [-1.  1.  1.  1.]]
confusion matrix
[[ 9  0  2  0  0  0  0  0  9  0]
 [21  0  0  0  0  0  0  0  0  0]
 [16  0  3  0  0  0  0  0  3  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 4  0 11  0  0  0  0  0  0  0]
 [ 5  0  2  0  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.  0.2 0.2 0.  0.2 0.4 0.2 0.1 0.3]
 [0.  0.  0.2 0.2 0.  0.2 0.4 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.2 0.  0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.  0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.4 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.5  1.5  0.5 ]
 [0.   0.   1.   2.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.83, 0.41, 0.42, 0.926]
cutting matrix
[[ 1.  0.  1.]
 [ 1.  0.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  0.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1.  0.  1.]
 [-1.  1.  1.]]
cutting matrix's confusion matrix
[[ 9  0  2  0  0  0  0  0  9  0]
 [21  0  0  0  0  0  0  0  0  0]
 [16  0  3  0  0  0  0  0  3  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 4  0 11  0  0  0  0  0  0  0]
 [ 5  0  2  0  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-05 23:06:32
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
confusion matrix
[[14  0  2  0  0  4  0  0  0  0]
 [20  0  0  0  0  1  0  0  0  0]
 [ 7  0  3  0  0 12  0  0  0  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  0 11  0  0  2  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 0.  1.]
 [ 0.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 0.  1.]
 [ 0. -1.]]
confusion matrix
[[13  1  2  0  0  4  0  0  0  0]
 [ 5 15  0  0  0  1  0  0  0  0]
 [ 3  4  3  0  0 12  0  0  0  0]
 [ 0  5 14  0  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2 11  0  0  2  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.  0.1 0.  0.2 0.1 0.2]
 [0.  0.  0.2 0.2 0.1 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1.  0.]
 [ 0.  1.  0.]
 [ 0.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [ 0.  1.  1.]
 [ 0. -1. -1.]]
confusion matrix
[[11  1  0  2  2  0  0  0  4  0]
 [ 1 15  0  0  4  0  0  0  1  0]
 [ 3  4  0  3  0  0  0  0 12  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  0  2  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.1 0.2 0.  0.2 0.1 0.3]
 [0.  0.  0.2 0.3 0.2 0.3 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1. -1.  0. -1.]
 [ 0.  1.  0. -1.]
 [ 0.  1. -1.  1.]
 [-1.  1. -1.  0.]
 [ 1.  1. -1.  0.]
 [-1.  1.  1.  1.]
 [ 1. -1.  1.  0.]
 [ 0.  1.  1.  0.]
 [ 0. -1. -1. -1.]]
confusion matrix
[[11  1  6  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 13  2  0  0  0  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [ 2  2  5  0 17  0  0  0  0  0]
 [ 0  0 13  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  1  1  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.2 0.3 0.  0.3 0.2 0.4]
 [0.  0.  0.2 0.4 0.3 0.4 0.3 0.3 0.4 0.2]
 [0.  0.  0.  0.2 0.3 0.3 0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.75 2.  ]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1. -1.]
 [-1. -1.  0. -1. -1.]
 [ 0.  1.  0. -1.  1.]
 [ 0.  1. -1.  1. -1.]
 [-1.  1. -1.  0.  0.]
 [ 1.  1. -1.  0. -1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1.  1.  0.  1.]
 [ 0.  1.  1.  0.  0.]
 [ 0. -1. -1. -1. -1.]]
confusion matrix
[[ 2  1  4  0  2  2  9  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  1  0  1 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.3 0.4 0.2 0.3 0.3 0.1 0.4 0.3 0.4]
 [0.  0.  0.3 0.4 0.4 0.4 0.4 0.4 0.5 0.2]
 [0.  0.  0.  0.3 0.4 0.4 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.3 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.4 1.6 1.2]
 [0.  0.  1.2 1.  1.2]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1. -1.  0.]
 [-1. -1.  0. -1. -1.  1.]
 [ 0.  1.  0. -1.  1.  0.]
 [ 0.  1. -1.  1. -1.  1.]
 [-1.  1. -1.  0.  0. -1.]
 [ 1.  1. -1.  0. -1. -1.]
 [-1.  1.  1.  1.  1.  0.]
 [ 1. -1.  1.  0.  1.  0.]
 [ 0.  1.  1.  0.  0.  1.]
 [ 0. -1. -1. -1. -1.  0.]]
confusion matrix
[[ 2  1  4  0  2  2  9  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  1  0  1 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.4 0.4 0.3 0.4 0.4 0.1 0.4 0.4 0.4]
 [0.  0.  0.4 0.4 0.5 0.5 0.5 0.5 0.5 0.3]
 [0.  0.  0.  0.4 0.5 0.5 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.4 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.17 1.33 1.   1.17]
 [0.   0.   1.   0.83 1.   1.33]
 [0.   0.   0.   1.17 0.83 1.  ]
 [0.   0.   0.   0.   0.83 1.33]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
0
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1. -1.  0. -1.]
 [-1. -1.  0. -1. -1.  1.  0.]
 [ 0.  1.  0. -1.  1.  0.  0.]
 [ 0.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  0.  0. -1.  1.]
 [ 1.  1. -1.  0. -1. -1.  0.]
 [-1.  1.  1.  1.  1.  0. -1.]
 [ 1. -1.  1.  0.  1.  0.  1.]
 [ 0.  1.  1.  0.  0.  1.  1.]
 [ 0. -1. -1. -1. -1.  0.  0.]]
confusion matrix
[[ 2  1  4  0  4  0  9  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  2  1  0  3  0  0  0]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  1  1  0 14  0  0  0]
 [ 0  0  0  0 12  0  2  0  0  0]]
row HD
[[0.  0.5 0.5 0.4 0.5 0.5 0.1 0.5 0.5 0.5]
 [0.  0.  0.4 0.5 0.6 0.5 0.6 0.6 0.6 0.3]
 [0.  0.  0.  0.5 0.6 0.5 0.4 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.   1.14 0.86 1.   0.71]
 [0.   0.   0.86 0.71 0.86 1.14 1.  ]
 [0.   0.   0.   1.   0.71 0.86 0.86]
 [0.   0.   0.   0.   0.71 1.14 1.14]
 [0.   0.   0.   0.   0.   1.29 1.14]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1. -1.  0. -1.  0.]
 [-1. -1.  0. -1. -1.  1.  0.  0.]
 [ 0.  1.  0. -1.  1.  0.  0.  0.]
 [ 0.  1. -1.  1. -1.  1.  1.  0.]
 [-1.  1. -1.  0.  0. -1.  1.  1.]
 [ 1.  1. -1.  0. -1. -1.  0. -1.]
 [-1.  1.  1.  1.  1.  0. -1.  0.]
 [ 1. -1.  1.  0.  1.  0.  1.  0.]
 [ 0.  1.  1.  0.  0.  1.  1.  0.]
 [ 0. -1. -1. -1. -1.  0.  0.  0.]]
confusion matrix
[[ 2  1  4  0  4  0  9  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  2  1  0  3  0  0  0]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  1  1  0 14  0  0  0]
 [ 0  0  0  0 12  0  2  0  0  0]]
row HD
[[0.  0.5 0.5 0.4 0.6 0.6 0.1 0.5 0.5 0.5]
 [0.  0.  0.4 0.5 0.7 0.6 0.6 0.6 0.6 0.3]
 [0.  0.  0.  0.5 0.7 0.6 0.4 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.6 0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.88 1.   0.75 0.88 0.62 0.75]
 [0.   0.   0.75 0.62 0.75 1.   0.88 1.12]
 [0.   0.   0.   0.88 0.62 0.75 0.75 0.88]
 [0.   0.   0.   0.   0.62 1.   1.   1.  ]
 [0.   0.   0.   0.   0.   1.12 1.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.634, 0.761, 0.786, 0.755, 0.674, 0.699, 0.696, 0.405]
cutting matrix
[[ 1.  1. -1.  0. -1.  0.]
 [-1.  0. -1.  1.  0.  0.]
 [ 1.  0.  1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1.  0.]
 [ 1. -1.  0. -1.  1.  1.]
 [ 1. -1. -1. -1.  0. -1.]
 [ 1.  1.  1.  0. -1.  0.]
 [-1.  1.  1.  0.  1.  0.]
 [ 1.  1.  0.  1.  1.  0.]
 [-1. -1. -1.  0.  0.  0.]]
cutting matrix's confusion matrix
[[ 0  1  4  0  4  0  9  0  2  0]
 [ 0 15  1  0  4  0  0  0  1  0]
 [ 0  4 12  2  1  0  3  0  0  0]
 [ 0  5  0 13  1  0  0  0  0  0]
 [ 0  2  0  0 22  0  0  0  2  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  1  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  5  0]
 [ 0  0  0  0 12  0  2  0  0  0]]
算法备注：%d 实验结果和分析9的结果是来自同一个算法，只是为了多次实验看一下平均效果


SVM classifier
Time: 2019-01-06 13:30:11
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]]
