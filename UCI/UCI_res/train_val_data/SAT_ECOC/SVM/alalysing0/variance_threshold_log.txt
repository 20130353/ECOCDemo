算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:30:23
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 151, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.2 0.4 0.2 0. ]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.4 0.4 0.2 0. ]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1. -1. -1.  0.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.6 0.6 0.2 0. ]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  1.  ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.]
 [ 1. -1. -1.  0.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 114, 1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
4 classifiers pre label
Counter({-1.0: 54, 1.0: 2})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.8 0.8 0.2 0.2]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.8 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
4 classifiers pre label
Counter({-1.0: 54, 1.0: 2})
5 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.  1.  0.2 0.2]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.33 0.67 0.33 0.17]
 [0.   0.   0.5  0.33 0.5  0.67]
 [0.   0.   0.   0.83 0.33 0.17]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:30:43
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 4  0  0  0  3]
 [ 2  0  2  0  3]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.4 0.4 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.  0.6 0.4 0.4]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.25]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1. -1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.2 0.8 0.6 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.2 0.2]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1. -1.  0.]
 [-1. -1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 36, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  2  0]
 [ 0  5  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.2 1.  0.8 0.6]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.33 0.17 0.17 0.83]
 [0.   0.   0.5  0.33 0.33 0.67]
 [0.   0.   0.   0.5  0.17 0.83]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1. -1.  0.  0.]
 [-1. -1.  1. -1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 37, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({0.0: 38, 1.0: 10, -1.0: 8})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  2  0  3  0]
 [ 0  5  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.4 1.2 1.  0.8]
 [0.  0.  1.  0.8 0.8]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.29 0.14 0.14 0.71 0.71]
 [0.   0.   0.43 0.29 0.29 0.57 0.57]
 [0.   0.   0.   0.43 0.14 0.71 0.57]
 [0.   0.   0.   0.   0.29 0.57 0.57]
 [0.   0.   0.   0.   0.   0.71 0.57]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1. -1.  0.  0.  0.]
 [-1. -1.  1. -1.  1.  0.  1.  0.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 37, -1.0: 36})
Counter({1.0: 21, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({0.0: 38, 1.0: 10, -1.0: 8})
7 classifiers pre label
Counter({0.0: 50, 1.0: 6})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  2  0  3  0]
 [ 0  5  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.4 1.4 1.2 1. ]
 [0.  0.  1.2 1.  1. ]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.25 0.12 0.12 0.62 0.62 0.38]
 [0.   0.   0.38 0.25 0.25 0.5  0.5  0.5 ]
 [0.   0.   0.   0.38 0.12 0.62 0.5  0.38]
 [0.   0.   0.   0.   0.25 0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.62 0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:32:30
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:32:44
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1.]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 43, -1.0: 13})
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 6  1  0  0  0]
 [ 2  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{2: True, 3: True, '1': None, 4: True, '2': None, '0': None, '4': None, '3': None}
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:33:35
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{1: True, '3': None, 3: True, 4: True, 2: True, '2': None, '1': None, '0': None, '4': None}
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:36:20
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 130, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.4 0.2 0. ]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [ 1.  1. -1.]
 [ 1. -1.  0.]
 [-1. -1.  0.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 31, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({0.0: 44, -1.0: 12})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  0.  0.  1.]
select_j_column
[ 1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0.  1.]
 [ 1.  1. -1.  0.]
 [ 1. -1.  0. -1.]
 [-1. -1.  0. -1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 93, -1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({0.0: 44, -1.0: 12})
3 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
confusion matrix
[[29  0  0  0  1]
 [ 6  0  0  0  3]
 [ 5  0  0  0  2]
 [ 1  0  0  2  4]
 [ 1  0  0  1  1]]
row HD
[[0.  0.6 0.6 0.4 0.4]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.25 0.75]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  1.  0.  1.]
 [ 1.  1. -1.  0.]
 [ 1. -1.  0. -1.]
 [-1. -1.  0. -1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 93, -1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({0.0: 44, -1.0: 12})
3 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
confusion matrix
[[29  0  0  0  1]
 [ 6  0  0  0  3]
 [ 5  0  0  0  2]
 [ 1  0  0  2  4]
 [ 1  0  0  1  1]]
row HD
[[0.  0.6 0.6 0.4 0.4]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.25 0.75]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0.  1. -1.]
 [ 1.  1. -1.  0. -1.]
 [ 1. -1.  0. -1.  1.]
 [-1. -1.  0. -1. -1.]
 [-1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 93, -1.0: 42})
Counter({-1.0: 151, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({0.0: 44, -1.0: 12})
3 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
4 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  0  1]
 [ 6  0  0  0  3]
 [ 5  0  0  0  2]
 [ 1  0  0  2  4]
 [ 1  0  0  1  1]]
row HD
[[0.  0.6 0.8 0.4 0.4]
 [0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 1.  0.6 0.2]
 [0.  0.  0.8 0.4 0.8]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[ 0. -1.  0.  0.  1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0.  1. -1.  0.]
 [ 1.  1. -1.  0. -1. -1.]
 [ 1. -1.  0. -1.  1.  1.]
 [-1. -1.  0. -1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 93, -1.0: 42})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 42, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({0.0: 44, -1.0: 12})
3 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({0.0: 38, 1.0: 12, -1.0: 6})
confusion matrix
[[29  0  0  0  1]
 [ 6  0  0  0  3]
 [ 5  0  0  0  2]
 [ 1  0  0  2  4]
 [ 1  0  0  1  1]]
row HD
[[0.  0.8 1.  0.6 0.6]
 [0.  0.  1.  1.  0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.83 0.5  0.17 0.67]
 [0.   0.   0.67 0.33 0.67 0.67]
 [0.   0.   0.   0.83 0.67 0.33]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
efficient_count == 3
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:37:16
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.4 0.2 0.2 0. ]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.4 0. ]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1. -1.]
 [-1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.4 0. ]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.5 ]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.]
 [-1.  1.  1. -1.  1.]
 [-1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.4 0.2]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:41:30
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0. ]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.5 ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  0.]
 [-1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 50, 0.0: 6})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  2  0  0]
 [ 5  0  2  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.2]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.4 0.8]
 [0.  0.  0.2 0.6 1. ]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:47:19
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
confusion matrix
[[25  5  0  0  0]
 [ 4  5  0  0  0]
 [ 3  4  0  0  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0. ]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  0.  0.]
 [ 1. -1. -1.]
 [ 1. -1.  0.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
2 classifiers pre label
Counter({1.0: 42, 0.0: 14})
confusion matrix
[[25  5  0  0  0]
 [ 4  5  0  0  0]
 [ 3  4  0  0  0]
 [ 1  4  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.4 0.6 0.6 0. ]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1.  0.  0. -1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  0.  1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
2 classifiers pre label
Counter({1.0: 42, 0.0: 14})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  2  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.6 0.6 0.6 0. ]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.25 0.5 ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1.  1.]
 [-1.  0.  0. -1.  1.]
 [ 1. -1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
2 classifiers pre label
Counter({1.0: 42, 0.0: 14})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.6 0.8 0. ]
 [0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.  0.4 0.8]
 [0.  0.  0.2 0.6 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.  1.  0.]
 [-1.  0.  0. -1.  1.  0.]
 [ 1. -1. -1.  1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
2 classifiers pre label
Counter({1.0: 42, 0.0: 14})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  1  0  0]
 [ 5  0  2  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.8 1.  0.2]
 [0.  0.  1.  1.  0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.83 0.33 0.67 0.83]
 [0.   0.   0.17 0.5  0.33 0.17]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})

**********      classifier acc  **************
[0.768, 0.66, 0.675, 0.839, 0.875, 0.176, 0.25, 0.071, 0.071, 0.1]
before cutting matrix
[[-1.  1.  1.  1.  1.  0.  0.  0.  0.  0.]
 [-1.  0.  0. -1.  1.  0.  1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1.  0.  1. -1. -1.  0. -1.  1.  0.]
 [-1.  1.  1.  1.  1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 99, -1.0: 15})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 99, -1.0: 15})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 21, 1.0: 15})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 15})
after cutting matrix
[[-1.  1.  1.  0.  0.  0.  0.]
 [-1. -1.  1.  0.  0.  0.  0.]
 [ 1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  0.]
 [-1.  1.  1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 6  0  0  1  0]
 [ 2  0  0  1  0]]


SVM classifier
Time: 2019-01-06 16:47:21
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0. -1.]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 3  2  2  0  0]
 [ 0  2  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0. -1.]
 [-1.  0.]
 [ 0.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[26  0  0  4  0]
 [ 6  0  0  3  0]
 [ 4  0  0  3  0]
 [ 3  0  1  2  1]
 [ 0  0  1  2  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 0. -1.  1.]
 [-1.  0. -1.]
 [ 0.  1.  0.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[26  0  0  4  0]
 [ 6  0  0  3  0]
 [ 4  0  0  3  0]
 [ 3  0  0  3  1]
 [ 0  0  0  2  1]]
row HD
[[0.  0.6 0.6 0.2 0.4]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  0.]
 [ 0. -1.  1.  1.]
 [-1.  0. -1. -1.]
 [ 0.  1.  0.  0.]
 [-1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 40, 1.0: 16})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[26  0  0  4  0]
 [ 5  1  0  3  0]
 [ 3  1  0  3  0]
 [ 3  1  0  3  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 0.8 0.2 0.4]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 0.75]
 [0.   0.   1.   1.25]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  0.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  0.  0.]
 [ 0. -1.  1.  1. -1.]
 [-1.  0. -1. -1. -1.]
 [ 0.  1.  0.  0.  1.]
 [-1.  1.  1.  0.  0.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 40, 1.0: 16})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[26  0  0  0  4]
 [ 5  1  0  0  3]
 [ 4  1  0  0  2]
 [ 3  1  0  0  3]
 [ 1  1  0  0  1]]
row HD
[[0.  1.  1.  0.4 0.4]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.6 0.8]
 [0.  0.  0.8 1.  0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  0.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  0.  0.  0.]
 [ 0. -1.  1.  1. -1.  1.]
 [-1.  0. -1. -1. -1. -1.]
 [ 0.  1.  0.  0.  1.  0.]
 [-1.  1.  1.  0.  0. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 40, 1.0: 16})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({0.0: 38, -1.0: 18})
5 classifiers pre label
Counter({0.0: 40, 1.0: 15, -1.0: 1})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 3  2  0  1  1]
 [ 1  2  0  0  0]]
row HD
[[0.  1.2 1.2 0.4 0.6]
 [0.  0.  1.  1.  1. ]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.5  0.67 0.33]
 [0.   0.   0.67 0.83 0.5  0.83]
 [0.   0.   0.   0.17 0.5  0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})

**********      classifier acc  **************
[0.675, 0.776, 0.316, 0.25, 0.348, 0.211, 0.071, 0.071, 0.1]
before cutting matrix
[[ 1.  1.  0.  0.  0.  0.  0.  0.  0.]
 [ 0. -1.  1.  1. -1.  1.  0.  0.  0.]
 [-1.  0. -1. -1. -1. -1.  1. -1. -1.]
 [ 0.  1.  0.  0.  1.  0. -1.  1.  0.]
 [-1.  1.  1.  0.  0. -1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 37, -1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 37, -1.0: 15})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 46, 1.0: 21})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 46, 1.0: 21})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 21})
after cutting matrix
[[ 1.  0.  0.  0.]
 [-1.  0.  0.  0.]
 [ 0.  1. -1. -1.]
 [ 1. -1.  1.  0.]
 [ 1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  0  0  1  0]
 [ 5  0  0  2  0]
 [ 6  0  0  1  0]
 [ 1  0  0  2  0]]


SVM classifier
Time: 2019-01-06 16:47:22
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
None


============== iter  2 ================
current matrix is 
[-1. -1.  1. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.   0.   0.33]
 [0.   0.   0.17 0.   0.   0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  0.]
 [-1. -1.  1.]
 [ 1. -1.  0.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.5 ]
 [0.   0.   0.33 0.   0.   0.5 ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 2.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[-1. -1.  0.  0.]
 [-1. -1.  1.  1.]
 [ 1. -1.  0. -1.]
 [-1. -1.  1.  1.]
 [-1. -1.  1.  1.]
 [ 1.  1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 2  2  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.33 0.33 0.5 ]
 [0.   0.   0.5  0.   0.   0.67]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 1.5  1.5 ]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 0.  1. -1.  1.  1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  0.  0.  1.]
 [-1. -1.  1.  1. -1.]
 [ 1. -1.  0. -1.  0.]
 [-1. -1.  1.  1.  0.]
 [-1. -1.  1.  1.  0.]
 [ 1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.5  0.5  0.5  0.5  0.67]
 [0.   0.   0.67 0.17 0.17 0.67]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 1.2 1.2 1. ]
 [0.  0.  1.2 1.  1. ]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  0.  0.  0. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.]
 [-1. -1.  1.  1. -1.  1.]
 [ 1. -1.  0. -1.  0.  1.]
 [-1. -1.  1.  1.  0. -1.]
 [-1. -1.  1.  1.  0. -1.]
 [ 1.  1. -1.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 11  0  2  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  2  0  2  0  0]]
row HD
[[0.   0.67 0.67 0.5  0.5  0.83]
 [0.   0.   0.67 0.33 0.33 0.83]
 [0.   0.   0.   0.67 0.67 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 1.   1.   0.83 0.33]
 [0.   0.   1.   0.83 0.83 0.5 ]
 [0.   0.   0.   0.33 0.67 0.83]
 [0.   0.   0.   0.   1.   0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.]
 [-1. -1.  1.  1. -1.  1.  0.]
 [ 1. -1.  0. -1.  0.  1.  0.]
 [-1. -1.  1.  1.  0. -1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.]
 [ 1.  1. -1.  0. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 11  0  2  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  2  0  2  0  0]]
row HD
[[0.   0.67 0.67 0.67 0.67 1.  ]
 [0.   0.   0.67 0.5  0.5  1.  ]
 [0.   0.   0.   0.83 0.83 1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.14 0.86 0.86 0.71 0.29 0.43]
 [0.   0.   0.86 0.71 0.71 0.43 0.43]
 [0.   0.   0.   0.29 0.57 0.71 0.57]
 [0.   0.   0.   0.   0.86 0.57 0.71]
 [0.   0.   0.   0.   0.   0.86 0.71]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  1.  0.  1.  1. -1.]
select_j_column
[ 1. -1.  0.  0.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 34 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 50 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0.]
 [-1. -1.  1.  1. -1.  1.  0. -1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  0.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 11  0  2  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  0  0  4  0  0]]
row HD
[[0.   0.83 0.67 0.67 0.67 1.17]
 [0.   0.   0.83 0.67 0.67 1.17]
 [0.   0.   0.   0.83 0.83 1.17]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.12 0.75 0.75 0.62 0.25 0.38 0.5 ]
 [0.   0.   0.75 0.62 0.62 0.38 0.38 0.5 ]
 [0.   0.   0.   0.25 0.5  0.62 0.5  0.5 ]
 [0.   0.   0.   0.   0.75 0.5  0.62 0.62]
 [0.   0.   0.   0.   0.   0.75 0.62 0.25]
 [0.   0.   0.   0.   0.   0.   0.5  0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1.  1.  1. -1. -1.  0.]
select_j_column
[-1. -1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0. -1.]
 [-1. -1.  1.  1. -1.  1.  0. -1.  1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.  1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
8 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  3  0  1  0  0]]
row HD
[[0.   1.   0.83 0.67 0.67 1.33]
 [0.   0.   0.83 0.83 0.83 1.17]
 [0.   0.   0.   1.   1.   1.17]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.11 0.67 0.67 0.56 0.22 0.33 0.44 0.11]
 [0.   0.   0.67 0.56 0.56 0.33 0.33 0.44 0.22]
 [0.   0.   0.   0.22 0.44 0.56 0.44 0.44 0.56]
 [0.   0.   0.   0.   0.67 0.44 0.56 0.56 0.56]
 [0.   0.   0.   0.   0.   0.67 0.56 0.22 0.67]
 [0.   0.   0.   0.   0.   0.   0.44 0.67 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0. -1.  1.]
 [-1. -1.  1.  1. -1.  1.  0. -1.  1.  1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.  1.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
Counter({1.0: 153, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
8 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
9 classifiers pre label
Counter({1.0: 53, 0.0: 14})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  3  0  1  0  0]]
row HD
[[0.   1.   1.   0.67 0.67 1.5 ]
 [0.   0.   1.   0.83 0.83 1.33]
 [0.   0.   0.   1.17 1.17 1.33]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.1 0.6 0.6 0.5 0.2 0.3 0.4 0.1 0.6]
 [0.  0.  0.6 0.5 0.5 0.3 0.3 0.4 0.2 0.6]
 [0.  0.  0.  0.2 0.4 0.5 0.4 0.4 0.5 0.1]
 [0.  0.  0.  0.  0.6 0.4 0.5 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.6 0.5 0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  0.  0.  0. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0. -1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.  0. -1.  1.  1. -1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.  1.  0.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.  1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 93, 1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
8 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
9 classifiers pre label
Counter({1.0: 53, 0.0: 14})
10 classifiers pre label
Counter({-1.0: 33, 1.0: 18, 0.0: 16})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  3  0  1  0  0]]
row HD
[[0.   1.17 1.17 0.83 0.83 1.67]
 [0.   0.   1.17 0.83 0.83 1.5 ]
 [0.   0.   0.   1.33 1.33 1.33]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.09 0.55 0.55 0.45 0.18 0.27 0.36 0.09 0.55 0.27]
 [0.   0.   0.55 0.45 0.45 0.27 0.27 0.36 0.18 0.55 0.27]
 [0.   0.   0.   0.18 0.36 0.45 0.36 0.36 0.45 0.09 0.45]
 [0.   0.   0.   0.   0.55 0.36 0.45 0.45 0.45 0.27 0.45]
 [0.   0.   0.   0.   0.   0.55 0.45 0.18 0.55 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.36 0.55 0.09 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.45 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  0.  1.  1. -1.]
select_j_column
[ 1. -1.  0. -1. -1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0. -1.  1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.  0. -1.  1.  1. -1. -1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.  1.  0.  0.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1. -1.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 93, 1.0: 60})
Counter({-1.0: 103, 1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
8 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
9 classifiers pre label
Counter({1.0: 53, 0.0: 14})
10 classifiers pre label
Counter({-1.0: 33, 1.0: 18, 0.0: 16})
11 classifiers pre label
Counter({-1.0: 35, 1.0: 18, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  3  0  1  0  0]]
row HD
[[0.   1.33 1.33 1.   1.   1.83]
 [0.   0.   1.33 0.83 0.83 1.5 ]
 [0.   0.   0.   1.5  1.5  1.5 ]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.08 0.5  0.5  0.42 0.17 0.25 0.33 0.08 0.5  0.25 0.25]
 [0.   0.   0.5  0.42 0.42 0.25 0.25 0.33 0.17 0.5  0.25 0.25]
 [0.   0.   0.   0.17 0.33 0.42 0.33 0.33 0.42 0.08 0.42 0.33]
 [0.   0.   0.   0.   0.5  0.33 0.42 0.42 0.42 0.25 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.42 0.17 0.5  0.25 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.33 0.5  0.08 0.42 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.42 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0. -1.  0.  0.  0.  1.]
select_j_column
[ 0. -1.  0.  0.  0.  1.]
most_cplx_inx
4
new_column
None


============== iter  14 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0. -1.  1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.  0. -1.  1.  1. -1. -1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.  1.  0.  0.  0.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1. -1.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 93, 1.0: 60})
Counter({-1.0: 103, 1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
8 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
9 classifiers pre label
Counter({1.0: 53, 0.0: 14})
10 classifiers pre label
Counter({-1.0: 33, 1.0: 18, 0.0: 16})
11 classifiers pre label
Counter({-1.0: 35, 1.0: 18, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  3  0  1  0  0]]
row HD
[[0.   1.33 1.33 1.   1.   1.83]
 [0.   0.   1.33 0.83 0.83 1.5 ]
 [0.   0.   0.   1.5  1.5  1.5 ]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.08 0.5  0.5  0.42 0.17 0.25 0.33 0.08 0.5  0.25 0.25]
 [0.   0.   0.5  0.42 0.42 0.25 0.25 0.33 0.17 0.5  0.25 0.25]
 [0.   0.   0.   0.17 0.33 0.42 0.33 0.33 0.42 0.08 0.42 0.33]
 [0.   0.   0.   0.   0.5  0.33 0.42 0.42 0.42 0.25 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.42 0.17 0.5  0.25 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.33 0.5  0.08 0.42 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.42 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.  0.  0. -1.  1.  1.  1.  1.]
 [-1. -1.  1.  1. -1.  1.  0. -1.  1.  1. -1. -1.  1.]
 [ 1. -1.  0. -1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1. -1. -1.]
 [-1. -1.  1.  1.  0. -1. -1.  0. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  0. -1.  0.  1.  1.  1. -1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 93, 1.0: 60})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 136, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({-1.0: 67})
2 classifiers pre label
Counter({1.0: 36, 0.0: 31})
3 classifiers pre label
Counter({1.0: 34, 0.0: 19, -1.0: 14})
4 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 39, 1.0: 26, 0.0: 2})
6 classifiers pre label
Counter({0.0: 47, -1.0: 20})
7 classifiers pre label
Counter({0.0: 49, -1.0: 16, 1.0: 2})
8 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
9 classifiers pre label
Counter({1.0: 53, 0.0: 14})
10 classifiers pre label
Counter({-1.0: 33, 1.0: 18, 0.0: 16})
11 classifiers pre label
Counter({-1.0: 35, 1.0: 18, 0.0: 14})
12 classifiers pre label
Counter({1.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  0  0  4  0  0]]
row HD
[[0.   1.33 1.33 1.17 1.17 2.  ]
 [0.   0.   1.33 1.   1.   1.67]
 [0.   0.   0.   1.67 1.67 1.67]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.08 0.46 0.46 0.38 0.15 0.23 0.31 0.08 0.46 0.23 0.23 0.23]
 [0.   0.   0.46 0.38 0.38 0.23 0.23 0.31 0.15 0.46 0.23 0.23 0.31]
 [0.   0.   0.   0.15 0.31 0.38 0.31 0.31 0.38 0.08 0.38 0.31 0.31]
 [0.   0.   0.   0.   0.46 0.31 0.38 0.38 0.38 0.23 0.38 0.46 0.38]
 [0.   0.   0.   0.   0.   0.46 0.38 0.15 0.46 0.23 0.23 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.31 0.46 0.08 0.38 0.23 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.38 0.23 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.31 0.31 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.31 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 191, 1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 93, -1.0: 38})
Counter({1.0: 60, -1.0: 48})
Counter({-1.0: 115, 1.0: 76})
Counter({-1.0: 55, 1.0: 10})
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 115, 1.0: 86})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 93, 1.0: 60})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 26})
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:48:40
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.2 0.4 0.2 0. ]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0. ]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  1.  1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})

**********      classifier acc  **************
[0.839, 0.875, 0.875, 0.786, 0.188, 0.071, 0.071, 0.0]
before cutting matrix
[[-1. -1.  1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1.  1.  1.  0.  0.  0.]
 [ 1.  1.  1. -1.  0.  1. -1.  0.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.]
 [-1. -1.  1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 21})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({-1.0: 21, 1.0: 15})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 15})
after cutting matrix
[[-1. -1.  1. -1.  0.  0.]
 [ 1. -1.  1.  1.  1.  0.]
 [ 1.  1.  1. -1.  0.  0.]
 [ 1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 21, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]


SVM classifier
Time: 2019-01-06 16:49:51
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  1. -1.]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({0.0: 42, 1.0: 14})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.2 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  1.]
 [ 1.  0. -1.]
 [ 0.  1.  1.]
 [ 1. -1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 7  0  0  0  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1.  0.]
 [ 1.  0. -1.  1.]
 [ 0.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.8 0.4 0.8]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.25]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  1.  0.  0.]
 [ 1.  0. -1.  1.  1.]
 [ 0.  1.  1. -1.  0.]
 [ 1. -1.  1.  1. -1.]
 [-1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 42, 1.0: 12, -1.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 6  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.8 0.8]
 [0.  0.  1.  0.6 1. ]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.8 0.2 0.2]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  0.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  1.  0.  0.  0.]
 [ 1.  0. -1.  1.  1.  1.]
 [ 0.  1.  1. -1.  0.  1.]
 [ 1. -1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 42, 1.0: 12, -1.0: 2})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.  0.6 1.  1. ]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67 0.17 0.17 0.5 ]
 [0.   0.   0.5  0.67 0.5  0.17]
 [0.   0.   0.   0.67 0.83 0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  1.  0.  0.  0.  0.]
 [ 1.  0. -1.  1.  1.  1.  1.]
 [ 0.  1.  1. -1.  0.  1. -1.]
 [ 1. -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 42, 1.0: 12, -1.0: 2})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 6  1  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  1.2 0.8 1.2 1. ]
 [0.  0.  1.2 0.8 1.2]
 [0.  0.  0.  1.2 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.14 0.14 0.43 0.29]
 [0.   0.   0.43 0.57 0.43 0.14 0.57]
 [0.   0.   0.   0.57 0.71 0.43 0.57]
 [0.   0.   0.   0.   0.29 0.43 0.14]
 [0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})

**********      classifier acc  **************
[0.263, 0.059, 0.839, 0.269, 0.211, 0.423, 0.304, 0.071, 0.071, 0.0]
before cutting matrix
[[ 0.  0.  1.  0.  0.  0.  0.  0.  0.  0.]
 [ 1.  0. -1.  1.  1.  1.  1.  0.  0.  0.]
 [ 0.  1.  1. -1.  0.  1. -1.  1. -1.  0.]
 [ 1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1.  1.  1. -1. -1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 31, -1.0: 27})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 27})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 52, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 15})
after cutting matrix
[[ 0.  1.  0.  0.  0.]
 [ 0. -1.  0.  0.  0.]
 [ 1.  1.  1. -1.  0.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 21, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  0  0  1  0]
 [ 5  0  0  2  0]
 [ 6  0  0  1  0]
 [ 1  0  0  2  0]]


SVM classifier
Time: 2019-01-06 16:50:22
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 3  0  4  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  2  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.   0.33]
 [0.   0.   0.17 0.17 0.   0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 2  0  3  0  2  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 14  1  0  0]
 [ 2  0  0  3  2  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.33 0.17 0.5 ]
 [0.   0.   0.5  0.33 0.17 0.5 ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.   1.25]
 [0.   0.   1.   0.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  2  1  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.8 1.  0.6]
 [0.  0.  0.8 0.2 0.6]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
None


============== iter  6 ================
current matrix is 
[[ 1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  2  1  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.8 1.  0.6]
 [0.  0.  0.8 0.2 0.6]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
5 classifiers pre label
Counter({-1.0: 52, 1.0: 13, 0.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.67 0.5  0.67]
 [0.   0.   0.5  0.67 0.5  0.67]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.67 0.83 0.5  0.67]
 [0.   0.   0.67 0.17 0.5  0.5 ]
 [0.   0.   0.   0.5  0.17 0.83]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
5 classifiers pre label
Counter({-1.0: 52, 1.0: 13, 0.0: 2})
6 classifiers pre label
Counter({1.0: 63, -1.0: 4})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.5  0.83 0.5  0.83]
 [0.   0.   0.5  0.83 0.5  0.83]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.57 0.71 0.43 0.57 0.14]
 [0.   0.   0.57 0.14 0.43 0.43 0.71]
 [0.   0.   0.   0.43 0.14 0.71 0.43]
 [0.   0.   0.   0.   0.29 0.57 0.57]
 [0.   0.   0.   0.   0.   0.86 0.29]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  0. -1. -1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
5 classifiers pre label
Counter({-1.0: 52, 1.0: 13, 0.0: 2})
6 classifiers pre label
Counter({1.0: 63, -1.0: 4})
7 classifiers pre label
Counter({1.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  0  3  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.5  1.   0.67 1.  ]
 [0.   0.   0.5  1.   0.67 1.  ]
 [0.   0.   0.   0.83 0.83 0.83]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  0.62 0.38 0.5  0.12 0.25]
 [0.   0.   0.5  0.12 0.38 0.38 0.62 0.5 ]
 [0.   0.   0.   0.38 0.12 0.62 0.38 0.25]
 [0.   0.   0.   0.   0.25 0.5  0.5  0.38]
 [0.   0.   0.   0.   0.   0.75 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.62 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 19 dimension of F1 is zero!
ERROR-F1: the denominator of the 21 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  0. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
5 classifiers pre label
Counter({-1.0: 52, 1.0: 13, 0.0: 2})
6 classifiers pre label
Counter({1.0: 63, -1.0: 4})
7 classifiers pre label
Counter({1.0: 47, -1.0: 20})
8 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  0  2  1  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.67 1.17 0.67 1.  ]
 [0.   0.   0.67 1.17 0.67 1.  ]
 [0.   0.   0.   0.83 1.   1.  ]
 [0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.44 0.44 0.56 0.33 0.44 0.11 0.22 0.33]
 [0.   0.   0.44 0.11 0.33 0.33 0.56 0.44 0.11]
 [0.   0.   0.   0.33 0.11 0.56 0.33 0.22 0.56]
 [0.   0.   0.   0.   0.22 0.44 0.44 0.33 0.22]
 [0.   0.   0.   0.   0.   0.67 0.22 0.11 0.44]
 [0.   0.   0.   0.   0.   0.   0.56 0.67 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
None


============== iter  11 ================
current matrix is 
[[ 1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  0. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 21})
2 classifiers pre label
Counter({1.0: 37, -1.0: 30})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 56, -1.0: 11})
5 classifiers pre label
Counter({-1.0: 52, 1.0: 13, 0.0: 2})
6 classifiers pre label
Counter({1.0: 63, -1.0: 4})
7 classifiers pre label
Counter({1.0: 47, -1.0: 20})
8 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 4  0  0  2  1  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.67 1.17 0.67 1.  ]
 [0.   0.   0.67 1.17 0.67 1.  ]
 [0.   0.   0.   0.83 1.   1.  ]
 [0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.44 0.44 0.56 0.33 0.44 0.11 0.22 0.33]
 [0.   0.   0.44 0.11 0.33 0.33 0.56 0.44 0.11]
 [0.   0.   0.   0.33 0.11 0.56 0.33 0.22 0.56]
 [0.   0.   0.   0.   0.22 0.44 0.44 0.33 0.22]
 [0.   0.   0.   0.   0.   0.67 0.22 0.11 0.44]
 [0.   0.   0.   0.   0.   0.   0.56 0.67 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})

**********      classifier acc  **************
[0.94, 0.925, 0.97, 0.925, 0.91, 0.937, 0.896, 0.955, 0.896, 0.964, 0.8, 0.727]
before cutting matrix
[[ 1. -1.  1. -1.  1. -1.  1.  1. -1.  0.  0.  0.]
 [ 1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  0.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1. -1.  0.  0.]
 [ 1.  1. -1. -1. -1.  1. -1. -1.  1.  0.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1.  0.  0.  0.]
 [-1.  1.  1.  1.  1.  0. -1. -1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 124, 1.0: 77})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({-1.0: 124, 1.0: 77})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 136, 1.0: 55})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 55})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 162, -1.0: 39})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 29, 1.0: 10})
positive and negative ratio
Counter({-1.0: 38, 1.0: 29})
after cutting matrix
[[ 1.  1.  1.  1.  0.  0.]
 [ 1.  1.  1.  1.  1.  0.]
 [ 1. -1.  1.  1. -1.  0.]
 [ 1. -1. -1. -1.  0. -1.]
 [ 1. -1.  1. -1.  0.  0.]
 [-1.  1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 29, 1.0: 10})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 2  1  0  2  2  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-06 16:50:37
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0.  0.  0.]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
confusion matrix
[[17  0  1  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0 10  0  0  0]
 [ 1  1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [-1.  1.]
 [ 0. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 67, -1.0: 64})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
confusion matrix
[[17  0  1  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0 10  0  0  0]
 [ 1  1  0  0  0  2]]
row HD
[[0.   0.33 0.33 0.33 0.33 0.17]
 [0.   0.   0.33 0.17 0.33 0.33]
 [0.   0.   0.   0.17 0.   0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  1. -1.  1. -1.  0.]
select_j_column
[ 1.  0. -1. -1.  0. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0. -1.]
 [-1.  1.  1.]
 [ 0. -1.  0.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 40, 0.0: 14, 1.0: 13})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 11  0  2  0  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  1  0  2]]
row HD
[[0.   0.5  0.5  0.33 0.33 0.33]
 [0.   0.   0.5  0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})

**********      classifier acc  **************
[0.935, 1.0, 0.923]
before cutting matrix
[[ 1.  0. -1.]
 [-1.  1.  1.]
 [ 0. -1.  0.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
positive and negative ratio
Counter({-1.0: 115, 1.0: 48})
after cutting matrix
[[ 0. -1.]
 [ 1.  1.]
 [-1.  0.]
 [ 1. -1.]
 [-1. -1.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 115, 1.0: 48})
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 0 11  0  2  0  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  2  0  2]]


SVM classifier
Time: 2019-01-06 16:50:42
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({1.0: 96, -1.0: 92})
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 8 14  0  0  0  0  0  0  0  0]
 [12  4  0  0  0  0  0  0  0  0]
 [ 5 12  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  0  0  0  0  0]
 [ 1 14  0  0  0  0  0  0  0  0]
 [17  3  0  0  0  0  0  0  0  0]
 [ 6 16  0  0  0  0  0  0  0  0]
 [12  1  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
confusion matrix
[[12  0  5  0  0  0  0  0  0  0]
 [ 0 21  5  0  0  0  0  0  0  0]
 [ 8  1 13  0  0  0  0  0  0  0]
 [12  0  4  0  0  0  0  0  0  0]
 [ 4  1 11  0  0  0  0  1  0  0]
 [19  0  1  0  0  0  0  0  0  0]
 [ 1  0 14  0  0  0  0  0  0  0]
 [ 4  3  0  0  0  0  0 13  0  0]
 [ 6  0 16  0  0  0  0  0  0  0]
 [12  0  1  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.1 0.2 0.1 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
confusion matrix
[[ 9  0  2  3  3  0  0  0  0  0]
 [ 0 21  5  0  0  0  0  0  0  0]
 [ 0  1 13  8  0  0  0  0  0  0]
 [ 1  0  4 11  0  0  0  0  0  0]
 [ 4  1  2  1  9  0  0  0  0  0]
 [ 2  0  1 17  0  0  0  0  0  0]
 [ 0  0 13  1  1  0  0  0  0  0]
 [ 0  3  0  4  0  0  0 13  0  0]
 [ 5  0 16  1  0  0  0  0  0  0]
 [10  0  0  2  1  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.1 0.1 0.1 0.2 0.2 0.2 0. ]
 [0.  0.  0.1 0.2 0.2 0.2 0.1 0.1 0.1 0.3]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.2 0.  0.2]
 [0.  0.  0.  0.  0.2 0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
confusion matrix
[[10  0  0  1  3  0  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 4  1 11  4  0  0  0  0  2  0]
 [ 0  0  1 11  0  0  0  0  3  1]
 [ 0  0  1  1 10  0  0  1  1  3]
 [ 0  0  1 17  0  0  0  0  0  2]
 [ 0  0  9  1  1  0  0  0  4  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  5  1  0  0  0  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.4 0.2 0.2 0.1 0.2 0.2 0.3 0.3 0.1]
 [0.  0.  0.2 0.2 0.3 0.2 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.2 0.1 0.2 0.  0.3 0.1 0.3]
 [0.  0.  0.  0.  0.3 0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.5  0.75]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
confusion matrix
[[10  0  0  1  3  0  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  1 15  4  0  0  0  0  2  0]
 [ 0  0  1 11  0  0  0  0  3  1]
 [ 0  0  1  1 10  0  0  1  1  3]
 [ 0  0  0 17  0  0  1  0  0  2]
 [ 1  0  2  1  0  0  7  0  4  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  1  0  0  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.5 0.3 0.3 0.2 0.3 0.2 0.3 0.4 0.2]
 [0.  0.  0.2 0.2 0.3 0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.3 0.  0.3 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.5 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.2 0.6 1.2]
 [0.  0.  1.  0.8 1.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1. -1. -1. -1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  1  0  1  0  0  0  4  0]
 [ 0  0 16  2  0  2  0  0  2  0]
 [ 0  0  1  8  0  3  0  0  3  1]
 [ 0  0  1  0 10  2  0  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  3  0  0  1  7  0  3  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  2  0  0  0  8]]
row HD
[[0.  0.6 0.3 0.4 0.2 0.3 0.2 0.4 0.5 0.3]
 [0.  0.  0.3 0.2 0.4 0.3 0.4 0.2 0.1 0.3]
 [0.  0.  0.  0.3 0.1 0.2 0.1 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.4 0.1 0.4 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.   0.5  1.   0.67]
 [0.   0.   0.83 0.67 1.17 0.5 ]
 [0.   0.   0.   0.5  0.67 0.67]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 16  2  0  2  0  0  2  0]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  2  0  9  2  0  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  3  0  1  1  6  0  4  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  2  0  0  0  8]]
row HD
[[0.  0.7 0.3 0.5 0.3 0.3 0.3 0.4 0.6 0.3]
 [0.  0.  0.4 0.2 0.4 0.4 0.4 0.3 0.1 0.4]
 [0.  0.  0.  0.4 0.2 0.2 0.2 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.4 0.2 0.7 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.86 0.43 0.86 0.57 1.14]
 [0.   0.   0.71 0.57 1.   0.43 0.71]
 [0.   0.   0.   0.43 0.57 0.57 0.57]
 [0.   0.   0.   0.   0.43 0.14 0.71]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 16  2  0  2  0  0  2  0]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  1  0 10  2  0  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  2  0  2  1  7  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  2  0  0  0  8]]
row HD
[[0.  0.8 0.4 0.6 0.3 0.4 0.3 0.5 0.7 0.4]
 [0.  0.  0.4 0.2 0.5 0.4 0.5 0.3 0.1 0.4]
 [0.  0.  0.  0.4 0.3 0.2 0.3 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.5 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.5 0.2 0.8 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.75 0.38 0.75 0.5  1.   0.75]
 [0.   0.   0.62 0.5  0.88 0.38 0.62 0.62]
 [0.   0.   0.   0.38 0.5  0.5  0.5  1.  ]
 [0.   0.   0.   0.   0.38 0.12 0.62 1.12]
 [0.   0.   0.   0.   0.   0.5  0.5  1.  ]
 [0.   0.   0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 16  2  0  2  0  0  2  0]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  1  0 10  2  0  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  2  0  2  1  7  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  2  0  0  0  8]]
row HD
[[0.  0.9 0.5 0.7 0.4 0.5 0.4 0.5 0.8 0.5]
 [0.  0.  0.4 0.2 0.5 0.4 0.5 0.4 0.1 0.4]
 [0.  0.  0.  0.4 0.3 0.2 0.3 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.5 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.5 0.2 0.9 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.67 0.33 0.67 0.44 0.89 0.67 0.33]
 [0.   0.   0.56 0.44 0.78 0.33 0.56 0.56 0.22]
 [0.   0.   0.   0.33 0.44 0.44 0.44 0.89 0.78]
 [0.   0.   0.   0.   0.33 0.11 0.56 1.   0.67]
 [0.   0.   0.   0.   0.   0.44 0.44 0.89 1.  ]
 [0.   0.   0.   0.   0.   0.   0.44 0.89 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1. -1. -1. -1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
Counter({-1.0: 516, 1.0: 46})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 16  2  0  2  0  0  2  0]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  1  0 10  2  0  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  3  0  2  1  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  2  0  0  0  8]]
row HD
[[0.  0.9 0.5 0.7 0.4 0.5 0.5 0.5 0.8 0.5]
 [0.  0.  0.4 0.2 0.5 0.4 0.6 0.4 0.1 0.4]
 [0.  0.  0.  0.4 0.3 0.2 0.4 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.6 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.5 0.3 0.9 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.6 0.3 0.6 0.4 0.8 0.6 0.3 0.4]
 [0.  0.  0.5 0.4 0.7 0.3 0.5 0.5 0.2 0.7]
 [0.  0.  0.  0.3 0.4 0.4 0.4 0.8 0.7 0.4]
 [0.  0.  0.  0.  0.3 0.1 0.5 0.9 0.6 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.8 0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.8 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
Counter({-1.0: 516, 1.0: 46})
Counter({1.0: 292, -1.0: 270})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 16  1  0  2  0  0  2  1]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  1  0 10  1  0  1  1  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  3  0  1  1  6  0  4  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  0.5 0.8 0.4 0.6 0.5 0.6 0.9 0.5]
 [0.  0.  0.5 0.2 0.6 0.4 0.7 0.4 0.1 0.5]
 [0.  0.  0.  0.5 0.3 0.3 0.4 0.7 0.4 0.4]
 [0.  0.  0.  0.  0.6 0.2 0.7 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.6 0.3 1.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.55 0.27 0.55 0.36 0.73 0.55 0.27 0.36 0.55]
 [0.   0.   0.45 0.36 0.64 0.27 0.45 0.45 0.18 0.64 0.64]
 [0.   0.   0.   0.27 0.36 0.36 0.36 0.73 0.64 0.36 0.73]
 [0.   0.   0.   0.   0.27 0.09 0.45 0.82 0.55 0.27 0.82]
 [0.   0.   0.   0.   0.   0.36 0.36 0.73 0.82 0.18 0.55]
 [0.   0.   0.   0.   0.   0.   0.36 0.73 0.45 0.36 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.64 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.73 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1. -1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
Counter({-1.0: 516, 1.0: 46})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 290, 1.0: 272})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 100, -1.0: 88})
11 classifiers pre label
Counter({1.0: 103, -1.0: 85})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  0 17  1  0  1  0  0  2  1]
 [ 0  0  1 13  0  1  0  0  0  1]
 [ 0  0  2  1  9  2  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  0  2]
 [ 0  0  2  1  1  1  7  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  0.5 0.9 0.5 0.7 0.6 0.7 0.9 0.5]
 [0.  0.  0.5 0.3 0.7 0.5 0.8 0.5 0.1 0.5]
 [0.  0.  0.  0.6 0.4 0.4 0.5 0.8 0.4 0.4]
 [0.  0.  0.  0.  0.6 0.2 0.7 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.6 0.3 1.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.5  0.25 0.5  0.33 0.67 0.5  0.25 0.33 0.5  0.33]
 [0.   0.   0.42 0.33 0.58 0.25 0.42 0.42 0.17 0.58 0.58 0.42]
 [0.   0.   0.   0.25 0.33 0.33 0.33 0.67 0.58 0.33 0.67 0.33]
 [0.   0.   0.   0.   0.25 0.08 0.42 0.75 0.5  0.25 0.75 0.42]
 [0.   0.   0.   0.   0.   0.33 0.33 0.67 0.75 0.17 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.33 0.67 0.42 0.33 0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.58 0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.67 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
Counter({-1.0: 516, 1.0: 46})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 288, 1.0: 274})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 100, -1.0: 88})
11 classifiers pre label
Counter({1.0: 103, -1.0: 85})
12 classifiers pre label
Counter({1.0: 112, -1.0: 76})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  0 17  1  0  1  0  0  2  1]
 [ 0  0  1 13  0  1  0  0  0  1]
 [ 0  0  1  1 10  2  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  0.5 1.  0.6 0.7 0.7 0.8 1.  0.5]
 [0.  0.  0.5 0.4 0.8 0.5 0.9 0.6 0.2 0.5]
 [0.  0.  0.  0.7 0.5 0.4 0.6 0.9 0.5 0.4]
 [0.  0.  0.  0.  0.6 0.3 0.7 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.7 0.3 1.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.8 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.46 0.23 0.46 0.31 0.62 0.46 0.23 0.31 0.46 0.31 0.46]
 [0.   0.   0.38 0.31 0.54 0.23 0.38 0.38 0.15 0.54 0.54 0.38 0.38]
 [0.   0.   0.   0.23 0.31 0.31 0.31 0.62 0.54 0.31 0.62 0.31 0.31]
 [0.   0.   0.   0.   0.23 0.08 0.38 0.69 0.46 0.23 0.69 0.38 0.38]
 [0.   0.   0.   0.   0.   0.31 0.31 0.62 0.69 0.15 0.46 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.31 0.62 0.38 0.31 0.62 0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.54 0.46 0.46 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.62 0.15 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1. -1. -1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
Counter({-1.0: 516, 1.0: 46})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 381, -1.0: 181})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 100, -1.0: 88})
11 classifiers pre label
Counter({1.0: 103, -1.0: 85})
12 classifiers pre label
Counter({1.0: 112, -1.0: 76})
13 classifiers pre label
Counter({1.0: 136, -1.0: 52})
confusion matrix
[[10  0  0  0  3  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 16  1  0  2  0  0  2  1]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  1  0 10  1  0  1  1  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  0.5 1.1 0.6 0.8 0.7 0.9 1.  0.5]
 [0.  0.  0.5 0.5 0.8 0.6 0.9 0.7 0.2 0.5]
 [0.  0.  0.  0.8 0.5 0.5 0.6 1.  0.5 0.4]
 [0.  0.  0.  0.  0.7 0.3 0.8 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.8 0.3 1.1 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.43 0.21 0.43 0.29 0.57 0.43 0.21 0.29 0.43 0.29 0.43 0.14]
 [0.   0.   0.36 0.29 0.5  0.21 0.36 0.36 0.14 0.5  0.5  0.36 0.36 0.21]
 [0.   0.   0.   0.21 0.29 0.29 0.29 0.57 0.5  0.29 0.57 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.21 0.07 0.36 0.64 0.43 0.21 0.64 0.36 0.36 0.21]
 [0.   0.   0.   0.   0.   0.29 0.29 0.57 0.64 0.14 0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.29 0.57 0.36 0.29 0.57 0.43 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.5  0.43 0.43 0.29 0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.57 0.14 0.29 0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.36 0.36 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1. -1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 403, 1.0: 159})
Counter({-1.0: 291, 1.0: 271})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 449, -1.0: 113})
Counter({-1.0: 516, 1.0: 46})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 381, -1.0: 181})
Counter({-1.0: 337, 1.0: 225})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 96, -1.0: 92})
1 classifiers pre label
Counter({1.0: 148, -1.0: 40})
2 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
5 classifiers pre label
Counter({1.0: 95, -1.0: 93})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 149, -1.0: 39})
8 classifiers pre label
Counter({1.0: 151, -1.0: 37})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 100, -1.0: 88})
11 classifiers pre label
Counter({1.0: 103, -1.0: 85})
12 classifiers pre label
Counter({1.0: 112, -1.0: 76})
13 classifiers pre label
Counter({1.0: 136, -1.0: 52})
14 classifiers pre label
Counter({-1.0: 120, 1.0: 68})
confusion matrix
[[10  0  3  0  0  1  0  0  2  1]
 [ 0 20  0  0  1  0  0  0  5  0]
 [ 0  0 17  1  0  1  0  0  2  1]
 [ 0  0  1 10  0  1  0  0  3  1]
 [ 0  0  2  0  9  2  0  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  4  0  2  0  1  0 12  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  0.5 1.1 0.7 0.9 0.8 1.  1.  0.5]
 [0.  0.  0.5 0.5 0.9 0.7 1.  0.8 0.2 0.5]
 [0.  0.  0.  0.8 0.6 0.6 0.7 1.1 0.5 0.4]
 [0.  0.  0.  0.  0.8 0.4 0.9 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.8 0.3 1.1 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.9 0.5 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.4  0.2  0.4  0.27 0.53 0.4  0.2  0.27 0.4  0.27 0.4  0.13
  0.33]
 [0.   0.   0.33 0.27 0.47 0.2  0.33 0.33 0.13 0.47 0.47 0.33 0.33 0.2
  0.4 ]
 [0.   0.   0.   0.2  0.27 0.27 0.27 0.53 0.47 0.27 0.53 0.27 0.27 0.27
  0.33]
 [0.   0.   0.   0.   0.2  0.07 0.33 0.6  0.4  0.2  0.6  0.33 0.33 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.27 0.27 0.53 0.6  0.13 0.4  0.4  0.4  0.4
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.27 0.53 0.33 0.27 0.53 0.4  0.27 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.47 0.4  0.4  0.27 0.13 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.53 0.13 0.27 0.27 0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.33 0.33 0.33 0.2
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.4  0.4
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.53
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
efficient_count == 3
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:51:23
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 1.  0.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  2  0  0]
 [ 6  0  1  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.  0.2 0.2 0.4]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  1.]
 [ 1.  0.  1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 5  0  2  0  0]
 [ 6  0  1  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.  0.2 0.4 0.4]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  1. -1.]
 [ 1.  0.  1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1. -1.  1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.4 0.6 0.4]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.5  0.5 ]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  1. -1. -1.]
 [ 1.  0.  1. -1. -1.]
 [ 1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [-1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({0.0: 50, -1.0: 6})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
4 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.6 0.6 0.4]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.4 0.4 0.6]
 [0.  0.  0.6 1.  0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})

**********      classifier acc  **************
[0.946, 0.176, 0.875, 0.768, 0.875, 0.25, 0.071, 0.071, 0.1]
before cutting matrix
[[ 1.  0.  1. -1. -1.  0.  0.  0.  0.]
 [ 1.  0.  1. -1. -1.  1.  0.  0.  0.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1.  0. -1.  1.  0.]
 [-1.  1.  1. -1. -1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 36, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 36, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 21, 1.0: 15})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 15})
after cutting matrix
[[ 1.  1. -1. -1.  0.  0.]
 [ 1.  1. -1. -1.  0.  0.]
 [ 1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  0.]
 [-1.  1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 6  0  0  1  0]
 [ 2  0  0  1  0]]


SVM classifier
Time: 2019-01-06 16:51:24
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  1.]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 40, 0.0: 16})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 0.  1.]
 [ 0.  0.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 52, 0.0: 4})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [ 0.  1.  1.]
 [ 0.  0.  0.]
 [-1. -1.  0.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
confusion matrix
[[30  0  0  0  0]
 [ 6  0  3  0  0]
 [ 5  0  2  0  0]
 [ 0  0  7  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.4]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [ 0.  1.  1.  1.]
 [ 0.  0.  0. -1.]
 [-1. -1.  0.  1.]
 [ 1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 4  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.8 0.8 0.6 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 1.25]
 [0.   0.   0.25 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [ 0.  1.  1.  1.]
 [ 0.  0.  0. -1.]
 [-1. -1.  0.  1.]
 [ 1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 4  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.8 0.8 0.6 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 1.25]
 [0.   0.   0.25 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  0. -1.]
 [ 0.  1.  1.  1.  1.]
 [ 0.  0.  0. -1.  1.]
 [-1. -1.  0.  1.  0.]
 [ 1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({-1.0: 35, 1.0: 19, 0.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 4  1  1  3  0]
 [ 5  1  0  1  0]
 [ 0  1  4  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.  1.  0.8 0.8]
 [0.  0.  0.6 0.8 0.4]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.6 1.  0.8]
 [0.  0.  0.2 0.8 0.4]
 [0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1.]
 [ 0.  1.  1.  1.  1.  1.]
 [ 0.  0.  0. -1.  1. -1.]
 [-1. -1.  0.  1.  0.  0.]
 [ 1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({-1.0: 35, 1.0: 19, 0.0: 2})
5 classifiers pre label
Counter({1.0: 54, 0.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 4  3  0  2  0]
 [ 5  2  0  0  0]
 [ 0  7  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  1.  1.2 1.  1. ]
 [0.  0.  0.8 1.  0.6]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.5  0.83 0.67 0.67]
 [0.   0.   0.17 0.67 0.33 0.67]
 [0.   0.   0.   0.67 0.17 0.5 ]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})

**********      classifier acc  **************
[0.675, 0.735, 0.786, 0.269, 0.816, 0.796, 0.071, 0.071, 0.1]
before cutting matrix
[[ 1. -1. -1.  0. -1.  1.  0.  0.  0.]
 [ 0.  1.  1.  1.  1.  1.  0.  0.  0.]
 [ 0.  0.  0. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  0.  1.  0.  0. -1.  1.  0.]
 [ 1.  1.  1. -1.  1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
positive and negative ratio
Counter({-1.0: 114, 1.0: 37})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 114, 1.0: 37})
positive and negative ratio
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 93, 1.0: 37})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
after cutting matrix
[[-1.  1.  0.  0.  0.]
 [ 1.  1.  0.  0.  0.]
 [ 1. -1.  1. -1. -1.]
 [ 0.  0. -1.  1.  0.]
 [ 1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 52})
Counter({1.0: 124, -1.0: 21})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 3  3  0  1  0]
 [ 0  7  0  0  0]
 [ 0  2  0  1  0]]


SVM classifier
Time: 2019-01-06 16:51:26
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({-1.0: 56, 1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.75 1.  ]
 [0.   0.   1.   0.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.5  0.17 0.17 0.5 ]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.6 0.8 1. ]
 [0.  0.  0.8 0.2 0.4]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
None


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.5  0.17 0.17 0.5 ]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.6 0.8 1. ]
 [0.  0.  0.8 0.2 0.4]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
5 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.5  0.5  0.5  0.33]
 [0.   0.   0.67 0.33 0.33 0.5 ]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  0.67 0.83 0.17]
 [0.   0.   0.67 0.17 0.33 0.33]
 [0.   0.   0.   0.83 0.67 0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1.  0.]
 [-1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
5 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
6 classifiers pre label
Counter({-1.0: 35, 0.0: 32})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  3  0  4  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.67 0.67 0.67 0.5 ]
 [0.   0.   0.83 0.5  0.5  0.67]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.43 0.57 0.71 0.14 0.57]
 [0.   0.   0.57 0.14 0.29 0.29 0.57]
 [0.   0.   0.   0.71 0.57 0.29 0.86]
 [0.   0.   0.   0.   0.14 0.43 0.43]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1. -1.  1. -1. -1.  1.  0. -1.]
 [ 1. -1.  1. -1. -1.  1.  0.  1.]
 [-1. -1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
5 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
6 classifiers pre label
Counter({-1.0: 35, 0.0: 32})
7 classifiers pre label
Counter({1.0: 63, -1.0: 4})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  3  0  2  2  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.67 0.83 0.67 0.67]
 [0.   0.   0.83 0.67 0.5  0.83]
 [0.   0.   0.   0.83 0.67 0.83]
 [0.   0.   0.   0.   0.17 1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.38 0.5  0.62 0.12 0.5  0.5 ]
 [0.   0.   0.5  0.12 0.25 0.25 0.5  0.38]
 [0.   0.   0.   0.62 0.5  0.25 0.75 0.12]
 [0.   0.   0.   0.   0.12 0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
None


============== iter  10 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1. -1.  1. -1. -1.  1.  0. -1.]
 [ 1. -1.  1. -1. -1.  1.  0.  1.]
 [-1. -1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
5 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
6 classifiers pre label
Counter({-1.0: 35, 0.0: 32})
7 classifiers pre label
Counter({1.0: 63, -1.0: 4})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  3  0  2  2  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.67 0.83 0.67 0.67]
 [0.   0.   0.83 0.67 0.5  0.83]
 [0.   0.   0.   0.83 0.67 0.83]
 [0.   0.   0.   0.   0.17 1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.38 0.5  0.62 0.12 0.5  0.5 ]
 [0.   0.   0.5  0.12 0.25 0.25 0.5  0.38]
 [0.   0.   0.   0.62 0.5  0.25 0.75 0.12]
 [0.   0.   0.   0.   0.12 0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  0.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.  0. -1. -1.]
 [ 1. -1.  1. -1. -1.  1.  0.  1.  1.]
 [-1. -1. -1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
5 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
6 classifiers pre label
Counter({-1.0: 35, 0.0: 32})
7 classifiers pre label
Counter({1.0: 63, -1.0: 4})
8 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  3  0  2  2  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.67 1.   0.67 0.67]
 [0.   0.   0.83 0.83 0.5  0.83]
 [0.   0.   0.   1.   0.67 0.83]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33 0.44 0.56 0.11 0.44 0.44 0.56]
 [0.   0.   0.44 0.11 0.22 0.22 0.44 0.33 0.44]
 [0.   0.   0.   0.56 0.44 0.22 0.67 0.11 0.22]
 [0.   0.   0.   0.   0.11 0.33 0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.44 0.44 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.44 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  0.  0.  0.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  0.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1.  0. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1.  0.  1.  1.  0.]
 [-1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
4 classifiers pre label
Counter({1.0: 37, -1.0: 30})
5 classifiers pre label
Counter({-1.0: 37, 1.0: 30})
6 classifiers pre label
Counter({-1.0: 35, 0.0: 32})
7 classifiers pre label
Counter({1.0: 63, -1.0: 4})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({-1.0: 42, 0.0: 25})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  4  0  2  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.83 1.   0.83 0.83]
 [0.   0.   1.   0.83 0.67 1.  ]
 [0.   0.   0.   1.17 0.67 1.  ]
 [0.   0.   0.   0.   0.5  1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.3 0.4 0.5 0.1 0.4 0.4 0.5 0.4]
 [0.  0.  0.4 0.1 0.2 0.2 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.5 0.4 0.2 0.6 0.1 0.2 0.6]
 [0.  0.  0.  0.  0.1 0.3 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})

**********      classifier acc  **************
[0.91, 0.985, 0.94, 0.925, 1.0, 0.97, 0.829, 0.896, 0.896, 0.881, 0.8, 0.824]
before cutting matrix
[[-1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  0.  0.]
 [ 1. -1.  1. -1. -1.  1.  0. -1. -1. -1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1.  0.  1.  1.  0.  0.  0.]
 [-1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 146, 1.0: 55})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 98, 1.0: 10})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 98, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 162, -1.0: 39})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 127, 1.0: 10})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 127, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 38, 1.0: 29})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
after cutting matrix
[[-1.  1.  1. -1.  1.  0.]
 [-1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  0.]
 [-1.  1. -1.  1. -1.  0.]
 [-1.  1. -1.  1.  1.  0.]
 [-1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 162, -1.0: 39})
Counter({-1.0: 38, 1.0: 10})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  2  0  2  3  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]


SVM classifier
Time: 2019-01-06 16:51:30
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1. -1.  0.]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({-1.0: 65, 0.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 1.  1.]
 [-1. -1.]
 [ 0.  0.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({0.0: 33, 1.0: 24, -1.0: 10})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [14  1  0  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.   0.33 0.17 0.17]
 [0.   0.   0.17 0.17 0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  0.]
 [-1.  1.  0.]
 [-1.  0. -1.]
 [ 1.  1.  1.]
 [-1. -1.  0.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({0.0: 33, 1.0: 24, -1.0: 10})
2 classifiers pre label
Counter({0.0: 44, -1.0: 14, 1.0: 9})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.5  0.17 0.33]
 [0.   0.   0.33 0.33 0.17 0.5 ]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 1. -1.  0.  0.  0.  0.]
most_cplx_inx
5
new_column
None


============== iter  4 ================
current matrix is 
[[-1.  0.  0.]
 [-1.  1.  0.]
 [-1.  0. -1.]
 [ 1.  1.  1.]
 [-1. -1.  0.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({0.0: 33, 1.0: 24, -1.0: 10})
2 classifiers pre label
Counter({0.0: 44, -1.0: 14, 1.0: 9})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.5  0.17 0.33]
 [0.   0.   0.33 0.33 0.17 0.5 ]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  0.  1.]
 [-1.  1.  0.  0.]
 [-1.  0. -1. -1.]
 [ 1.  1.  1.  1.]
 [-1. -1.  0.  0.]
 [ 0.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({0.0: 33, 1.0: 24, -1.0: 10})
2 classifiers pre label
Counter({0.0: 44, -1.0: 14, 1.0: 9})
3 classifiers pre label
Counter({0.0: 27, 1.0: 26, -1.0: 14})
confusion matrix
[[17  1  0  0  0  0]
 [ 1 12  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.33 0.5  0.33 0.33]
 [0.   0.   0.5  0.5  0.17 0.67]
 [0.   0.   0.   0.67 0.5  0.5 ]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   1.   1.25]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  0.  0.  1.  1.]
 [-1.  1.  0.  0.  0.]
 [-1.  0. -1. -1.  0.]
 [ 1.  1.  1.  1. -1.]
 [-1. -1.  0.  0.  0.]
 [ 0.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({0.0: 33, 1.0: 24, -1.0: 10})
2 classifiers pre label
Counter({0.0: 44, -1.0: 14, 1.0: 9})
3 classifiers pre label
Counter({0.0: 27, 1.0: 26, -1.0: 14})
4 classifiers pre label
Counter({0.0: 41, 1.0: 19, -1.0: 7})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.5  0.5  0.67 0.5  0.33]
 [0.   0.   0.5  0.67 0.17 0.83]
 [0.   0.   0.   0.83 0.5  0.67]
 [0.   0.   0.   0.   0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.8 0.8 1.2]
 [0.  0.  0.8 1.  1. ]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})

**********      classifier acc  **************
[0.889, 1.0, 0.846, 0.886, 0.862, 0.8, 0.824]
before cutting matrix
[[-1.  0.  0.  1.  1.  0.  0.]
 [-1.  1.  0.  0.  0. -1. -1.]
 [-1.  0. -1. -1.  0.  0.  0.]
 [ 1.  1.  1.  1. -1.  1.  0.]
 [-1. -1.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
positive and negative ratio
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 99, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 99, -1.0: 38})
positive and negative ratio
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 38, 1.0: 29})
after cutting matrix
[[ 0.  0.  1.  0.]
 [ 1.  0.  0. -1.]
 [ 0. -1.  0.  0.]
 [ 1.  1. -1.  0.]
 [-1.  0.  0.  0.]
 [ 0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 67, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 70, -1.0: 29})
Counter({-1.0: 38, 1.0: 10})
cutting matrix's confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-06 16:51:31
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({1.0: 148, -1.0: 40})
confusion matrix
[[16  0  0  0  0  0  1  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [20  0  0  0  0  0  2  0  0  0]
 [14  0  0  0  0  0  2  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  1  0  0  0]
 [ 6  0  0  0  0  0  9  0  0  0]
 [ 7  0  0  0  0  0 13  0  0  0]
 [10  0  0  0  0  0 12  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
confusion matrix
[[12  4  0  0  0  0  1  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  2  0  0  0]
 [ 0 14  0  0  0  0  2  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  1  0  0  0]
 [ 0  6  0  0  0  0  9  0  0  0]
 [ 0  7  0  0  0  0 13  0  0  0]
 [ 2  8  0  0  0  0 12  0  0  0]
 [ 1 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.1 0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
confusion matrix
[[11  2  2  0  0  0  1  0  0  1]
 [ 0 25  1  0  0  0  0  0  0  0]
 [ 0  3 17  0  0  0  2  0  0  0]
 [ 0 13  1  0  0  0  2  0  0  0]
 [ 0  4 12  0  0  0  0  0  0  1]
 [ 0 18  0  0  0  0  1  0  0  1]
 [ 0  2  4  0  0  0  9  0  0  0]
 [ 0  6  1  0  0  0 13  0  0  0]
 [ 2  5  3  0  0  0 12  0  0  0]
 [ 0 12  0  0  0  0  0  0  0  1]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.2 0.3 0.3 0.3 0.1]
 [0.  0.  0.1 0.  0.1 0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[11  2  2  0  0  0  1  0  0  1]
 [ 0 25  1  0  0  0  0  0  0  0]
 [ 0  4 16  0  0  0  2  0  0  0]
 [ 0 13  1  0  0  0  2  0  0  0]
 [ 1  4 12  0  0  0  0  0  0  0]
 [ 0 18  0  0  0  0  1  0  0  1]
 [ 0  2  4  0  0  0  9  0  0  0]
 [ 0  6  1  0  0  0 13  0  0  0]
 [ 2  5  3  0  0  0 12  0  0  0]
 [ 0 12  0  0  0  0  0  0  0  1]]
row HD
[[0.  0.3 0.1 0.3 0.1 0.3 0.3 0.3 0.3 0.2]
 [0.  0.  0.2 0.  0.2 0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.2 0.  0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   1.75]
 [0.   0.   0.75 1.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
confusion matrix
[[11  2  2  0  0  0  0  1  0  1]
 [ 0 25  1  0  0  0  0  0  0  0]
 [ 0  4 16  0  0  0  0  2  0  0]
 [ 0 13  1  0  0  0  0  2  0  0]
 [ 1  4 12  0  0  0  0  0  0  0]
 [ 0 18  0  0  0  0  1  0  0  1]
 [ 0  2  4  0  0  0  6  3  0  0]
 [ 0  6  1  0  0  0  0 13  0  0]
 [ 2  5  3  0  0  0  2 10  0  0]
 [ 0 12  0  0  0  0  0  0  0  1]]
row HD
[[0.  0.3 0.1 0.3 0.1 0.3 0.4 0.3 0.3 0.2]
 [0.  0.  0.2 0.  0.2 0.  0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.2 0.  0.2 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.  0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 1.4 1.6]
 [0.  0.  0.6 1.2 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
confusion matrix
[[11  1  2  1  0  0  0  1  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 16  3  1  0  0  2  0  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  4  0 11  0  0  0  0  0]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 0  0  4  2  0  0  6  3  0  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0  2 10  0  0]
 [ 0  1  1 10  0  0  0  0  0  1]]
row HD
[[0.  0.4 0.1 0.3 0.2 0.3 0.4 0.3 0.4 0.2]
 [0.  0.  0.3 0.1 0.2 0.1 0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.  0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 1.17 1.33 1.  ]
 [0.   0.   0.5  1.   0.5  0.83]
 [0.   0.   0.   0.5  0.67 0.67]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
confusion matrix
[[ 8  1  2  1  3  0  1  0  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 16  3  1  0  1  1  0  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  5  0 10  0  0  0  0  0]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 0  1  4  1  0  0  9  0  0  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0 11  1  0  0]
 [ 0  1  1 10  0  0  0  0  0  1]]
row HD
[[0.  0.5 0.1 0.3 0.3 0.3 0.5 0.3 0.5 0.2]
 [0.  0.  0.4 0.2 0.2 0.2 0.4 0.4 0.2 0.3]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.  0.4 0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.57 1.   1.14 0.86 1.  ]
 [0.   0.   0.43 0.86 0.43 0.71 0.86]
 [0.   0.   0.   0.43 0.57 0.57 0.71]
 [0.   0.   0.   0.   0.71 0.71 0.57]
 [0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 8  1  2  2  3  0  1  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 16  3  1  0  1  1  0  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  5  0 10  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  1  4  1  0  0  9  0  0  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0 11  1  0  0]
 [ 0  1  1 11  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.1 0.3 0.3 0.3 0.5 0.3 0.5 0.3]
 [0.  0.  0.4 0.2 0.2 0.2 0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.5  0.88 1.   0.75 0.88 0.75]
 [0.   0.   0.38 0.75 0.38 0.62 0.75 0.12]
 [0.   0.   0.   0.38 0.5  0.5  0.62 0.5 ]
 [0.   0.   0.   0.   0.62 0.62 0.5  0.88]
 [0.   0.   0.   0.   0.   0.5  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 176, 1.0: 12})
confusion matrix
[[11  1  2  2  0  0  1  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 16  3  1  0  1  1  0  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  5  0 10  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  1  4  1  0  0  9  0  0  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0 11  1  0  0]
 [ 0  1  1 11  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.2 0.4 0.4 0.4 0.6 0.4 0.6 0.4]
 [0.  0.  0.4 0.2 0.2 0.2 0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.44 0.78 0.89 0.67 0.78 0.67 0.67]
 [0.   0.   0.33 0.67 0.33 0.56 0.67 0.11 0.11]
 [0.   0.   0.   0.33 0.44 0.44 0.56 0.44 0.22]
 [0.   0.   0.   0.   0.56 0.56 0.44 0.78 0.56]
 [0.   0.   0.   0.   0.   0.44 0.33 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.11 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1. -1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 176, 1.0: 12})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
confusion matrix
[[11  1  2  2  0  0  1  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 16  3  1  0  1  1  0  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  5  0 10  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  1  4  1  0  0  9  0  0  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0 11  1  0  0]
 [ 0  1  1 11  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.2 0.4 0.5 0.4 0.6 0.4 0.6 0.4]
 [0.  0.  0.4 0.2 0.3 0.2 0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.3 0.2 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.5 0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.4 0.7 0.8 0.6 0.7 0.6 0.6 0.6]
 [0.  0.  0.3 0.6 0.3 0.5 0.6 0.1 0.1 0.3]
 [0.  0.  0.  0.3 0.4 0.4 0.5 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.5 0.5 0.4 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.4 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 176, 1.0: 12})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 97, -1.0: 91})
confusion matrix
[[11  1  2  1  0  0  0  0  1  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 16  3  1  0  0  1  1  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  5  0 10  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  0  4  2  0  0  6  0  3  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0  2  1  9  0]
 [ 0  1  1 10  0  0  0  0  0  1]]
row HD
[[0.  0.6 0.3 0.5 0.5 0.5 0.7 0.5 0.6 0.4]
 [0.  0.  0.5 0.3 0.3 0.3 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.2 0.4 0.2 0.4 0.2 0.5 0.5]
 [0.  0.  0.  0.  0.6 0.  0.4 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.6 0.6 0.6 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.36 0.64 0.73 0.55 0.64 0.55 0.55 0.55 0.36]
 [0.   0.   0.27 0.55 0.27 0.45 0.55 0.09 0.09 0.27 0.27]
 [0.   0.   0.   0.27 0.36 0.36 0.45 0.36 0.18 0.18 0.36]
 [0.   0.   0.   0.   0.45 0.45 0.36 0.64 0.45 0.45 0.45]
 [0.   0.   0.   0.   0.   0.36 0.27 0.18 0.18 0.18 0.55]
 [0.   0.   0.   0.   0.   0.   0.09 0.36 0.36 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.45 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 176, 1.0: 12})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 97, -1.0: 91})
11 classifiers pre label
Counter({1.0: 96, -1.0: 92})
confusion matrix
[[11  1  2  1  0  0  0  0  1  1]
 [ 0 25  0  0  1  0  0  0  0  0]
 [ 0  0 15  4  1  0  0  1  1  0]
 [ 0  3  1 10  0  0  0  2  0  0]
 [ 2  1  1  3 10  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  1  4  1  0  0  6  0  3  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  3  4  0  0  2  1  9  0]
 [ 0  1  0 11  0  0  0  0  0  1]]
row HD
[[0.  0.7 0.4 0.5 0.6 0.5 0.8 0.5 0.7 0.4]
 [0.  0.  0.5 0.4 0.3 0.4 0.5 0.6 0.2 0.5]
 [0.  0.  0.  0.3 0.4 0.3 0.4 0.3 0.5 0.6]
 [0.  0.  0.  0.  0.7 0.  0.5 0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.7 0.6 0.7 0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.33 0.58 0.67 0.5  0.58 0.5  0.5  0.5  0.33 0.5 ]
 [0.   0.   0.25 0.5  0.25 0.42 0.5  0.08 0.08 0.25 0.25 0.58]
 [0.   0.   0.   0.25 0.33 0.33 0.42 0.33 0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.   0.42 0.42 0.33 0.58 0.42 0.42 0.42 0.25]
 [0.   0.   0.   0.   0.   0.33 0.25 0.17 0.17 0.17 0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.08 0.33 0.33 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.25 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 176, 1.0: 12})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 97, -1.0: 91})
11 classifiers pre label
Counter({1.0: 96, -1.0: 92})
12 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[11  1  2  2  0  0  0  0  1  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  0 15  4  1  0  0  1  1  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 2  1  0  3 11  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  0  4  2  0  0  6  0  3  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  1  2  4  1  0  2  1  9  0]
 [ 0  1  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.5 0.7 0.5 0.8 0.5 0.8 0.5]
 [0.  0.  0.6 0.5 0.3 0.5 0.6 0.7 0.2 0.5]
 [0.  0.  0.  0.3 0.5 0.3 0.4 0.3 0.6 0.7]
 [0.  0.  0.  0.  0.8 0.  0.5 0.2 0.7 0.4]
 [0.  0.  0.  0.  0.  0.8 0.7 0.8 0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.31 0.54 0.62 0.46 0.54 0.46 0.46 0.46 0.31 0.46 0.38]
 [0.   0.   0.23 0.46 0.23 0.38 0.46 0.08 0.08 0.23 0.23 0.54 0.31]
 [0.   0.   0.   0.23 0.31 0.31 0.38 0.31 0.15 0.15 0.31 0.31 0.38]
 [0.   0.   0.   0.   0.38 0.38 0.31 0.54 0.38 0.38 0.38 0.23 0.46]
 [0.   0.   0.   0.   0.   0.31 0.23 0.15 0.15 0.15 0.46 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.08 0.31 0.31 0.15 0.15 0.15 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.23 0.23 0.08 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15 0.31 0.46 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1.  1. -1. -1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({-1.0: 171, 1.0: 17})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({1.0: 100, -1.0: 88})
4 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
5 classifiers pre label
Counter({-1.0: 141, 1.0: 47})
6 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 176, 1.0: 12})
9 classifiers pre label
Counter({-1.0: 178, 1.0: 10})
10 classifiers pre label
Counter({1.0: 97, -1.0: 91})
11 classifiers pre label
Counter({1.0: 96, -1.0: 92})
12 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
13 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
confusion matrix
[[12  1  2  1  0  0  0  0  1  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 15  4  0  0  0  1  1  0]
 [ 0  0  1 13  0  0  0  2  0  0]
 [ 1  1  1  3 11  0  0  0  0  0]
 [ 0  0  0 19  0  0  1  0  0  0]
 [ 0  0  4  2  0  0  6  0  3  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  2  2  4  0  0  2  1  9  0]
 [ 1  1  0 11  0  0  0  0  0  0]]
row HD
[[0.  0.9 0.5 0.6 0.7 0.6 0.9 0.6 0.9 0.6]
 [0.  0.  0.6 0.5 0.4 0.5 0.6 0.7 0.2 0.5]
 [0.  0.  0.  0.3 0.6 0.3 0.4 0.3 0.6 0.7]
 [0.  0.  0.  0.  0.9 0.  0.5 0.2 0.7 0.4]
 [0.  0.  0.  0.  0.  0.9 0.8 0.9 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.29 0.5  0.57 0.43 0.5  0.43 0.43 0.43 0.29 0.43 0.36 0.36]
 [0.   0.   0.21 0.43 0.21 0.36 0.43 0.07 0.07 0.21 0.21 0.5  0.29 0.14]
 [0.   0.   0.   0.21 0.29 0.29 0.36 0.29 0.14 0.14 0.29 0.29 0.36 0.07]
 [0.   0.   0.   0.   0.36 0.36 0.29 0.5  0.36 0.36 0.36 0.21 0.43 0.29]
 [0.   0.   0.   0.   0.   0.29 0.21 0.14 0.14 0.14 0.43 0.29 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.07 0.29 0.29 0.14 0.14 0.14 0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.21 0.21 0.07 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.29 0.43 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.43 0.36 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.21 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})

**********      classifier acc  **************
[0.846, 0.888, 0.862, 0.867, 0.931, 0.809, 0.851, 0.931, 0.952, 0.952, 0.851, 0.819, 0.856, 0.915, 0.682, 0.214, 0.7, 0.323]
before cutting matrix
[[ 1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.  0.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  0.  0.  0. -1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  0.  0.  1.  0.]
 [-1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1. -1. -1.  0. -1.  0.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  0.  0. -1.  0.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  0.  0.  0.]
 [ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  0.  1.  0.  0.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 391, 1.0: 171})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 391, 1.0: 171})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 331, -1.0: 231})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 388, 1.0: 174})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 388, 1.0: 174})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 284, 1.0: 278})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 335, 1.0: 227})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 57, 1.0: 52})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 53, -1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 62, 1.0: 54})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 62, 1.0: 54})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
positive and negative ratio
Counter({-1.0: 65, 1.0: 46})
after cutting matrix
[[ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  0.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  0.  0.]
 [ 1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  0. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  0.  0.]
 [-1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  0.  0.]
 [-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  0.  0.]
 [ 1.  1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 458, 1.0: 104})
Counter({1.0: 331, -1.0: 231})
Counter({-1.0: 516, 1.0: 46})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 509, 1.0: 53})
Counter({-1.0: 511, 1.0: 51})
Counter({-1.0: 499, 1.0: 63})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 335, 1.0: 227})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
cutting matrix's confusion matrix
[[12  1  2  0  0  1  0  0  1  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 16  0  0  4  0  0  1  0]
 [ 0  1  1  8  0  4  0  2  0  0]
 [ 1  2  1  0 11  0  0  0  0  2]
 [ 0  2  0  0  0 17  1  0  0  0]
 [ 0  2  3  0  0  1  6  0  3  0]
 [ 0  3  1  1  0  2  0 13  0  0]
 [ 2  5  3  0  0  1  2  0  9  0]
 [ 1  7  0  2  0  0  0  0  0  3]]


SVM classifier
Time: 2019-01-06 16:51:50
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
confusion matrix
[[11  5  1  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 1  3 18  0  0  0  0  0  0  0]
 [ 1 11  4  0  0  0  0  0  0  0]
 [ 2 13  2  0  0  0  0  0  0  0]
 [ 2  1 17  0  0  0  0  0  0  0]
 [ 1 11  3  0  0  0  0  0  0  0]
 [ 2 16  2  0  0  0  0  0  0  0]
 [ 6 13  3  0  0  0  0  0  0  0]
 [ 8  3  2  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  0.]
 [ 1. -1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
confusion matrix
[[ 8  3  1  0  0  0  3  0  2  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0  1 18  0  0  0  2  0  1  0]
 [ 1  8  4  0  0  0  3  0  0  0]
 [ 2 12  1  0  0  0  0  0  2  0]
 [ 2  0 17  0  0  0  1  0  0  0]
 [ 0  0  3  0  0  0  9  0  3  0]
 [ 0  4  2  0  0  0 14  0  0  0]
 [ 5  0  2  0  0  0  4  0 11  0]
 [ 8  3  0  0  0  0  0  0  2  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.1 0. ]
 [0.  0.  0.2 0.  0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.2 0.2 0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [ 0.  0. -1.]
 [ 1. -1.  0.]
 [ 0.  0.  0.]
 [ 0.  0.  1.]
 [ 1. -1.  0.]
 [ 0. -1.  0.]
 [ 0. -1.  1.]
 [ 0.  1.  1.]
 [-1.  1.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
confusion matrix
[[ 8  3  1  0  0  0  3  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  0  0  0  1  1  1  0]
 [ 1  0  4  8  0  0  0  3  0  0]
 [ 2  1  1  1 11  0  0  0  1  0]
 [ 2  0 17  0  0  0  0  1  0  0]
 [ 0  0  3  0  0  0  3  6  3  0]
 [ 0  3  2  1  0  0  2 12  0  0]
 [ 5  0  2  1  0  0  2  2 10  0]
 [ 8  0  0  4  1  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.3 0.2 0.2 0.3 0.2 0. ]
 [0.  0.  0.3 0.1 0.1 0.3 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.2 0.3 0.  0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.67]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[ 1.  0. -1.  0.  0. -1. -1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0.  1.]
 [ 0.  0. -1.  1.]
 [ 1. -1.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  1.  0.]
 [ 1. -1.  0.  0.]
 [ 0. -1.  0. -1.]
 [ 0. -1.  1.  1.]
 [ 0.  1.  1.  1.]
 [-1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
confusion matrix
[[ 8  3  1  0  0  0  1  2  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  1  1  0]
 [ 1  0  4  8  0  0  0  3  0  0]
 [ 2  1  1  1 11  0  0  0  1  0]
 [ 2  0 17  0  0  0  1  0  0  0]
 [ 0  0  3  0  0  0  8  1  3  0]
 [ 0  3  2  1  0  0  0 14  0  0]
 [ 5  0  2  2  0  0  3  0 10  0]
 [ 8  0  0  2  1  0  0  0  2  0]]
row HD
[[0.  0.3 0.3 0.3 0.4 0.3 0.3 0.3 0.2 0. ]
 [0.  0.  0.4 0.2 0.2 0.4 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.2 0.3 0.  0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.   2.  ]
 [0.   0.   2.   1.  ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0.  1.  0.]
 [ 0.  0. -1.  1.  0.]
 [ 1. -1.  0.  0.  1.]
 [ 0.  0.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.]
 [ 1. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0.]
 [ 0. -1.  1.  1.  0.]
 [ 0.  1.  1.  1.  0.]
 [-1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
confusion matrix
[[ 7  3  0  0  0  1  1  2  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 1  0  1  8  0  3  0  3  0  0]
 [ 0  1  2  0 11  0  0  0  1  2]
 [ 2  0  1  0  0 16  1  0  0  0]
 [ 0  0  1  0  0  2  8  1  3  0]
 [ 0  3  0  1  0  2  0 14  0  0]
 [ 5  0  2  1  0  1  3  0 10  0]
 [ 6  0  0  2  1  0  0  0  2  2]]
row HD
[[0.  0.3 0.4 0.4 0.4 0.3 0.3 0.3 0.2 0.1]
 [0.  0.  0.5 0.3 0.2 0.4 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.3 0.4 0.1 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.6 1.6 0.8]
 [0.  0.  1.6 0.8 1.4]
 [0.  0.  0.  1.  1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 1.  0. -1.  0.  0. -1. -1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.]
 [ 0.  0. -1.  1.  0. -1.]
 [ 1. -1.  0.  0.  1.  1.]
 [ 0.  0.  0.  0. -1.  1.]
 [ 0.  0.  1.  0.  0.  1.]
 [ 1. -1.  0.  0.  0.  1.]
 [ 0. -1.  0. -1.  0. -1.]
 [ 0. -1.  1.  1.  0.  1.]
 [ 0.  1.  1.  1.  0. -1.]
 [-1.  1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
confusion matrix
[[ 7  5  0  0  0  1  1  0  2  1]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  0 11  0  0  0  1  2]
 [ 0  0  1  2  0 16  1  0  0  0]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 0  6  0  1  0  1  0 12  0  0]
 [ 2  0  1  4  0  1  3  0 11  0]
 [ 0  0  0  8  1  0  0  0  2  2]]
row HD
[[0.  0.3 0.5 0.5 0.5 0.4 0.3 0.4 0.2 0.2]
 [0.  0.  0.6 0.4 0.3 0.5 0.3 0.3 0.2 0.5]
 [0.  0.  0.  0.3 0.4 0.1 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.4 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.33 1.33 0.67 1.17]
 [0.   0.   1.33 0.67 1.17 1.5 ]
 [0.   0.   0.   0.83 1.17 1.  ]
 [0.   0.   0.   0.   1.17 1.33]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.]
 [ 1. -1.  0.  0.  1.  1.  0.]
 [ 0.  0.  0.  0. -1.  1.  1.]
 [ 0.  0.  1.  0.  0.  1.  1.]
 [ 1. -1.  0.  0.  0.  1.  1.]
 [ 0. -1.  0. -1.  0. -1.  1.]
 [ 0. -1.  1.  1.  0.  1.  1.]
 [ 0.  1.  1.  1.  0. -1.  0.]
 [-1.  1.  0.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
confusion matrix
[[ 9  3  1  0  0  0  1  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  0 11  0  1  0  0  2]
 [ 0  0  3  2  0 14  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 2  0  1  4  0  1  3  0 11  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.4 0.5 0.6 0.6 0.5 0.4 0.5 0.2 0.3]
 [0.  0.  0.7 0.5 0.4 0.6 0.4 0.4 0.3 0.6]
 [0.  0.  0.  0.4 0.5 0.2 0.5 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.2 0.3 0.4 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.2 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.14 1.14 0.57 1.   1.14]
 [0.   0.   1.14 0.57 1.   1.29 1.29]
 [0.   0.   0.   0.71 1.   0.86 0.71]
 [0.   0.   0.   0.   1.   1.14 1.  ]
 [0.   0.   0.   0.   0.   1.29 1.  ]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.  0.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.]
 [ 0.  1.  1.  1.  0. -1.  0.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
confusion matrix
[[ 9  3  1  0  0  0  1  0  2  1]
 [ 0 21  0  1  3  0  0  1  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  0 11  0  0  0  1  2]
 [ 0  0  3  2  0 14  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 2  0  1  4  0  1  3  0 11  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.4 0.5 0.6 0.7 0.5 0.5 0.5 0.3 0.3]
 [0.  0.  0.7 0.5 0.5 0.6 0.5 0.4 0.4 0.6]
 [0.  0.  0.  0.4 0.6 0.2 0.6 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.4 0.5 0.3 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 1.   1.   0.5  0.88 1.   0.88]
 [0.   0.   1.   0.5  0.88 1.12 1.12 0.75]
 [0.   0.   0.   0.62 0.88 0.75 0.62 0.38]
 [0.   0.   0.   0.   0.88 1.   0.88 0.62]
 [0.   0.   0.   0.   0.   1.12 0.88 0.75]
 [0.   0.   0.   0.   0.   0.   0.62 0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
confusion matrix
[[12  0  1  0  0  0  1  0  2  1]
 [ 1 20  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  1 10  0  0  0  1  2]
 [ 0  0  3  2  0 14  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  3  1  1  0  1  0 12  0  0]
 [ 2  0  1  4  0  1  3  0 11  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.6 0.7 0.8 0.6 0.5 0.6 0.4 0.4]
 [0.  0.  0.8 0.6 0.5 0.7 0.6 0.5 0.4 0.6]
 [0.  0.  0.  0.4 0.7 0.2 0.7 0.5 0.8 0.6]
 [0.  0.  0.  0.  0.4 0.3 0.6 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.5 0.6 0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.89 0.89 0.44 0.78 0.89 0.78 0.78]
 [0.   0.   0.89 0.44 0.78 1.   1.   0.67 0.89]
 [0.   0.   0.   0.56 0.78 0.67 0.56 0.33 0.67]
 [0.   0.   0.   0.   0.78 0.89 0.78 0.56 0.67]
 [0.   0.   0.   0.   0.   1.   0.78 0.67 0.89]
 [0.   0.   0.   0.   0.   0.   0.56 0.78 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0.  0. -1. -1. -1.  1.  1.]
select_j_column
[ 0.  0.  0.  0.  1.  0. -1.  0.  1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]]


============== iter  10 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
confusion matrix
[[12  0  1  0  0  0  1  0  2  1]
 [ 1 20  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  0  3  2  0 14  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 3  0  1  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.7 0.7 0.8 0.7 0.6 0.7 0.5 0.4]
 [0.  0.  0.9 0.6 0.5 0.8 0.7 0.6 0.5 0.6]
 [0.  0.  0.  0.5 0.8 0.2 0.7 0.5 0.9 0.7]
 [0.  0.  0.  0.  0.4 0.4 0.7 0.5 0.9 0.6]
 [0.  0.  0.  0.  0.  0.6 0.7 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.8 0.8 0.4 0.7 0.8 0.7 0.7 0.7]
 [0.  0.  0.8 0.4 0.7 0.9 0.9 0.6 0.8 0.2]
 [0.  0.  0.  0.5 0.7 0.6 0.5 0.3 0.6 0.6]
 [0.  0.  0.  0.  0.7 0.8 0.7 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.9 0.7 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
confusion matrix
[[12  0  1  0  0  0  1  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  2  0  0  1  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  0  3  2  0 14  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  4  0  1  0  2  0 11  0  0]
 [ 3  0  1  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.6 0.7 0.8 0.9 0.7 0.6 0.8 0.5 0.4]
 [0.  0.  1.  0.7 0.5 0.9 0.8 0.6 0.6 0.7]
 [0.  0.  0.  0.6 0.9 0.2 0.7 0.6 0.9 0.7]
 [0.  0.  0.  0.  0.5 0.5 0.8 0.6 1.  0.7]
 [0.  0.  0.  0.  0.  0.7 0.8 0.5 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.73 0.73 0.36 0.64 0.73 0.64 0.64 0.64 0.64]
 [0.   0.   0.73 0.36 0.64 0.82 0.82 0.55 0.73 0.18 0.45]
 [0.   0.   0.   0.45 0.64 0.55 0.45 0.27 0.55 0.55 0.64]
 [0.   0.   0.   0.   0.64 0.73 0.64 0.45 0.55 0.55 0.55]
 [0.   0.   0.   0.   0.   0.82 0.64 0.55 0.73 0.64 0.73]
 [0.   0.   0.   0.   0.   0.   0.45 0.64 0.73 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.64 0.82 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.55 0.36 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 1. -1.  0.  0. -1.  0.  1.  0. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
11 classifiers pre label
Counter({0.0: 72, 1.0: 63, -1.0: 53})
confusion matrix
[[13  0  1  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  2  0  0  1  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  0  3  2  0 14  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  3  0  1  0  2  0 12  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.7 0.8 0.9 1.  0.8 0.7 0.8 0.5 0.5]
 [0.  0.  1.1 0.8 0.5 1.  0.8 0.7 0.7 0.7]
 [0.  0.  0.  0.6 1.  0.2 0.8 0.7 1.  0.8]
 [0.  0.  0.  0.  0.6 0.5 0.9 0.7 1.1 0.8]
 [0.  0.  0.  0.  0.  0.8 0.8 0.6 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.67 0.67 0.33 0.58 0.67 0.58 0.58 0.58 0.58 0.67]
 [0.   0.   0.67 0.33 0.58 0.75 0.75 0.5  0.67 0.17 0.42 0.58]
 [0.   0.   0.   0.42 0.58 0.5  0.42 0.25 0.5  0.5  0.58 0.5 ]
 [0.   0.   0.   0.   0.58 0.67 0.58 0.42 0.5  0.5  0.5  0.42]
 [0.   0.   0.   0.   0.   0.75 0.58 0.5  0.67 0.58 0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.42 0.58 0.67 0.67 0.58 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.58 0.58 0.75 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.33 0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  0.  0. -1.  0.  1.  0. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.  1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0. -1.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1. -1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.  1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.  1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.  0.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
11 classifiers pre label
Counter({0.0: 72, 1.0: 63, -1.0: 53})
12 classifiers pre label
Counter({0.0: 78, 1.0: 58, -1.0: 52})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 0  0  0  2  0 17  1  0  0  0]
 [ 1  0  0  0  0  3  8  0  3  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.8 0.9 1.  1.1 0.8 0.8 0.9 0.5 0.6]
 [0.  0.  1.2 0.9 0.6 1.1 0.8 0.7 0.8 0.7]
 [0.  0.  0.  0.6 1.  0.3 0.9 0.8 1.1 0.9]
 [0.  0.  0.  0.  0.6 0.6 1.  0.8 1.2 0.9]
 [0.  0.  0.  0.  0.  0.9 0.9 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.62 0.62 0.31 0.54 0.62 0.54 0.54 0.54 0.54 0.62 0.69]
 [0.   0.   0.62 0.31 0.54 0.69 0.69 0.46 0.62 0.15 0.38 0.54 0.62]
 [0.   0.   0.   0.38 0.54 0.46 0.38 0.23 0.46 0.46 0.54 0.46 0.54]
 [0.   0.   0.   0.   0.54 0.62 0.54 0.38 0.46 0.46 0.46 0.38 0.46]
 [0.   0.   0.   0.   0.   0.69 0.54 0.46 0.62 0.54 0.62 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.54 0.62 0.62 0.54 0.54 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.54 0.54 0.69 0.46 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.62 0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.38 0.38 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.  0.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.  1. -1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0. -1. -1.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1. -1. -1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.  1. -1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.  1. -1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.  0.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
11 classifiers pre label
Counter({0.0: 72, 1.0: 63, -1.0: 53})
12 classifiers pre label
Counter({0.0: 78, 1.0: 58, -1.0: 52})
13 classifiers pre label
Counter({-1.0: 107, 0.0: 65, 1.0: 16})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  0 10  0  0  1  0  3]
 [ 0  0  1  2  0 16  1  0  0  0]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  0.9 1.  1.  1.2 0.8 0.9 1.  0.6 0.7]
 [0.  0.  1.2 1.  0.6 1.2 0.8 0.7 0.9 0.7]
 [0.  0.  0.  0.7 1.  0.4 0.9 0.8 1.2 0.9]
 [0.  0.  0.  0.  0.7 0.6 1.1 0.9 1.3 1. ]
 [0.  0.  0.  0.  0.  1.  0.9 0.7 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.7 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.57 0.57 0.29 0.5  0.57 0.5  0.5  0.5  0.5  0.57 0.64 0.57]
 [0.   0.   0.57 0.29 0.5  0.64 0.64 0.43 0.57 0.14 0.36 0.5  0.57 0.36]
 [0.   0.   0.   0.36 0.5  0.43 0.36 0.21 0.43 0.43 0.5  0.43 0.5  0.36]
 [0.   0.   0.   0.   0.5  0.57 0.5  0.36 0.43 0.43 0.43 0.36 0.43 0.43]
 [0.   0.   0.   0.   0.   0.64 0.5  0.43 0.57 0.5  0.57 0.57 0.36 0.57]
 [0.   0.   0.   0.   0.   0.   0.36 0.5  0.57 0.57 0.5  0.5  0.64 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.64 0.43 0.43 0.36 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.57 0.43 0.57 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.36 0.36 0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.57 0.57 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[ 1. -1.  0.  0. -1.  0.  1.  0. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.  0.  0. -1.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.  1. -1.  1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0. -1. -1.  1.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0. -1.  0. -1.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1. -1. -1.  1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.  0.  0.  1.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.  1. -1.  0.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.  0.  1.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
11 classifiers pre label
Counter({0.0: 72, 1.0: 63, -1.0: 53})
12 classifiers pre label
Counter({0.0: 78, 1.0: 58, -1.0: 52})
13 classifiers pre label
Counter({-1.0: 107, 0.0: 65, 1.0: 16})
14 classifiers pre label
Counter({1.0: 101, -1.0: 70, 0.0: 17})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  2  0 11  0  0  1  0  2]
 [ 0  0  1  3  0 15  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  1.  1.1 1.  1.3 0.9 0.9 1.1 0.7 0.7]
 [0.  0.  1.2 1.1 0.6 1.2 0.9 0.8 0.9 0.8]
 [0.  0.  0.  0.8 1.  0.4 1.  0.9 1.2 1. ]
 [0.  0.  0.  0.  0.8 0.7 1.1 1.  1.4 1. ]
 [0.  0.  0.  0.  0.  1.  1.  0.8 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.53 0.53 0.27 0.47 0.53 0.47 0.47 0.47 0.47 0.53 0.6  0.53
  0.33]
 [0.   0.   0.53 0.27 0.47 0.6  0.6  0.4  0.53 0.13 0.33 0.47 0.53 0.33
  0.53]
 [0.   0.   0.   0.33 0.47 0.4  0.33 0.2  0.4  0.4  0.47 0.4  0.47 0.33
  0.53]
 [0.   0.   0.   0.   0.47 0.53 0.47 0.33 0.4  0.4  0.4  0.33 0.4  0.4
  0.47]
 [0.   0.   0.   0.   0.   0.6  0.47 0.4  0.53 0.47 0.53 0.53 0.33 0.53
  0.47]
 [0.   0.   0.   0.   0.   0.   0.33 0.47 0.53 0.53 0.47 0.47 0.6  0.53
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.6  0.4  0.4  0.33 0.53
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.53 0.4  0.53 0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.33 0.33 0.47 0.33
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.53 0.27
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.47 0.33
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.  0.  0. -1.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.  1. -1.  1.  0.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0. -1. -1.  1. -1.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0. -1.  0. -1.  0.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1. -1. -1.  1.  0.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.  0.  0.  1.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.  1. -1. -1.  0.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.  1. -1.  0.  1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.  0.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
11 classifiers pre label
Counter({0.0: 72, 1.0: 63, -1.0: 53})
12 classifiers pre label
Counter({0.0: 78, 1.0: 58, -1.0: 52})
13 classifiers pre label
Counter({-1.0: 107, 0.0: 65, 1.0: 16})
14 classifiers pre label
Counter({1.0: 101, -1.0: 70, 0.0: 17})
15 classifiers pre label
Counter({0.0: 113, 1.0: 55, -1.0: 20})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  9  0  3  0  3  0  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  3  0 16  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  1.  1.2 1.  1.3 0.9 0.9 1.2 0.8 0.8]
 [0.  0.  1.3 1.1 0.6 1.2 0.9 0.9 1.  0.9]
 [0.  0.  0.  0.9 1.1 0.5 1.1 1.  1.3 1.1]
 [0.  0.  0.  0.  0.8 0.7 1.1 1.1 1.5 1.1]
 [0.  0.  0.  0.  0.  1.  1.  0.9 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.9 0.9 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.5  0.5  0.25 0.44 0.5  0.44 0.44 0.44 0.44 0.5  0.56 0.5
  0.31 0.38]
 [0.   0.   0.5  0.25 0.44 0.56 0.56 0.38 0.5  0.12 0.31 0.44 0.5  0.31
  0.5  0.25]
 [0.   0.   0.   0.31 0.44 0.38 0.31 0.19 0.38 0.38 0.44 0.38 0.44 0.31
  0.5  0.25]
 [0.   0.   0.   0.   0.44 0.5  0.44 0.31 0.38 0.38 0.38 0.31 0.38 0.38
  0.44 0.25]
 [0.   0.   0.   0.   0.   0.56 0.44 0.38 0.5  0.44 0.5  0.5  0.31 0.5
  0.44 0.25]
 [0.   0.   0.   0.   0.   0.   0.31 0.44 0.5  0.5  0.44 0.44 0.56 0.5
  0.31 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.56 0.38 0.38 0.31 0.5
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.5  0.38 0.5  0.31
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.31 0.31 0.44 0.31
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.5  0.5  0.25
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.44 0.31
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.44
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.5  0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  0.  0.  0.  0.  1.]
select_j_column
[ 1. -1.  1.  0. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  17 ================
current matrix is 
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.  0.  0. -1.  0. -1.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.  1. -1.  1.  0.  1.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0. -1. -1.  1. -1.  0.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0. -1.  0. -1.  0. -1.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1. -1. -1.  1.  0.  1.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.  0.  0.  1.  0. -1.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.  1. -1. -1.  0. -1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.  1. -1.  0.  1.  1.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.  0.  1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.  1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 102, 1.0: 52, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 57, 1.0: 47})
2 classifiers pre label
Counter({0.0: 101, 1.0: 58, -1.0: 29})
3 classifiers pre label
Counter({0.0: 89, 1.0: 86, -1.0: 13})
4 classifiers pre label
Counter({0.0: 143, 1.0: 31, -1.0: 14})
5 classifiers pre label
Counter({1.0: 106, -1.0: 75, 0.0: 7})
6 classifiers pre label
Counter({1.0: 89, 0.0: 70, -1.0: 29})
7 classifiers pre label
Counter({0.0: 143, 1.0: 33, -1.0: 12})
8 classifiers pre label
Counter({0.0: 89, -1.0: 64, 1.0: 35})
9 classifiers pre label
Counter({-1.0: 87, 0.0: 83, 1.0: 18})
10 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
11 classifiers pre label
Counter({0.0: 72, 1.0: 63, -1.0: 53})
12 classifiers pre label
Counter({0.0: 78, 1.0: 58, -1.0: 52})
13 classifiers pre label
Counter({-1.0: 107, 0.0: 65, 1.0: 16})
14 classifiers pre label
Counter({1.0: 101, -1.0: 70, 0.0: 17})
15 classifiers pre label
Counter({0.0: 113, 1.0: 55, -1.0: 20})
16 classifiers pre label
Counter({-1.0: 98, 1.0: 57, 0.0: 33})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  2  0  0  1  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  3  0 16  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  3  0  1  0  2  0 12  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  1  0  0  0  0  4]]
row HD
[[0.  1.1 1.3 1.  1.4 0.9 0.9 1.3 0.8 0.9]
 [0.  0.  1.4 1.2 0.6 1.3 1.  0.9 1.1 1. ]
 [0.  0.  0.  1.  1.2 0.6 1.2 1.1 1.4 1.1]
 [0.  0.  0.  0.  0.9 0.7 1.1 1.2 1.5 1.2]
 [0.  0.  0.  0.  0.  1.1 1.1 0.9 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.9 1.  1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.47 0.47 0.24 0.41 0.47 0.41 0.41 0.41 0.41 0.47 0.53 0.47
  0.29 0.35 0.53]
 [0.   0.   0.47 0.24 0.41 0.53 0.53 0.35 0.47 0.12 0.29 0.41 0.47 0.29
  0.47 0.24 0.47]
 [0.   0.   0.   0.29 0.41 0.35 0.29 0.18 0.35 0.35 0.41 0.35 0.41 0.29
  0.47 0.24 0.35]
 [0.   0.   0.   0.   0.41 0.47 0.41 0.29 0.35 0.35 0.35 0.29 0.35 0.35
  0.41 0.24 0.35]
 [0.   0.   0.   0.   0.   0.53 0.41 0.35 0.47 0.41 0.47 0.47 0.29 0.47
  0.41 0.24 0.53]
 [0.   0.   0.   0.   0.   0.   0.29 0.41 0.47 0.47 0.41 0.41 0.53 0.47
  0.29 0.53 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.41 0.41 0.53 0.35 0.35 0.29 0.47
  0.47 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.47 0.35 0.47 0.29
  0.35 0.29 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.29 0.29 0.41 0.29
  0.47 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.47 0.47 0.24
  0.47 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.41 0.29
  0.41 0.41 0.59]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.41
  0.41 0.41 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.47 0.29 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.41 0.29 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})

**********      classifier acc  **************
[0.75, 0.791, 0.671, 0.699, 0.569, 0.834, 0.764, 0.556, 0.691, 0.727, 0.924, 0.731, 0.643, 0.733, 0.714, 0.584, 0.882, 0.682, 0.214, 0.606, 0.323]
before cutting matrix
[[-1.  1.  0.  1.  0. -1.  0.  0.  1.  0.  1. -1.  0.  0. -1.  0. -1.  0.
   0.  0.  0.]
 [ 0.  0. -1.  1.  0. -1. -1.  0. -1.  0. -1.  1.  1. -1.  1.  0.  1.  0.
   0.  0.  0.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  0. -1.  1.  0. -1. -1.  1. -1.  0. -1.
   0.  0.  0.]
 [ 0.  0.  0.  0. -1.  1.  1.  0.  0.  0.  0.  0. -1.  0. -1.  0. -1.  0.
   0.  1. -1.]
 [ 0.  0.  1.  0.  0.  1.  1.  1. -1.  0. -1.  1. -1. -1.  1.  0.  1.  0.
   0. -1.  0.]
 [ 1. -1.  0.  0.  0.  1.  1.  0.  0. -1.  1.  0.  0.  0.  1.  0. -1.  0.
   0.  0.  0.]
 [ 0. -1.  0. -1.  0. -1.  1. -1.  1. -1.  1.  1.  1. -1. -1.  0. -1.  0.
  -1.  0.  1.]
 [ 0. -1.  1.  1.  0.  1.  1.  0.  0. -1. -1. -1.  1. -1.  0.  1.  1.  0.
   0.  0.  0.]
 [ 0.  1.  1.  1.  0. -1.  0.  1. -1.  1.  1. -1.  0.  1.  1.  1. -1.  1.
   0.  0.  0.]
 [-1.  1.  0.  1.  1.  0.  1.  0. -1.  0.  1.  1.  1. -1. -1.  1.  0.  0.
   1.  0.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 219, 1.0: 156})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 177, -1.0: 59})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 177, -1.0: 59})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 277, -1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 343, -1.0: 59})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 227, 1.0: 97})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({-1.0: 219, 1.0: 52})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 219, 1.0: 52})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 221, -1.0: 165})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 220, -1.0: 185})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 340, 1.0: 52})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 340, 1.0: 52})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({1.0: 285, -1.0: 215})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 285, -1.0: 215})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 167, -1.0: 57})
after cutting matrix
[[-1.  1.  1.  0. -1.  0.  0.  1.  1. -1.  0.  0. -1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0. -1. -1.  0. -1. -1.  1.  1.  0.  1.  0.  0.  0.  0.]
 [ 1. -1.  0.  1.  1.  0.  0.  0.  1.  0. -1. -1.  0. -1.  0.  0.  0.]
 [ 0.  0.  0. -1.  1.  1.  0.  0.  0.  0. -1.  0. -1.  0.  0.  1. -1.]
 [ 0.  0.  0.  0.  1.  1.  1. -1. -1.  1. -1.  0.  1.  0.  0. -1.  0.]
 [ 1. -1.  0.  0.  1.  1.  0.  0.  1.  0.  0.  0. -1.  0.  0.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  1.  1.  1.  1.  0. -1.  0. -1.  0.  1.]
 [ 0. -1.  1.  0.  1.  1.  0.  0. -1. -1.  1.  1.  1.  0.  0.  0.  0.]
 [ 0.  1.  1.  0. -1.  0.  1. -1.  1. -1.  0.  1. -1.  1.  0.  0.  0.]
 [-1.  1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  1.  0.  0.  1.  0.  0.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 104})
Counter({-1.0: 219, 1.0: 156})
Counter({1.0: 277, -1.0: 46})
Counter({1.0: 110, -1.0: 65})
Counter({1.0: 301, -1.0: 208})
Counter({1.0: 343, -1.0: 59})
Counter({1.0: 115, -1.0: 46})
Counter({-1.0: 227, 1.0: 97})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 221, -1.0: 165})
Counter({1.0: 220, -1.0: 185})
Counter({1.0: 167, -1.0: 57})
Counter({-1.0: 268, 1.0: 184})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 65, -1.0: 63})
Counter({-1.0: 65, 1.0: 46})
cutting matrix's confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  2  0  0  1  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  2  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  2  4  0  1  3  0 10  0]
 [ 0  0  0  8  0  1  0  0  0  4]]
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:52:10
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 134, 1.0: 32})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.2 0.  0.4 0.4]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.2 0.  0.6 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1. -1. -1. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.  0.6 0.6]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  1.  ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})

**********      classifier acc  **************
[0.625, 0.857, 0.911, 0.696, 0.087, 0.071, 0.125, 0.125]
before cutting matrix
[[-1. -1. -1.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1.  1.  0.  0.  0.]
 [-1. -1. -1.  1. -1.  1.  0.  0.]
 [ 1.  1.  1.  1.  0. -1.  1. -1.]
 [ 1.  1. -1. -1.  0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 129, -1.0: 37})
positive and negative ratio
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 29, -1.0: 18})
after cutting matrix
[[-1. -1.  1.  0.  0.  0.]
 [-1. -1. -1.  0.  0.  0.]
 [-1. -1.  1.  1.  0.  0.]
 [ 1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 142, 1.0: 24})
Counter({1.0: 129, -1.0: 37})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:52:11
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1.  1.  1.]
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({0.0: 51, 1.0: 5})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0.  1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 113, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  2  2]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0.  1.  0.]
 [-1. -1.  0.]
 [ 1.  0.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({0.0: 53, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.6 0.4]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  0.  0.  1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0.  1.  0.]
 [-1. -1.  0.]
 [ 1.  0.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({0.0: 53, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.6 0.4]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})

**********      classifier acc  **************
[0.059, 0.686, 0.125, 0.087, 0.071, 0.125, 0.125]
before cutting matrix
[[ 0. -1.  0.  0.  0.  0.  0.]
 [ 0.  1.  0.  1.  0.  0.  0.]
 [-1. -1.  0. -1.  1.  0.  0.]
 [ 1.  0.  1.  0. -1.  1. -1.]
 [ 1. -1. -1.  0.  0. -1.  1.]]
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 32, -1.0: 18})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 29, -1.0: 18})
after cutting matrix
[[-1.  0.  0.  0.  0.]
 [ 1.  0.  0.  0.  0.]
 [-1.  0.  1.  0.  0.]
 [ 0.  1. -1.  1. -1.]
 [-1. -1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:52:13
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
pre label
Counter({-1.0: 58, 1.0: 9})
confusion matrix
[[17  0  0  0  0  0]
 [ 3  9  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]
 [11  0  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  0  3  0  0]
 [11  0  0  0  0  0]
 [ 0  0  0  8  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.33 0.   0.17 0.   0.17]
 [0.   0.   0.33 0.17 0.33 0.17]
 [0.   0.   0.   0.17 0.   0.17]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]]
row HD
[[0.   0.5  0.17 0.17 0.   0.17]
 [0.   0.   0.33 0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 54, -1.0: 13})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 2  0  0  6  0  0]]
row HD
[[0.   0.5  0.17 0.33 0.   0.33]
 [0.   0.   0.33 0.5  0.5  0.5 ]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.25 0.75]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 54, -1.0: 13})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.5  0.17 0.33 0.   0.5 ]
 [0.   0.   0.33 0.5  0.5  0.67]
 [0.   0.   0.   0.5  0.17 0.67]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.2 0.6 0.8]
 [0.  0.  0.6 1.  0.8]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 54, -1.0: 13})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 38, -1.0: 29})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  1  0  6]]
row HD
[[0.   0.67 0.33 0.5  0.   0.67]
 [0.   0.   0.33 0.5  0.67 0.67]
 [0.   0.   0.   0.5  0.33 0.67]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.17 0.5  0.67 0.5 ]
 [0.   0.   0.5  0.83 0.67 0.17]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  0.]
 [-1. -1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 54, -1.0: 13})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 38, -1.0: 29})
6 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  1  0  6]]
row HD
[[0.   0.83 0.5  0.67 0.   0.83]
 [0.   0.   0.33 0.67 0.83 0.83]
 [0.   0.   0.   0.67 0.5  0.83]
 [0.   0.   0.   0.   0.67 0.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.14 0.43 0.57 0.43 0.71]
 [0.   0.   0.43 0.71 0.57 0.14 0.71]
 [0.   0.   0.   0.29 0.43 0.29 0.86]
 [0.   0.   0.   0.   0.14 0.57 0.57]
 [0.   0.   0.   0.   0.   0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  0.  0.]
 [-1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 54, -1.0: 13})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 38, -1.0: 29})
6 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
7 classifiers pre label
Counter({1.0: 41, 0.0: 14, -1.0: 12})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  1  0  6]]
row HD
[[0.   1.   0.5  0.83 0.   1.  ]
 [0.   0.   0.5  0.83 1.   1.  ]
 [0.   0.   0.   0.83 0.5  1.  ]
 [0.   0.   0.   0.   0.83 0.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.12 0.38 0.5  0.38 0.62 0.75]
 [0.   0.   0.38 0.62 0.5  0.12 0.62 0.75]
 [0.   0.   0.   0.25 0.38 0.25 0.75 0.62]
 [0.   0.   0.   0.   0.12 0.5  0.5  0.38]
 [0.   0.   0.   0.   0.   0.38 0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})

**********      classifier acc  **************
[0.955, 0.985, 0.955, 0.955, 0.97, 0.985, 0.98, 0.98, 0.895]
before cutting matrix
[[-1. -1. -1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  0.]
 [-1. -1.  1.  1.  1.  1. -1.  1.  0.]
 [-1.  1. -1. -1.  1.  1.  0.  0.  0.]
 [-1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  0.  0. -1.]]
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 127, 1.0: 74})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 164, -1.0: 37})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({1.0: 164, -1.0: 37})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 90, -1.0: 74})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({1.0: 90, -1.0: 74})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 25, -1.0: 9})
positive and negative ratio
Counter({1.0: 133, -1.0: 31})
after cutting matrix
[[-1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1.  0.]
 [-1.  1.  1.  1.  0.]
 [ 1.  1.  1.  0.  0.]
 [-1.  1. -1.  1.  1.]
 [ 1. -1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 133, 1.0: 68})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 111, -1.0: 90})
Counter({1.0: 133, -1.0: 31})
Counter({1.0: 25, -1.0: 9})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  1  0  6]]


SVM classifier
Time: 2019-01-06 16:52:15
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  1. -1.]
positive and negative ratio
Counter({1.0: 68, -1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
pre label
Counter({0.0: 39, 1.0: 22, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [12  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1.  0.  0. -1.  0.  1.]
select_j_column
[ 1. -1.  0. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 68, -1.0: 9})
Counter({-1.0: 149, 1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({0.0: 39, 1.0: 22, -1.0: 6})
1 classifiers pre label
Counter({-1.0: 50, 0.0: 11, 1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [12  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.   0.33 0.   0.17 0.33]
 [0.   0.   0.33 0.   0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0.  1.  0. -1. -1.  1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0. -1.  1.]
 [ 1.  0. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({1.0: 68, -1.0: 9})
Counter({-1.0: 149, 1.0: 9})
Counter({-1.0: 80, 1.0: 56})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({0.0: 39, 1.0: 22, -1.0: 6})
1 classifiers pre label
Counter({-1.0: 50, 0.0: 11, 1.0: 6})
2 classifiers pre label
Counter({-1.0: 27, 1.0: 23, 0.0: 17})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  0  2  0  6]]
row HD
[[0.   0.17 0.5  0.17 0.33 0.5 ]
 [0.   0.   0.5  0.17 0.17 0.5 ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 68, -1.0: 9})
Counter({-1.0: 149, 1.0: 9})
Counter({-1.0: 80, 1.0: 56})

**********      classifier acc  **************
[0.933, 0.964, 0.96]
before cutting matrix
[[ 0. -1.  0.]
 [ 0. -1.  1.]
 [ 1.  0. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({1.0: 68, -1.0: 9})
Counter({-1.0: 149, 1.0: 9})
Counter({-1.0: 80, 1.0: 56})
after cutting matrix
[[ 0. -1.  0.]
 [ 0. -1.  1.]
 [ 1.  0. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({1.0: 68, -1.0: 9})
Counter({-1.0: 149, 1.0: 9})
Counter({-1.0: 80, 1.0: 56})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  0  2  0  6]]


SVM classifier
Time: 2019-01-06 16:52:16
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({-1.0: 149, 1.0: 39})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [24  2  0  0  0  0  0  0  0  0]
 [12  5  0  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3 14  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[16  1  0  1  0  0  0  0  0  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [18  2  0  6  0  0  0  0  0  0]
 [ 1  5  0 11  0  0  0  0  0  0]
 [ 2  0  0 21  0  0  0  0  0  0]
 [ 3  0  0 16  0  0  0  0  0  0]
 [ 2  0  0 17  0  0  0  0  0  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0 11  0  0  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.1 0.2 0.2 0.1 0.2 0.  0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
None


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[16  1  0  1  0  0  0  0  0  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [18  2  0  6  0  0  0  0  0  0]
 [ 1  5  0 11  0  0  0  0  0  0]
 [ 2  0  0 21  0  0  0  0  0  0]
 [ 3  0  0 16  0  0  0  0  0  0]
 [ 2  0  0 17  0  0  0  0  0  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0 11  0  0  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.1 0.2 0.2 0.1 0.2 0.  0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[16  0  0  0  1  0  0  1  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [18  0  0  2  4  0  0  2  0  0]
 [ 1  0  0 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 15  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0 11  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.1 0.2 0.1 0.1 0.1 0.2 0.2]
 [0.  0.  0.2 0.3 0.2 0.1 0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.2 0.1 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.3 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1.  1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1.  1.  1.]
 [ 1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [18  0  0  2  0  0  0  2  4  0]
 [ 1  0  0 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.2 0.  0.1 0.2 0.2 0.1 0.1 0.3 0.3]
 [0.  0.  0.2 0.3 0.2 0.2 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.1 0.2 0.2 0.1 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.1 0.3 0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.25 1.  ]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 142, 1.0: 46})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [18  0  0  2  1  0  0  2  3  0]
 [ 1  0  0 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.1 0.3 0.2 0.2 0.1 0.3 0.4]
 [0.  0.  0.2 0.3 0.3 0.2 0.4 0.1 0.3 0.4]
 [0.  0.  0.  0.1 0.3 0.2 0.2 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  0.8 0.8]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
None


============== iter  7 ================
current matrix is 
[[-1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 142, 1.0: 46})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [18  0  0  2  1  0  0  2  3  0]
 [ 1  0  0 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.  0.1 0.3 0.2 0.2 0.1 0.3 0.4]
 [0.  0.  0.2 0.3 0.3 0.2 0.4 0.1 0.3 0.4]
 [0.  0.  0.  0.1 0.3 0.2 0.2 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  0.8 0.8]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1.  1. -1.  1. -1.]
 [-1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 142, 1.0: 46})
5 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.3 0.2 0.2 0.2 0.3 0.5]
 [0.  0.  0.2 0.4 0.4 0.3 0.5 0.1 0.4 0.4]
 [0.  0.  0.  0.2 0.4 0.3 0.3 0.1 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.3 0.1 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.83 0.67 0.67 0.17]
 [0.   0.   0.83 0.67 0.33 1.17]
 [0.   0.   0.   0.5  0.83 1.  ]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 142, 1.0: 46})
5 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
6 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.3 0.3 0.2 0.2 0.3 0.5]
 [0.  0.  0.2 0.4 0.4 0.4 0.5 0.1 0.4 0.4]
 [0.  0.  0.  0.2 0.4 0.4 0.3 0.1 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.4 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.4 0.1 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.71 0.57 0.57 0.14 0.86]
 [0.   0.   0.71 0.57 0.29 1.   0.57]
 [0.   0.   0.   0.43 0.71 0.86 1.  ]
 [0.   0.   0.   0.   0.57 0.71 1.14]
 [0.   0.   0.   0.   0.   0.71 0.86]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1. -1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 142, 1.0: 46})
5 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
6 classifiers pre label
Counter({1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.3 0.3 0.2 0.2 0.3 0.6]
 [0.  0.  0.2 0.4 0.4 0.4 0.5 0.1 0.4 0.5]
 [0.  0.  0.  0.2 0.4 0.4 0.3 0.1 0.4 0.5]
 [0.  0.  0.  0.  0.2 0.4 0.1 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.  0.4 0.1 0.5 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.62 0.5  0.5  0.12 0.75 0.25]
 [0.   0.   0.62 0.5  0.25 0.88 0.5  0.5 ]
 [0.   0.   0.   0.38 0.62 0.75 0.88 0.62]
 [0.   0.   0.   0.   0.5  0.62 1.   0.25]
 [0.   0.   0.   0.   0.   0.62 0.75 0.25]
 [0.   0.   0.   0.   0.   0.   0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1.  1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 100, -1.0: 88})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 142, 1.0: 46})
5 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
6 classifiers pre label
Counter({1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 98, 1.0: 90})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.4 0.1 0.1 0.4 0.4 0.2 0.2 0.4 0.7]
 [0.  0.  0.3 0.5 0.4 0.4 0.6 0.2 0.4 0.5]
 [0.  0.  0.  0.2 0.5 0.5 0.3 0.1 0.5 0.6]
 [0.  0.  0.  0.  0.3 0.5 0.1 0.3 0.3 0.6]
 [0.  0.  0.  0.  0.  0.4 0.2 0.6 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.56 0.44 0.44 0.11 0.67 0.22 0.44]
 [0.   0.   0.56 0.44 0.22 0.78 0.44 0.44 0.44]
 [0.   0.   0.   0.33 0.56 0.67 0.78 0.56 0.11]
 [0.   0.   0.   0.   0.44 0.56 0.89 0.22 0.22]
 [0.   0.   0.   0.   0.   0.56 0.67 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.56 0.33 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})

**********      classifier acc  **************
[0.846, 0.777, 0.654, 0.718, 0.771, 0.814, 0.899, 0.931, 0.697, 0.467, 0.5, 0.5, 0.0]
before cutting matrix
[[-1. -1. -1. -1. -1. -1.  1. -1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  0.  0.  0.]
 [-1. -1. -1. -1. -1.  1.  1. -1. -1.  0.  0.  0.  0.]
 [-1.  1. -1. -1. -1. -1.  1. -1. -1.  0.  0.  0.  0.]
 [-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.  0.  0.  0.]
 [-1. -1.  1.  1. -1. -1. -1. -1.  1.  0.  1. -1.  0.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.  0. -1.  1.  0.]
 [ 1. -1. -1. -1. -1.  1.  1. -1. -1.  0.  0.  0.  0.]
 [-1.  1.  1.  1. -1. -1.  1. -1.  1.  0.  0.  0. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 297, 1.0: 265})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 322, 1.0: 240})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 322, 1.0: 240})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 383, 1.0: 179})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 413, 1.0: 149})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 58, -1.0: 54})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 58, -1.0: 54})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 67, -1.0: 44})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 67, 1.0: 44})
after cutting matrix
[[-1. -1. -1. -1.  1. -1. -1.  0.]
 [ 1. -1. -1.  1.  1. -1.  1.  0.]
 [-1. -1. -1.  1.  1. -1. -1.  0.]
 [-1.  1. -1. -1.  1. -1. -1.  0.]
 [-1.  1.  1. -1.  1. -1.  1.  0.]
 [-1. -1. -1. -1. -1. -1.  1.  0.]
 [-1.  1.  1. -1.  1. -1. -1.  0.]
 [ 1. -1. -1.  1.  1. -1. -1.  0.]
 [-1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 297, 1.0: 265})
Counter({-1.0: 413, 1.0: 149})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 511, 1.0: 51})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 61, 1.0: 51})
cutting matrix's confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:52:27
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  4  0  0  0  0 17  0  0  0]
 [19  4  0  0  0  0  3  0  0  0]
 [ 2 10  0  0  0  0  5  0  0  0]
 [21  2  0  0  0  0  0  0  0  0]
 [16  1  0  0  0  0  2  0  0  0]
 [ 3  0  0  0  0  0 16  0  0  0]
 [ 2  3  0  0  0  0 12  0  0  0]
 [ 5  0  0  0  0  0  9  0  0  0]
 [10  3  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0.  0.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  4  0  0  0  1 17  0  0  0]
 [18  4  0  0  0  1  3  0  0  0]
 [ 1 10  0  0  0  1  5  0  0  0]
 [ 0  2  0  0  0 21  0  0  0  0]
 [ 0  1  0  0  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  3  0  0  0  2 12  0  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  3  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.1 0.  0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  1. -1. -1. -1. -1. -1.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0.  0.  0.]
 [ 1.  0. -1.]
 [ 0.  0.  1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 77})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  4 17  0  0  1  3  0  0  0]
 [ 0 10  1  0  0  1  0  5  0  0]
 [ 0  2  0  0  0 21  0  0  0  0]
 [ 0  1  0  0  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  3  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.2 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.2 0.1 0.3 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.2 0.1 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   2.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  1. -1. -1. -1. -1. -1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0. -1.]
 [ 0.  0.  0. -1.]
 [ 1.  0. -1.  0.]
 [ 0.  0.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  0.  1.]
 [-1. -1. -1. -1.]
 [-1. -1. -1. -1.]
 [-1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 77})
3 classifiers pre label
Counter({-1.0: 147, 1.0: 23, 0.0: 18})
confusion matrix
[[13  1  0  0  0  3  0  1  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  0  3  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  2  0  0]
 [ 2  0  0  0  0  1  0 16  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  9  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.3 0.2 0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.3 0.2 0.3 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.2 0.2 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.1 0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.5  1.75]
 [0.   0.   1.   1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  0. -1. -1.]
 [ 0.  0.  0. -1. -1.]
 [ 1.  0. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  0.]
 [-1. -1.  0.  1.  1.]
 [-1. -1. -1. -1. -1.]
 [-1. -1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 77})
3 classifiers pre label
Counter({-1.0: 147, 1.0: 23, 0.0: 18})
4 classifiers pre label
Counter({1.0: 118, -1.0: 57, 0.0: 13})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.1 0.3 0.4 0.3 0.3 0.4 0.3 0.4 0.4]
 [0.  0.  0.4 0.3 0.4 0.4 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.3 0.2 0.3 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.5 0.3 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 1.2 1.4 1.4]
 [0.  0.  0.8 1.  1.6]
 [0.  0.  0.  0.8 1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0.  0.  1. -1. -1. -1. -1. -1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  0.  0. -1. -1.  0.]
 [ 0.  0.  0. -1. -1.  1.]
 [ 1.  0. -1.  0.  1.  0.]
 [ 0.  0.  1.  1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  0.  1.]
 [-1. -1.  0.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  0.]
 [-1. -1. -1. -1.  1.  0.]
 [-1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 77})
3 classifiers pre label
Counter({-1.0: 147, 1.0: 23, 0.0: 18})
4 classifiers pre label
Counter({1.0: 118, -1.0: 57, 0.0: 13})
5 classifiers pre label
Counter({1.0: 118, 0.0: 70})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.4 0.4 0.4 0.5 0.3 0.4 0.5]
 [0.  0.  0.5 0.4 0.4 0.4 0.4 0.4 0.5 0.5]
 [0.  0.  0.  0.3 0.3 0.4 0.5 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.6 0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.2 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   1.17 1.17 1.  ]
 [0.   0.   0.67 0.83 1.33 0.83]
 [0.   0.   0.   0.67 1.33 1.33]
 [0.   0.   0.   0.   0.83 1.17]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  0.  0. -1. -1.  0.  0.]
 [ 0.  0.  0. -1. -1.  1.  1.]
 [ 1.  0. -1.  0.  1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  0.  1.  0.]
 [-1. -1.  0.  1.  1.  1.  0.]
 [-1. -1. -1. -1. -1.  0. -1.]
 [-1. -1. -1. -1.  1.  0.  1.]
 [-1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 77})
3 classifiers pre label
Counter({-1.0: 147, 1.0: 23, 0.0: 18})
4 classifiers pre label
Counter({1.0: 118, -1.0: 57, 0.0: 13})
5 classifiers pre label
Counter({1.0: 118, 0.0: 70})
6 classifiers pre label
Counter({1.0: 92, 0.0: 62, -1.0: 34})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.4 0.5 0.4 0.5 0.4 0.5 0.6]
 [0.  0.  0.5 0.5 0.4 0.5 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.4 0.3 0.5 0.6 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.6 0.6 0.4 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.86 1.   1.   0.86 0.86]
 [0.   0.   0.57 0.71 1.14 0.71 0.86]
 [0.   0.   0.   0.57 1.14 1.14 1.  ]
 [0.   0.   0.   0.   0.71 1.   1.29]
 [0.   0.   0.   0.   0.   1.14 0.57]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1.  0.  0. -1. -1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1.  1.  1.  0.]
 [ 1.  0. -1.  0.  1.  0.  1.  0.]
 [ 0.  0.  1.  1.  1.  0.  0. -1.]
 [ 1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  0.  1.  0.  0.]
 [-1. -1.  0.  1.  1.  1.  0. -1.]
 [-1. -1. -1. -1. -1.  0. -1. -1.]
 [-1. -1. -1. -1.  1.  0.  1. -1.]
 [-1. -1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 95, -1.0: 65, 0.0: 28})
1 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 77})
3 classifiers pre label
Counter({-1.0: 147, 1.0: 23, 0.0: 18})
4 classifiers pre label
Counter({1.0: 118, -1.0: 57, 0.0: 13})
5 classifiers pre label
Counter({1.0: 118, 0.0: 70})
6 classifiers pre label
Counter({1.0: 92, 0.0: 62, -1.0: 34})
7 classifiers pre label
Counter({-1.0: 111, 0.0: 59, 1.0: 18})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  4  0  0  1  0 17  0  0]
 [ 1  2 19  0  0  1  0  0  3  0]
 [ 0  0 11  0  0  1  0  5  0  0]
 [ 0  0  2  0  0 21  0  0  0  0]
 [ 0  0  1  0  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  2  1  0  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  3  0  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.5 0.5 0.6 0.5 0.6 0.5 0.6 0.7]
 [0.  0.  0.5 0.6 0.5 0.5 0.6 0.6 0.6 0.6]
 [0.  0.  0.  0.5 0.4 0.5 0.7 0.6 0.4 0.5]
 [0.  0.  0.  0.  0.6 0.7 0.4 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.4 0.5 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.75 0.88 0.88 0.75 0.75 0.5 ]
 [0.   0.   0.5  0.62 1.   0.62 0.75 0.5 ]
 [0.   0.   0.   0.5  1.   1.   0.88 0.62]
 [0.   0.   0.   0.   0.62 0.88 1.12 0.62]
 [0.   0.   0.   0.   0.   1.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.   0.75 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})

**********      classifier acc  **************
[0.732, 0.676, 0.636, 0.772, 0.834, 0.667, 0.635, 0.719, 0.467, 0.353, 0.467, 0.5, 0.0]
before cutting matrix
[[ 1.  0.  0. -1. -1.  0.  0.  1.  0.  0.  0.  0.  0.]
 [ 0.  0.  0. -1. -1.  1.  1.  0.  1.  0. -1.  0.  0.]
 [ 1.  0. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1.  1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 1.  1. -1. -1.  1.  1.  1. -1. -1.  0.  1.  0.  0.]
 [ 1. -1. -1. -1.  0.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1. -1.  0.  1.  1.  1.  0. -1.  0.  0.  0.  1.  0.]
 [-1. -1. -1. -1. -1.  0. -1. -1.  0. -1.  0.  0.  0.]
 [-1. -1. -1. -1.  1.  0.  1. -1.  0.  0.  0.  0. -1.]
 [-1. -1. -1. -1.  1. -1.  1. -1.  0.  0.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 227, -1.0: 222})
positive and negative ratio
Counter({-1.0: 289, 1.0: 54})
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 289, 1.0: 54})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 223, -1.0: 51})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 223, -1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 281, -1.0: 66})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 331, 1.0: 49})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 58, -1.0: 54})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 58, 1.0: 54})
after cutting matrix
[[ 0. -1. -1.  0.  1.  0.  0.  0.  0.  0.]
 [ 0. -1. -1.  1.  0.  1.  0. -1.  0.  0.]
 [-1.  0.  1.  1.  0.  0.  0.  0.  0.  0.]
 [ 1.  1.  1.  0. -1.  0.  1.  0.  0.  0.]
 [-1. -1.  1.  1. -1. -1.  0.  1.  0.  0.]
 [-1. -1.  0.  0.  0.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0. -1.  0.  0.  0.  1.  0.]
 [-1. -1. -1. -1. -1.  0. -1.  0.  0.  0.]
 [-1. -1.  1.  1. -1.  0.  0.  0.  0. -1.]
 [-1. -1.  1.  1. -1.  0.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 356, 1.0: 55})
Counter({-1.0: 406, 1.0: 99})
Counter({1.0: 322, -1.0: 173})
Counter({1.0: 281, -1.0: 66})
Counter({-1.0: 331, 1.0: 49})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
cutting matrix's confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  4  0  0  1  0 17  0  0]
 [ 1  2 19  0  1  0  3  0  0  0]
 [ 0  0 11  0  1  0  0  5  0  0]
 [ 0  0  2  0 19  2  0  0  0  0]
 [ 0  0  1  0 13  3  2  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 0  2  1  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  9  0  0  0]
 [ 0  0  3  0  9  1  0  0  0  0]]
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:52:36
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.  0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.2 0.4]
 [0.  0.  0.2 0.4 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.2 0.4]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 0.25]
 [0.   0.   0.75 0.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})

**********      classifier acc  **************
[0.714, 0.857, 0.893, 0.875, 0.125, 0.0, 0.0, 0.0]
before cutting matrix
[[-1. -1.  1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1. -1.  1.  0.  0.  0.]
 [ 1.  1.  1.  1. -1.  1. -1.  0.]
 [-1. -1. -1. -1.  0. -1.  1. -1.]
 [-1.  1. -1. -1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 29, -1.0: 16})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 23, -1.0: 16})
after cutting matrix
[[-1. -1.  1. -1.  0.]
 [ 1. -1.  1. -1.  0.]
 [ 1.  1.  1.  1.  0.]
 [-1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 134, -1.0: 32})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:52:37
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  1.  0.  0.]
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({0.0: 40, -1.0: 16})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  1.]]
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
Counter({-1.0: 128, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({0.0: 40, -1.0: 16})
1 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 3  4  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.  0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[ 1. -1.  1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 0. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  1.]]
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
Counter({-1.0: 128, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({0.0: 40, -1.0: 16})
1 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 3  4  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.  0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0. -1.  0.]
 [-1.  0.  0.]
 [ 1. -1.  0.]
 [ 0. -1. -1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 23, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({0.0: 40, -1.0: 16})
1 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
2 classifiers pre label
Counter({0.0: 55, -1.0: 1})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  4  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.4]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})

**********      classifier acc  **************
[0.125, 0.723, 0.0, 0.0, 0.0, 0.0]
before cutting matrix
[[ 0. -1.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  0.  0.]
 [ 1. -1.  0.  1. -1.  0.]
 [ 0. -1. -1. -1.  1. -1.]
 [ 0.  1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 29, 1.0: 16})
positive and negative ratio
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 128, 1.0: 9})
after cutting matrix
[[ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  1. -1.  0.]
 [-1. -1.  1. -1.]
 [ 1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 23, 1.0: 9})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:52:38
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 49, 1.0: 18})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 51, -1.0: 16})
confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.   0.17 0.  ]
 [0.   0.   0.33 0.17 0.   0.17]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 51, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.17 0.17 0.  ]
 [0.   0.   0.5  0.33 0.   0.17]
 [0.   0.   0.   0.17 0.5  0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 51, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.17 0.33 0.17]
 [0.   0.   0.5  0.33 0.17 0.33]
 [0.   0.   0.   0.17 0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.25 0.75]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})

**********      classifier acc  **************
[1.0, 0.91, 0.955, 1.0]
before cutting matrix
[[-1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})
positive and negative ratio
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({1.0: 163, -1.0: 38})
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
after cutting matrix
[[-1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 163, -1.0: 38})
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-06 16:52:40
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  1. -1. -1.  0.]
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({1.0: 39, 0.0: 18, -1.0: 10})
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [18  0  0  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  5  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1. -1.  0.  0.  0.]
select_j_column
[ 0.  0.  1.  0. -1.  0.]
most_cplx_inx
2
new_column
None


============== iter  2 ================
current matrix is 
[ 1.  0.  1. -1. -1.  0.]
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({1.0: 39, 0.0: 18, -1.0: 10})
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [18  0  0  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  5  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  0. -1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
Counter({-1.0: 95, 1.0: 10})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({1.0: 39, 0.0: 18, -1.0: 10})
1 classifiers pre label
Counter({0.0: 34, -1.0: 28, 1.0: 5})
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.33]
 [0.   0.   0.33 0.33 0.33 0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  0.  1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0.  0.  1.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1. -1.  1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({1.0: 39, 0.0: 18, -1.0: 10})
1 classifiers pre label
Counter({0.0: 34, -1.0: 28, 1.0: 5})
2 classifiers pre label
Counter({0.0: 27, 1.0: 22, -1.0: 18})
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.33 0.33 0.5  0.5 ]
 [0.   0.   0.5  0.5  0.33 0.17]
 [0.   0.   0.   0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1. 2.]
 [0. 0. 1.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})

**********      classifier acc  **************
[0.923, 0.914, 1.0]
before cutting matrix
[[ 1.  0.  0.]
 [ 0.  0.  1.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1. -1.  1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})
positive and negative ratio
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})
positive and negative ratio
Counter({1.0: 95, -1.0: 58})
positive and negative ratio
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})
positive and negative ratio
Counter({1.0: 76, -1.0: 37})
positive and negative ratio
Counter({-1.0: 95, 1.0: 10})
after cutting matrix
[[ 0.  0.]
 [ 0.  1.]
 [-1. -1.]
 [-1.  0.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 95, 1.0: 10})
Counter({1.0: 76, -1.0: 37})
cutting matrix's confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-06 16:52:41
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[11  0  0  0  0  0  9  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  3  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [15  0  0  0  0  0  0  0  0  0]
 [ 7  0  0  0  0  0 14  0  0  0]
 [12  0  0  0  0  0  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0 11  0  0  0  0  9  0  0  0]
 [ 0 21  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  3  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 0 16  0  0  0  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0 15  0  0  0  0  0  0  0  0]
 [ 0  7  0  0  0  0 14  0  0  0]
 [ 0 12  0  0  0  0  2  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
confusion matrix
[[ 0  7  0  0  4  0  9  0  0  0]
 [ 0 16  0  0  5  0  0  0  0  0]
 [ 0 19  0  0  0  0  3  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0  7  0  0 19  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0 15  0  0  0  0  0  0  0  0]
 [ 0  2  0  0  5  0 14  0  0  0]
 [ 0 12  0  0  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.1 0.2 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1. -1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1. -1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [-1. -1. -1. -1.]
 [-1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
3 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
confusion matrix
[[ 0  5  4  0  2  0  9  0  0  0]
 [ 0 16  1  0  4  0  0  0  0  0]
 [ 0  7 12  0  0  0  3  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0  9  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  7  0  0  0  0 14  0  0  0]
 [ 0 12  0  0  0  0  2  0  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.1 0.3 0.4 0.1 0.4 0.3]
 [0.  0.  0.1 0.  0.2 0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.25 0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
3 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
confusion matrix
[[ 0  3  4  2  2  0  9  0  0  0]
 [ 0 16  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  4  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  5  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.2 0.3 0.1 0.3 0.5 0.1 0.5 0.4]
 [0.  0.  0.2 0.1 0.3 0.1 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.3 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.2 0.  0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.4 0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  0.6 0.2]
 [0.  0.  0.6 0.6 1. ]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.]
 [-1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
3 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
confusion matrix
[[ 0  3  4  2  2  0  9  0  0  0]
 [ 0 16  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  4  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  5  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.3 0.3 0.1 0.3 0.5 0.1 0.5 0.4]
 [0.  0.  0.3 0.1 0.3 0.1 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.4 0.5]
 [0.  0.  0.  0.  0.2 0.  0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.4 0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.83 0.5  0.17 1.  ]
 [0.   0.   0.5  0.5  0.83 0.33]
 [0.   0.   0.   0.33 0.67 0.83]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
3 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
6 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  3  4  2  2  0  9  0  0  0]
 [ 0 16  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  4  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  5  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.5 0.4 0.4 0.2 0.4 0.6 0.2 0.6 0.4]
 [0.  0.  0.3 0.1 0.3 0.1 0.1 0.3 0.1 0.3]
 [0.  0.  0.  0.2 0.2 0.2 0.4 0.2 0.4 0.6]
 [0.  0.  0.  0.  0.2 0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.2 0.4 0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.71 0.43 0.14 0.86 1.  ]
 [0.   0.   0.43 0.43 0.71 0.29 0.14]
 [0.   0.   0.   0.29 0.57 0.71 0.29]
 [0.   0.   0.   0.   0.29 0.43 0.57]
 [0.   0.   0.   0.   0.   0.71 0.86]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
3 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
confusion matrix
[[ 0  3  4  2  2  0  9  0  0  0]
 [ 0 16  1  0  4  0  0  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  4  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  1  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  5  0  2  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.6 0.4 0.5 0.2 0.5 0.7 0.2 0.7 0.4]
 [0.  0.  0.4 0.1 0.4 0.1 0.1 0.4 0.1 0.4]
 [0.  0.  0.  0.3 0.2 0.3 0.5 0.2 0.5 0.6]
 [0.  0.  0.  0.  0.3 0.  0.2 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.62 0.38 0.12 0.75 0.88 0.5 ]
 [0.   0.   0.38 0.38 0.62 0.25 0.12 0.5 ]
 [0.   0.   0.   0.25 0.5  0.62 0.25 0.12]
 [0.   0.   0.   0.   0.25 0.38 0.5  0.12]
 [0.   0.   0.   0.   0.   0.62 0.75 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})

**********      classifier acc  **************
[0.83, 0.894, 0.649, 0.713, 0.739, 0.91, 0.819, 0.617, 0.667, 0.357, 0.0, 0.0, 0.0]
before cutting matrix
[[ 1.  1.  1.  1.  1. -1.  1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.  0. -1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  0.  0.  0.  0.  0.]
 [ 1. -1. -1. -1.  1. -1. -1. -1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.  0.  0.  0.  0.  0.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  0.  0.  0.  1.  0.]
 [-1. -1. -1. -1. -1. -1. -1. -1.  0.  0. -1.  0.  0.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.  0.  0.  0. -1.  1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.  0.  1.  0.  0.  0.]
 [-1. -1.  1. -1. -1. -1.  1.  1.  0.  0.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({-1.0: 350, 1.0: 212})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 339, -1.0: 223})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({-1.0: 290, 1.0: 272})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
positive and negative ratio
Counter({-1.0: 61, 1.0: 43})
after cutting matrix
[[ 1.  1.  1.  1. -1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1. -1. -1.  0. -1.  0.  0.  0.]
 [ 1. -1. -1.  1.  1. -1.  0.  0.  0.  0.  0.]
 [ 1. -1. -1.  1. -1. -1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1.  1. -1. -1.  0.  0.  0.  0.  0.]
 [ 1. -1. -1.  1. -1. -1.  0.  0.  0.  1.  0.]
 [-1. -1. -1. -1. -1. -1.  0.  0. -1.  0.  0.]
 [ 1. -1.  1.  1. -1. -1.  0.  0.  0. -1.  1.]
 [-1. -1. -1. -1. -1. -1.  0.  1.  0.  0.  0.]
 [-1. -1.  1. -1. -1.  1.  0.  0.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 61, 1.0: 43})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
Counter({-1.0: 64, 1.0: 60})
Counter({1.0: 64, -1.0: 54})
cutting matrix's confusion matrix
[[ 0  1  4  0  4  2  9  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]


SVM classifier
Time: 2019-01-06 16:52:49
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
confusion matrix
[[18  0  0  0  0  2  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [21  0  0  0  0  5  0  0  0  0]
 [ 3  0  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0. -1.]
 [-1.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 100, 0.0: 62, -1.0: 26})
confusion matrix
[[16  0  0  0  2  2  0  0  0  0]
 [17  0  0  0  4  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [ 4  0  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.  0.  0.2 0.1 0.1 0.  0.1 0.1 0. ]
 [0.  0.  0.  0.2 0.1 0.1 0.  0.1 0.1 0. ]
 [0.  0.  0.  0.2 0.1 0.1 0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  4.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 1.  0.  1.]
 [ 0. -1. -1.]
 [-1.  1.  0.]
 [ 0.  1.  1.]
 [ 1.  1.  0.]
 [-1.  1. -1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
Counter({1.0: 219, -1.0: 116})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 100, 0.0: 62, -1.0: 26})
2 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  2  0  0  0  0  0  0]
 [ 0  6  0 13  0  0  0  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [19  1  0  1  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.3 0.2 0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.1 0.2 0.2 0.2 0.  0.2 0.2 0. ]
 [0.  0.  0.  0.3 0.2 0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3. 2.]
 [0. 0. 2.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 0.  1.  0.  1. -1.  0.  1.  0. -1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [ 0.  1.  1.  0.]
 [ 0.  1.  0.  0.]
 [ 1.  0.  1.  1.]
 [ 0. -1. -1. -1.]
 [-1.  1.  0.  0.]
 [ 0.  1.  1.  0.]
 [ 1.  1.  0. -1.]
 [-1.  1. -1. -1.]
 [ 0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 100, 0.0: 62, -1.0: 26})
2 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  0  0  0  0  2  0  0]
 [ 0  6  0  0  0  0  0 13  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0 11  0  0]
 [19  1  0  0  0  0  0  1  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.4 0.3 0.1 0.1 0.2 0.3 0.1]
 [0.  0.  0.1 0.3 0.3 0.2 0.  0.3 0.3 0. ]
 [0.  0.  0.  0.4 0.3 0.1 0.1 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.4 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.25 1.5  0.75]
 [0.   0.   1.5  2.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.  0.  0.]
 [ 0.  1.  1.  0.  0.]
 [ 0.  1.  0.  0. -1.]
 [ 1.  0.  1.  1.  0.]
 [ 0. -1. -1. -1.  0.]
 [-1.  1.  0.  0.  1.]
 [ 0.  1.  1.  0. -1.]
 [ 1.  1.  0. -1. -1.]
 [-1.  1. -1. -1.  0.]
 [ 0.  1.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '9': 14, '6': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 100, 0.0: 62, -1.0: 26})
2 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({0.0: 188})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.4 0.3 0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.2 0.3 0.3 0.3 0.1 0.4 0.3 0.1]
 [0.  0.  0.  0.5 0.4 0.2 0.1 0.2 0.4 0.1]
 [0.  0.  0.  0.  0.4 0.5 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.5 0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.8 1.2 0.6 1.4]
 [0.  0.  1.2 1.8 1.6]
 [0.  0.  0.  0.8 1.8]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})

**********      classifier acc  **************
[0.535, 0.639, 0.548, 0.432, 0.0, 0.349, 0.667, 0.0, 0.0, 0.0, 0.357, 0.0]
before cutting matrix
[[ 0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.]
 [ 0.  1.  1.  0.  0. -1.  0.  0.  0.  0. -1.  0.]
 [ 0.  1.  0.  0. -1.  1.  0.  0.  0.  0.  0.  0.]
 [ 1.  0.  1.  1.  0.  0.  1.  0.  0.  0.  0.  0.]
 [ 0. -1. -1. -1.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  1.  0.  0.  1.  0.  0.  1.  0.  0.  0.  0.]
 [ 0.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1.]
 [ 1.  1.  0. -1. -1.  0.  0. -1.  0.  1.  0.  0.]
 [-1.  1. -1. -1.  0.  0.  0.  0.  0.  0.  1.  0.]
 [ 0.  1.  1.  0. -1.  0.  0.  0. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 450, -1.0: 51})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 450, -1.0: 51})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 219, -1.0: 116})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({-1.0: 180, 1.0: 61})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({-1.0: 223, 1.0: 60})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({-1.0: 223, 1.0: 60})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({1.0: 60, -1.0: 59})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
positive and negative ratio
Counter({1.0: 61, -1.0: 43})
after cutting matrix
[[ 0.  0.  0.  0. -1.  0.  0.  0.  0.  0.]
 [ 0.  1.  0. -1.  0.  0.  0.  0. -1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0.  0.  0.]
 [ 1.  1.  1.  0.  1.  0.  0.  0.  0.  0.]
 [ 0. -1. -1.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  0.  1.  0.  0.  0.  0.]
 [ 0.  1.  0.  0.  0.  0.  1.  0.  0. -1.]
 [ 1.  0. -1.  0.  0. -1.  0.  1.  0.  0.]
 [-1. -1. -1.  0.  0.  0.  0.  0.  1.  0.]
 [ 0.  1.  0.  0.  0.  0. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 125, -1.0: 125})
Counter({1.0: 219, -1.0: 116})
Counter({-1.0: 180, 1.0: 61})
Counter({1.0: 60, -1.0: 59})
Counter({1.0: 61, -1.0: 43})
Counter({-1.0: 64, 1.0: 60})
Counter({-1.0: 54, 1.0: 45})
Counter({1.0: 64, -1.0: 54})
Counter({1.0: 65, -1.0: 59})
Counter({1.0: 54, -1.0: 45})
cutting matrix's confusion matrix
[[13  1  4  0  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:52:56
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.4 0.2 0. ]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.2 0. ]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1. -1.  0.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.2 0. ]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.75]
 [0.   0.   0.25 1.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.]
 [ 1.  1. -1.  0.  1.]
 [ 1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 0.8 0.4 0. ]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.6 0.6 0.2]
 [0.  0.  0.2 1.  0.2]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})

**********      classifier acc  **************
[0.768, 0.714, 0.839, 0.776, 0.839, 0.25, 0.071, 0.1]
before cutting matrix
[[-1. -1. -1.  1. -1.  0.  0.  0.]
 [-1.  1.  1. -1.  1.  1.  0.  0.]
 [ 1.  1. -1.  0.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1.  0. -1.  0.]
 [-1. -1. -1.  1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 21, 1.0: 15})
after cutting matrix
[[-1. -1. -1.  0.  0.]
 [-1.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.]
 [ 1. -1.  1.  0.  0.]
 [-1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  1  0  2  0]
 [ 1  1  0  1  0]]


SVM classifier
Time: 2019-01-06 16:52:57
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  0.  1.  0.  0.]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 42, 0.0: 14})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0. -1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]
 [ 0.  1.  1.]
 [ 0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.4 0.  0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  0.  0.]
 [ 0.  1.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 0.  1.  1.  1.]
 [ 0. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.6 0.  0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.25]
 [0.   0.   0.5  0.75]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  0.  0.  1.]
 [ 0.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  0.]
 [ 0.  1.  1.  1.  1.]
 [ 0. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[26  0  0  4  0]
 [ 5  1  0  3  0]
 [ 3  1  0  3  0]
 [ 4  1  0  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 0.8 0.6 0.8]
 [0.  0.  0.8 0.2 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  1.  1. ]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  0.  0.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  0. -1.]
 [ 0.  1.  1.  1.  1. -1.]
 [ 0. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({1.0: 52, 0.0: 4})
5 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
confusion matrix
[[30  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  3  0]
 [ 5  0  0  2  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.  1.  0.8 1. ]
 [0.  0.  1.  0.4 0.8]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.83 0.83 0.83]
 [0.   0.   0.33 0.5  0.5  0.5 ]
 [0.   0.   0.   0.17 0.67 0.17]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  0.  0.  1.  0.  0.]
 [ 0.  1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  0. -1.  1.]
 [ 0.  1.  1.  1.  1. -1. -1.]
 [ 0. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({1.0: 52, 0.0: 4})
5 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
6 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 6  0  0  3  0]
 [ 4  1  0  2  0]
 [ 5  1  0  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.2 1.2 1.  1.2]
 [0.  0.  1.  0.6 1. ]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.71 0.71 0.71 0.57]
 [0.   0.   0.29 0.43 0.43 0.43 0.29]
 [0.   0.   0.   0.14 0.57 0.14 0.29]
 [0.   0.   0.   0.   0.43 0.29 0.43]
 [0.   0.   0.   0.   0.   0.71 0.71]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})

**********      classifier acc  **************
[0.703, 0.946, 0.269, 0.385, 0.776, 0.308, 0.308, 0.25, 0.071, 0.071, 0.1]
before cutting matrix
[[-1.  1.  0.  0.  1.  0.  0.  0.  0.  0.  0.]
 [ 0.  1.  1.  1. -1.  1.  1.  1.  0.  0.  0.]
 [ 1.  1. -1. -1.  0. -1.  1. -1.  1. -1. -1.]
 [ 0.  1.  1.  1.  1. -1. -1.  0. -1.  1.  0.]
 [ 0. -1. -1.  1.  1. -1. -1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 93, 1.0: 15})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 58, -1.0: 15})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({-1.0: 42, 1.0: 31})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 46, -1.0: 27})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
after cutting matrix
[[ 1.  0.  1.  0.  0.  0.]
 [ 1.  1. -1.  0.  0.  0.]
 [ 1. -1.  0.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  0.]
 [-1.  1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 120, -1.0: 31})
Counter({-1.0: 21, 1.0: 15})
Counter({1.0: 21, -1.0: 15})
Counter({-1.0: 15, 1.0: 6})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  0  0  1  0]
 [ 5  0  0  2  0]
 [ 6  0  0  1  0]
 [ 1  0  0  2  0]]


SVM classifier
Time: 2019-01-06 16:52:59
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.   0.   0.17]
 [0.   0.   0.17 0.   0.   0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
2 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [ 1  0  0  0  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.   0.17 0.17]
 [0.   0.   0.17 0.   0.17 0.17]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1. -1.  1. -1.]
select_j_column
[-1. -1. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
2 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [ 1  0  0  0  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.   0.17 0.17]
 [0.   0.   0.17 0.   0.17 0.17]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [-1.  1.  1. -1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
2 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
3 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.5  0.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
2 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
3 classifiers pre label
Counter({1.0: 56, -1.0: 11})
4 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.33 0.33]
 [0.   0.   0.33 0.17 0.33 0.33]
 [0.   0.   0.   0.5  0.67 0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.4 0.6 0.2]
 [0.  0.  0.8 0.6 1. ]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
2 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
3 classifiers pre label
Counter({1.0: 56, -1.0: 11})
4 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
5 classifiers pre label
Counter({1.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.33 0.5  0.5 ]
 [0.   0.   0.33 0.33 0.5  0.5 ]
 [0.   0.   0.   0.67 0.83 0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.33 0.5  0.17 0.33]
 [0.   0.   0.67 0.5  0.83 0.33]
 [0.   0.   0.   0.83 0.5  0.67]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
None


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
1 classifiers pre label
Counter({1.0: 67})
2 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
3 classifiers pre label
Counter({1.0: 56, -1.0: 11})
4 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
5 classifiers pre label
Counter({1.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.33 0.5  0.5 ]
 [0.   0.   0.33 0.33 0.5  0.5 ]
 [0.   0.   0.   0.67 0.83 0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.33 0.5  0.17 0.33]
 [0.   0.   0.67 0.5  0.83 0.33]
 [0.   0.   0.   0.83 0.5  0.67]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})

**********      classifier acc  **************
[0.985, 0.94, 0.985, 0.91, 0.925, 0.955, 0.964, 0.8, 0.824]
before cutting matrix
[[-1.  1. -1.  1. -1.  1.  0.  0.  0.]
 [-1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1. -1.  0.  0.]
 [-1.  1. -1. -1. -1. -1.  0.  1.  0.]
 [-1.  1.  1. -1. -1. -1.  0.  0.  0.]
 [-1. -1. -1.  1.  1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 38, -1.0: 38})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({1.0: 38, -1.0: 38})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 38, 1.0: 29})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 38, 1.0: 29})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 38, 1.0: 10})
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
after cutting matrix
[[-1. -1.  1.  0.]
 [-1. -1.  1. -1.]
 [ 1. -1.  1.  0.]
 [-1. -1. -1.  0.]
 [-1.  1. -1.  0.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 163, 1.0: 38})
Counter({-1.0: 175, 1.0: 26})
Counter({1.0: 136, -1.0: 65})
Counter({-1.0: 38, 1.0: 10})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 1 11  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  1  9  0]
 [ 0  1  0  1  0  2]]


SVM classifier
Time: 2019-01-06 16:53:02
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1.  0.  0.  1.]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  0.]
 [-1. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({0.0: 33, -1.0: 21, 1.0: 13})
confusion matrix
[[17  0  0  0  1  0]
 [12  0  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  0.  0.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  1.]
 [ 0.  0. -1.]
 [-1. -1.  1.]
 [ 0. -1.  1.]
 [ 0.  1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({0.0: 33, -1.0: 21, 1.0: 13})
2 classifiers pre label
Counter({1.0: 60, -1.0: 7})
confusion matrix
[[17  0  0  0  1  0]
 [ 6  7  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.17 0.17 0.33]
 [0.   0.   0.5  0.33 0.33 0.5 ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1.  0.]
 [ 0.  0. -1.  1.]
 [-1. -1.  1. -1.]
 [ 0. -1.  1.  0.]
 [ 0.  1.  1. -1.]
 [ 1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({0.0: 33, -1.0: 21, 1.0: 13})
2 classifiers pre label
Counter({1.0: 60, -1.0: 7})
3 classifiers pre label
Counter({-1.0: 30, 0.0: 24, 1.0: 13})
confusion matrix
[[17  0  0  0  1  0]
 [ 6  7  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.33 0.5  0.17 0.33 0.5 ]
 [0.   0.   0.67 0.5  0.5  0.67]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.25 0.75]
 [0.   0.   1.   1.  ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  0. -1. -1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  1.  0.  0.]
 [ 0.  0. -1.  1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 0. -1.  1.  0.  0.]
 [ 0.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({0.0: 33, -1.0: 21, 1.0: 13})
2 classifiers pre label
Counter({1.0: 60, -1.0: 7})
3 classifiers pre label
Counter({-1.0: 30, 0.0: 24, 1.0: 13})
4 classifiers pre label
Counter({1.0: 29, 0.0: 24, -1.0: 14})
confusion matrix
[[17  0  0  0  1  0]
 [ 6  7  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  0  2  2]]
row HD
[[0.   0.5  0.67 0.17 0.5  0.67]
 [0.   0.   0.83 0.67 0.5  0.67]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 1.  0.6 0.4]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
1
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  1.  0.  0.  1.]
 [ 0.  0. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1.  0.]
 [ 0. -1.  1.  0.  0. -1.]
 [ 0.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({0.0: 33, -1.0: 21, 1.0: 13})
2 classifiers pre label
Counter({1.0: 60, -1.0: 7})
3 classifiers pre label
Counter({-1.0: 30, 0.0: 24, 1.0: 13})
4 classifiers pre label
Counter({1.0: 29, 0.0: 24, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 33, 1.0: 18, 0.0: 16})
confusion matrix
[[17  0  0  0  0  1]
 [ 0  7  0  6  0  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  0  2  2]]
row HD
[[0.   0.67 0.83 0.33 0.67 0.83]
 [0.   0.   1.   0.67 0.5  0.83]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.83 0.5  0.33 1.  ]
 [0.   0.   0.67 0.67 0.33 0.83]
 [0.   0.   0.   1.   0.67 0.67]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})

**********      classifier acc  **************
[0.842, 0.889, 0.91, 0.976, 0.952, 1.0]
before cutting matrix
[[ 0.  0.  1.  0.  0.  1.]
 [ 0.  0. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1.  0.]
 [ 0. -1.  1.  0.  0. -1.]
 [ 0.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 67, 1.0: 36})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
positive and negative ratio
Counter({-1.0: 67, 1.0: 36})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({1.0: 163, -1.0: 38})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
after cutting matrix
[[ 0.  0.  0.  1.]
 [ 0.  1.  1. -1.]
 [-1. -1. -1.  0.]
 [ 0.  0.  0. -1.]
 [ 0. -1.  1. -1.]
 [ 1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 74, 1.0: 38})
Counter({1.0: 74, -1.0: 38})
Counter({-1.0: 93, 1.0: 60})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 14  0  1  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  0  0  0  2  2]]


SVM classifier
Time: 2019-01-06 16:53:04
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({-1.0: 112, 1.0: 76})
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 1 25  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [ 6 11  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  0  0  0  0  0]
 [ 1 14  0  0  0  0  0  0  0  0]
 [17  3  0  0  0  0  0  0  0  0]
 [ 8 14  0  0  0  0  0  0  0  0]
 [12  1  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
confusion matrix
[[12  2  0  0  3  0  0  0  0  0]
 [ 0 24  1  0  1  0  0  0  0  0]
 [ 5  2 15  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 5  2  1  0  9  0  0  0  0  0]
 [17  1  2  0  0  0  0  0  0  0]
 [ 1 12  0  0  2  0  0  0  0  0]
 [16  3  1  0  0  0  0  0  0  0]
 [ 3 14  5  0  0  0  0  0  0  0]
 [ 2  0 10  0  1  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.  0.2 0.  0.2 0.1]
 [0.  0.  0.1 0.1 0.1 0.2 0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
confusion matrix
[[ 9  2  0  0  3  3  0  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 4  2 14  1  0  1  0  0  0  0]
 [ 2  0  1 12  0  1  0  0  0  0]
 [ 2  2  1  0  9  3  0  0  0  0]
 [ 0  0  0  2  0 17  1  0  0  0]
 [ 0  6  0  0  2  1  6  0  0  0]
 [14  3  0  1  0  2  0  0  0  0]
 [ 2 12  2  3  0  1  2  0  0  0]
 [ 0  0  0 10  1  2  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.1 0.3 0.  0.2 0.2]
 [0.  0.  0.1 0.2 0.1 0.3 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.3 0.1 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2. 2.]
 [0. 0. 2.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1. -1.  1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
3 classifiers pre label
Counter({-1.0: 152, 1.0: 36})
confusion matrix
[[12  2  0  0  0  3  0  0  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 6  2 13  0  0  1  0  0  0  0]
 [ 2  0  2 11  0  1  0  0  0  0]
 [ 3  2  1  0  8  3  0  0  0  0]
 [ 0  0  0  2  0 17  1  0  0  0]
 [ 1  6  0  0  0  2  6  0  0  0]
 [14  3  0  1  0  2  0  0  0  0]
 [ 3 12  1  3  0  1  2  0  0  0]
 [ 1  0  0 10  0  2  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.1 0.3 0.  0.2 0.2]
 [0.  0.  0.2 0.2 0.2 0.3 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.2 0.2 0.3 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4 0.1 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5 1.5 1. ]
 [0.  0.  1.5 1. ]
 [0.  0.  0.  1.5]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
3 classifiers pre label
Counter({-1.0: 152, 1.0: 36})
4 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
confusion matrix
[[12  2  0  0  0  1  0  2  0  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  4 17  0  0  1  0  0  0  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  1  2  0  9  3  0  1  0  0]
 [ 0  0  0  2  0 17  1  0  0  0]
 [ 0  7  0  0  0  2  6  0  0  0]
 [ 0  3  0  1  0  2  0 14  0  0]
 [ 2 13  1  3  0  1  2  0  0  0]
 [ 2  0  0 10  0  1  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.3 0.2 0.2 0.4 0.1 0.3 0.3]
 [0.  0.  0.2 0.2 0.3 0.3 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.2 0.3 0.3 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.5 0.1 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.2 0.8 0.8]
 [0.  0.  1.2 0.8 0.4]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
3 classifiers pre label
Counter({-1.0: 152, 1.0: 36})
4 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
5 classifiers pre label
Counter({1.0: 109, -1.0: 79})
confusion matrix
[[14  0  0  0  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 19  0  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 2  1  2  0  8  3  0  1  0  0]
 [ 0  0  0  2  0 17  1  0  0  0]
 [ 0  1  0  0  0  2  6  0  6  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  2  3  0  1  2  0 12  0]
 [ 2  0  0  8  0  1  0  0  0  2]]
row HD
[[0.  0.3 0.4 0.3 0.2 0.2 0.5 0.2 0.4 0.4]
 [0.  0.  0.3 0.2 0.3 0.3 0.2 0.3 0.1 0.3]
 [0.  0.  0.  0.3 0.4 0.4 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.5 0.1 0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.67 0.67 0.83]
 [0.   0.   1.   0.67 0.33 0.5 ]
 [0.   0.   0.   1.   1.   0.83]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
3 classifiers pre label
Counter({-1.0: 152, 1.0: 36})
4 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
5 classifiers pre label
Counter({1.0: 109, -1.0: 79})
6 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
confusion matrix
[[14  0  0  0  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 19  0  0  1  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 2  1  2  0  8  0  0  4  0  0]
 [ 0  0  0  2  0 16  1  1  0  0]
 [ 0  1  0  0  0  2  6  0  6  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  2  3  0  1  2  0 12  0]
 [ 2  0  0  8  0  0  0  1  0  2]]
row HD
[[0.  0.3 0.4 0.4 0.2 0.3 0.5 0.2 0.4 0.4]
 [0.  0.  0.3 0.3 0.3 0.4 0.2 0.3 0.1 0.3]
 [0.  0.  0.  0.4 0.4 0.5 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.6 0.1 0.3 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.86 0.57 0.57 0.71 0.86]
 [0.   0.   0.86 0.57 0.29 0.43 0.57]
 [0.   0.   0.   0.86 0.86 0.71 0.29]
 [0.   0.   0.   0.   0.29 0.71 0.57]
 [0.   0.   0.   0.   0.   0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
3 classifiers pre label
Counter({-1.0: 152, 1.0: 36})
4 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
5 classifiers pre label
Counter({1.0: 109, -1.0: 79})
6 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
7 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
confusion matrix
[[14  0  0  0  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  2  1  0]
 [ 0  0  1 12  0  1  0  2  0  0]
 [ 2  1  1  0  8  0  0  5  0  0]
 [ 0  0  0  2  0 16  1  1  0  0]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  3  0  1  4  1 10  0]
 [ 2  0  0  8  0  0  0  1  0  2]]
row HD
[[0.  0.4 0.4 0.5 0.2 0.4 0.5 0.3 0.5 0.5]
 [0.  0.  0.4 0.3 0.4 0.4 0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.5 0.4 0.6 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.7 0.1 0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.6 0.5 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.5  0.5  0.62 0.75 0.5 ]
 [0.   0.   0.75 0.5  0.25 0.38 0.5  0.5 ]
 [0.   0.   0.   0.75 0.75 0.62 0.25 0.75]
 [0.   0.   0.   0.   0.25 0.62 0.5  0.25]
 [0.   0.   0.   0.   0.   0.38 0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
None


============== iter  9 ================
current matrix is 
[[-1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
1 classifiers pre label
Counter({-1.0: 108, 1.0: 80})
2 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
3 classifiers pre label
Counter({-1.0: 152, 1.0: 36})
4 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
5 classifiers pre label
Counter({1.0: 109, -1.0: 79})
6 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
7 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
confusion matrix
[[14  0  0  0  0  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  2  1  0]
 [ 0  0  1 12  0  1  0  2  0  0]
 [ 2  1  1  0  8  0  0  5  0  0]
 [ 0  0  0  2  0 16  1  1  0  0]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2  0  1  3  0  1  4  1 10  0]
 [ 2  0  0  8  0  0  0  1  0  2]]
row HD
[[0.  0.4 0.4 0.5 0.2 0.4 0.5 0.3 0.5 0.5]
 [0.  0.  0.4 0.3 0.4 0.4 0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.5 0.4 0.6 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.7 0.1 0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.6 0.5 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.5  0.5  0.62 0.75 0.5 ]
 [0.   0.   0.75 0.5  0.25 0.38 0.5  0.5 ]
 [0.   0.   0.   0.75 0.75 0.62 0.25 0.75]
 [0.   0.   0.   0.   0.25 0.62 0.5  0.25]
 [0.   0.   0.   0.   0.   0.38 0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})

**********      classifier acc  **************
[0.851, 0.84, 0.846, 0.91, 0.915, 0.771, 0.888, 0.819, 0.682, 0.214, 0.676]
before cutting matrix
[[-1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  0.  0.  0.]
 [-1. -1. -1.  1. -1. -1. -1.  1. -1.  0.  0.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1.  1.  1. -1.  1.  0.  0.  1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  0.  0.  0.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  0. -1.  0.]
 [-1.  1. -1. -1. -1. -1. -1. -1.  0.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.  1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1. -1.  0.  1.  0.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 332, 1.0: 230})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({1.0: 292, -1.0: 270})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({1.0: 292, -1.0: 270})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
positive and negative ratio
Counter({-1.0: 57, 1.0: 52})
after cutting matrix
[[-1.  1. -1. -1.  1. -1.  1.  0.  0. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  0.  0.  0.]
 [-1. -1. -1.  1. -1. -1.  1. -1.  0.  0.]
 [-1. -1.  1. -1. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  0.  1.]
 [-1.  1.  1. -1. -1.  1. -1.  0.  0.  0.]
 [ 1. -1.  1. -1. -1. -1.  1.  0. -1.  0.]
 [-1.  1. -1. -1. -1. -1. -1.  0.  0.  0.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  0.  1.  0.]]
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 332, 1.0: 230})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 442, 1.0: 120})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 443, 1.0: 119})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 57, 1.0: 52})
Counter({1.0: 53, -1.0: 46})
Counter({1.0: 63, -1.0: 51})
cutting matrix's confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 16  1  0  1  0  0  2  0]
 [ 0  0  1 11  0  1  0  2  0  1]
 [ 0  1  1  0 10  1  0  2  0  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  1  0  0  0  2  8  0  3  0]
 [ 2  3  0  1  0  2  0 12  0  0]
 [ 2  1  1  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]


SVM classifier
Time: 2019-01-06 16:53:13
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
confusion matrix
[[14  3  0  0  0  0  0  0  0  0]
 [ 0 25  0  0  1  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 5  3  0  0  9  0  0  0  0  0]
 [ 4 16  0  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [17  5  0  0  0  0  0  0  0  0]
 [ 4  9  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
5
new_column
None


============== iter  2 ================
current matrix is 
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
confusion matrix
[[14  3  0  0  0  0  0  0  0  0]
 [ 0 25  0  0  1  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 5  3  0  0  9  0  0  0  0  0]
 [ 4 16  0  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [17  5  0  0  0  0  0  0  0  0]
 [ 4  9  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [-1. -1.]
 [ 0.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 0. -1.]
 [ 0.  0.]
 [ 0.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
confusion matrix
[[10  0  0  0  0  3  0  2  2  0]
 [ 0 25  0  0  1  0  0  0  0  0]
 [16  1  0  0  0  1  0  3  1  0]
 [ 1 10  0  0  0  2  0  3  0  0]
 [ 5  1  0  0  9  2  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  1  0]
 [ 2  0  0  0  0  4  0  0  9  0]
 [ 0  5  0  0  0  0  0 15  0  0]
 [ 4  0  0  0  0  5  0  1 12  0]
 [ 4  2  0  0  0  7  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.1 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.2 0.  0.2 0.1 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  1.]
 [-1. -1.  0.]
 [ 0.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  0.]
 [-1.  1.  0.]
 [-1.  1.  0.]
 [ 0. -1. -1.]
 [ 0.  0. -1.]
 [ 0.  1.  0.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
confusion matrix
[[ 9  2  0  0  0  3  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [16  2  0  0  0  1  0  2  1  0]
 [ 1  2  0  8  0  2  0  3  0  0]
 [ 2  1  0  0  9  2  0  0  1  2]
 [ 3  0  0  0  0 16  0  0  1  0]
 [ 2  0  0  0  0  4  0  0  9  0]
 [ 0  5  0  1  0  0  0 14  0  0]
 [ 4  0  0  0  0  5  0  1 12  0]
 [ 0  0  0  2  0  7  0  0  0  4]]
row HD
[[0.  0.3 0.  0.3 0.2 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.3 0.1 0.2 0.1 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.3 0.2 0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  1. -1.]
 [-1. -1.  0.  0.]
 [ 0.  1.  1. -1.]
 [-1. -1. -1.  0.]
 [ 1.  1.  0. -1.]
 [-1.  1.  0. -1.]
 [-1.  1.  0. -1.]
 [ 0. -1. -1. -1.]
 [ 0.  0. -1. -1.]
 [ 0.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
confusion matrix
[[10  2  0  0  0  3  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [16  2  0  0  0  1  0  2  1  0]
 [ 1  2  0  8  0  2  0  3  0  0]
 [ 4  1  0  0  9  2  0  0  1  0]
 [ 3  0  0  0  0 16  0  0  1  0]
 [ 2  0  0  0  0  4  0  0  9  0]
 [ 0  5  0  1  0  0  0 14  0  0]
 [ 4  0  0  0  0  5  0  1 12  0]
 [ 4  0  0  2  0  7  0  0  0  0]]
row HD
[[0.  0.4 0.  0.4 0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.4 0.1 0.3 0.2 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.4 0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  2.   2.  ]
 [0.   0.   1.5  2.  ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  1. -1.  1.]
 [-1. -1.  0.  0.  0.]
 [ 0.  1.  1. -1.  1.]
 [-1. -1. -1.  0.  1.]
 [ 1.  1.  0. -1.  0.]
 [-1.  1.  0. -1. -1.]
 [-1.  1.  0. -1.  1.]
 [ 0. -1. -1. -1.  0.]
 [ 0.  0. -1. -1.  1.]
 [ 0.  1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
confusion matrix
[[10  0  0  0  0  5  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [17  1  0  0  0  0  1  2  1  0]
 [ 1  2  0  8  0  1  1  3  0  0]
 [ 0  1  0  0 10  6  0  0  0  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 2  0  0  0  0  2  2  0  9  0]
 [ 1  4  0  1  0  0  0 14  0  0]
 [ 4  0  0  0  0  4  1  1 12  0]
 [ 0  0  0  2  0 11  0  0  0  0]]
row HD
[[0.  0.5 0.  0.4 0.3 0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.5 0.2 0.3 0.3 0.3 0.3 0.5 0.4]
 [0.  0.  0.  0.4 0.3 0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.3 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.6 1.6 1.6]
 [0.  0.  1.2 1.6 1.4]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.]
 [-1. -1.  0.  0.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  0.  1.  1.]
 [ 1.  1.  0. -1.  0.  0.]
 [-1.  1.  0. -1. -1.  1.]
 [-1.  1.  0. -1.  1.  1.]
 [ 0. -1. -1. -1.  0.  0.]
 [ 0.  0. -1. -1.  1.  0.]
 [ 0.  1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
confusion matrix
[[ 7  0  3  0  1  4  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 12  3  0  0  0  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 0  0  2  0  0  2  2  0  9  0]
 [ 0  3  1  4  0  0  0 12  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  4  7  0  0  0  0]]
row HD
[[0.  0.6 0.1 0.5 0.4 0.4 0.3 0.4 0.3 0.3]
 [0.  0.  0.6 0.3 0.3 0.4 0.4 0.3 0.5 0.5]
 [0.  0.  0.  0.4 0.4 0.3 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.6 0.4 0.3 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33 1.33 1.33 1.33]
 [0.   0.   1.   1.33 1.17 1.  ]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   1.33 1.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1.  0. -1.  0. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
None


============== iter  8 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.]
 [-1. -1.  0.  0.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  0.  1.  1.]
 [ 1.  1.  0. -1.  0.  0.]
 [-1.  1.  0. -1. -1.  1.]
 [-1.  1.  0. -1.  1.  1.]
 [ 0. -1. -1. -1.  0.  0.]
 [ 0.  0. -1. -1.  1.  0.]
 [ 0.  1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
confusion matrix
[[ 7  0  3  0  1  4  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 12  3  0  0  0  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 0  0  2  0  0  2  2  0  9  0]
 [ 0  3  1  4  0  0  0 12  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  4  7  0  0  0  0]]
row HD
[[0.  0.6 0.1 0.5 0.4 0.4 0.3 0.4 0.3 0.3]
 [0.  0.  0.6 0.3 0.3 0.4 0.4 0.3 0.5 0.5]
 [0.  0.  0.  0.4 0.4 0.3 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.6 0.4 0.3 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33 1.33 1.33 1.33]
 [0.   0.   1.   1.33 1.17 1.  ]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   1.33 1.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[-1.  0.  1.  1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.  0.]
 [-1. -1.  0.  0.  0.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.]
 [-1. -1. -1.  0.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  0.  0.]
 [-1.  1.  0. -1. -1.  1.  1.]
 [-1.  1.  0. -1.  1.  1.  1.]
 [ 0. -1. -1. -1.  0.  0.  1.]
 [ 0.  0. -1. -1.  1.  0.  1.]
 [ 0.  1.  0.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
6 classifiers pre label
Counter({1.0: 124, 0.0: 64})
confusion matrix
[[ 7  5  1  0  1  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 11  3  0  0  1  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 0  0  2  0  0  2  2  0  9  0]
 [ 0  4  0  4  0  0  0 12  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  4  7  0  0  0  0]]
row HD
[[0.  0.6 0.2 0.6 0.4 0.5 0.4 0.5 0.4 0.4]
 [0.  0.  0.7 0.4 0.3 0.5 0.5 0.4 0.6 0.6]
 [0.  0.  0.  0.4 0.5 0.3 0.2 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.7 0.4 0.3 0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 1.14 1.14 1.14 1.14 1.29]
 [0.   0.   0.86 1.14 1.   0.86 1.  ]
 [0.   0.   0.   1.   0.86 1.   1.  ]
 [0.   0.   0.   0.   1.14 1.14 1.29]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[-1.  0.  1.  1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.  0.  1.]
 [-1. -1.  0.  0.  0.  0.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  0.  1.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  0.  0.  0.]
 [-1.  1.  0. -1. -1.  1.  1.  1.]
 [-1.  1.  0. -1.  1.  1.  1.  1.]
 [ 0. -1. -1. -1.  0.  0.  1.  1.]
 [ 0.  0. -1. -1.  1.  0.  1.  0.]
 [ 0.  1.  0.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
6 classifiers pre label
Counter({1.0: 124, 0.0: 64})
7 classifiers pre label
Counter({1.0: 118, 0.0: 70})
confusion matrix
[[ 7  3  3  0  1  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 13  1  0  0  1  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 0  0  2  0  0  2  2  0  9  0]
 [ 0  3  1  4  0  0  0 12  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  5  6  0  0  0  0]]
row HD
[[0.  0.7 0.2 0.6 0.5 0.5 0.4 0.5 0.5 0.5]
 [0.  0.  0.8 0.5 0.3 0.6 0.6 0.5 0.6 0.7]
 [0.  0.  0.  0.4 0.6 0.3 0.2 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.8 0.4 0.3 0.4 0.5 0.8]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   1.   1.   1.   1.12 1.12]
 [0.   0.   0.75 1.   0.88 0.75 0.88 0.62]
 [0.   0.   0.   0.88 0.75 0.88 0.88 0.75]
 [0.   0.   0.   0.   1.   1.   1.12 1.12]
 [0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1.  1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.  0.  1. -1.]
 [-1. -1.  0.  0.  0.  0.  0.  0. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  0.  1.  1.  1.  1. -1.]
 [ 1.  1.  0. -1.  0.  0.  0.  0. -1.]
 [-1.  1.  0. -1. -1.  1.  1.  1. -1.]
 [-1.  1.  0. -1.  1.  1.  1.  1. -1.]
 [ 0. -1. -1. -1.  0.  0.  1.  1. -1.]
 [ 0.  0. -1. -1.  1.  0.  1.  0. -1.]
 [ 0.  1.  0.  1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
6 classifiers pre label
Counter({1.0: 124, 0.0: 64})
7 classifiers pre label
Counter({1.0: 118, 0.0: 70})
8 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 7  3  3  0  1  1  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 13  1  0  0  1  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 0  0  2  0  0  2  2  0  9  0]
 [ 0  3  1  4  0  0  0 12  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  5  6  0  0  0  0]]
row HD
[[0.  0.7 0.2 0.6 0.5 0.5 0.4 0.5 0.5 0.6]
 [0.  0.  0.8 0.5 0.3 0.6 0.6 0.5 0.6 0.8]
 [0.  0.  0.  0.4 0.6 0.3 0.2 0.4 0.4 0.7]
 [0.  0.  0.  0.  0.8 0.4 0.3 0.4 0.5 0.9]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.1 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.89 0.89 0.89 0.89 1.   1.   0.67]
 [0.   0.   0.67 0.89 0.78 0.67 0.78 0.56 0.67]
 [0.   0.   0.   0.78 0.67 0.78 0.78 0.67 0.78]
 [0.   0.   0.   0.   0.89 0.89 1.   1.   0.22]
 [0.   0.   0.   0.   0.   0.33 0.33 0.33 1.  ]
 [0.   0.   0.   0.   0.   0.   0.33 0.22 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  1.  1.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 1.  0.  1.  1.  0. -1.  1.  0.  1. -1.]
most_cplx_inx
0
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.  0.  1. -1. -1.]
 [-1. -1.  0.  0.  0.  0.  0.  0. -1.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [-1. -1. -1.  0.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  0. -1.  0.  0.  0.  0. -1.  0.]
 [-1.  1.  0. -1. -1.  1.  1.  1. -1. -1.]
 [-1.  1.  0. -1.  1.  1.  1.  1. -1.  1.]
 [ 0. -1. -1. -1.  0.  0.  1.  1. -1.  0.]
 [ 0.  0. -1. -1.  1.  0.  1.  0. -1.  0.]
 [ 0.  1.  0.  1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
6 classifiers pre label
Counter({1.0: 124, 0.0: 64})
7 classifiers pre label
Counter({1.0: 118, 0.0: 70})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({0.0: 87, -1.0: 54, 1.0: 47})
confusion matrix
[[ 8  3  2  0  0  2  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 11  3  0  0  1  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  1 10  0  0  0  0]]
row HD
[[0.  0.8 0.3 0.7 0.6 0.5 0.5 0.6 0.6 0.6]
 [0.  0.  0.9 0.6 0.3 0.7 0.7 0.5 0.6 0.9]
 [0.  0.  0.  0.4 0.7 0.4 0.2 0.5 0.5 0.8]
 [0.  0.  0.  0.  0.9 0.5 0.3 0.5 0.6 1. ]
 [0.  0.  0.  0.  0.  0.6 0.6 0.5 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.2 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.8 0.8 0.8 0.9 0.9 0.6 0.7]
 [0.  0.  0.6 0.8 0.7 0.6 0.7 0.5 0.6 0.7]
 [0.  0.  0.  0.7 0.6 0.7 0.7 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.8 0.8 0.9 0.9 0.2 0.7]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.9 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  1.  0.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 0.  1.  1. -1.  1. -1.  0.  1. -1. -1.  1.]
 [-1. -1.  0.  0.  0.  0.  0.  0. -1.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  0. -1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1.  0. -1. -1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  0. -1.  1.  1.  1.  1. -1.  1.  1.]
 [ 0. -1. -1. -1.  0.  0.  1.  1. -1.  0.  1.]
 [ 0.  0. -1. -1.  1.  0.  1.  0. -1.  0.  1.]
 [ 0.  1.  0.  1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '7': 20, '5': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({1.0: 95, -1.0: 68, 0.0: 25})
2 classifiers pre label
Counter({0.0: 89, -1.0: 58, 1.0: 41})
3 classifiers pre label
Counter({-1.0: 148, 0.0: 40})
4 classifiers pre label
Counter({1.0: 84, 0.0: 62, -1.0: 42})
5 classifiers pre label
Counter({0.0: 87, 1.0: 72, -1.0: 29})
6 classifiers pre label
Counter({1.0: 124, 0.0: 64})
7 classifiers pre label
Counter({1.0: 118, 0.0: 70})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({0.0: 87, -1.0: 54, 1.0: 47})
10 classifiers pre label
Counter({1.0: 143, 0.0: 45})
confusion matrix
[[ 8  3  2  0  0  2  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  1  1  1  0]
 [ 0  0  1 10  0  1  1  3  0  0]
 [ 1  1  0  0 11  3  0  0  1  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 0  3  1  3  0  0  0 13  0  0]
 [ 2  0  2  1  0  4  1  0 12  0]
 [ 0  0  0  2  1 10  0  0  0  0]]
row HD
[[0.  0.9 0.3 0.7 0.7 0.5 0.5 0.6 0.6 0.7]
 [0.  0.  1.  0.7 0.3 0.8 0.8 0.6 0.7 1. ]
 [0.  0.  0.  0.4 0.8 0.4 0.2 0.5 0.5 0.9]
 [0.  0.  0.  0.  1.  0.5 0.3 0.5 0.6 1.1]
 [0.  0.  0.  0.  0.  0.7 0.7 0.6 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.2 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.73 0.73 0.73 0.73 0.82 0.82 0.55 0.64 0.91]
 [0.   0.   0.55 0.73 0.64 0.55 0.64 0.45 0.55 0.64 0.55]
 [0.   0.   0.   0.64 0.55 0.64 0.64 0.55 0.64 0.64 0.55]
 [0.   0.   0.   0.   0.73 0.73 0.82 0.82 0.18 0.64 0.82]
 [0.   0.   0.   0.   0.   0.27 0.27 0.27 0.82 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.27 0.18 0.82 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.91 0.36 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.91 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})

**********      classifier acc  **************
[0.702, 0.843, 0.691, 0.856, 0.832, 0.699, 0.805, 0.732, 0.931, 0.709, 0.862, 0.676, 0.214, 0.323]
before cutting matrix
[[ 0.  1.  1. -1.  1. -1.  0.  1. -1. -1.  1.  1.  0.  0.]
 [-1. -1.  0.  0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  0.  0.]
 [-1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  1.  0.  0. -1.]
 [ 1.  1.  0. -1.  0.  0.  0.  0. -1.  0.  0. -1.  0.  0.]
 [-1.  1.  0. -1. -1.  1.  1.  1. -1. -1.  1.  0.  0.  0.]
 [-1.  1.  0. -1.  1.  1.  1.  1. -1.  1.  1.  0. -1.  1.]
 [ 0. -1. -1. -1.  0.  0.  1.  1. -1.  0.  1.  0.  0.  0.]
 [ 0.  0. -1. -1.  1.  0.  1.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  1.  0.  1. -1. -1. -1. -1.  1. -1. -1.  0.  1.  0.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({-1.0: 179, 1.0: 108})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 222, -1.0: 104})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 222, -1.0: 104})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 336, -1.0: 53})
Counter({1.0: 335, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 336, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 335, -1.0: 53})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 336, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 168, -1.0: 158})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 336, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
positive and negative ratio
Counter({1.0: 168, -1.0: 158})
after cutting matrix
[[ 1.  1. -1.  1.  0. -1.  1.  1.  0.  0.]
 [-1.  0.  0.  0.  0. -1.  0.  0.  0.  0.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  0.  0.]
 [-1. -1.  0.  1.  1. -1.  1.  0.  0. -1.]
 [ 1.  0. -1.  0.  0. -1.  0. -1.  0.  0.]
 [ 1.  0. -1. -1.  1. -1.  1.  0.  0.  0.]
 [ 1.  0. -1.  1.  1. -1.  1.  0. -1.  1.]
 [-1. -1. -1.  0.  1. -1.  1.  0.  0.  0.]
 [ 0. -1. -1.  1.  1. -1.  1.  0.  0.  0.]
 [ 1.  0.  1. -1. -1.  1. -1.  0.  1.  0.]]
positive and negative ratio
Counter({1.0: 324, -1.0: 186})
Counter({-1.0: 179, 1.0: 108})
Counter({-1.0: 385, 1.0: 53})
Counter({1.0: 271, -1.0: 107})
Counter({1.0: 336, -1.0: 53})
Counter({-1.0: 509, 1.0: 53})
Counter({1.0: 387, -1.0: 53})
Counter({-1.0: 63, 1.0: 51})
Counter({1.0: 53, -1.0: 46})
Counter({-1.0: 65, 1.0: 46})
cutting matrix's confusion matrix
[[10  0  0  0  3  2  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  0  0  0  0  2  1  0]
 [ 0  0  2  8  0  1  0  5  0  0]
 [ 0  1  0  0 11  5  0  0  0  0]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  1  0  0  0 15  0  0]
 [ 2  0  2  0  0  4  1  1 12  0]
 [ 0  0  0  2  1 10  0  0  0  0]]
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:53:23
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 158, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.2]
 [0.  0.  0.2 0.  0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.  0.2 0.2]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.  0.2 0.4]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.25 0.5 ]
 [0.   0.   0.5  0.25]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})

**********      classifier acc  **************
[0.661, 0.946, 0.75, 0.696, 0.087, 0.071, 0.125, 0.125]
before cutting matrix
[[-1. -1. -1. -1.  0.  0.  0.  0.]
 [ 1. -1.  1.  1.  1.  0.  0.  0.]
 [-1. -1. -1. -1. -1.  1.  0.  0.]
 [ 1. -1. -1. -1.  0. -1.  1. -1.]
 [-1.  1. -1.  1.  0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 137, 1.0: 29})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 137, 1.0: 29})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 129, 1.0: 37})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 29, -1.0: 18})
after cutting matrix
[[-1. -1.  0.  0.  0.]
 [-1.  1.  0.  0.  0.]
 [-1. -1.  1.  0.  0.]
 [-1. -1. -1.  1. -1.]
 [ 1.  1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 158, 1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:53:25
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({0.0: 51, -1.0: 5})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  4  0  0]
 [ 4  0  1  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  0.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 3  3  2  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  0.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
2
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  0.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 3  3  2  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
4
new_column
None


============== iter  4 ================
current matrix is 
[[ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  0.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 3  3  2  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  0.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 3  3  2  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})

**********      classifier acc  **************
[0.294, 0.767, 0.087, 0.071, 0.125, 0.125]
before cutting matrix
[[ 0.  1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  0.  0.]
 [-1.  0. -1.  1.  0.  0.]
 [-1. -1.  0. -1.  1. -1.]
 [ 1.  0.  0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({1.0: 29, -1.0: 18})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
positive and negative ratio
Counter({1.0: 29, -1.0: 18})
after cutting matrix
[[ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [-1.  1.  0.  0.]
 [-1. -1.  1. -1.]
 [ 1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 18})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 24, 1.0: 8})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:53:25
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1.  1. -1.  1.]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
pre label
Counter({-1.0: 35, 1.0: 32})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 19 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.33 0.   0.17]
 [0.   0.   0.   0.33 0.   0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.33 0.17 0.  ]
 [0.   0.   0.17 0.33 0.17 0.33]
 [0.   0.   0.   0.5  0.   0.17]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
None


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.33 0.17 0.  ]
 [0.   0.   0.17 0.33 0.17 0.33]
 [0.   0.   0.   0.5  0.   0.17]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.33 0.17 0.  ]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.67 0.17 0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.75 1.  ]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.5  0.33 0.33 0.17 0.  ]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.67 0.17 0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.6 0.8 0.8]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
5 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  2  0]
 [ 0  0 11  0  0  0]
 [ 2  1  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.67 0.5  0.33 0.17 0.  ]
 [0.   0.   0.5  0.67 0.5  0.67]
 [0.   0.   0.   0.83 0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.5  0.67 0.67 0.17]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.5  0.17 0.67]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
5 classifiers pre label
Counter({1.0: 45, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  2  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.67 0.67 0.5  0.17 0.  ]
 [0.   0.   0.67 0.83 0.5  0.67]
 [0.   0.   0.   0.83 0.5  0.67]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.43 0.57 0.57 0.14 0.43]
 [0.   0.   0.14 0.29 0.29 0.43 0.14]
 [0.   0.   0.   0.43 0.14 0.57 0.29]
 [0.   0.   0.   0.   0.29 0.71 0.14]
 [0.   0.   0.   0.   0.   0.71 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
2 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
5 classifiers pre label
Counter({1.0: 45, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
7 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.83 0.67 0.67 0.17 0.17]
 [0.   0.   0.83 0.83 0.67 0.67]
 [0.   0.   0.   1.   0.5  0.83]
 [0.   0.   0.   0.   0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.38 0.5  0.5  0.12 0.38 0.25]
 [0.   0.   0.12 0.25 0.25 0.38 0.12 0.25]
 [0.   0.   0.   0.38 0.12 0.5  0.25 0.12]
 [0.   0.   0.   0.   0.25 0.62 0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.62 0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None}
total_cplx_class_num == 0 break
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})

**********      classifier acc  **************
[0.985, 0.955, 1.0, 1.0, 0.955, 0.955, 0.985, 0.985]
before cutting matrix
[[ 1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 173, 1.0: 28})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({-1.0: 173, 1.0: 28})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 170, 1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({-1.0: 170, 1.0: 31})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
positive and negative ratio
Counter({1.0: 127, -1.0: 74})
after cutting matrix
[[ 1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 142, 1.0: 59})
Counter({-1.0: 158, 1.0: 43})
Counter({-1.0: 130, 1.0: 71})
Counter({-1.0: 133, 1.0: 68})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]


SVM classifier
Time: 2019-01-06 16:53:27
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1. -1.  0. -1.]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
pre label
Counter({0.0: 25, -1.0: 25, 1.0: 17})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  1  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  6  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 0.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 133, -1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({0.0: 25, -1.0: 25, 1.0: 17})
1 classifiers pre label
Counter({1.0: 39, 0.0: 22, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.17 0.33 0.17 0.33]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 133, -1.0: 9})

**********      classifier acc  **************
[0.932, 0.957]
before cutting matrix
[[ 1.  1.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 0.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 133, -1.0: 9})
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 133, -1.0: 9})
positive and negative ratio
Counter({1.0: 133, -1.0: 9})
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
after cutting matrix
[[ 1.  1.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 0.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 133, -1.0: 9})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-06 16:53:28
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [22  0  0  0  0  0  0  0  0  0]
 [22  0  0  0  0  4  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 4  0  0  0  0 19  0  0  0  0]
 [ 4  0  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [17  0  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 4  0  0  0  0  9  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
1 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [ 1 21  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  4  0  0  0  0]
 [ 1 15  0  0  0  1  0  0  0  0]
 [ 2  2  0  0  0 19  0  0  0  0]
 [ 3  1  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 4 13  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 1  3  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.1 0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
7
new_column
None


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
1 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [ 1 21  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  4  0  0  0  0]
 [ 1 15  0  0  0  1  0  0  0  0]
 [ 2  2  0  0  0 19  0  0  0  0]
 [ 3  1  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 4 13  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 1  3  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.1 0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
1 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
2 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [ 1 21  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  4  0  0  0  0]
 [ 1 15  0  0  0  1  0  0  0  0]
 [ 2  2  0  0  0 19  0  0  0  0]
 [ 3  1  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 4 13  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 1  3  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.1 0.  0.2 0.2 0.1 0.  0.3 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1. -1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
1 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
confusion matrix
[[17  0  0  0  0  1  0  0  0  0]
 [ 1 21  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  4  0  0  0  0]
 [ 1 15  0  0  0  1  0  0  0  0]
 [ 2  2  0  0  0 19  0  0  0  0]
 [ 3  1  0  0  0 15  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 4 13  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0 11  0  0  0  0]
 [ 1  3  0  0  0  9  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.1 0.3 0.1 0.3 0.2]
 [0.  0.  0.1 0.  0.2 0.2 0.2 0.  0.4 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.2 0.4 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   0.5 ]
 [0.   0.   1.75 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})

**********      classifier acc  **************
[0.798, 0.782, 0.803, 0.926, 0.735, 0.353, 0.467, 0.5, 0.353, 0.0, 0.0]
before cutting matrix
[[-1. -1. -1. -1.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  1. -1. -1.  0.  0. -1.  0.  0.  0.  0.]
 [-1. -1. -1. -1.  1.  0.  0.  0.  0.  0.  0.]
 [-1.  1. -1. -1.  0.  1.  0.  0. -1.  0.  0.]
 [-1. -1.  1. -1. -1.  0.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1.  0.  0.  0. -1.  0.  0.  0.]
 [ 1.  1. -1.  1.  0.  0.  0.  1.  0.  0.  0.]
 [-1.  1. -1. -1.  0. -1.  0.  0.  1.  0.  0.]
 [ 1. -1.  1.  1.  0.  0.  0.  0.  0.  1. -1.]
 [ 1.  1. -1. -1.  0.  0.  0.  0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 288, 1.0: 274})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 57, -1.0: 54})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 66, 1.0: 55})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 58, 1.0: 54})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 67, 1.0: 44})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 66, -1.0: 55})
after cutting matrix
[[-1. -1. -1. -1.  0.  0.  0.  0.  0.  0.]
 [-1.  1. -1. -1.  0. -1.  0.  0.  0.  0.]
 [-1. -1. -1. -1.  1.  0.  0.  0.  0.  0.]
 [-1.  1. -1. -1.  0.  0.  0. -1.  0.  0.]
 [-1. -1.  1. -1. -1.  1.  0.  0.  0.  0.]
 [ 1. -1. -1. -1.  0.  0. -1.  0.  0.  0.]
 [ 1.  1. -1.  1.  0.  0.  1.  0.  0.  0.]
 [-1.  1. -1. -1.  0.  0.  0.  1.  0.  0.]
 [ 1. -1.  1.  1.  0.  0.  0.  0.  1. -1.]
 [ 1.  1. -1. -1.  0.  0.  0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 447, 1.0: 115})
Counter({-1.0: 457, 1.0: 105})
Counter({1.0: 57, -1.0: 54})
Counter({-1.0: 58, 1.0: 54})
Counter({-1.0: 67, 1.0: 44})
Counter({1.0: 66, -1.0: 55})
Counter({1.0: 61, -1.0: 51})
Counter({-1.0: 61, 1.0: 51})
cutting matrix's confusion matrix
[[17  0  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 3  0 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 4  0  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]


SVM classifier
Time: 2019-01-06 16:53:36
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 123, -1.0: 65})
confusion matrix
[[17  0  0  1  0  0  0  0  0  0]
 [ 5  0  0 17  0  0  0  0  0  0]
 [23  0  0  3  0  0  0  0  0  0]
 [12  0  0  5  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 16  0  0  0  0  0  0]
 [ 5  0  0 12  0  0  0  0  0  0]
 [ 5  0  0  9  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [-1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 1.  1.]
 [-1.  0.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, -1.0: 65})
1 classifiers pre label
Counter({1.0: 118, 0.0: 70})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  5  0 17  0  0  0  0  0  0]
 [18  5  0  0  0  0  0  0  3  0]
 [ 1 11  0  5  0  0  0  0  0  0]
 [ 0 23  0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0  5  0 12  0  0  0  0  0  0]
 [ 2  3  0  0  0  0  0  0  9  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.1 0.2 0.  0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0. -1.]
 [ 0.  1. -1.]
 [ 0.  0.  1.]
 [-1.  0.  0.]
 [ 0.  1.  0.]
 [ 0. -1.  0.]
 [ 1.  1. -1.]
 [-1.  0. -1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, -1.0: 65})
1 classifiers pre label
Counter({1.0: 118, 0.0: 70})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 59, 1.0: 18})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0  4  0  0  1  0  0 17  0  0]
 [ 1  4 17  0  1  0  0  0  3  0]
 [ 0 10  1  0  1  0  0  5  0  0]
 [ 0  2  0  0 21  0  0  0  0  0]
 [ 0  1  0  0 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  3  0  0  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  3  0  0 10  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.2 0.2 0.2 0.2 0.1 0.2 0.2]
 [0.  0.  0.2 0.3 0.1 0.2 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2. 2.]
 [0. 0. 3.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  0. -1. -1.]
 [ 0.  1. -1.  1.]
 [ 0.  0.  1.  0.]
 [-1.  0.  0. -1.]
 [ 0.  1.  0.  0.]
 [ 0. -1.  0.  0.]
 [ 1.  1. -1.  0.]
 [-1.  0. -1.  0.]
 [-1.  1. -1.  0.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, -1.0: 65})
1 classifiers pre label
Counter({1.0: 118, 0.0: 70})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 59, 1.0: 18})
3 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 4  0  0  0  1  0  0 17  0  0]
 [ 3  2 17  0  1  0  0  0  3  0]
 [10  0  1  0  1  0  0  5  0  0]
 [ 2  0  0  0 21  0  0  0  0  0]
 [ 1  0  0  0 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 1  2  0  0  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 3  0  0  0 10  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.3 0.3 0.3 0.2 0.3 0.2]
 [0.  0.  0.3 0.4 0.2 0.3 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.5  1.5 ]
 [0.   0.   2.25 1.75]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  1.  0.  0.  0. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0. -1. -1. -1.]
 [ 0.  1. -1.  1. -1.]
 [ 0.  0.  1.  0.  1.]
 [-1.  0.  0. -1.  0.]
 [ 0.  1.  0.  0. -1.]
 [ 0. -1.  0.  0.  0.]
 [ 1.  1. -1.  0. -1.]
 [-1.  0. -1.  0. -1.]
 [-1.  1. -1.  0. -1.]
 [ 1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, -1.0: 65})
1 classifiers pre label
Counter({1.0: 118, 0.0: 70})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 59, 1.0: 18})
3 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 18, 0.0: 13})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 4  0  0  0  1  0  0 17  0  0]
 [ 3  2 17  0  1  0  0  0  3  0]
 [10  0  1  0  1  0  0  5  0  0]
 [ 2  0  0  0 21  0  0  0  0  0]
 [ 1  0  0  0 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 1  2  0  0  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 3  0  0  0 10  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.3 0.3 0.4 0.3 0.2 0.3 0.2]
 [0.  0.  0.4 0.5 0.2 0.4 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.4 0.3 0.3 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.5 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.2 1.2 1.4]
 [0.  0.  1.8 1.4 1.8]
 [0.  0.  0.  1.2 0.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0.  0. -1. -1. -1.  1.]
 [ 0.  1. -1.  1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.]
 [-1.  0.  0. -1.  0.  1.]
 [ 0.  1.  0.  0. -1. -1.]
 [ 0. -1.  0.  0.  0.  1.]
 [ 1.  1. -1.  0. -1. -1.]
 [-1.  0. -1.  0. -1.  0.]
 [-1.  1. -1.  0. -1.  0.]
 [ 1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, -1.0: 65})
1 classifiers pre label
Counter({1.0: 118, 0.0: 70})
2 classifiers pre label
Counter({-1.0: 111, 0.0: 59, 1.0: 18})
3 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 18, 0.0: 13})
5 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 4  0  0  0  1  0  0 17  0  0]
 [ 3  2 17  0  1  0  0  0  3  0]
 [10  0  1  0  1  0  0  5  0  0]
 [ 2  0  0  0 21  0  0  0  0  0]
 [ 1  0  0  0 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 1  2  0  0  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 3  0  0  0 10  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.3 0.4 0.4 0.4 0.3 0.4 0.3]
 [0.  0.  0.5 0.6 0.2 0.5 0.2 0.4 0.3 0.2]
 [0.  0.  0.  0.5 0.4 0.4 0.5 0.3 0.4 0.6]
 [0.  0.  0.  0.  0.5 0.3 0.6 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.2 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   1.   1.17 1.5 ]
 [0.   0.   1.5  1.17 1.5  1.33]
 [0.   0.   0.   1.   0.17 1.17]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})

**********      classifier acc  **************
[0.325, 0.636, 0.775, 0.371, 0.875, 0.557, 0.467, 0.353, 0.5, 0.5, 0.0]
before cutting matrix
[[ 0.  0. -1. -1. -1.  1.  0.  0.  0.  0.  0.]
 [ 0.  1. -1.  1. -1. -1.  1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0. -1.  0.  1.  0.  1.  0.  0.  0.]
 [ 0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0.]
 [ 0. -1.  0.  0.  0.  1.  0.  0.  1. -1.  0.]
 [ 1.  1. -1.  0. -1. -1.  0.  0. -1.  1.  0.]
 [-1.  0. -1.  0. -1.  0.  0. -1.  0.  0.  0.]
 [-1.  1. -1.  0. -1.  0.  0.  0.  0.  0. -1.]
 [ 1.  1. -1. -1. -1. -1.  0.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 182, 1.0: 95})
positive and negative ratio
Counter({1.0: 268, -1.0: 67})
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 268, -1.0: 67})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 155, 1.0: 58})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 155, 1.0: 58})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 207, 1.0: 171})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 383, 1.0: 57})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 207, 1.0: 171})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 383, 1.0: 57})
Counter({1.0: 58, -1.0: 54})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
positive and negative ratio
Counter({1.0: 58, -1.0: 54})
after cutting matrix
[[-1. -1.  0.  0.  0.  0.]
 [-1. -1.  0.  0.  0.  0.]
 [ 1.  1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  0.  0.]
 [ 0. -1.  0.  0.  0.  0.]
 [ 0.  0.  0.  1. -1.  0.]
 [-1. -1.  0. -1.  1.  0.]
 [-1. -1. -1.  0.  0.  0.]
 [-1. -1.  0.  0.  0. -1.]
 [-1. -1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 329, 1.0: 57})
Counter({-1.0: 383, 1.0: 57})
Counter({-1.0: 66, 1.0: 55})
Counter({1.0: 67, -1.0: 44})
Counter({-1.0: 67, 1.0: 44})
Counter({-1.0: 61, 1.0: 51})
cutting matrix's confusion matrix
[[14  0  0  0  0  3  1  0  0  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 5  0 17  0  1  0  3  0  0  0]
 [10  0  1  0  1  0  0  5  0  0]
 [ 2  0  0  0 19  2  0  0  0  0]
 [ 1  0  0  0 13  3  2  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 3  0  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  9  0  0  0]
 [ 3  0  0  0  9  1  0  0  0  0]]
算法备注：
连续三次没有变化或者变差的时候就停止继续生成新的列，把复杂的类和数量相近的类拼接起来形成列，最后形成的全部的矩阵送入剪枝


SVM classifier
Time: 2019-01-06 16:53:43
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1. -1.  1.]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({1.0: 36, -1.0: 20})
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[28  5  0  0  1]
 [ 5  3  0  0  1]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[28  0  0  5  1]
 [ 5  0  0  3  1]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[28  0  0  5  1]
 [ 5  0  0  3  1]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.8 0.4 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.   0.75]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
confusion matrix
[[28  0  0  5  1]
 [ 5  0  0  3  1]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 0.8 0.6 0.2]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.8 0.6 0.2]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.]
 [-1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 1.  0.6 0.4]
 [0.  0.  0.6 0.2 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.67 0.5  0.17 0.5 ]
 [0.   0.   0.5  0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.]
 [-1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  1.2 0.6 0.6]
 [0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.57 0.43 0.14 0.43 0.43]
 [0.   0.   0.43 0.29 0.29 0.29 0.57]
 [0.   0.   0.   0.14 0.43 0.43 0.14]
 [0.   0.   0.   0.   0.29 0.57 0.29]
 [0.   0.   0.   0.   0.   0.57 0.29]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.2 0.6 0.8]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.5  0.38 0.12 0.38 0.38 0.38]
 [0.   0.   0.38 0.25 0.25 0.25 0.5  0.25]
 [0.   0.   0.   0.12 0.38 0.38 0.12 0.38]
 [0.   0.   0.   0.   0.25 0.5  0.25 0.25]
 [0.   0.   0.   0.   0.   0.5  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1. -1. -1.  1.  1. -1.  1.  0.]
 [-1. -1.  1. -1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 34, -1.0: 22})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({0.0: 39, -1.0: 17})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.4 1.4 0.8 1. ]
 [0.  0.  1.  0.6 1. ]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.44 0.33 0.11 0.33 0.33 0.33 0.22]
 [0.   0.   0.33 0.22 0.22 0.22 0.44 0.22 0.33]
 [0.   0.   0.   0.11 0.33 0.33 0.11 0.33 0.33]
 [0.   0.   0.   0.   0.22 0.44 0.22 0.22 0.22]
 [0.   0.   0.   0.   0.   0.44 0.22 0.22 0.11]
 [0.   0.   0.   0.   0.   0.   0.44 0.22 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})

**********      classifier acc  **************
[0.768, 0.786, 0.714, 0.875, 0.714, 0.857, 0.696, 0.821, 0.227, 0.125, 0.0, 0.0]
before cutting matrix
[[ 1.  1. -1. -1.  1.  1. -1.  1.  0.  0.  0.  0.]
 [-1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  0.  0.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  0.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1.  0. -1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({-1.0: 112, 1.0: 54})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 112, 1.0: 54})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 52, 1.0: 25})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 52, 1.0: 25})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 29, -1.0: 16})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 29, -1.0: 16})
after cutting matrix
[[ 1.  1. -1.  1.  1.  0.  0.]
 [-1. -1. -1.  1. -1.  0.  0.]
 [-1. -1.  1. -1.  1.  1.  0.]
 [-1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 141, -1.0: 25})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 23, 1.0: 16})
Counter({-1.0: 23, 1.0: 9})
cutting matrix's confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]


SVM classifier
Time: 2019-01-06 16:53:45
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0.  0.]
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({1.0: 41, 0.0: 15})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 0.  0.]
 [-1. -1.]
 [ 0. -1.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
Counter({-1.0: 128, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 41, 0.0: 15})
1 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  4  0  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  0.]
 [ 0.  0. -1.]
 [-1. -1. -1.]
 [ 0. -1.  1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 41, 0.0: 15})
1 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
2 classifiers pre label
Counter({0.0: 39, -1.0: 17})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.6]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  0.  0.]
select_j_column
[ 1. -1.  1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  4 ================
current matrix is 
[[ 1. -1.  0.]
 [ 0.  0. -1.]
 [-1. -1. -1.]
 [ 0. -1.  1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 41, 0.0: 15})
1 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
2 classifiers pre label
Counter({0.0: 39, -1.0: 17})
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.6]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})

**********      classifier acc  **************
[0.707, 0.723, 0.364, 0.0, 0.0, 0.0]
before cutting matrix
[[ 1. -1.  0.  0.  0.  0.]
 [ 0.  0. -1.  0.  0.  0.]
 [-1. -1. -1.  1. -1.  0.]
 [ 0. -1.  1. -1.  1. -1.]
 [ 0.  1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({1.0: 89, -1.0: 16})
positive and negative ratio
Counter({-1.0: 128, 1.0: 9})
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 128, 1.0: 9})
positive and negative ratio
Counter({-1.0: 45, 1.0: 32})
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
positive and negative ratio
Counter({-1.0: 45, 1.0: 32})
after cutting matrix
[[ 0.  0.  0.]
 [ 0.  0.  0.]
 [ 1. -1.  0.]
 [-1.  1. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 23, 1.0: 16})
Counter({1.0: 23, -1.0: 16})
Counter({-1.0: 23, 1.0: 9})
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]


SVM classifier
Time: 2019-01-06 16:53:46
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 49, 1.0: 18})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 173, -1.0: 28})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 63, -1.0: 4})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.   0.17 0.  ]
 [0.   0.   0.17 0.   0.17 0.  ]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 173, -1.0: 28})
Counter({-1.0: 171, 1.0: 30})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 63, -1.0: 4})
2 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 173, -1.0: 28})
Counter({-1.0: 171, 1.0: 30})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 63, -1.0: 4})
2 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.33 0.17 0.  ]
 [0.   0.   0.33 0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.5  0.25]
 [0.   0.   1.   0.75]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  0.]
 [-1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 173, -1.0: 28})
Counter({-1.0: 171, 1.0: 30})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 134, -1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 63, -1.0: 4})
2 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
4 classifiers pre label
Counter({1.0: 43, -1.0: 18, 0.0: 6})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.5  0.17 0.  ]
 [0.   0.   0.5  0.5  0.17 0.  ]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.4 0.2 1.2]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
5
new_column
None


============== iter  6 ================
current matrix is 
[[-1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  0.]
 [-1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 173, -1.0: 28})
Counter({-1.0: 171, 1.0: 30})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 134, -1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 63, -1.0: 4})
2 classifiers pre label
Counter({-1.0: 62, 1.0: 5})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
4 classifiers pre label
Counter({1.0: 43, -1.0: 18, 0.0: 6})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.5  0.17 0.  ]
 [0.   0.   0.5  0.5  0.17 0.  ]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.4 0.2 1.2]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 173, -1.0: 28})
Counter({-1.0: 171, 1.0: 30})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 134, -1.0: 37})
Counter({1.0: 38, -1.0: 37})
Counter({-1.0: 10})
