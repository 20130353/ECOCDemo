算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整


SVM classifier
Time: 2019-01-09 22:17:15
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1.  1.]
 [-1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.   0.  ]
 [0.   0.   1.25 0.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1.  1.]
 [ 1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.2 0.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.8 0.  0.4]
 [0.  0.  1.  0.2 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.8 0.6 0.6 0.4]
 [0.  0.  0.2 0.2 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.67 0.   0.33 0.67]
 [0.   0.   0.83 0.17 0.5  0.83]
 [0.   0.   0.   0.67 0.33 0.  ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.  0.8 0.8 0.4]
 [0.  0.  0.2 0.2 1.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.57 0.   0.29 0.57 0.14]
 [0.   0.   0.71 0.14 0.43 0.71 0.  ]
 [0.   0.   0.   0.57 0.29 0.   0.71]
 [0.   0.   0.   0.   0.29 0.57 0.14]
 [0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.]
 [-1. -1.  1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.2 0.8 0.8 0.6]
 [0.  0.  0.4 0.4 1.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.5  0.   0.25 0.5  0.12 0.62]
 [0.   0.   0.62 0.12 0.38 0.62 0.   0.62]
 [0.   0.   0.   0.5  0.25 0.   0.62 0.38]
 [0.   0.   0.   0.   0.25 0.5  0.12 0.62]
 [0.   0.   0.   0.   0.   0.25 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  1  0  0]
 [ 3  0  6  0  0]
 [ 2  0  5  0  0]
 [ 0  0  7  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.2 0.8 0.8 0.8]
 [0.  0.  0.4 0.4 1.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.44 0.   0.22 0.44 0.11 0.56 0.  ]
 [0.   0.   0.56 0.11 0.33 0.56 0.   0.56 0.11]
 [0.   0.   0.   0.44 0.22 0.   0.56 0.33 0.44]
 [0.   0.   0.   0.   0.22 0.44 0.11 0.56 0.  ]
 [0.   0.   0.   0.   0.   0.22 0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.56 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 2  0  4  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.4 0.8 1.  0.8]
 [0.  0.  0.6 0.4 2. ]
 [0.  0.  0.  0.2 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.1 0.4 0.  0.2 0.4 0.1 0.5 0.  0.3]
 [0.  0.  0.5 0.1 0.3 0.5 0.  0.5 0.1 0.4]
 [0.  0.  0.  0.4 0.2 0.  0.5 0.3 0.4 0.1]
 [0.  0.  0.  0.  0.2 0.4 0.1 0.5 0.  0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 2  0  4  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.6 1.  1.2 0.8]
 [0.  0.  0.6 0.4 2.2]
 [0.  0.  0.  0.2 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.09 0.36 0.   0.18 0.36 0.09 0.45 0.   0.27 0.36]
 [0.   0.   0.45 0.09 0.27 0.45 0.   0.45 0.09 0.36 0.45]
 [0.   0.   0.   0.36 0.18 0.   0.45 0.27 0.36 0.09 0.  ]
 [0.   0.   0.   0.   0.18 0.36 0.09 0.45 0.   0.27 0.36]
 [0.   0.   0.   0.   0.   0.18 0.27 0.27 0.18 0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.45 0.27 0.36 0.09 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.09 0.36 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
11 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 2  0  4  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.6 1.  1.2 1. ]
 [0.  0.  0.6 0.4 2.4]
 [0.  0.  0.  0.2 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.08 0.33 0.   0.17 0.33 0.08 0.42 0.   0.25 0.33 0.42]
 [0.   0.   0.42 0.08 0.25 0.42 0.   0.42 0.08 0.33 0.42 0.33]
 [0.   0.   0.   0.33 0.17 0.   0.42 0.25 0.33 0.08 0.   0.08]
 [0.   0.   0.   0.   0.17 0.33 0.08 0.42 0.   0.25 0.33 0.42]
 [0.   0.   0.   0.   0.   0.17 0.25 0.25 0.17 0.08 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.42 0.25 0.33 0.08 0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.08 0.33 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[ 0. -1.  0.  0.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  1  0  0]
 [ 3  1  5  0  0]
 [ 2  1  4  0  0]
 [ 0  2  5  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.6 1.  1.4 1.2]
 [0.  0.  0.6 0.6 2.6]
 [0.  0.  0.  0.4 2.2]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.08 0.31 0.   0.15 0.31 0.08 0.38 0.   0.23 0.31 0.38 0.08]
 [0.   0.   0.38 0.08 0.23 0.38 0.   0.38 0.08 0.31 0.38 0.31 0.15]
 [0.   0.   0.   0.31 0.15 0.   0.38 0.23 0.31 0.08 0.   0.08 0.23]
 [0.   0.   0.   0.   0.15 0.31 0.08 0.38 0.   0.23 0.31 0.38 0.08]
 [0.   0.   0.   0.   0.   0.15 0.23 0.23 0.15 0.08 0.15 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.38 0.23 0.31 0.08 0.   0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.08 0.31 0.38 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.38 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  1  0  0]
 [ 3  1  5  0  0]
 [ 2  1  4  0  0]
 [ 0  2  5  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.6 1.  1.6 1.2]
 [0.  0.  0.6 0.8 2.6]
 [0.  0.  0.  0.6 2.2]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.07 0.29 0.   0.14 0.29 0.07 0.36 0.   0.21 0.29 0.36 0.07 0.14]
 [0.   0.   0.36 0.07 0.21 0.36 0.   0.36 0.07 0.29 0.36 0.29 0.14 0.21]
 [0.   0.   0.   0.29 0.14 0.   0.36 0.21 0.29 0.07 0.   0.07 0.21 0.14]
 [0.   0.   0.   0.   0.14 0.29 0.07 0.36 0.   0.21 0.29 0.36 0.07 0.14]
 [0.   0.   0.   0.   0.   0.14 0.21 0.21 0.14 0.07 0.14 0.21 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.36 0.21 0.29 0.07 0.   0.07 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.07 0.29 0.36 0.29 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.21 0.21 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.36 0.07 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.14 0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
confusion matrix
[[29  0  1  0  0]
 [ 3  1  5  0  0]
 [ 2  1  4  0  0]
 [ 0  1  6  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  1.8 1.  1.8 1.4]
 [0.  0.  0.8 1.  2.8]
 [0.  0.  0.  0.8 2.4]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.07 0.27 0.   0.13 0.27 0.07 0.33 0.   0.2  0.27 0.33 0.07 0.13
  0.27]
 [0.   0.   0.33 0.07 0.2  0.33 0.   0.33 0.07 0.27 0.33 0.27 0.13 0.2
  0.27]
 [0.   0.   0.   0.27 0.13 0.   0.33 0.2  0.27 0.07 0.   0.07 0.2  0.13
  0.2 ]
 [0.   0.   0.   0.   0.13 0.27 0.07 0.33 0.   0.2  0.27 0.33 0.07 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.13 0.2  0.2  0.13 0.07 0.13 0.2  0.2  0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.33 0.2  0.27 0.07 0.   0.07 0.2  0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.07 0.27 0.33 0.27 0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.2  0.2  0.33 0.27
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.33 0.07 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.13 0.13 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.  0. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1. -1. -1.  1. -1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
15 classifiers pre label
Counter({1.0: 53, -1.0: 3})
confusion matrix
[[29  1  0  0  0]
 [ 3  3  3  0  0]
 [ 2  1  4  0  0]
 [ 0  4  3  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  1.8 1.2 2.  1.4]
 [0.  0.  1.  1.2 2.8]
 [0.  0.  0.  0.8 2.6]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.06 0.25 0.   0.12 0.25 0.06 0.31 0.   0.19 0.25 0.31 0.06 0.12
  0.25 0.19]
 [0.   0.   0.31 0.06 0.19 0.31 0.   0.31 0.06 0.25 0.31 0.25 0.12 0.19
  0.25 0.25]
 [0.   0.   0.   0.25 0.12 0.   0.31 0.19 0.25 0.06 0.   0.06 0.19 0.12
  0.19 0.06]
 [0.   0.   0.   0.   0.12 0.25 0.06 0.31 0.   0.19 0.25 0.31 0.06 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.12 0.19 0.19 0.12 0.06 0.12 0.19 0.19 0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.31 0.19 0.25 0.06 0.   0.06 0.19 0.12
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.06 0.25 0.31 0.25 0.12 0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.19 0.19 0.31 0.25
  0.06 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.31 0.06 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.12 0.06
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.12
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06
  0.31 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
2 classifiers pre label
Counter({1.0: 34, -1.0: 22})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 34, -1.0: 22})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 44, -1.0: 12})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 34, -1.0: 22})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
15 classifiers pre label
Counter({1.0: 53, -1.0: 3})
16 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  3  3  0  0]
 [ 2  1  4  0  0]
 [ 0  4  3  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  2.  1.4 2.2 1.4]
 [0.  0.  1.  1.2 3. ]
 [0.  0.  0.  0.8 2.8]
 [0.  0.  0.  0.  2.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.06 0.24 0.   0.12 0.24 0.06 0.29 0.   0.18 0.24 0.29 0.06 0.12
  0.24 0.18 0.06]
 [0.   0.   0.29 0.06 0.18 0.29 0.   0.29 0.06 0.24 0.29 0.24 0.12 0.18
  0.24 0.24 0.  ]
 [0.   0.   0.   0.24 0.12 0.   0.29 0.18 0.24 0.06 0.   0.06 0.18 0.12
  0.18 0.06 0.29]
 [0.   0.   0.   0.   0.12 0.24 0.06 0.29 0.   0.18 0.24 0.29 0.06 0.12
  0.24 0.18 0.06]
 [0.   0.   0.   0.   0.   0.12 0.18 0.18 0.12 0.06 0.12 0.18 0.18 0.12
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.29 0.18 0.24 0.06 0.   0.06 0.18 0.12
  0.18 0.06 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.06 0.24 0.29 0.24 0.12 0.18
  0.24 0.24 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.18 0.18 0.29 0.24
  0.06 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.29 0.06 0.12
  0.24 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.12 0.06
  0.18 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.12
  0.18 0.06 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18
  0.18 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06
  0.29 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})

**********      classifier acc  **************
[0.946, 0.839, 0.839, 0.946, 0.839, 0.839, 0.839, 0.25, 0.946, 0.768, 0.839, 0.946, 0.821, 0.875, 0.211, 0.768, 0.839]
before cutting matrix
[[ 1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  0.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 31, 1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({-1.0: 31, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 139, -1.0: 27})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 139, -1.0: 27})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({-1.0: 31, 1.0: 27})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({-1.0: 99, 1.0: 67})
positive and negative ratio
Counter({1.0: 130, -1.0: 36})
after cutting matrix
[[ 1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  0.  1. -1.]
 [ 1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1. -1. -1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 160, 1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 99, 1.0: 67})
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 3  3  3  0  0]
 [ 2  1  4  0  0]
 [ 0  4  2  1  0]
 [ 0  2  1  0  0]]


SVM classifier
Time: 2019-01-09 22:17:19
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0. -1. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [-1. -1.]
 [-1.  0.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[26  0  0  0  4]
 [ 5  0  1  0  3]
 [ 3  0  1  0  3]
 [ 4  0  1  0  2]
 [ 0  0  1  0  2]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  0.  1.  0.  0.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [-1. -1.]
 [-1.  0.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[26  0  0  0  4]
 [ 5  0  1  0  3]
 [ 3  0  1  0  3]
 [ 4  0  1  0  2]
 [ 0  0  1  0  2]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.]
 [-1. -1.  1.]
 [-1.  0.  0.]
 [ 1.  1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  0.  0.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
3
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.]
 [-1. -1.  1.]
 [-1.  0.  0.]
 [ 1.  1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [-1. -1.  1.  0.]
 [-1.  0.  0.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  1.  ]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  0.]
select_j_column
[ 0.  0.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  0.  0. -1.]
 [-1. -1.  1.  0.  1.]
 [-1.  0.  0.  1.  1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  0  1  0  0]
 [ 3  1  5  0  0]
 [ 2  1  3  1  0]
 [ 0  1  6  0  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.8 0.8 0.8 0.6]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.8 0.6]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.]
 [-1. -1.  1.  0.  1.  1.]
 [-1.  0.  0.  1.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[29  0  0  1  0]
 [ 3  4  0  2  0]
 [ 2  3  0  2  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.8 1.  0.8 0.8]
 [0.  0.  0.8 0.6 1. ]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.33 0.67 0.5  0.5 ]
 [0.   0.   0.5  0.67 0.67 0.33]
 [0.   0.   0.   0.67 0.33 0.17]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[-1.  0.  1.  0.  0.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0.]
 [-1. -1.  1.  0.  1.  1. -1.]
 [-1.  0.  0.  1.  1.  0.  0.]
 [ 1.  1.  1. -1.  1.  1. -1.]
 [-1.  1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
confusion matrix
[[30  0  0  0  0]
 [ 5  3  1  0  0]
 [ 3  2  1  1  0]
 [ 4  2  1  0  0]
 [ 0  1  1  1  0]]
row HD
[[0.  1.  1.  1.  1. ]
 [0.  0.  1.  0.6 1.2]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.29 0.57 0.43 0.43 0.43]
 [0.   0.   0.43 0.57 0.57 0.29 0.29]
 [0.   0.   0.   0.57 0.29 0.14 0.43]
 [0.   0.   0.   0.   0.57 0.71 0.29]
 [0.   0.   0.   0.   0.   0.29 0.71]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.]
 [-1. -1.  1.  0.  1.  1. -1. -1.]
 [-1.  0.  0.  1.  1.  0.  0.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 4  3  0  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.  1.2 1.  1.2]
 [0.  0.  1.2 0.6 1.4]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.25 0.5  0.38 0.38 0.38 0.5 ]
 [0.   0.   0.38 0.5  0.5  0.25 0.25 0.38]
 [0.   0.   0.   0.5  0.25 0.12 0.38 0.62]
 [0.   0.   0.   0.   0.5  0.62 0.25 0.25]
 [0.   0.   0.   0.   0.   0.25 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0. -1.  0. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 4  3  0  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.2 1.4 1.2 1.4]
 [0.  0.  1.2 0.6 1.6]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.22 0.44 0.33 0.33 0.33 0.44 0.22]
 [0.   0.   0.33 0.44 0.44 0.22 0.22 0.33 0.33]
 [0.   0.   0.   0.44 0.22 0.11 0.33 0.56 0.44]
 [0.   0.   0.   0.   0.44 0.56 0.22 0.22 0.22]
 [0.   0.   0.   0.   0.   0.22 0.56 0.33 0.56]
 [0.   0.   0.   0.   0.   0.   0.44 0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
confusion matrix
[[29  0  0  1  0]
 [ 3  4  0  2  0]
 [ 3  2  0  2  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.4 1.6 1.4 1.4]
 [0.  0.  1.4 0.6 1.8]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.3 0.2 0.4 0.3 0.3 0.3 0.4 0.2 0.3]
 [0.  0.  0.3 0.4 0.4 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.4 0.2 0.1 0.3 0.5 0.4 0.1]
 [0.  0.  0.  0.  0.4 0.5 0.2 0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.2 0.5 0.3 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0.  1. -1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[29  0  0  1  0]
 [ 3  4  0  2  0]
 [ 3  2  0  2  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.4 1.8 1.6 1.6]
 [0.  0.  1.6 0.8 2. ]
 [0.  0.  0.  1.8 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.18 0.36 0.27 0.27 0.27 0.36 0.18 0.27 0.27]
 [0.   0.   0.27 0.36 0.36 0.18 0.18 0.27 0.27 0.27 0.45]
 [0.   0.   0.   0.36 0.18 0.09 0.27 0.45 0.36 0.09 0.27]
 [0.   0.   0.   0.   0.36 0.45 0.18 0.18 0.18 0.45 0.09]
 [0.   0.   0.   0.   0.   0.18 0.45 0.27 0.45 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.36 0.45 0.45 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.09 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[29  0  0  1  0]
 [ 3  4  0  2  0]
 [ 2  3  0  2  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.6 2.  1.8 1.8]
 [0.  0.  1.8 0.8 2. ]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.17 0.33 0.25 0.25 0.25 0.33 0.17 0.25 0.25 0.17]
 [0.   0.   0.25 0.33 0.33 0.17 0.17 0.25 0.25 0.25 0.42 0.25]
 [0.   0.   0.   0.33 0.17 0.08 0.25 0.42 0.33 0.08 0.25 0.17]
 [0.   0.   0.   0.   0.33 0.42 0.17 0.17 0.17 0.42 0.08 0.25]
 [0.   0.   0.   0.   0.   0.17 0.42 0.25 0.42 0.08 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.33 0.42 0.42 0.08 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.08 0.33 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[-1.  0.  1.  0.  0.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
12 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  4  0  2  0]
 [ 2  3  0  2  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.6 2.2 1.8 2. ]
 [0.  0.  2.  0.8 2.2]
 [0.  0.  0.  2.2 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.15 0.31 0.23 0.23 0.23 0.31 0.15 0.23 0.23 0.15 0.15]
 [0.   0.   0.23 0.31 0.31 0.15 0.15 0.23 0.23 0.23 0.38 0.23 0.23]
 [0.   0.   0.   0.31 0.15 0.08 0.23 0.38 0.31 0.08 0.23 0.15 0.15]
 [0.   0.   0.   0.   0.31 0.38 0.15 0.15 0.15 0.38 0.08 0.23 0.38]
 [0.   0.   0.   0.   0.   0.15 0.38 0.23 0.38 0.08 0.23 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.31 0.38 0.38 0.08 0.31 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.08 0.31 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.23 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  0. -1.  1.]
select_j_column
[ 1.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
None


============== iter  16 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
12 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  4  0  2  0]
 [ 2  3  0  2  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.6 2.2 1.8 2. ]
 [0.  0.  2.  0.8 2.2]
 [0.  0.  0.  2.2 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.15 0.31 0.23 0.23 0.23 0.31 0.15 0.23 0.23 0.15 0.15]
 [0.   0.   0.23 0.31 0.31 0.15 0.15 0.23 0.23 0.23 0.38 0.23 0.23]
 [0.   0.   0.   0.31 0.15 0.08 0.23 0.38 0.31 0.08 0.23 0.15 0.15]
 [0.   0.   0.   0.   0.31 0.38 0.15 0.15 0.15 0.38 0.08 0.23 0.38]
 [0.   0.   0.   0.   0.   0.15 0.38 0.23 0.38 0.08 0.23 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.31 0.38 0.38 0.08 0.31 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.08 0.31 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.23 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  0.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1. -1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 2.2 1.8 2. ]
 [0.  0.  2.2 1.  2.4]
 [0.  0.  0.  2.2 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.14 0.29 0.21 0.21 0.21 0.29 0.14 0.21 0.21 0.14 0.14 0.21]
 [0.   0.   0.21 0.29 0.29 0.14 0.14 0.21 0.21 0.21 0.36 0.21 0.21 0.07]
 [0.   0.   0.   0.29 0.14 0.07 0.21 0.36 0.29 0.07 0.21 0.14 0.14 0.29]
 [0.   0.   0.   0.   0.29 0.36 0.14 0.14 0.14 0.36 0.07 0.21 0.36 0.21]
 [0.   0.   0.   0.   0.   0.14 0.36 0.21 0.36 0.07 0.21 0.21 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.29 0.36 0.36 0.07 0.29 0.21 0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.07 0.29 0.21 0.21 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.21 0.29 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.14 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.  1.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1. -1.  0.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 44, 0.0: 12})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.  2.2 1.8 2.2]
 [0.  0.  2.4 1.2 2.6]
 [0.  0.  0.  2.2 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.13 0.27 0.2  0.2  0.2  0.27 0.13 0.2  0.2  0.13 0.13 0.2
  0.2 ]
 [0.   0.   0.2  0.27 0.27 0.13 0.13 0.2  0.2  0.2  0.33 0.2  0.2  0.07
  0.2 ]
 [0.   0.   0.   0.27 0.13 0.07 0.2  0.33 0.27 0.07 0.2  0.13 0.13 0.27
  0.2 ]
 [0.   0.   0.   0.   0.27 0.33 0.13 0.13 0.13 0.33 0.07 0.2  0.33 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.13 0.33 0.2  0.33 0.07 0.2  0.2  0.13 0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.27 0.33 0.33 0.07 0.27 0.2  0.07 0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.07 0.27 0.2  0.2  0.33 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.2  0.27 0.33 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.13 0.27 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.13 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0.  1.  1. -1.]
select_j_column
[-1.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  19 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.  1.  1.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1. -1.  0.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 44, 0.0: 12})
15 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.  2.2 1.8 2.4]
 [0.  0.  2.4 1.2 2.8]
 [0.  0.  0.  2.2 2.2]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.12 0.25 0.19 0.19 0.19 0.25 0.12 0.19 0.19 0.12 0.12 0.19
  0.19 0.19]
 [0.   0.   0.19 0.25 0.25 0.12 0.12 0.19 0.19 0.19 0.31 0.19 0.19 0.06
  0.19 0.19]
 [0.   0.   0.   0.25 0.12 0.06 0.19 0.31 0.25 0.06 0.19 0.12 0.12 0.25
  0.19 0.12]
 [0.   0.   0.   0.   0.25 0.31 0.12 0.12 0.12 0.31 0.06 0.19 0.31 0.19
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.12 0.31 0.19 0.31 0.06 0.19 0.19 0.12 0.19
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.25 0.31 0.31 0.06 0.25 0.19 0.06 0.19
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.06 0.25 0.19 0.19 0.31 0.19
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.19 0.25 0.31 0.12
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.12 0.25 0.19
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.12 0.25
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0.  1.  1. -1.]
select_j_column
[-1.  1.  0.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1. -1.  0.  1.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 38, -1.0: 18})
1 classifiers pre label
Counter({1.0: 52, 0.0: 4})
2 classifiers pre label
Counter({0.0: 42, 1.0: 14})
3 classifiers pre label
Counter({0.0: 50, -1.0: 6})
4 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
5 classifiers pre label
Counter({1.0: 52, 0.0: 4})
6 classifiers pre label
Counter({0.0: 42, -1.0: 14})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({0.0: 38, -1.0: 18})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 17, 0.0: 4})
10 classifiers pre label
Counter({0.0: 50, -1.0: 6})
11 classifiers pre label
Counter({0.0: 38, 1.0: 18})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 44, 0.0: 12})
15 classifiers pre label
Counter({1.0: 56})
16 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  4  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.  2.2 1.8 2.6]
 [0.  0.  2.4 1.2 3. ]
 [0.  0.  0.  2.2 2.4]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.12 0.24 0.18 0.18 0.18 0.24 0.12 0.18 0.18 0.12 0.12 0.18
  0.18 0.18 0.18]
 [0.   0.   0.18 0.24 0.24 0.12 0.12 0.18 0.18 0.18 0.29 0.18 0.18 0.06
  0.18 0.18 0.18]
 [0.   0.   0.   0.24 0.12 0.06 0.18 0.29 0.24 0.06 0.18 0.12 0.12 0.24
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.24 0.29 0.12 0.12 0.12 0.29 0.06 0.18 0.29 0.18
  0.18 0.24 0.24]
 [0.   0.   0.   0.   0.   0.12 0.29 0.18 0.29 0.06 0.18 0.18 0.12 0.18
  0.12 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.24 0.29 0.29 0.06 0.24 0.18 0.06 0.18
  0.12 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.06 0.24 0.18 0.18 0.29 0.18
  0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.18 0.24 0.29 0.12
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.12 0.24 0.18
  0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.12 0.24
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.24
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18
  0.24 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.12 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})

**********      classifier acc  **************
[0.423, 0.776, 0.263, 0.059, 0.839, 0.898, 0.263, 0.821, 0.423, 0.816, 0.176, 0.385, 0.821, 0.839, 0.766, 0.946, 0.946]
before cutting matrix
[[ 0.  1.  0.  0. -1.  1.  0. -1.  0. -1.  0.  0.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  0.  1.  1. -1. -1. -1.  1.  0.  1.  1. -1.  0.  1.  1.]
 [-1.  0.  0.  1.  1.  0.  0.  1. -1.  0.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 120, -1.0: 31})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 52, 1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 52, 1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 67, 1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 99, 1.0: 52})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 52})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 27, 1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 27, 1.0: 15})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 58, -1.0: 15})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 129, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 129, -1.0: 6})
after cutting matrix
[[-1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [ 1.  0.  1. -1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 6})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]


SVM classifier
Time: 2019-01-09 22:17:23
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1.  1.]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.   0.  ]
 [0.   0.   0.17 0.17 0.   0.  ]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 1.  1.  0.]
 [ 1. -1.  0.]
 [-1.  1.  1.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.5  0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 2.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  0.]
 [ 1.  1.  0. -1.]
 [ 1. -1.  0.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  0. -1.]
 [ 1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.5  0.17 0.17]
 [0.   0.   0.33 0.33 0.   0.33]
 [0.   0.   0.   0.67 0.33 0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.5  1.  ]
 [0.   0.   1.25 1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  0.  1.]
 [ 1.  1.  0. -1. -1.]
 [ 1. -1.  0.  1. -1.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1.  0. -1. -1.]
 [ 1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.33 0.5  0.67 0.33 0.17]
 [0.   0.   0.33 0.33 0.   0.5 ]
 [0.   0.   0.   0.67 0.33 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 1.2 0.8 0.6]
 [0.  0.  1.  1.2 0.6]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.]
 [ 1. -1.  0.  1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.]
 [ 1.  1.  0. -1. -1.  1.]
 [ 1.  1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.33 0.5  0.83 0.33 0.17]
 [0.   0.   0.33 0.5  0.   0.5 ]
 [0.   0.   0.   0.83 0.33 0.67]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.   0.67 0.5  0.  ]
 [0.   0.   0.83 1.   0.5  0.33]
 [0.   0.   0.   0.83 1.   1.  ]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0.]
 [ 1.  1. -1.  0.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.5  0.83 0.5  0.33]
 [0.   0.   0.33 0.5  0.17 0.67]
 [0.   0.   0.   0.83 0.5  0.83]
 [0.   0.   0.   0.   0.67 1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.86 0.57 0.43 0.   0.43]
 [0.   0.   0.71 0.86 0.43 0.29 0.43]
 [0.   0.   0.   0.71 0.86 0.86 0.43]
 [0.   0.   0.   0.   0.43 0.57 0.71]
 [0.   0.   0.   0.   0.   0.43 0.71]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.5  1.   0.67 0.33]
 [0.   0.   0.5  0.5  0.17 0.83]
 [0.   0.   0.   1.   0.67 0.83]
 [0.   0.   0.   0.   0.67 1.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.75 0.5  0.38 0.   0.38 0.25]
 [0.   0.   0.62 0.75 0.38 0.25 0.38 0.5 ]
 [0.   0.   0.   0.62 0.75 0.75 0.38 0.75]
 [0.   0.   0.   0.   0.38 0.5  0.62 0.25]
 [0.   0.   0.   0.   0.   0.38 0.62 0.12]
 [0.   0.   0.   0.   0.   0.   0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.5  1.17 0.67 0.33]
 [0.   0.   0.5  0.67 0.17 0.83]
 [0.   0.   0.   1.17 0.67 0.83]
 [0.   0.   0.   0.   0.83 1.33]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.22 0.67 0.44 0.33 0.   0.33 0.22 0.  ]
 [0.   0.   0.56 0.67 0.33 0.22 0.33 0.44 0.22]
 [0.   0.   0.   0.56 0.67 0.67 0.33 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.44 0.56 0.22 0.44]
 [0.   0.   0.   0.   0.   0.33 0.56 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.33 0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  0. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.5  1.33 0.83 0.5 ]
 [0.   0.   0.5  0.83 0.33 1.  ]
 [0.   0.   0.   1.33 0.83 1.  ]
 [0.   0.   0.   0.   0.83 1.5 ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.6 0.4 0.3 0.  0.3 0.2 0.  0.4]
 [0.  0.  0.5 0.6 0.3 0.2 0.3 0.4 0.2 0.5]
 [0.  0.  0.  0.5 0.6 0.6 0.3 0.6 0.6 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.5 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.5 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.67 1.33 0.83 0.67]
 [0.   0.   0.67 0.83 0.33 1.17]
 [0.   0.   0.   1.5  1.   1.  ]
 [0.   0.   0.   0.   0.83 1.67]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.18 0.55 0.36 0.27 0.   0.27 0.18 0.   0.36 0.27]
 [0.   0.   0.45 0.55 0.27 0.18 0.27 0.36 0.18 0.45 0.09]
 [0.   0.   0.   0.45 0.55 0.55 0.27 0.55 0.55 0.27 0.36]
 [0.   0.   0.   0.   0.27 0.36 0.45 0.18 0.36 0.27 0.55]
 [0.   0.   0.   0.   0.   0.27 0.45 0.09 0.27 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.18 0.   0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.55 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.83 1.5  0.83 0.83]
 [0.   0.   0.83 1.   0.33 1.33]
 [0.   0.   0.   1.67 1.17 1.  ]
 [0.   0.   0.   0.   1.   1.83]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.5  0.33 0.25 0.   0.25 0.17 0.   0.33 0.25 0.5 ]
 [0.   0.   0.42 0.5  0.25 0.17 0.25 0.33 0.17 0.42 0.08 0.33]
 [0.   0.   0.   0.42 0.5  0.5  0.25 0.5  0.5  0.25 0.33 0.08]
 [0.   0.   0.   0.   0.25 0.33 0.42 0.17 0.33 0.25 0.5  0.42]
 [0.   0.   0.   0.   0.   0.25 0.42 0.08 0.25 0.25 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.25 0.17 0.   0.33 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.5  0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  0. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
12 classifiers pre label
Counter({1.0: 35, 0.0: 17, -1.0: 15})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   1.67 1.   1.  ]
 [0.   0.   0.83 1.   0.5  1.5 ]
 [0.   0.   0.   1.67 1.33 1.17]
 [0.   0.   0.   0.   1.17 2.  ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.15 0.46 0.31 0.23 0.   0.23 0.15 0.   0.31 0.23 0.46 0.31]
 [0.   0.   0.38 0.46 0.23 0.15 0.23 0.31 0.15 0.38 0.08 0.31 0.31]
 [0.   0.   0.   0.38 0.46 0.46 0.23 0.46 0.46 0.23 0.31 0.08 0.23]
 [0.   0.   0.   0.   0.23 0.31 0.38 0.15 0.31 0.23 0.46 0.38 0.23]
 [0.   0.   0.   0.   0.   0.23 0.38 0.08 0.23 0.23 0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.23 0.15 0.   0.31 0.23 0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.46 0.15 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.38 0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.  1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
12 classifiers pre label
Counter({1.0: 35, 0.0: 17, -1.0: 15})
13 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   1.83 1.   1.  ]
 [0.   0.   0.83 1.17 0.5  1.5 ]
 [0.   0.   0.   1.83 1.33 1.17]
 [0.   0.   0.   0.   1.33 2.17]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.14 0.43 0.29 0.21 0.   0.21 0.14 0.   0.29 0.21 0.43 0.29 0.  ]
 [0.   0.   0.36 0.43 0.21 0.14 0.21 0.29 0.14 0.36 0.07 0.29 0.29 0.14]
 [0.   0.   0.   0.36 0.43 0.43 0.21 0.43 0.43 0.21 0.29 0.07 0.21 0.43]
 [0.   0.   0.   0.   0.21 0.29 0.36 0.14 0.29 0.21 0.43 0.36 0.21 0.29]
 [0.   0.   0.   0.   0.   0.21 0.36 0.07 0.21 0.21 0.29 0.36 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.21 0.14 0.   0.29 0.21 0.43 0.29 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.43 0.14 0.21 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.36 0.43 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.43 0.29 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.  1.  0.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
12 classifiers pre label
Counter({1.0: 35, 0.0: 17, -1.0: 15})
13 classifiers pre label
Counter({1.0: 67})
14 classifiers pre label
Counter({1.0: 56, 0.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   1.83 1.17 1.17]
 [0.   0.   0.83 1.17 0.67 1.67]
 [0.   0.   0.   1.83 1.5  1.33]
 [0.   0.   0.   0.   1.5  2.33]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.13 0.4  0.27 0.2  0.   0.2  0.13 0.   0.27 0.2  0.4  0.27 0.
  0.2 ]
 [0.   0.   0.33 0.4  0.2  0.13 0.2  0.27 0.13 0.33 0.07 0.27 0.27 0.13
  0.2 ]
 [0.   0.   0.   0.33 0.4  0.4  0.2  0.4  0.4  0.2  0.27 0.07 0.2  0.4
  0.2 ]
 [0.   0.   0.   0.   0.2  0.27 0.33 0.13 0.27 0.2  0.4  0.33 0.2  0.27
  0.33]
 [0.   0.   0.   0.   0.   0.2  0.33 0.07 0.2  0.2  0.27 0.33 0.33 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.2  0.13 0.   0.27 0.2  0.4  0.27 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.4  0.13 0.2  0.13 0.2
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.33 0.4  0.27 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.4  0.27 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.27 0.27
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.4
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.  1.  1.  1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.  1.  0.  1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
12 classifiers pre label
Counter({1.0: 35, 0.0: 17, -1.0: 15})
13 classifiers pre label
Counter({1.0: 67})
14 classifiers pre label
Counter({1.0: 56, 0.0: 11})
15 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   2.   1.17 1.17]
 [0.   0.   0.83 1.33 0.67 1.67]
 [0.   0.   0.   2.   1.5  1.33]
 [0.   0.   0.   0.   1.67 2.5 ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.12 0.38 0.25 0.19 0.   0.19 0.12 0.   0.25 0.19 0.38 0.25 0.
  0.19 0.  ]
 [0.   0.   0.31 0.38 0.19 0.12 0.19 0.25 0.12 0.31 0.06 0.25 0.25 0.12
  0.19 0.12]
 [0.   0.   0.   0.31 0.38 0.38 0.19 0.38 0.38 0.19 0.25 0.06 0.19 0.38
  0.19 0.38]
 [0.   0.   0.   0.   0.19 0.25 0.31 0.12 0.25 0.19 0.38 0.31 0.19 0.25
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.19 0.31 0.06 0.19 0.19 0.25 0.31 0.31 0.19
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.19 0.12 0.   0.25 0.19 0.38 0.25 0.
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.38 0.12 0.19 0.12 0.19
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.31 0.38 0.25 0.12
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.38 0.25 0.
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.25 0.25
  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.38
  0.19 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  0. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.  0.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.  1.  1.  1.  0.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.  1.  0.  1. -1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
12 classifiers pre label
Counter({1.0: 35, 0.0: 17, -1.0: 15})
13 classifiers pre label
Counter({1.0: 67})
14 classifiers pre label
Counter({1.0: 56, 0.0: 11})
15 classifiers pre label
Counter({1.0: 67})
16 classifiers pre label
Counter({0.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   2.17 1.33 1.33]
 [0.   0.   0.83 1.5  0.83 1.83]
 [0.   0.   0.   2.17 1.67 1.5 ]
 [0.   0.   0.   0.   1.67 2.67]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.12 0.35 0.24 0.18 0.   0.18 0.12 0.   0.24 0.18 0.35 0.24 0.
  0.18 0.   0.24]
 [0.   0.   0.29 0.35 0.18 0.12 0.18 0.24 0.12 0.29 0.06 0.24 0.24 0.12
  0.18 0.12 0.29]
 [0.   0.   0.   0.29 0.35 0.35 0.18 0.35 0.35 0.18 0.24 0.06 0.18 0.35
  0.18 0.35 0.18]
 [0.   0.   0.   0.   0.18 0.24 0.29 0.12 0.24 0.18 0.35 0.29 0.18 0.24
  0.29 0.24 0.18]
 [0.   0.   0.   0.   0.   0.18 0.29 0.06 0.18 0.18 0.24 0.29 0.29 0.18
  0.29 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.12 0.   0.24 0.18 0.35 0.24 0.
  0.18 0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.35 0.12 0.18 0.12 0.18
  0.   0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.29 0.35 0.24 0.12
  0.24 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.35 0.24 0.
  0.18 0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.24 0.24
  0.35 0.24 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.18
  0.12 0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.35
  0.18 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.12 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.  0.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.  1.  1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.  1.  0.  1. -1.  1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 53, -1.0: 14})
2 classifiers pre label
Counter({0.0: 58, 1.0: 7, -1.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 0.0: 19, 1.0: 14})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({1.0: 67})
6 classifiers pre label
Counter({1.0: 56, 0.0: 11})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({1.0: 67})
9 classifiers pre label
Counter({0.0: 47, -1.0: 20})
10 classifiers pre label
Counter({1.0: 53, -1.0: 14})
11 classifiers pre label
Counter({0.0: 44, -1.0: 16, 1.0: 7})
12 classifiers pre label
Counter({1.0: 35, 0.0: 17, -1.0: 15})
13 classifiers pre label
Counter({1.0: 67})
14 classifiers pre label
Counter({1.0: 56, 0.0: 11})
15 classifiers pre label
Counter({1.0: 67})
16 classifiers pre label
Counter({0.0: 47, -1.0: 20})
17 classifiers pre label
Counter({1.0: 55, -1.0: 12})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.83 1.   2.17 1.33 1.5 ]
 [0.   0.   1.   1.67 1.   1.83]
 [0.   0.   0.   2.17 1.67 1.67]
 [0.   0.   0.   0.   1.67 2.83]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.11 0.33 0.22 0.17 0.   0.17 0.11 0.   0.22 0.17 0.33 0.22 0.
  0.17 0.   0.22 0.17]
 [0.   0.   0.28 0.33 0.17 0.11 0.17 0.22 0.11 0.28 0.06 0.22 0.22 0.11
  0.17 0.11 0.28 0.17]
 [0.   0.   0.   0.28 0.33 0.33 0.17 0.33 0.33 0.17 0.22 0.06 0.17 0.33
  0.17 0.33 0.17 0.22]
 [0.   0.   0.   0.   0.17 0.22 0.28 0.11 0.22 0.17 0.33 0.28 0.17 0.22
  0.28 0.22 0.17 0.22]
 [0.   0.   0.   0.   0.   0.17 0.28 0.06 0.17 0.17 0.22 0.28 0.28 0.17
  0.28 0.17 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.17 0.11 0.   0.22 0.17 0.33 0.22 0.
  0.17 0.   0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.17 0.33 0.11 0.17 0.11 0.17
  0.   0.17 0.33 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.17 0.28 0.33 0.22 0.11
  0.22 0.11 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.17 0.33 0.22 0.
  0.17 0.   0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.22 0.22
  0.33 0.22 0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.17
  0.11 0.17 0.33 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33
  0.17 0.33 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.11 0.22 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.   0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.33 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})

**********      classifier acc  **************
[0.896, 0.985, 0.727, 0.978, 1.0, 0.896, 0.912, 1.0, 0.896, 0.762, 0.925, 0.846, 1.0, 0.896, 0.912, 0.896, 0.762, 0.925]
before cutting matrix
[[ 1.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.  0.  1.]
 [ 1.  1.  0. -1. -1.  1.  1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1.]
 [ 1. -1.  0.  1. -1.  1.  1.  1.  1.  0. -1. -1.  1.  1.  1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  0. -1. -1.  1.  0. -1.  1. -1.  1.  0. -1.  1.  0.  1. -1.  1.]
 [ 1.  1. -1.  0.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 165, -1.0: 10})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({-1.0: 55, 1.0: 10})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 48, 1.0: 29})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({-1.0: 48, 1.0: 29})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 165, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 165, -1.0: 10})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({-1.0: 55, 1.0: 10})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
positive and negative ratio
Counter({1.0: 153, -1.0: 48})
after cutting matrix
[[ 1.  0.  0.  1.  1.  0.]
 [ 1.  0. -1. -1. -1.  1.]
 [-1.  0.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1.]
 [ 1.  0. -1. -1. -1. -1.]
 [ 1. -1.  0.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 163, -1.0: 38})
Counter({1.0: 29, -1.0: 10})
Counter({-1.0: 93, 1.0: 38})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 105, -1.0: 36})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]


SVM classifier
Time: 2019-01-09 22:17:30
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1.  0.  0.  1.]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1.  0.  0. -1.  0. -1.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
None


============== iter  2 ================
current matrix is 
[ 0.  0. -1.  0.  0.  1.]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0. -1.  1.  1.  1.  1.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0.  0.]
 [ 0. -1.]
 [-1. -1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({-1.0: 29, 0.0: 19, 1.0: 19})
confusion matrix
[[17  0  0  1  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.17 0.17 0.17]
 [0.   0.   0.17 0.17 0.17 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1.]
 [ 0. -1.  0.]
 [-1. -1. -1.]
 [ 0.  1. -1.]
 [ 0.  1.  1.]
 [ 1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
Counter({1.0: 96, -1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 51, -1.0: 14, 1.0: 2})
1 classifiers pre label
Counter({-1.0: 29, 0.0: 19, 1.0: 19})
2 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.33 0.5  0.33 0.17 0.17]
 [0.   0.   0.33 0.33 0.33 0.5 ]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
Counter({1.0: 96, -1.0: 67})

**********      classifier acc  **************
[0.842, 0.978, 0.926]
before cutting matrix
[[ 0.  0.  1.]
 [ 0. -1.  0.]
 [-1. -1. -1.]
 [ 0.  1. -1.]
 [ 0.  1.  1.]
 [ 1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
Counter({1.0: 96, -1.0: 67})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
Counter({1.0: 96, -1.0: 67})
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
positive and negative ratio
Counter({1.0: 96, -1.0: 67})
after cutting matrix
[[ 0.  0.  1.]
 [ 0. -1.  0.]
 [-1. -1. -1.]
 [ 0.  1. -1.]
 [ 0.  1.  1.]
 [ 1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 38, 1.0: 10})
Counter({-1.0: 76, 1.0: 55})
Counter({1.0: 96, -1.0: 67})
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-09 22:17:31
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [19  0  0  3  0  0  0  0  0  0]
 [ 4  0  0 12  0  0  0  0  0  0]
 [15  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 17  0  0  0  0  0  0]
 [10  0  0  5  0  0  0  0  0  0]
 [17  0  0  3  0  0  0  0  0  0]
 [ 9  0  0 13  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [19  0  0  3  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  2  0  0]
 [14  0  0  2  0  0  0  1  0  0]
 [ 3  0  0 17  0  0  0  0  0  0]
 [10  0  0  5  0  0  0  0  0  0]
 [ 5  0  0  3  0  0  0 12  0  0]
 [ 9  0  0 13  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 1.  1.  0.]
 [ 1.  1.  1.]
 [-1.  1.  0.]
 [ 1.  1.  0.]
 [-1.  1.  0.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
confusion matrix
[[14  0  0  2  0  0  0  0  0  1]
 [25  0  0  1  0  0  0  0  0  0]
 [ 2  0 17  2  0  0  0  0  0  1]
 [ 1  0  1 11  0  0  0  2  0  1]
 [12  0  2  0  0  0  0  1  0  2]
 [ 2  0  1 16  0  0  0  0  0  1]
 [ 1  0  9  5  0  0  0  0  0  0]
 [ 5  0  0  2  0  0  0 12  0  1]
 [ 4  0  5 13  0  0  0  0  0  0]
 [ 0  0  0  9  0  0  0  0  0  4]]
row HD
[[0.  0.  0.1 0.1 0.  0.1 0.1 0.2 0.3 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 2.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  1.]
 [ 1.  1.  0.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  0.  1.]
 [ 1.  1.  0.  1.]
 [-1.  1.  0.  1.]
 [ 1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
confusion matrix
[[14  0  0  2  0  0  0  0  0  1]
 [25  0  0  1  0  0  0  0  0  0]
 [ 2  0 17  2  0  0  0  0  0  1]
 [ 1  0  1 11  0  0  0  2  0  1]
 [12  0  2  0  0  0  0  1  0  2]
 [ 2  0  1 16  0  0  0  0  0  1]
 [ 1  0  9  5  0  0  0  0  0  0]
 [ 6  0  0  2  0  0  0 11  0  1]
 [ 4  0  5 13  0  0  0  0  0  0]
 [ 0  0  0  9  0  0  0  0  0  4]]
row HD
[[0.  0.  0.1 0.1 0.  0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.75 1.25]
 [0.   0.   1.25 0.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  1. -1.]
 [ 1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.]
 [ 1.  1.  0.  1.  1.]
 [-1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
confusion matrix
[[10  4  0  2  0  0  0  0  0  1]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  0  1]
 [ 0  1  1 11  0  0  0  2  0  1]
 [ 0 12  2  0  0  0  0  1  0  2]
 [ 0  2  1 16  0  0  0  0  0  1]
 [ 0  1  9  5  0  0  0  0  0  0]
 [ 0  6  0  2  0  0  0 11  0  1]
 [ 2  2  5 13  0  0  0  0  0  0]
 [ 0  0  0  9  0  0  0  0  0  4]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.2 0.2 0.4 0.4 0.3]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.4 1.  1. ]
 [0.  0.  1.  0.2 0.6]
 [0.  0.  0.  1.2 1.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.]
 [ 1.  1.  0.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
confusion matrix
[[10  3  0  2  1  0  0  0  0  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  0 17  2  2  0  0  0  0  1]
 [ 0  0  1 11  1  0  0  2  0  1]
 [ 0  2  4  0 10  0  0  1  0  0]
 [ 0  2  0 16  0  0  1  0  0  1]
 [ 0  1  0  5  0  0  9  0  0  0]
 [ 0  4  0  2  2  0  0 11  0  1]
 [ 2  2  1 13  0  0  4  0  0  0]
 [ 0  0  1  9  0  0  0  0  0  3]]
row HD
[[0.  0.1 0.3 0.2 0.2 0.2 0.2 0.5 0.4 0.3]
 [0.  0.  0.2 0.1 0.1 0.1 0.1 0.4 0.3 0.2]
 [0.  0.  0.  0.3 0.1 0.3 0.1 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.2 0.  0.2 0.5 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.17 0.83 0.83 1.17]
 [0.   0.   0.83 0.17 0.5  0.5 ]
 [0.   0.   0.   1.   1.17 1.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
confusion matrix
[[10  3  0  2  1  0  0  0  0  1]
 [ 0 20  4  1  1  0  0  0  0  0]
 [ 0  0 19  2  0  0  0  0  0  1]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 2  0  5  0  9  0  0  1  0  0]
 [ 0  2  0 16  0  0  1  0  0  1]
 [ 0  1  0  5  0  0  9  0  0  0]
 [ 0  4  2  2  0  0  0 11  0  1]
 [ 2  2  1 13  0  0  4  0  0  0]
 [ 0  0  1  9  0  0  0  0  0  3]]
row HD
[[0.  0.2 0.4 0.3 0.2 0.3 0.3 0.6 0.5 0.4]
 [0.  0.  0.2 0.1 0.2 0.1 0.1 0.4 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.3 0.1 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.  0.2 0.5 0.2 0.1]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 1.   0.71 0.71 1.   0.86]
 [0.   0.   0.71 0.14 0.43 0.43 0.57]
 [0.   0.   0.   0.86 1.   1.   1.  ]
 [0.   0.   0.   0.   0.29 0.29 0.43]
 [0.   0.   0.   0.   0.   0.57 0.14]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
confusion matrix
[[10  0  0  0  1  0  3  0  2  1]
 [ 0 20  3  1  1  0  1  0  0  0]
 [ 0  1 18  1  0  0  0  0  1  1]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 2  0  5  0  9  0  0  1  0  0]
 [ 0  0  0 16  0  0  3  0  0  1]
 [ 0  0  0  2  0  0 10  0  3  0]
 [ 0  3  2  2  0  0  1 11  0  1]
 [ 2  0  1  5  0  0  6  0  8  0]
 [ 0  0  1  9  0  0  0  0  0  3]]
row HD
[[0.  0.3 0.4 0.3 0.2 0.3 0.3 0.6 0.6 0.4]
 [0.  0.  0.3 0.2 0.3 0.2 0.2 0.5 0.3 0.3]
 [0.  0.  0.  0.3 0.2 0.3 0.1 0.3 0.5 0.2]
 [0.  0.  0.  0.  0.3 0.  0.2 0.5 0.3 0.1]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.88 0.62 0.62 0.88 0.75 0.5 ]
 [0.   0.   0.62 0.12 0.38 0.38 0.5  0.25]
 [0.   0.   0.   0.75 0.88 0.88 0.88 0.75]
 [0.   0.   0.   0.   0.25 0.25 0.38 0.38]
 [0.   0.   0.   0.   0.   0.5  0.12 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
confusion matrix
[[10  0  0  3  1  0  0  0  2  1]
 [ 0 20  3  1  1  0  1  0  0  0]
 [ 0  1 18  1  0  0  0  0  1  1]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  3  0 11  0  0  1  0  2]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 0  0  0  2  0  0 10  0  3  0]
 [ 0  3  1  3  0  0  0 12  0  1]
 [ 2  0  1  5  0  0  6  0  8  0]
 [ 0  0  0  9  0  0  0  0  0  4]]
row HD
[[0.  0.4 0.5 0.3 0.3 0.3 0.4 0.6 0.7 0.4]
 [0.  0.  0.3 0.3 0.3 0.3 0.2 0.6 0.3 0.4]
 [0.  0.  0.  0.4 0.2 0.4 0.1 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.  0.3 0.5 0.4 0.1]
 [0.  0.  0.  0.  0.  0.4 0.3 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.78 0.56 0.56 0.78 0.67 0.44 0.33]
 [0.   0.   0.56 0.11 0.33 0.33 0.44 0.22 0.56]
 [0.   0.   0.   0.67 0.78 0.78 0.78 0.67 0.78]
 [0.   0.   0.   0.   0.22 0.22 0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.44 0.11 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.56 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  0 19  1  0  0  0  0  1  1]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  1  1 12  0  0  1  0  2]
 [ 1  0  0 17  0  0  1  0  0  1]
 [ 0  0  0  2  0  0 10  0  3  0]
 [ 1  3  1  2  0  0  0 12  0  1]
 [ 2  0  2  5  0  0  5  0  8  0]
 [ 0  0  0  9  0  0  0  0  0  4]]
row HD
[[0.  0.5 0.5 0.4 0.4 0.4 0.5 0.6 0.8 0.5]
 [0.  0.  0.4 0.3 0.3 0.3 0.2 0.7 0.3 0.4]
 [0.  0.  0.  0.5 0.3 0.5 0.2 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.4 0.  0.3 0.6 0.4 0.1]
 [0.  0.  0.  0.  0.  0.4 0.3 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.6 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.7 0.5 0.5 0.7 0.6 0.4 0.3 0.7]
 [0.  0.  0.5 0.1 0.3 0.3 0.4 0.2 0.5 0.3]
 [0.  0.  0.  0.6 0.7 0.7 0.7 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.4 0.1 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  0 19  0  0  0  1  0  1  1]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  1  0 13  0  0  1  0  2]
 [ 0  0  0 18  0  0  1  0  0  1]
 [ 0  0  0  2  0  0 10  0  3  0]
 [ 1  3  1  2  0  0  0 12  0  1]
 [ 2  0  2  4  0  0  6  0  8  0]
 [ 0  0  0  9  0  0  0  0  0  4]]
row HD
[[0.  0.5 0.5 0.5 0.4 0.5 0.5 0.6 0.8 0.6]
 [0.  0.  0.4 0.4 0.3 0.4 0.2 0.7 0.3 0.5]
 [0.  0.  0.  0.6 0.3 0.6 0.2 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.5 0.  0.4 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.5 0.3 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.64 0.45 0.45 0.64 0.55 0.36 0.27 0.64 0.09]
 [0.   0.   0.45 0.09 0.27 0.27 0.36 0.18 0.45 0.27 0.45]
 [0.   0.   0.   0.55 0.64 0.64 0.64 0.55 0.64 0.64 0.73]
 [0.   0.   0.   0.   0.18 0.18 0.27 0.27 0.36 0.18 0.36]
 [0.   0.   0.   0.   0.   0.36 0.09 0.27 0.36 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.45 0.55 0.18 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.45 0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  0 19  1  0  0  1  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  1  0 13  0  0  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  0  2  0  0  4  6  0  8  0]
 [ 0  0  0  2  0  7  0  0  0  4]]
row HD
[[0.  0.5 0.5 0.6 0.4 0.5 0.5 0.6 0.8 0.6]
 [0.  0.  0.4 0.5 0.3 0.4 0.2 0.7 0.3 0.5]
 [0.  0.  0.  0.7 0.3 0.6 0.2 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.1 0.5 0.8 0.6 0.2]
 [0.  0.  0.  0.  0.  0.5 0.3 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.58 0.42 0.42 0.58 0.5  0.33 0.25 0.58 0.08 0.25]
 [0.   0.   0.42 0.08 0.25 0.25 0.33 0.17 0.42 0.25 0.42 0.25]
 [0.   0.   0.   0.5  0.58 0.58 0.58 0.5  0.58 0.58 0.67 0.58]
 [0.   0.   0.   0.   0.17 0.17 0.25 0.25 0.33 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.33 0.08 0.25 0.33 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.25 0.42 0.5  0.17 0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.42 0.25 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.42 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
confusion matrix
[[12  0  1  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  0 19  1  0  0  1  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  2  0 12  0  0  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  0  2  0  0  4  6  0  8  0]
 [ 0  0  0  3  0  6  0  0  0  4]]
row HD
[[0.  0.6 0.6 0.6 0.4 0.6 0.6 0.7 0.9 0.7]
 [0.  0.  0.4 0.6 0.4 0.4 0.2 0.7 0.3 0.5]
 [0.  0.  0.  0.8 0.4 0.6 0.2 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.2 0.6 0.9 0.7 0.3]
 [0.  0.  0.  0.  0.  0.6 0.4 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.54 0.38 0.38 0.54 0.46 0.31 0.23 0.54 0.08 0.23 0.38]
 [0.   0.   0.38 0.08 0.23 0.23 0.31 0.15 0.38 0.23 0.38 0.23 0.38]
 [0.   0.   0.   0.46 0.54 0.54 0.54 0.46 0.54 0.54 0.62 0.54 0.54]
 [0.   0.   0.   0.   0.15 0.15 0.23 0.23 0.31 0.15 0.31 0.15 0.31]
 [0.   0.   0.   0.   0.   0.31 0.08 0.23 0.31 0.15 0.31 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.23 0.38 0.46 0.15 0.46 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.23 0.38 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.38 0.38 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  1  0  0  1  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  0  0 12  0  2  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  0  1  0  0  4  7  0  8  0]
 [ 0  0  0  3  0  6  0  0  0  4]]
row HD
[[0.  0.6 0.7 0.6 0.4 0.6 0.6 0.7 0.9 0.7]
 [0.  0.  0.5 0.6 0.4 0.4 0.2 0.7 0.3 0.5]
 [0.  0.  0.  0.9 0.5 0.7 0.3 0.5 0.7 0.6]
 [0.  0.  0.  0.  0.6 0.2 0.6 0.9 0.7 0.3]
 [0.  0.  0.  0.  0.  0.6 0.4 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.5  0.36 0.36 0.5  0.43 0.29 0.21 0.5  0.07 0.21 0.36 0.36]
 [0.   0.   0.36 0.07 0.21 0.21 0.29 0.14 0.36 0.21 0.36 0.21 0.36 0.21]
 [0.   0.   0.   0.43 0.5  0.5  0.5  0.43 0.5  0.5  0.57 0.5  0.5  0.57]
 [0.   0.   0.   0.   0.14 0.14 0.21 0.21 0.29 0.14 0.29 0.14 0.29 0.14]
 [0.   0.   0.   0.   0.   0.29 0.07 0.21 0.29 0.14 0.29 0.14 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.21 0.36 0.43 0.14 0.43 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.21 0.36 0.21 0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.36 0.36 0.21 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.29 0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  0  0 12  0  2  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  1  1  0  4  6  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.6 0.8 0.7 0.4 0.6 0.6 0.7 0.9 0.7]
 [0.  0.  0.6 0.7 0.4 0.4 0.2 0.7 0.3 0.5]
 [0.  0.  0.  0.9 0.6 0.8 0.4 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.7 0.3 0.7 1.  0.8 0.4]
 [0.  0.  0.  0.  0.  0.6 0.4 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.47 0.33 0.33 0.47 0.4  0.27 0.2  0.47 0.07 0.2  0.33 0.33
  0.27]
 [0.   0.   0.33 0.07 0.2  0.2  0.27 0.13 0.33 0.2  0.33 0.2  0.33 0.2
  0.27]
 [0.   0.   0.   0.4  0.47 0.47 0.47 0.4  0.47 0.47 0.53 0.47 0.47 0.53
  0.53]
 [0.   0.   0.   0.   0.13 0.13 0.2  0.2  0.27 0.13 0.27 0.13 0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.27 0.07 0.2  0.27 0.13 0.27 0.13 0.13 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.2  0.33 0.4  0.13 0.4  0.27 0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.2  0.33 0.2  0.07 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.33 0.33 0.2  0.33 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.27 0.27 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  0  0 12  0  1  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  2  1  1  0  4  4  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.7 0.8 0.7 0.4 0.7 0.6 0.8 1.  0.8]
 [0.  0.  0.7 0.8 0.5 0.4 0.3 0.7 0.3 0.5]
 [0.  0.  0.  0.9 0.6 0.9 0.4 0.7 0.9 0.8]
 [0.  0.  0.  0.  0.7 0.4 0.7 1.1 0.9 0.5]
 [0.  0.  0.  0.  0.  0.7 0.4 0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.44 0.31 0.31 0.44 0.38 0.25 0.19 0.44 0.06 0.19 0.31 0.31
  0.25 0.44]
 [0.   0.   0.31 0.06 0.19 0.19 0.25 0.12 0.31 0.19 0.31 0.19 0.31 0.19
  0.25 0.44]
 [0.   0.   0.   0.38 0.44 0.44 0.44 0.38 0.44 0.44 0.5  0.44 0.44 0.5
  0.5  0.56]
 [0.   0.   0.   0.   0.12 0.12 0.19 0.19 0.25 0.12 0.25 0.12 0.25 0.12
  0.19 0.38]
 [0.   0.   0.   0.   0.   0.25 0.06 0.19 0.25 0.12 0.25 0.12 0.12 0.12
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.19 0.31 0.38 0.12 0.38 0.25 0.25 0.12
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.19 0.31 0.19 0.06 0.19
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.31 0.31 0.19 0.31 0.19
  0.25 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.25 0.25 0.38
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.25 0.12
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.25
  0.19 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12
  0.06 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  1  0  0 11  0  2  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  2  1  1  0  4  4  0  8  0]
 [ 0  0  0  3  0  6  0  0  0  4]]
row HD
[[0.  0.7 0.8 0.7 0.5 0.7 0.6 0.8 1.  0.8]
 [0.  0.  0.7 0.8 0.6 0.4 0.3 0.7 0.3 0.5]
 [0.  0.  0.  0.9 0.7 0.9 0.4 0.7 0.9 0.8]
 [0.  0.  0.  0.  0.8 0.4 0.7 1.1 0.9 0.5]
 [0.  0.  0.  0.  0.  0.8 0.5 0.9 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.41 0.29 0.29 0.41 0.35 0.24 0.18 0.41 0.06 0.18 0.29 0.29
  0.24 0.41 0.29]
 [0.   0.   0.29 0.06 0.18 0.18 0.24 0.12 0.29 0.18 0.29 0.18 0.29 0.18
  0.24 0.41 0.18]
 [0.   0.   0.   0.35 0.41 0.41 0.41 0.35 0.41 0.41 0.47 0.41 0.41 0.47
  0.47 0.53 0.41]
 [0.   0.   0.   0.   0.12 0.12 0.18 0.18 0.24 0.12 0.24 0.12 0.24 0.12
  0.18 0.35 0.12]
 [0.   0.   0.   0.   0.   0.24 0.06 0.18 0.24 0.12 0.24 0.12 0.12 0.12
  0.18 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.18 0.29 0.35 0.12 0.35 0.24 0.24 0.12
  0.18 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.18 0.29 0.18 0.06 0.18
  0.24 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.29 0.29 0.18 0.29 0.18
  0.24 0.41 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.24 0.24 0.35
  0.29 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.24 0.12
  0.18 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.24
  0.18 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12
  0.06 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  0  0 11  1  2  1  0  2]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  2 10  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  2  1  1  0  4  4  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.8 0.9 0.8 0.5 0.8 0.7 0.9 1.1 0.9]
 [0.  0.  0.7 0.9 0.7 0.5 0.3 0.7 0.3 0.6]
 [0.  0.  0.  1.  0.8 1.  0.4 0.7 0.9 0.9]
 [0.  0.  0.  0.  0.9 0.4 0.8 1.2 1.  0.5]
 [0.  0.  0.  0.  0.  0.9 0.6 1.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.6 0.8 0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.39 0.28 0.28 0.39 0.33 0.22 0.17 0.39 0.06 0.17 0.28 0.28
  0.22 0.39 0.28 0.56]
 [0.   0.   0.28 0.06 0.17 0.17 0.22 0.11 0.28 0.17 0.28 0.17 0.28 0.17
  0.22 0.39 0.17 0.39]
 [0.   0.   0.   0.33 0.39 0.39 0.39 0.33 0.39 0.39 0.44 0.39 0.39 0.44
  0.44 0.5  0.39 0.44]
 [0.   0.   0.   0.   0.11 0.11 0.17 0.17 0.22 0.11 0.22 0.11 0.22 0.11
  0.17 0.33 0.11 0.39]
 [0.   0.   0.   0.   0.   0.22 0.06 0.17 0.22 0.11 0.22 0.11 0.11 0.11
  0.17 0.22 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.17 0.28 0.33 0.11 0.33 0.22 0.22 0.11
  0.17 0.22 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.28 0.17 0.28 0.17 0.06 0.17
  0.22 0.17 0.06 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.28 0.28 0.17 0.28 0.17
  0.22 0.39 0.17 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.11 0.22 0.22 0.33
  0.28 0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.22 0.11
  0.17 0.22 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.22 0.22
  0.17 0.33 0.22 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.11
  0.06 0.22 0.11 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.17 0.11 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.22 0.11 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.17 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
18 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  0  0 11  1  1  1  0  3]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 2  2  1  1  0  4  4  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.9 1.  0.9 0.6 0.8 0.8 1.  1.2 0.9]
 [0.  0.  0.7 0.9 0.7 0.6 0.3 0.7 0.3 0.7]
 [0.  0.  0.  1.  0.8 1.1 0.4 0.7 0.9 1. ]
 [0.  0.  0.  0.  0.9 0.5 0.8 1.2 1.  0.6]
 [0.  0.  0.  0.  0.  1.  0.6 1.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.7 0.9 0.7 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.37 0.26 0.26 0.37 0.32 0.21 0.16 0.37 0.05 0.16 0.26 0.26
  0.21 0.37 0.26 0.53 0.37]
 [0.   0.   0.26 0.05 0.16 0.16 0.21 0.11 0.26 0.16 0.26 0.16 0.26 0.16
  0.21 0.37 0.16 0.37 0.26]
 [0.   0.   0.   0.32 0.37 0.37 0.37 0.32 0.37 0.37 0.42 0.37 0.37 0.42
  0.42 0.47 0.37 0.42 0.37]
 [0.   0.   0.   0.   0.11 0.11 0.16 0.16 0.21 0.11 0.21 0.11 0.21 0.11
  0.16 0.32 0.11 0.37 0.32]
 [0.   0.   0.   0.   0.   0.21 0.05 0.16 0.21 0.11 0.21 0.11 0.11 0.11
  0.16 0.21 0.11 0.32 0.42]
 [0.   0.   0.   0.   0.   0.   0.16 0.26 0.32 0.11 0.32 0.21 0.21 0.11
  0.16 0.21 0.11 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.26 0.16 0.26 0.16 0.05 0.16
  0.21 0.16 0.05 0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.26 0.26 0.16 0.26 0.16
  0.21 0.37 0.16 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.11 0.21 0.21 0.32
  0.26 0.32 0.32 0.47 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.21 0.21 0.11
  0.16 0.21 0.21 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.21 0.21
  0.16 0.32 0.21 0.53 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.11
  0.05 0.21 0.11 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21
  0.16 0.11 0.11 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.05 0.21 0.11 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.16 0.16 0.42 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  20 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1. -1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
18 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
19 classifiers pre label
Counter({1.0: 168, -1.0: 20})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 0  0  0  0 11  1  1  1  0  3]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 1  3  0  2  0  1  1 12  0  0]
 [ 2  2  1  1  0  4  4  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.9 1.1 0.9 0.6 0.8 0.8 1.  1.2 0.9]
 [0.  0.  0.8 0.9 0.7 0.6 0.3 0.7 0.3 0.7]
 [0.  0.  0.  1.1 0.9 1.2 0.5 0.8 1.  1.1]
 [0.  0.  0.  0.  0.9 0.5 0.8 1.2 1.  0.6]
 [0.  0.  0.  0.  0.  1.  0.6 1.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.7 0.9 0.7 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.35 0.25 0.25 0.35 0.3  0.2  0.15 0.35 0.05 0.15 0.25 0.25
  0.2  0.35 0.25 0.5  0.35 0.25]
 [0.   0.   0.25 0.05 0.15 0.15 0.2  0.1  0.25 0.15 0.25 0.15 0.25 0.15
  0.2  0.35 0.15 0.35 0.25 0.15]
 [0.   0.   0.   0.3  0.35 0.35 0.35 0.3  0.35 0.35 0.4  0.35 0.35 0.4
  0.4  0.45 0.35 0.4  0.35 0.4 ]
 [0.   0.   0.   0.   0.1  0.1  0.15 0.15 0.2  0.1  0.2  0.1  0.2  0.1
  0.15 0.3  0.1  0.35 0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.2  0.05 0.15 0.2  0.1  0.2  0.1  0.1  0.1
  0.15 0.2  0.1  0.3  0.4  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.15 0.25 0.3  0.1  0.3  0.2  0.2  0.1
  0.15 0.2  0.1  0.3  0.2  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.25 0.15 0.25 0.15 0.05 0.15
  0.2  0.15 0.05 0.25 0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.25 0.25 0.15 0.25 0.15
  0.2  0.35 0.15 0.35 0.25 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.1  0.2  0.2  0.3
  0.25 0.3  0.3  0.45 0.4  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.2  0.2  0.1
  0.15 0.2  0.2  0.3  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.2  0.2
  0.15 0.3  0.2  0.5  0.4  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.1
  0.05 0.2  0.1  0.4  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.15 0.1  0.1  0.3  0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.05 0.2  0.1  0.35 0.3  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.15 0.15 0.4  0.25 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.2  0.3  0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.  1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
18 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
19 classifiers pre label
Counter({1.0: 168, -1.0: 20})
20 classifiers pre label
Counter({1.0: 148, -1.0: 40})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  0  0 11  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 1  3  0  2  0  1  1 12  0  0]
 [ 2  2  1  1  0  1  4  0  8  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.9 1.1 0.9 0.6 0.9 0.8 1.1 1.2 0.9]
 [0.  0.  0.8 0.9 0.7 0.7 0.3 0.8 0.3 0.7]
 [0.  0.  0.  1.1 0.9 1.3 0.5 0.9 1.  1.1]
 [0.  0.  0.  0.  0.9 0.6 0.8 1.3 1.  0.6]
 [0.  0.  0.  0.  0.  1.1 0.6 1.1 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.33 0.24 0.24 0.33 0.29 0.19 0.14 0.33 0.05 0.14 0.24 0.24
  0.19 0.33 0.24 0.48 0.33 0.24 0.19]
 [0.   0.   0.24 0.05 0.14 0.14 0.19 0.1  0.24 0.14 0.24 0.14 0.24 0.14
  0.19 0.33 0.14 0.33 0.24 0.14 0.1 ]
 [0.   0.   0.   0.29 0.33 0.33 0.33 0.29 0.33 0.33 0.38 0.33 0.33 0.38
  0.38 0.43 0.33 0.38 0.33 0.38 0.29]
 [0.   0.   0.   0.   0.1  0.1  0.14 0.14 0.19 0.1  0.19 0.1  0.19 0.1
  0.14 0.29 0.1  0.33 0.29 0.1  0.05]
 [0.   0.   0.   0.   0.   0.19 0.05 0.14 0.19 0.1  0.19 0.1  0.1  0.1
  0.14 0.19 0.1  0.29 0.38 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.14 0.24 0.29 0.1  0.29 0.19 0.19 0.1
  0.14 0.19 0.1  0.29 0.19 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.24 0.14 0.24 0.14 0.05 0.14
  0.19 0.14 0.05 0.24 0.33 0.14 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.24 0.24 0.14 0.24 0.14
  0.19 0.33 0.14 0.33 0.24 0.14 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.1  0.19 0.19 0.29
  0.24 0.29 0.29 0.43 0.38 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.19 0.19 0.1
  0.14 0.19 0.19 0.29 0.29 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.19 0.19
  0.14 0.29 0.19 0.48 0.38 0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.1
  0.05 0.19 0.1  0.38 0.29 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.14 0.1  0.1  0.29 0.29 0.19 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.05 0.19 0.1  0.33 0.29 0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.14 0.14 0.38 0.24 0.05 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.19 0.29 0.19 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.29 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.  1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.  1.  1.  0.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
18 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
19 classifiers pre label
Counter({1.0: 168, -1.0: 20})
20 classifiers pre label
Counter({1.0: 148, -1.0: 40})
21 classifiers pre label
Counter({1.0: 128, 0.0: 46, -1.0: 14})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  0  0 11  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 1  3  0  2  0  1  1 12  0  0]
 [ 2  2  1  1  0  1  4  0  8  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.9 1.1 1.  0.6 1.  0.8 1.1 1.3 0.9]
 [0.  0.  0.8 1.  0.7 0.8 0.3 0.8 0.4 0.7]
 [0.  0.  0.  1.2 0.9 1.4 0.5 0.9 1.1 1.1]
 [0.  0.  0.  0.  1.  0.6 0.9 1.4 1.1 0.7]
 [0.  0.  0.  0.  0.  1.2 0.6 1.1 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.9 1.  0.9 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.32 0.23 0.23 0.32 0.27 0.18 0.14 0.32 0.05 0.14 0.23 0.23
  0.18 0.32 0.23 0.45 0.32 0.23 0.18 0.14]
 [0.   0.   0.23 0.05 0.14 0.14 0.18 0.09 0.23 0.14 0.23 0.14 0.23 0.14
  0.18 0.32 0.14 0.32 0.23 0.14 0.09 0.14]
 [0.   0.   0.   0.27 0.32 0.32 0.32 0.27 0.32 0.32 0.36 0.32 0.32 0.36
  0.36 0.41 0.32 0.36 0.32 0.36 0.27 0.18]
 [0.   0.   0.   0.   0.09 0.09 0.14 0.14 0.18 0.09 0.18 0.09 0.18 0.09
  0.14 0.27 0.09 0.32 0.27 0.09 0.05 0.18]
 [0.   0.   0.   0.   0.   0.18 0.05 0.14 0.18 0.09 0.18 0.09 0.09 0.09
  0.14 0.18 0.09 0.27 0.36 0.09 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.14 0.23 0.27 0.09 0.27 0.18 0.18 0.09
  0.14 0.18 0.09 0.27 0.18 0.09 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.23 0.14 0.23 0.14 0.05 0.14
  0.18 0.14 0.05 0.23 0.32 0.14 0.18 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.23 0.23 0.14 0.23 0.14
  0.18 0.32 0.14 0.32 0.23 0.14 0.18 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.09 0.18 0.18 0.27
  0.23 0.27 0.27 0.41 0.36 0.27 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.18 0.09
  0.14 0.18 0.18 0.27 0.27 0.09 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.18 0.18
  0.14 0.27 0.18 0.45 0.36 0.18 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.09
  0.05 0.18 0.09 0.36 0.27 0.09 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.14 0.09 0.09 0.27 0.27 0.18 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.05 0.18 0.09 0.32 0.27 0.   0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.14 0.14 0.36 0.23 0.05 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18 0.27 0.18 0.18 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.27 0.27 0.09 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32 0.32 0.36 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.27 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  23 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.  1.  1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1. -1.  1.  1.  0.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.  1.  1.  0. -1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.  1.  1.  1.  0.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
18 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
19 classifiers pre label
Counter({1.0: 168, -1.0: 20})
20 classifiers pre label
Counter({1.0: 148, -1.0: 40})
21 classifiers pre label
Counter({1.0: 128, 0.0: 46, -1.0: 14})
22 classifiers pre label
Counter({1.0: 92, -1.0: 60, 0.0: 36})
confusion matrix
[[11  0  0  0  0  1  2  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  0  0 11  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 0  3  0  2  0  1  2 12  0  0]
 [ 2  2  1  1  0  1  4  0  8  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.9 1.2 1.1 0.6 1.  0.9 1.2 1.4 1. ]
 [0.  0.  0.9 1.1 0.7 0.8 0.4 0.9 0.5 0.8]
 [0.  0.  0.  1.3 1.  1.5 0.5 1.  1.2 1.1]
 [0.  0.  0.  0.  1.1 0.7 1.  1.4 1.1 0.8]
 [0.  0.  0.  0.  0.  1.2 0.7 1.2 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  1.  1.1 1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.3  0.22 0.22 0.3  0.26 0.17 0.13 0.3  0.04 0.13 0.22 0.22
  0.17 0.3  0.22 0.43 0.3  0.22 0.17 0.13 0.22]
 [0.   0.   0.22 0.04 0.13 0.13 0.17 0.09 0.22 0.13 0.22 0.13 0.22 0.13
  0.17 0.3  0.13 0.3  0.22 0.13 0.09 0.13 0.17]
 [0.   0.   0.   0.26 0.3  0.3  0.3  0.26 0.3  0.3  0.35 0.3  0.3  0.35
  0.35 0.39 0.3  0.35 0.3  0.35 0.26 0.17 0.35]
 [0.   0.   0.   0.   0.09 0.09 0.13 0.13 0.17 0.09 0.17 0.09 0.17 0.09
  0.13 0.26 0.09 0.3  0.26 0.09 0.04 0.17 0.22]
 [0.   0.   0.   0.   0.   0.17 0.04 0.13 0.17 0.09 0.17 0.09 0.09 0.09
  0.13 0.17 0.09 0.26 0.35 0.09 0.13 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.13 0.22 0.26 0.09 0.26 0.17 0.17 0.09
  0.13 0.17 0.09 0.26 0.17 0.09 0.13 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.22 0.13 0.22 0.13 0.04 0.13
  0.17 0.13 0.04 0.22 0.3  0.13 0.17 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.22 0.22 0.13 0.22 0.13
  0.17 0.3  0.13 0.3  0.22 0.13 0.17 0.13 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.09 0.17 0.17 0.26
  0.22 0.26 0.26 0.39 0.35 0.26 0.13 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.17 0.17 0.09
  0.13 0.17 0.17 0.26 0.26 0.09 0.13 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.17 0.17
  0.13 0.26 0.17 0.43 0.35 0.17 0.13 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.09
  0.04 0.17 0.09 0.35 0.26 0.09 0.13 0.13 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.13 0.09 0.09 0.26 0.26 0.17 0.22 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.04 0.17 0.09 0.3  0.26 0.   0.13 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.13 0.13 0.35 0.22 0.04 0.17 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.26 0.17 0.17 0.3  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.26 0.09 0.13 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.3  0.35 0.39 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.26 0.3  0.3  0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.13 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  0. -1.  1.  1.  0. -1. -1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1. -1.  1.  1.  0.  0.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.  1.  1.  0. -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.  1.  1.  1.  0.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 116, -1.0: 72})
1 classifiers pre label
Counter({1.0: 173, -1.0: 15})
2 classifiers pre label
Counter({0.0: 110, 1.0: 46, -1.0: 32})
3 classifiers pre label
Counter({1.0: 174, -1.0: 14})
4 classifiers pre label
Counter({1.0: 176, -1.0: 12})
5 classifiers pre label
Counter({1.0: 129, -1.0: 59})
6 classifiers pre label
Counter({1.0: 160, -1.0: 28})
7 classifiers pre label
Counter({1.0: 150, -1.0: 38})
8 classifiers pre label
Counter({1.0: 96, -1.0: 92})
9 classifiers pre label
Counter({1.0: 132, -1.0: 56})
10 classifiers pre label
Counter({1.0: 129, -1.0: 59})
11 classifiers pre label
Counter({1.0: 171, -1.0: 17})
12 classifiers pre label
Counter({1.0: 138, -1.0: 50})
13 classifiers pre label
Counter({1.0: 168, -1.0: 20})
14 classifiers pre label
Counter({1.0: 151, -1.0: 37})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({1.0: 178, -1.0: 10})
17 classifiers pre label
Counter({0.0: 99, 1.0: 57, -1.0: 32})
18 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
19 classifiers pre label
Counter({1.0: 168, -1.0: 20})
20 classifiers pre label
Counter({1.0: 148, -1.0: 40})
21 classifiers pre label
Counter({1.0: 128, 0.0: 46, -1.0: 14})
22 classifiers pre label
Counter({1.0: 92, -1.0: 60, 0.0: 36})
23 classifiers pre label
Counter({1.0: 147, 0.0: 26, -1.0: 15})
confusion matrix
[[11  0  0  0  0  1  2  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  0  0 11  1  1  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 0  3  0  2  0  1  1 13  0  0]
 [ 2  2  1  1  0  1  4  0  8  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  0.9 1.3 1.1 0.6 1.  0.9 1.3 1.4 1. ]
 [0.  0.  1.  1.1 0.7 0.8 0.4 1.  0.5 0.8]
 [0.  0.  0.  1.4 1.1 1.6 0.6 1.1 1.3 1.2]
 [0.  0.  0.  0.  1.1 0.7 1.  1.5 1.1 0.8]
 [0.  0.  0.  0.  0.  1.2 0.7 1.3 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  1.  1.2 1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.29 0.21 0.21 0.29 0.25 0.17 0.12 0.29 0.04 0.12 0.21 0.21
  0.17 0.29 0.21 0.42 0.29 0.21 0.17 0.12 0.21 0.25]
 [0.   0.   0.21 0.04 0.12 0.12 0.17 0.08 0.21 0.12 0.21 0.12 0.21 0.12
  0.17 0.29 0.12 0.29 0.21 0.12 0.08 0.12 0.17 0.08]
 [0.   0.   0.   0.25 0.29 0.29 0.29 0.25 0.29 0.29 0.33 0.29 0.29 0.33
  0.33 0.38 0.29 0.33 0.29 0.33 0.25 0.17 0.33 0.29]
 [0.   0.   0.   0.   0.08 0.08 0.12 0.12 0.17 0.08 0.17 0.08 0.17 0.08
  0.12 0.25 0.08 0.29 0.25 0.08 0.04 0.17 0.21 0.04]
 [0.   0.   0.   0.   0.   0.17 0.04 0.12 0.17 0.08 0.17 0.08 0.08 0.08
  0.12 0.17 0.08 0.25 0.33 0.08 0.12 0.17 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.12 0.21 0.25 0.08 0.25 0.17 0.17 0.08
  0.12 0.17 0.08 0.25 0.17 0.08 0.12 0.25 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.21 0.12 0.21 0.12 0.04 0.12
  0.17 0.12 0.04 0.21 0.29 0.12 0.17 0.21 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.21 0.12 0.21 0.12
  0.17 0.29 0.12 0.29 0.21 0.12 0.17 0.12 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.08 0.17 0.17 0.25
  0.21 0.25 0.25 0.38 0.33 0.25 0.12 0.25 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.17 0.08
  0.12 0.17 0.17 0.25 0.25 0.08 0.12 0.25 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.17
  0.12 0.25 0.17 0.42 0.33 0.17 0.12 0.17 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08
  0.04 0.17 0.08 0.33 0.25 0.08 0.12 0.12 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.12 0.08 0.08 0.25 0.25 0.17 0.21 0.21 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.04 0.17 0.08 0.29 0.25 0.   0.12 0.17 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.12 0.33 0.21 0.04 0.17 0.17 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.25 0.17 0.17 0.29 0.29 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.25 0.08 0.12 0.17 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.29 0.33 0.38 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25 0.29 0.29 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.12 0.17 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: None, 8: True, 9: None}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})

**********      classifier acc  **************
[0.824, 0.824, 0.576, 0.936, 0.952, 0.872, 0.915, 0.84, 0.819, 0.878, 0.894, 0.941, 0.83, 0.957, 0.931, 0.798, 0.952, 0.759, 0.872, 0.957, 0.883, 0.776, 0.783, 0.898]
before cutting matrix
[[ 1.  1.  0.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [ 1.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  0.
  -1. -1.  1.  1.  0.  0.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.
  -1.  1.  1.  0. -1.  1.]
 [ 1.  1.  0.  1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.
  -1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.
  -1.  1.  1.  1.  0.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
  -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
positive and negative ratio
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 448, -1.0: 114})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 451, -1.0: 111})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 451, -1.0: 111})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({-1.0: 285, 1.0: 277})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 383, -1.0: 179})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({-1.0: 282, 1.0: 280})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 172, -1.0: 114})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 172, -1.0: 114})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 391, -1.0: 52})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 391, -1.0: 52})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 443, -1.0: 62})
positive and negative ratio
Counter({1.0: 227, -1.0: 179})
after cutting matrix
[[ 0.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  0.  0.]
 [ 0.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1.  1.]
 [ 0.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  0.  1.]
 [-1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 156, -1.0: 114})
Counter({1.0: 500, -1.0: 62})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 448, -1.0: 114})
Counter({1.0: 392, -1.0: 170})
Counter({1.0: 390, -1.0: 172})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 440, -1.0: 122})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 499, -1.0: 63})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 227, -1.0: 179})
Counter({1.0: 443, -1.0: 62})
cutting matrix's confusion matrix
[[11  0  0  0  0  1  2  0  2  1]
 [ 0 20  0  1  4  0  1  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  0  0  0 11  1  1  1  1  2]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  0  0  0  0  1 11  0  3  0]
 [ 0  3  0  2  0  1  1 13  0  0]
 [ 2  0  1  1  0  1  4  0 10  3]
 [ 0  0  0  2  1  0  0  0  0 10]]


SVM classifier
Time: 2019-01-09 22:18:01
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
confusion matrix
[[14  3  0  0  0  0  0  0  0  0]
 [ 5 21  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [13  3  0  0  0  0  0  0  0  0]
 [16  1  0  0  0  0  0  0  0  0]
 [20  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  2  0  0  0]
 [ 5 15  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  1  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 1. -1.]
 [ 0. -1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
confusion matrix
[[12  0  1  0  1  0  0  3  0  0]
 [ 1 21  0  0  4  0  0  0  0  0]
 [ 2  1 18  0  0  0  0  1  0  0]
 [ 9  0  4  0  0  0  0  3  0  0]
 [ 0  0  2  0 14  0  0  1  0  0]
 [ 3  0 17  0  0  0  0  0  0  0]
 [10  0  5  0  0  0  0  0  0  0]
 [ 5  4  0  0  0  0  0 11  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 8  0  0  0  5  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.1 0.1 0.1 0.  0.1]
 [0.  0.  0.1 0.2 0.2 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.1 0.1 0.  0.2 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  1.]
 [ 1. -1. -1.]
 [ 0. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  0. -1.]
 [ 0. -1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 0.  1.  1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
confusion matrix
[[15  0  1  0  0  0  0  0  0  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 3  1 18  0  0  0  0  0  0  0]
 [ 2  0  4  8  0  0  0  2  0  0]
 [ 0  0  2  0 11  0  0  1  0  3]
 [ 3  0 17  0  0  0  0  0  0  0]
 [10  0  5  0  0  0  0  0  0  0]
 [ 3  4  0  3  0  0  0 10  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 6  0  0  2  0  0  0  0  0  5]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.2 0.3 0.2 0.2 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.2 0.2 0.  0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 3.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
5
new_column
None


============== iter  4 ================
current matrix is 
[[ 0.  1.  1.]
 [ 1. -1. -1.]
 [ 0. -1.  1.]
 [ 0.  1.  0.]
 [ 0.  0. -1.]
 [ 0. -1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 0.  1.  1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
confusion matrix
[[15  0  1  0  0  0  0  0  0  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 3  1 18  0  0  0  0  0  0  0]
 [ 2  0  4  8  0  0  0  2  0  0]
 [ 0  0  2  0 11  0  0  1  0  3]
 [ 3  0 17  0  0  0  0  0  0  0]
 [10  0  5  0  0  0  0  0  0  0]
 [ 3  4  0  3  0  0  0 10  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 6  0  0  2  0  0  0  0  0  5]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.1 0.1 0.2 0.  0.1]
 [0.  0.  0.2 0.3 0.2 0.2 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.2 0.2 0.  0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 3.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  1.  0.]
 [ 1. -1. -1. -1.]
 [ 0. -1.  1. -1.]
 [ 0.  1.  0.  1.]
 [ 0.  0. -1. -1.]
 [ 0. -1.  1.  0.]
 [-1.  1.  1.  0.]
 [ 1.  1. -1.  1.]
 [ 0.  1.  1.  0.]
 [ 0.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
confusion matrix
[[15  0  0  0  0  1  0  0  0  1]
 [ 1 21  0  0  4  0  0  0  0  0]
 [ 3  1 17  0  0  1  0  0  0  0]
 [ 5  0  1  5  0  3  0  2  0  0]
 [ 0  0  3  0 11  0  0  1  0  2]
 [ 3  0  1  0  0 16  0  0  0  0]
 [10  0  1  0  0  4  0  0  0  0]
 [ 3  4  0  3  0  0  0 10  0  0]
 [18  0  2  0  0  2  0  0  0  0]
 [ 6  0  3  2  0  0  0  0  0  2]]
row HD
[[0.  0.4 0.2 0.2 0.3 0.1 0.1 0.3 0.  0.2]
 [0.  0.  0.2 0.4 0.2 0.3 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.3 0.2 0.1 0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.25 1.5 ]
 [0.   0.   1.5  1.5 ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  1.  0.  0.]
 [ 1. -1. -1. -1.  0.]
 [ 0. -1.  1. -1.  1.]
 [ 0.  1.  0.  1. -1.]
 [ 0.  0. -1. -1. -1.]
 [ 0. -1.  1.  0. -1.]
 [-1.  1.  1.  0. -1.]
 [ 1.  1. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.]
 [ 0.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 21  0  0  5  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2  6  3  2  0  2  1  0]
 [ 0  0  2  2 11  1  0  1  0  0]
 [ 0  0  1  0  0 16  0  0  3  0]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 1  3  0  4  0  0  0 11  1  0]
 [ 2  0  3  1  0  1  0  0 15  0]
 [ 0  0  2  4  0  1  0  0  6  0]]
row HD
[[0.  0.4 0.3 0.3 0.4 0.2 0.2 0.4 0.1 0.3]
 [0.  0.  0.3 0.5 0.3 0.4 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.4 0.3 0.2 0.4 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.8 1.2 1.6]
 [0.  0.  1.2 1.2 1.8]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
3
new_column
None


============== iter  7 ================
current matrix is 
[[ 0.  1.  1.  0.  0.]
 [ 1. -1. -1. -1.  0.]
 [ 0. -1.  1. -1.  1.]
 [ 0.  1.  0.  1. -1.]
 [ 0.  0. -1. -1. -1.]
 [ 0. -1.  1.  0. -1.]
 [-1.  1.  1.  0. -1.]
 [ 1.  1. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.]
 [ 0.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 21  0  0  5  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2  6  3  2  0  2  1  0]
 [ 0  0  2  2 11  1  0  1  0  0]
 [ 0  0  1  0  0 16  0  0  3  0]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 1  3  0  4  0  0  0 11  1  0]
 [ 2  0  3  1  0  1  0  0 15  0]
 [ 0  0  2  4  0  1  0  0  6  0]]
row HD
[[0.  0.4 0.3 0.3 0.4 0.2 0.2 0.4 0.1 0.3]
 [0.  0.  0.3 0.5 0.3 0.4 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.4 0.3 0.2 0.4 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.8 1.2 1.6]
 [0.  0.  1.2 1.2 1.8]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.]
 [ 0. -1.  1. -1.  1. -1.]
 [ 0.  1.  0.  1. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.]
 [ 0. -1.  1.  0. -1.  1.]
 [-1.  1.  1.  0. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.]
 [ 0.  1.  1.  0. -1.  0.]
 [ 0.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
confusion matrix
[[13  0  0  0  0  1  0  0  3  0]
 [ 0 21  0  0  4  0  1  0  0  0]
 [ 0  1 17  2  0  0  0  0  1  1]
 [ 0  0  1  6  0  2  4  2  0  1]
 [ 0  0  2  0 11  1  0  1  2  0]
 [ 0  0  2  0  0 15  2  0  1  0]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 1  3  0  4  0  0  1 11  0  0]
 [ 2  0  3  1  0  1  3  0 12  0]
 [ 1  0  2  2  0  0  6  0  2  0]]
row HD
[[0.  0.5 0.3 0.4 0.4 0.3 0.3 0.5 0.2 0.4]
 [0.  0.  0.4 0.6 0.4 0.5 0.6 0.4 0.5 0.5]
 [0.  0.  0.  0.5 0.3 0.3 0.5 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.5  1.   1.33 1.17]
 [0.   0.   1.   1.   1.5  0.83]
 [0.   0.   0.   1.17 1.   1.17]
 [0.   0.   0.   0.   1.17 0.83]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 1. -1. -1.  1.  0. -1.  1.  1.  1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.]
 [-1.  1.  1.  0. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[13  0  0  0  0  0  0  0  3  1]
 [ 0 21  0  0  4  0  1  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  5  0  3  3  2  2  0]
 [ 1  0  1  0 11  1  0  1  2  0]
 [ 0  0  2  0  0 14  1  0  2  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  0  1 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 3  0  0  2  0  0  0  0  8  0]]
row HD
[[0.  0.5 0.4 0.5 0.4 0.4 0.4 0.5 0.2 0.4]
 [0.  0.  0.5 0.7 0.4 0.6 0.7 0.4 0.5 0.5]
 [0.  0.  0.  0.5 0.4 0.3 0.5 0.7 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.3 0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.6 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.29 0.86 1.14 1.   1.  ]
 [0.   0.   0.86 0.86 1.29 0.71 0.71]
 [0.   0.   0.   1.   0.86 1.   1.  ]
 [0.   0.   0.   0.   1.   0.71 1.  ]
 [0.   0.   0.   0.   0.   1.14 0.86]
 [0.   0.   0.   0.   0.   0.   1.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
None


============== iter  10 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.]
 [-1.  1.  1.  0. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[13  0  0  0  0  0  0  0  3  1]
 [ 0 21  0  0  4  0  1  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  5  0  3  3  2  2  0]
 [ 1  0  1  0 11  1  0  1  2  0]
 [ 0  0  2  0  0 14  1  0  2  1]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  0  1 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 3  0  0  2  0  0  0  0  8  0]]
row HD
[[0.  0.5 0.4 0.5 0.4 0.4 0.4 0.5 0.2 0.4]
 [0.  0.  0.5 0.7 0.4 0.6 0.7 0.4 0.5 0.5]
 [0.  0.  0.  0.5 0.4 0.3 0.5 0.7 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.3 0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.6 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.29 0.86 1.14 1.   1.  ]
 [0.   0.   0.86 0.86 1.29 0.71 0.71]
 [0.   0.   0.   1.   0.86 1.   1.  ]
 [0.   0.   0.   0.   1.   0.71 1.  ]
 [0.   0.   0.   0.   0.   1.14 0.86]
 [0.   0.   0.   0.   0.   0.   1.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.]
 [-1.  1.  1.  0. -1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
confusion matrix
[[14  0  0  0  0  1  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  8  0  3  0  2  2  0]
 [ 0  0  1  0 11  1  0  1  2  1]
 [ 0  0  2  0  0 15  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  1  0  1 12  1  0]
 [ 3  0  3  1  0  1  2  0 12  0]
 [ 1  0  0  2  0  0  0  0  8  2]]
row HD
[[0.  0.6 0.4 0.6 0.4 0.5 0.4 0.6 0.3 0.5]
 [0.  0.  0.6 0.8 0.5 0.6 0.8 0.5 0.6 0.6]
 [0.  0.  0.  0.6 0.4 0.4 0.5 0.8 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.4 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.6 0.6 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.6 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 1.12 0.75 1.   0.88 0.88 1.12]
 [0.   0.   0.75 0.75 1.12 0.62 0.62 1.  ]
 [0.   0.   0.   0.88 0.75 0.88 0.88 0.75]
 [0.   0.   0.   0.   0.88 0.62 0.88 1.12]
 [0.   0.   0.   0.   0.   1.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1. -1.  1.  0.  1. -1. -1. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
confusion matrix
[[13  0  0  0  0  1  0  0  3  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1  9  0  3  0  2  1  0]
 [ 0  0  1  0 11  1  0  1  2  1]
 [ 0  0  2  0  0 15  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 3  0  0  2  0  0  0  0  8  0]]
row HD
[[0.  0.6 0.4 0.7 0.5 0.5 0.5 0.7 0.4 0.6]
 [0.  0.  0.6 0.9 0.6 0.6 0.9 0.6 0.7 0.7]
 [0.  0.  0.  0.7 0.5 0.4 0.6 0.9 0.7 0.6]
 [0.  0.  0.  0.  0.6 0.5 0.5 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.7 0.7 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 1.   0.67 0.89 0.78 0.78 1.   0.67]
 [0.   0.   0.67 0.67 1.   0.56 0.56 0.89 0.89]
 [0.   0.   0.   0.78 0.67 0.78 0.78 0.67 0.56]
 [0.   0.   0.   0.   0.78 0.56 0.78 1.   1.11]
 [0.   0.   0.   0.   0.   0.89 0.67 0.56 0.67]
 [0.   0.   0.   0.   0.   0.   0.89 0.89 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
confusion matrix
[[13  0  0  0  0  1  0  0  3  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1  9  0  3  0  2  1  0]
 [ 0  0  1  0 11  1  0  1  2  1]
 [ 0  0  2  0  0 15  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 3  0  0  2  0  0  0  0  8  0]]
row HD
[[0.  0.6 0.5 0.8 0.5 0.6 0.5 0.8 0.5 0.6]
 [0.  0.  0.7 1.  0.6 0.7 0.9 0.7 0.8 0.7]
 [0.  0.  0.  0.7 0.6 0.4 0.7 1.  0.7 0.7]
 [0.  0.  0.  0.  0.7 0.5 0.6 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.8 0.7 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.9 0.6 0.8 0.7 0.7 0.9 0.6 0.4]
 [0.  0.  0.6 0.6 0.9 0.5 0.5 0.8 0.8 0.8]
 [0.  0.  0.  0.7 0.6 0.7 0.7 0.6 0.5 0.7]
 [0.  0.  0.  0.  0.7 0.5 0.7 0.9 1.  0.5]
 [0.  0.  0.  0.  0.  0.8 0.6 0.5 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.8 0.8 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  0. -1.  1.  0. -1.]
select_j_column
[ 1. -1.  1.  0. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
confusion matrix
[[13  0  0  0  0  1  0  0  3  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  8  0  3  0  2  2  0]
 [ 0  0  1  0 11  1  0  1  2  1]
 [ 0  0  2  0  0 15  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  8  0]]
row HD
[[0.  0.7 0.5 0.9 0.6 0.6 0.5 0.8 0.5 0.6]
 [0.  0.  0.8 1.1 0.6 0.8 1.  0.8 0.9 0.8]
 [0.  0.  0.  0.8 0.7 0.4 0.7 1.  0.7 0.7]
 [0.  0.  0.  0.  0.8 0.6 0.7 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.9 0.8 0.8 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.82 0.55 0.73 0.64 0.64 0.82 0.55 0.36 0.73]
 [0.   0.   0.55 0.55 0.82 0.45 0.45 0.73 0.73 0.73 0.45]
 [0.   0.   0.   0.64 0.55 0.64 0.64 0.55 0.45 0.64 0.09]
 [0.   0.   0.   0.   0.64 0.45 0.64 0.82 0.91 0.45 0.55]
 [0.   0.   0.   0.   0.   0.73 0.55 0.45 0.55 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.73 0.73 0.82 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.64 0.73 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
9
new_column
None


============== iter  15 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
confusion matrix
[[13  0  0  0  0  1  0  0  3  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  8  0  3  0  2  2  0]
 [ 0  0  1  0 11  1  0  1  2  1]
 [ 0  0  2  0  0 15  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  8  0]]
row HD
[[0.  0.7 0.5 0.9 0.6 0.6 0.5 0.8 0.5 0.6]
 [0.  0.  0.8 1.1 0.6 0.8 1.  0.8 0.9 0.8]
 [0.  0.  0.  0.8 0.7 0.4 0.7 1.  0.7 0.7]
 [0.  0.  0.  0.  0.8 0.6 0.7 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.9 0.8 0.8 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.82 0.55 0.73 0.64 0.64 0.82 0.55 0.36 0.73]
 [0.   0.   0.55 0.55 0.82 0.45 0.45 0.73 0.73 0.73 0.45]
 [0.   0.   0.   0.64 0.55 0.64 0.64 0.55 0.45 0.64 0.09]
 [0.   0.   0.   0.   0.64 0.45 0.64 0.82 0.91 0.45 0.55]
 [0.   0.   0.   0.   0.   0.73 0.55 0.45 0.55 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.73 0.73 0.82 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.64 0.73 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  16 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
confusion matrix
[[13  0  0  0  0  1  0  0  3  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  1  1  0 10  1  0  1  2  1]
 [ 0  0  2  0  0 15  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 1  0  0  2  0  0  0  0  8  2]]
row HD
[[0.  0.7 0.6 0.9 0.7 0.6 0.6 0.9 0.5 0.7]
 [0.  0.  0.9 1.1 0.7 0.8 1.1 0.9 0.9 0.9]
 [0.  0.  0.  0.9 0.7 0.5 0.7 1.1 0.8 0.8]
 [0.  0.  0.  0.  0.9 0.6 0.8 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  1.  0.8 0.9 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.9 0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.75 0.5  0.67 0.58 0.58 0.75 0.5  0.33 0.67 0.75]
 [0.   0.   0.5  0.5  0.75 0.42 0.42 0.67 0.67 0.67 0.42 0.5 ]
 [0.   0.   0.   0.58 0.5  0.58 0.58 0.5  0.42 0.58 0.08 0.58]
 [0.   0.   0.   0.   0.58 0.42 0.58 0.75 0.83 0.42 0.5  0.75]
 [0.   0.   0.   0.   0.   0.67 0.5  0.42 0.5  0.67 0.58 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.67 0.67 0.75 0.5  0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.58 0.58 0.67 0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.67 0.58 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.5  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2  9  0  2  0  2  1  0]
 [ 0  1  2  0 10  1  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  6  2]]
row HD
[[0.  0.8 0.7 1.  0.8 0.6 0.6 1.  0.5 0.8]
 [0.  0.  0.9 1.2 0.7 0.9 1.2 1.  1.  1. ]
 [0.  0.  0.  1.  0.7 0.6 0.8 1.2 0.9 0.9]
 [0.  0.  0.  0.  1.  0.7 0.9 0.7 0.7 0.9]
 [0.  0.  0.  0.  0.  1.1 0.9 1.  1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.6 1.  0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.69 0.46 0.62 0.54 0.54 0.69 0.46 0.31 0.62 0.69 0.46]
 [0.   0.   0.46 0.46 0.69 0.38 0.38 0.62 0.62 0.62 0.38 0.46 0.46]
 [0.   0.   0.   0.54 0.46 0.54 0.54 0.46 0.38 0.54 0.08 0.54 0.54]
 [0.   0.   0.   0.   0.54 0.38 0.54 0.69 0.77 0.38 0.46 0.69 0.  ]
 [0.   0.   0.   0.   0.   0.62 0.46 0.38 0.46 0.62 0.54 0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.62 0.62 0.69 0.46 0.46 0.54 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.54 0.54 0.62 0.46 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.62 0.54 0.38 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.46 0.62 0.77]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  0. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  6  2]]
row HD
[[0.  0.9 0.7 1.1 0.9 0.6 0.6 1.  0.5 0.8]
 [0.  0.  1.  1.3 0.7 1.  1.3 1.1 1.1 1.1]
 [0.  0.  0.  1.1 0.8 0.6 0.8 1.2 0.9 0.9]
 [0.  0.  0.  0.  1.1 0.8 1.  0.8 0.8 1. ]
 [0.  0.  0.  0.  0.  1.2 1.  1.1 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.6 1.  0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.64 0.43 0.57 0.5  0.5  0.64 0.43 0.29 0.57 0.64 0.43 0.57]
 [0.   0.   0.43 0.43 0.64 0.36 0.36 0.57 0.57 0.57 0.36 0.43 0.43 0.36]
 [0.   0.   0.   0.5  0.43 0.5  0.5  0.43 0.36 0.5  0.07 0.5  0.5  0.07]
 [0.   0.   0.   0.   0.5  0.36 0.5  0.64 0.71 0.36 0.43 0.64 0.   0.43]
 [0.   0.   0.   0.   0.   0.57 0.43 0.36 0.43 0.57 0.5  0.43 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.57 0.57 0.64 0.43 0.43 0.5  0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.57 0.43 0.5  0.5  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.57 0.5  0.36 0.64 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.43 0.57 0.71 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.57 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.43 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  0.  0.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  1  0  0 16  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  6  2]]
row HD
[[0.  0.9 0.7 1.2 0.9 0.6 0.7 1.  0.5 0.8]
 [0.  0.  1.  1.4 0.7 1.  1.4 1.1 1.1 1.1]
 [0.  0.  0.  1.2 0.8 0.6 0.9 1.2 0.9 0.9]
 [0.  0.  0.  0.  1.2 0.9 1.1 0.9 0.9 1.1]
 [0.  0.  0.  0.  0.  1.2 1.1 1.1 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 1.  0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.6  0.4  0.53 0.47 0.47 0.6  0.4  0.27 0.53 0.6  0.4  0.53
  0.4 ]
 [0.   0.   0.4  0.4  0.6  0.33 0.33 0.53 0.53 0.53 0.33 0.4  0.4  0.33
  0.47]
 [0.   0.   0.   0.47 0.4  0.47 0.47 0.4  0.33 0.47 0.07 0.47 0.47 0.07
  0.27]
 [0.   0.   0.   0.   0.47 0.33 0.47 0.6  0.67 0.33 0.4  0.6  0.   0.4
  0.53]
 [0.   0.   0.   0.   0.   0.53 0.4  0.33 0.4  0.53 0.47 0.4  0.47 0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.53 0.53 0.6  0.4  0.4  0.47 0.33 0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.53 0.4  0.47 0.47 0.4
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.53 0.47 0.33 0.6  0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.4  0.53 0.67 0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.53 0.33 0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.4  0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[-1.  0. -1.  1. -1.  1.  1.  1.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  20 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 0  0  1  0  0 16  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  6  2]]
row HD
[[0.  1.  0.7 1.3 1.  0.6 0.7 1.1 0.6 0.9]
 [0.  0.  1.1 1.5 0.8 1.1 1.5 1.2 1.2 1.1]
 [0.  0.  0.  1.3 0.9 0.6 0.9 1.3 1.  1. ]
 [0.  0.  0.  0.  1.2 1.  1.2 0.9 0.9 1.2]
 [0.  0.  0.  0.  0.  1.3 1.2 1.1 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.7 1.1 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.56 0.38 0.5  0.44 0.44 0.56 0.38 0.25 0.5  0.56 0.38 0.5
  0.38 0.44]
 [0.   0.   0.38 0.38 0.56 0.31 0.31 0.5  0.5  0.5  0.31 0.38 0.38 0.31
  0.44 0.25]
 [0.   0.   0.   0.44 0.38 0.44 0.44 0.38 0.31 0.44 0.06 0.44 0.44 0.06
  0.25 0.56]
 [0.   0.   0.   0.   0.44 0.31 0.44 0.56 0.62 0.31 0.38 0.56 0.   0.38
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.5  0.38 0.31 0.38 0.5  0.44 0.38 0.44 0.44
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.5  0.5  0.56 0.38 0.38 0.44 0.31 0.38
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.5  0.38 0.44 0.44 0.38
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.5  0.44 0.31 0.56 0.44
  0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.38 0.5  0.62 0.38
  0.25 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.5  0.31 0.38
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.38 0.
  0.19 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.44
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  21 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  1  2  0 10  0  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 2  0  0  2  1  0  0  0  6  2]]
row HD
[[0.  1.1 0.8 1.3 1.1 0.7 0.7 1.2 0.6 1. ]
 [0.  0.  1.2 1.6 0.8 1.1 1.6 1.2 1.3 1.1]
 [0.  0.  0.  1.4 1.  0.7 1.  1.4 1.1 1.1]
 [0.  0.  0.  0.  1.3 1.1 1.2 1.  0.9 1.3]
 [0.  0.  0.  0.  0.  1.3 1.3 1.1 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.8 1.1 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.53 0.35 0.47 0.41 0.41 0.53 0.35 0.24 0.47 0.53 0.35 0.47
  0.35 0.41 0.41]
 [0.   0.   0.35 0.35 0.53 0.29 0.29 0.47 0.47 0.47 0.29 0.35 0.35 0.29
  0.41 0.24 0.18]
 [0.   0.   0.   0.41 0.35 0.41 0.41 0.35 0.29 0.41 0.06 0.41 0.41 0.06
  0.24 0.53 0.41]
 [0.   0.   0.   0.   0.41 0.29 0.41 0.53 0.59 0.29 0.35 0.53 0.   0.35
  0.47 0.41 0.41]
 [0.   0.   0.   0.   0.   0.47 0.35 0.29 0.35 0.47 0.41 0.35 0.41 0.41
  0.41 0.41 0.53]
 [0.   0.   0.   0.   0.   0.   0.47 0.47 0.53 0.35 0.35 0.41 0.29 0.35
  0.47 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.41 0.41 0.47 0.35 0.41 0.41 0.35
  0.18 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.47 0.41 0.29 0.53 0.41
  0.41 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.35 0.47 0.59 0.35
  0.24 0.53 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.47 0.29 0.35
  0.41 0.41 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.35 0.
  0.18 0.47 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.41
  0.47 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.47 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.47 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  1.  1. -1. -1.  1.  1.  0.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  1  2  0 10  0  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.1 0.9 1.4 1.2 0.8 0.8 1.3 0.7 1.1]
 [0.  0.  1.3 1.7 0.9 1.2 1.7 1.3 1.4 1.2]
 [0.  0.  0.  1.4 1.  0.7 1.1 1.4 1.1 1.1]
 [0.  0.  0.  0.  1.3 1.1 1.3 1.  0.9 1.3]
 [0.  0.  0.  0.  0.  1.3 1.4 1.1 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.9 1.1 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.9 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.39 0.5  0.33 0.44 0.39 0.39 0.5  0.33 0.22 0.44 0.5  0.33 0.44
  0.33 0.39 0.39 0.39]
 [0.   0.   0.33 0.33 0.5  0.28 0.28 0.44 0.44 0.44 0.28 0.33 0.33 0.28
  0.39 0.22 0.17 0.39]
 [0.   0.   0.   0.39 0.33 0.39 0.39 0.33 0.28 0.39 0.06 0.39 0.39 0.06
  0.22 0.5  0.39 0.33]
 [0.   0.   0.   0.   0.39 0.28 0.39 0.5  0.56 0.28 0.33 0.5  0.   0.33
  0.44 0.39 0.39 0.33]
 [0.   0.   0.   0.   0.   0.44 0.33 0.28 0.33 0.44 0.39 0.33 0.39 0.39
  0.39 0.39 0.5  0.28]
 [0.   0.   0.   0.   0.   0.   0.44 0.44 0.5  0.33 0.33 0.39 0.28 0.33
  0.44 0.22 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.39 0.39 0.44 0.33 0.39 0.39 0.33
  0.17 0.22 0.39 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.44 0.39 0.28 0.5  0.39
  0.39 0.44 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.33 0.44 0.56 0.33
  0.22 0.5  0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.44 0.28 0.33
  0.39 0.39 0.5  0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.33 0.
  0.17 0.44 0.39 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.39
  0.44 0.33 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.44 0.39 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.44 0.39 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.44 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 0.  0.  1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
18 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  8  0  2  0  2  2  0]
 [ 0  0  2  0 11  0  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 2  3  0  1  0  1  0 12  1  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.1 1.  1.5 1.3 0.9 0.9 1.4 0.8 1.2]
 [0.  0.  1.4 1.8 1.  1.3 1.8 1.4 1.5 1.3]
 [0.  0.  0.  1.4 1.  0.7 1.2 1.4 1.1 1.1]
 [0.  0.  0.  0.  1.3 1.1 1.4 1.  0.9 1.3]
 [0.  0.  0.  0.  0.  1.3 1.5 1.1 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  1.  1.1 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.37 0.47 0.32 0.42 0.37 0.37 0.47 0.32 0.21 0.42 0.47 0.32 0.42
  0.32 0.37 0.37 0.37 0.37]
 [0.   0.   0.32 0.32 0.47 0.26 0.26 0.42 0.42 0.42 0.26 0.32 0.32 0.26
  0.37 0.21 0.16 0.37 0.37]
 [0.   0.   0.   0.37 0.32 0.37 0.37 0.32 0.26 0.37 0.05 0.37 0.37 0.05
  0.21 0.47 0.37 0.32 0.32]
 [0.   0.   0.   0.   0.37 0.26 0.37 0.47 0.53 0.26 0.32 0.47 0.   0.32
  0.42 0.37 0.37 0.32 0.32]
 [0.   0.   0.   0.   0.   0.42 0.32 0.26 0.32 0.42 0.37 0.32 0.37 0.37
  0.37 0.37 0.47 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.42 0.42 0.47 0.32 0.32 0.37 0.26 0.32
  0.42 0.21 0.26 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.37 0.37 0.42 0.32 0.37 0.37 0.32
  0.16 0.21 0.37 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.42 0.37 0.26 0.47 0.37
  0.37 0.42 0.32 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.32 0.42 0.53 0.32
  0.21 0.47 0.42 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.42 0.26 0.32
  0.37 0.37 0.47 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.32 0.
  0.16 0.42 0.37 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.37
  0.42 0.32 0.37 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.42 0.37 0.37 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.16 0.42 0.37 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.32 0.42 0.16 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
select_j_column
[ 0.  0.  1.  1.  1.  1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.  0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.  1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.  0.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.  0.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
18 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
19 classifiers pre label
Counter({-1.0: 83, 0.0: 70, 1.0: 35})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  8  0  3  0  3  1  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.2 1.1 1.6 1.4 0.9 1.  1.4 0.9 1.3]
 [0.  0.  1.4 1.8 1.1 1.4 1.9 1.5 1.5 1.4]
 [0.  0.  0.  1.4 1.1 0.8 1.3 1.5 1.1 1.2]
 [0.  0.  0.  0.  1.4 1.2 1.5 1.1 0.9 1.4]
 [0.  0.  0.  0.  0.  1.4 1.5 1.2 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  1.1 1.1 0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.45 0.3  0.4  0.35 0.35 0.45 0.3  0.2  0.4  0.45 0.3  0.4
  0.3  0.35 0.35 0.35 0.35 0.4 ]
 [0.   0.   0.3  0.3  0.45 0.25 0.25 0.4  0.4  0.4  0.25 0.3  0.3  0.25
  0.35 0.2  0.15 0.35 0.35 0.35]
 [0.   0.   0.   0.35 0.3  0.35 0.35 0.3  0.25 0.35 0.05 0.35 0.35 0.05
  0.2  0.45 0.35 0.3  0.3  0.35]
 [0.   0.   0.   0.   0.35 0.25 0.35 0.45 0.5  0.25 0.3  0.45 0.   0.3
  0.4  0.35 0.35 0.3  0.3  0.25]
 [0.   0.   0.   0.   0.   0.4  0.3  0.25 0.3  0.4  0.35 0.3  0.35 0.35
  0.35 0.35 0.45 0.25 0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.4  0.4  0.45 0.3  0.3  0.35 0.25 0.3
  0.4  0.2  0.25 0.3  0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.4  0.3  0.35 0.35 0.3
  0.15 0.2  0.35 0.25 0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.4  0.35 0.25 0.45 0.35
  0.35 0.4  0.3  0.35 0.35 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.3  0.4  0.5  0.3
  0.2  0.45 0.4  0.35 0.35 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.4  0.25 0.3
  0.35 0.35 0.45 0.4  0.4  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.3  0.
  0.15 0.4  0.35 0.25 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.35
  0.4  0.3  0.35 0.4  0.4  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.4  0.35 0.35 0.3  0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.15 0.4  0.35 0.25 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.3  0.4  0.15 0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.2  0.2  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1.  0. -1.  1.  1.  1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  25 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.  0.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1. -1. -1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.  1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.  0.  0.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.  0.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.  1.  0.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
18 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
19 classifiers pre label
Counter({-1.0: 83, 0.0: 70, 1.0: 35})
20 classifiers pre label
Counter({1.0: 80, 0.0: 58, -1.0: 50})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  1  1  0]
 [ 0  0  1  8  0  3  0  3  1  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.3 1.2 1.6 1.5 1.  1.  1.4 0.9 1.4]
 [0.  0.  1.4 1.9 1.2 1.5 2.  1.6 1.6 1.5]
 [0.  0.  0.  1.5 1.2 0.9 1.4 1.6 1.2 1.3]
 [0.  0.  0.  0.  1.5 1.3 1.5 1.1 0.9 1.5]
 [0.  0.  0.  0.  0.  1.4 1.6 1.3 1.4 1.1]
 [0.  0.  0.  0.  0.  0.  1.2 1.2 0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.43 0.29 0.38 0.33 0.33 0.43 0.29 0.19 0.38 0.43 0.29 0.38
  0.29 0.33 0.33 0.33 0.33 0.38 0.29]
 [0.   0.   0.29 0.29 0.43 0.24 0.24 0.38 0.38 0.38 0.24 0.29 0.29 0.24
  0.33 0.19 0.14 0.33 0.33 0.33 0.05]
 [0.   0.   0.   0.33 0.29 0.33 0.33 0.29 0.24 0.33 0.05 0.33 0.33 0.05
  0.19 0.43 0.33 0.29 0.29 0.33 0.29]
 [0.   0.   0.   0.   0.33 0.24 0.33 0.43 0.48 0.24 0.29 0.43 0.   0.29
  0.38 0.33 0.33 0.29 0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.38 0.29 0.24 0.29 0.38 0.33 0.29 0.33 0.33
  0.33 0.33 0.43 0.24 0.24 0.29 0.48]
 [0.   0.   0.   0.   0.   0.   0.38 0.38 0.43 0.29 0.29 0.33 0.24 0.29
  0.38 0.19 0.24 0.29 0.29 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.38 0.29 0.33 0.33 0.29
  0.14 0.19 0.33 0.24 0.24 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.38 0.33 0.24 0.43 0.33
  0.33 0.38 0.29 0.33 0.33 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.38 0.48 0.29
  0.19 0.43 0.38 0.33 0.33 0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.38 0.24 0.29
  0.33 0.33 0.43 0.38 0.38 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.
  0.14 0.38 0.33 0.24 0.24 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.33
  0.38 0.29 0.33 0.38 0.38 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.38 0.33 0.33 0.29 0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.14 0.38 0.33 0.24 0.24 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.38 0.14 0.14 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24 0.19 0.19 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33 0.33 0.29 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  26 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.  0.  1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0. -1. -1.  0.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1. -1. -1.  0.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1. -1.  1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.  1.  0. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.  0.  0.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.  0.  1. -1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
18 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
19 classifiers pre label
Counter({-1.0: 83, 0.0: 70, 1.0: 35})
20 classifiers pre label
Counter({1.0: 80, 0.0: 58, -1.0: 50})
21 classifiers pre label
Counter({-1.0: 98, 0.0: 54, 1.0: 36})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  1  1  0]
 [ 0  0  2  8  0  2  0  3  1  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 14  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.4 1.3 1.7 1.6 1.  1.1 1.5 1.  1.5]
 [0.  0.  1.4 2.  1.3 1.6 2.1 1.7 1.7 1.6]
 [0.  0.  0.  1.6 1.3 1.  1.5 1.7 1.3 1.4]
 [0.  0.  0.  0.  1.5 1.4 1.5 1.1 0.9 1.5]
 [0.  0.  0.  0.  0.  1.5 1.6 1.3 1.4 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.3 1.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.41 0.27 0.36 0.32 0.32 0.41 0.27 0.18 0.36 0.41 0.27 0.36
  0.27 0.32 0.32 0.32 0.32 0.36 0.27 0.36]
 [0.   0.   0.27 0.27 0.41 0.23 0.23 0.36 0.36 0.36 0.23 0.27 0.27 0.23
  0.32 0.18 0.14 0.32 0.32 0.32 0.05 0.41]
 [0.   0.   0.   0.32 0.27 0.32 0.32 0.27 0.23 0.32 0.05 0.32 0.32 0.05
  0.18 0.41 0.32 0.27 0.27 0.32 0.27 0.27]
 [0.   0.   0.   0.   0.32 0.23 0.32 0.41 0.45 0.23 0.27 0.41 0.   0.27
  0.36 0.32 0.32 0.27 0.27 0.23 0.23 0.41]
 [0.   0.   0.   0.   0.   0.36 0.27 0.23 0.27 0.36 0.32 0.27 0.32 0.32
  0.32 0.32 0.41 0.23 0.23 0.27 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.36 0.36 0.41 0.27 0.27 0.32 0.23 0.27
  0.36 0.18 0.23 0.27 0.27 0.36 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.36 0.27 0.32 0.32 0.27
  0.14 0.18 0.32 0.23 0.23 0.27 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.36 0.32 0.23 0.41 0.32
  0.32 0.36 0.27 0.32 0.32 0.23 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.27 0.36 0.45 0.27
  0.18 0.41 0.36 0.32 0.32 0.41 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.23 0.27
  0.32 0.32 0.41 0.36 0.36 0.36 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.27 0.
  0.14 0.36 0.32 0.23 0.23 0.32 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.32
  0.36 0.27 0.32 0.36 0.36 0.18 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.36 0.32 0.32 0.27 0.27 0.23 0.23 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.14 0.36 0.32 0.23 0.23 0.32 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.27 0.36 0.14 0.14 0.36 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.23 0.18 0.18 0.36 0.23 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.32 0.32 0.27 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  0. -1.  1.  1.  1.  1.  1.]
select_j_column
[ 0.  0.  1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  27 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.  0.  1.  1.  1.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0. -1. -1.  0.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1. -1. -1.  0.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1. -1.  1. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.  1.  0. -1. -1.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.  0.  0.  1.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.  0.  1. -1.  1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1. -1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.  1.  0. -1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
18 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
19 classifiers pre label
Counter({-1.0: 83, 0.0: 70, 1.0: 35})
20 classifiers pre label
Counter({1.0: 80, 0.0: 58, -1.0: 50})
21 classifiers pre label
Counter({-1.0: 98, 0.0: 54, 1.0: 36})
22 classifiers pre label
Counter({1.0: 178, -1.0: 10})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  1  1  0]
 [ 0  0  2  8  0  2  0  3  1  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  1  0  1  0 14  0  0]
 [ 2  0  3  1  0  1  2  0 13  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.4 1.3 1.7 1.7 1.  1.1 1.5 1.  1.5]
 [0.  0.  1.4 2.  1.4 1.6 2.1 1.7 1.7 1.6]
 [0.  0.  0.  1.6 1.4 1.  1.5 1.7 1.3 1.4]
 [0.  0.  0.  0.  1.6 1.4 1.5 1.1 0.9 1.5]
 [0.  0.  0.  0.  0.  1.6 1.7 1.4 1.5 1.2]
 [0.  0.  0.  0.  0.  0.  1.3 1.3 1.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.39 0.26 0.35 0.3  0.3  0.39 0.26 0.17 0.35 0.39 0.26 0.35
  0.26 0.3  0.3  0.3  0.3  0.35 0.26 0.35 0.35]
 [0.   0.   0.26 0.26 0.39 0.22 0.22 0.35 0.35 0.35 0.22 0.26 0.26 0.22
  0.3  0.17 0.13 0.3  0.3  0.3  0.04 0.39 0.22]
 [0.   0.   0.   0.3  0.26 0.3  0.3  0.26 0.22 0.3  0.04 0.3  0.3  0.04
  0.17 0.39 0.3  0.26 0.26 0.3  0.26 0.26 0.13]
 [0.   0.   0.   0.   0.3  0.22 0.3  0.39 0.43 0.22 0.26 0.39 0.   0.26
  0.35 0.3  0.3  0.26 0.26 0.22 0.22 0.39 0.26]
 [0.   0.   0.   0.   0.   0.35 0.26 0.22 0.26 0.35 0.3  0.26 0.3  0.3
  0.3  0.3  0.39 0.22 0.22 0.26 0.43 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.35 0.39 0.26 0.26 0.3  0.22 0.26
  0.35 0.17 0.22 0.26 0.26 0.35 0.22 0.3  0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.35 0.26 0.3  0.3  0.26
  0.13 0.17 0.3  0.22 0.22 0.26 0.26 0.3  0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.35 0.3  0.22 0.39 0.3
  0.3  0.35 0.26 0.3  0.3  0.22 0.3  0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.26 0.35 0.43 0.26
  0.17 0.39 0.35 0.3  0.3  0.39 0.35 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.35 0.22 0.26
  0.3  0.3  0.39 0.35 0.35 0.35 0.3  0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.26 0.
  0.13 0.35 0.3  0.22 0.22 0.3  0.22 0.3  0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.3
  0.35 0.26 0.3  0.35 0.35 0.17 0.3  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.35 0.3  0.3  0.26 0.26 0.22 0.22 0.39 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13 0.35 0.3  0.22 0.22 0.3  0.22 0.3  0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.35 0.13 0.13 0.35 0.3  0.3  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.17 0.17 0.35 0.22 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.3  0.26 0.09 0.35 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3  0.3  0.3  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3  0.3  0.3  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.26 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1.  0. -1.  1.  1.  1.  0.]
select_j_column
[ 1.  1.  1.  0.  0.  1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  28 ================
current matrix is 
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.  0.  1.  1.  1.  0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0. -1. -1.  0.  1.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1. -1. -1.  0.  1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.  1.  0. -1. -1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.  0.  0.  1.  1.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.  0.  1. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1. -1.  1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.  1.  0. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 140, 1.0: 45, -1.0: 3})
1 classifiers pre label
Counter({1.0: 87, -1.0: 77, 0.0: 24})
2 classifiers pre label
Counter({1.0: 120, -1.0: 56, 0.0: 12})
3 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
4 classifiers pre label
Counter({-1.0: 110, 0.0: 47, 1.0: 31})
5 classifiers pre label
Counter({1.0: 71, 0.0: 60, -1.0: 57})
6 classifiers pre label
Counter({1.0: 116, -1.0: 72})
7 classifiers pre label
Counter({1.0: 66, 0.0: 62, -1.0: 60})
8 classifiers pre label
Counter({1.0: 101, -1.0: 58, 0.0: 29})
9 classifiers pre label
Counter({0.0: 97, -1.0: 76, 1.0: 15})
10 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 115, 1.0: 49, 0.0: 24})
12 classifiers pre label
Counter({0.0: 81, -1.0: 75, 1.0: 32})
13 classifiers pre label
Counter({1.0: 134, -1.0: 42, 0.0: 12})
14 classifiers pre label
Counter({1.0: 166, 0.0: 12, -1.0: 10})
15 classifiers pre label
Counter({1.0: 77, -1.0: 76, 0.0: 35})
16 classifiers pre label
Counter({0.0: 103, 1.0: 57, -1.0: 28})
17 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
18 classifiers pre label
Counter({1.0: 132, 0.0: 47, -1.0: 9})
19 classifiers pre label
Counter({-1.0: 83, 0.0: 70, 1.0: 35})
20 classifiers pre label
Counter({1.0: 80, 0.0: 58, -1.0: 50})
21 classifiers pre label
Counter({-1.0: 98, 0.0: 54, 1.0: 36})
22 classifiers pre label
Counter({1.0: 178, -1.0: 10})
23 classifiers pre label
Counter({1.0: 111, -1.0: 41, 0.0: 36})
confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  9  0  2  0  2  1  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 14  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
row HD
[[0.  1.5 1.4 1.8 1.7 1.1 1.2 1.6 1.1 1.6]
 [0.  0.  1.4 2.  1.5 1.6 2.2 1.8 1.8 1.6]
 [0.  0.  0.  1.6 1.5 1.  1.6 1.8 1.4 1.4]
 [0.  0.  0.  0.  1.7 1.4 1.6 1.2 1.  1.5]
 [0.  0.  0.  0.  0.  1.7 1.8 1.5 1.6 1.3]
 [0.  0.  0.  0.  0.  0.  1.4 1.4 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.38 0.25 0.33 0.29 0.29 0.38 0.25 0.17 0.33 0.38 0.25 0.33
  0.25 0.29 0.29 0.29 0.29 0.33 0.25 0.33 0.33 0.25]
 [0.   0.   0.25 0.25 0.38 0.21 0.21 0.33 0.33 0.33 0.21 0.25 0.25 0.21
  0.29 0.17 0.12 0.29 0.29 0.29 0.04 0.38 0.21 0.33]
 [0.   0.   0.   0.29 0.25 0.29 0.29 0.25 0.21 0.29 0.04 0.29 0.29 0.04
  0.17 0.38 0.29 0.25 0.25 0.29 0.25 0.25 0.12 0.25]
 [0.   0.   0.   0.   0.29 0.21 0.29 0.38 0.42 0.21 0.25 0.38 0.   0.25
  0.33 0.29 0.29 0.25 0.25 0.21 0.21 0.38 0.25 0.29]
 [0.   0.   0.   0.   0.   0.33 0.25 0.21 0.25 0.33 0.29 0.25 0.29 0.29
  0.29 0.29 0.38 0.21 0.21 0.25 0.42 0.17 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.38 0.25 0.25 0.29 0.21 0.25
  0.33 0.17 0.21 0.25 0.25 0.33 0.21 0.29 0.21 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.33 0.25 0.29 0.29 0.25
  0.12 0.17 0.29 0.21 0.21 0.25 0.25 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.33 0.29 0.21 0.38 0.29
  0.29 0.33 0.25 0.29 0.29 0.21 0.29 0.17 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.25 0.33 0.42 0.25
  0.17 0.38 0.33 0.29 0.29 0.38 0.33 0.17 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.21 0.25
  0.29 0.29 0.38 0.33 0.33 0.33 0.29 0.25 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.25 0.
  0.12 0.33 0.29 0.21 0.21 0.29 0.21 0.29 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29
  0.33 0.25 0.29 0.33 0.33 0.17 0.29 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.33 0.29 0.29 0.25 0.25 0.21 0.21 0.38 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.33 0.29 0.21 0.21 0.29 0.21 0.29 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.33 0.12 0.12 0.33 0.29 0.29 0.12 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.17 0.17 0.33 0.21 0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.29 0.25 0.08 0.33 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.29 0.29 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.29 0.29 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.25 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.38 0.21 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})

**********      classifier acc  **************
[0.623, 0.81, 0.924, 0.728, 0.745, 0.717, 0.856, 0.634, 0.761, 0.704, 0.919, 0.8, 0.728, 0.919, 0.901, 0.752, 0.674, 0.841, 0.841, 0.725, 0.79, 0.807, 0.952, 0.766]
before cutting matrix
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1.  0.
   0.  0.  1.  1.  1.  0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
   0. -1. -1.  0.  1.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1. -1.  1.
   1. -1. -1.  0.  1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  0.  1.
   1.  1.  0. -1. -1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  0.  1.
   1.  0.  0.  1.  1.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1.  1. -1.
  -1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  0.  1.
   1.  0.  1. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
   1. -1.  1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  0.  1.
   1.  1.  0. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 276, -1.0: 170})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 180, -1.0: 179})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({-1.0: 342, 1.0: 110})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 227, -1.0: 171})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({-1.0: 232, 1.0: 217})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 221, -1.0: 213})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({-1.0: 272, 1.0: 62})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({-1.0: 281, 1.0: 166})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 180, -1.0: 179})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 242, -1.0: 208})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 214, -1.0: 57})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 214, -1.0: 57})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({-1.0: 233, 1.0: 162})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({1.0: 276, -1.0: 116})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 276, -1.0: 116})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
positive and negative ratio
Counter({1.0: 288, -1.0: 160})
after cutting matrix
[[ 0.  1.  1.  0.  0. -1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  0.  0.
   0.  1.  1.  0.]
 [ 1. -1. -1. -1.  0.  0.  1.  0.  1. -1. -1. -1. -1. -1.  1.  0.  0.  0.
  -1.  0.  1.  1.]
 [ 0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1.  1. -1.  1.  1. -1.  1.  1.
  -1.  0.  1.  1.]
 [ 0.  1.  0.  1. -1.  1. -1. -1.  0.  0.  0. -1.  1.  0.  0.  1.  1.  1.
  -1. -1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0. -1. -1.  1. -1. -1.  1.  1.  1.  1.
   1. -1. -1.  0.]
 [ 0. -1.  1.  0. -1.  1. -1.  0.  1.  0.  1. -1.  0.  1.  1. -1.  1.  1.
   0.  1.  1.  1.]
 [-1.  1.  1.  0. -1.  1. -1.  1. -1. -1.  1.  1.  0.  1. -1. -1. -1. -1.
   1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   0. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.  0.  1. -1. -1.  0.  1. -1.  0.  1.  1.  1.  1.  1.
  -1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  1. -1. -1. -1.  1.  0.  1.  1.  1.  0.  1.  1.
   1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 121, -1.0: 46})
Counter({1.0: 276, -1.0: 170})
Counter({1.0: 313, -1.0: 184})
Counter({1.0: 180, -1.0: 179})
Counter({-1.0: 342, 1.0: 110})
Counter({1.0: 227, -1.0: 171})
Counter({1.0: 340, -1.0: 222})
Counter({-1.0: 232, 1.0: 217})
Counter({1.0: 221, -1.0: 213})
Counter({-1.0: 272, 1.0: 62})
Counter({1.0: 375, -1.0: 122})
Counter({-1.0: 281, 1.0: 166})
Counter({1.0: 180, -1.0: 179})
Counter({1.0: 375, -1.0: 122})
Counter({1.0: 451, -1.0: 46})
Counter({1.0: 242, -1.0: 208})
Counter({1.0: 406, -1.0: 46})
Counter({1.0: 406, -1.0: 46})
Counter({-1.0: 233, 1.0: 162})
Counter({-1.0: 341, 1.0: 105})
Counter({1.0: 499, -1.0: 63})
Counter({1.0: 288, -1.0: 160})
cutting matrix's confusion matrix
[[14  0  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  0  2  9  0  2  0  2  1  0]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 2  0  1  0  0 14  1  0  2  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 14  0]
 [ 0  0  0  2  1  0  0  0  6  4]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整


SVM classifier
Time: 2019-01-09 22:18:31
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1.  1.]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 0.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.8 0.8 0.8 0.8]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   1.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0. 1. 1. 1. 1.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
col HD
[[0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.2 1.  1.2 1.2]
 [0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.83 0.   0.17]
 [0.   0.   0.   0.83 0.   0.17]
 [0.   0.   0.   0.83 0.   0.17]
 [0.   0.   0.   0.   0.83 0.67]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.4 1.  1.4 1.4]
 [0.  0.  0.4 0.  0. ]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.71 0.   0.14 0.14]
 [0.   0.   0.   0.71 0.   0.14 0.14]
 [0.   0.   0.   0.71 0.   0.14 0.14]
 [0.   0.   0.   0.   0.71 0.57 0.57]
 [0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.6 1.2 1.6 1.6]
 [0.  0.  0.4 0.  0. ]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.62 0.   0.12 0.12 0.62]
 [0.   0.   0.   0.62 0.   0.12 0.12 0.62]
 [0.   0.   0.   0.62 0.   0.12 0.12 0.62]
 [0.   0.   0.   0.   0.62 0.5  0.5  0.  ]
 [0.   0.   0.   0.   0.   0.12 0.12 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.6 1.4 1.6 1.8]
 [0.  0.  0.6 0.  0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.56 0.   0.11 0.11 0.56 0.33]
 [0.   0.   0.   0.56 0.   0.11 0.11 0.56 0.33]
 [0.   0.   0.   0.56 0.   0.11 0.11 0.56 0.33]
 [0.   0.   0.   0.   0.56 0.44 0.44 0.   0.22]
 [0.   0.   0.   0.   0.   0.11 0.11 0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  1.8 1.4 1.8 1.8]
 [0.  0.  0.8 0.  0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.  0.  0.5 0.  0.1 0.1 0.5 0.3 0.2]
 [0.  0.  0.  0.5 0.  0.1 0.1 0.5 0.3 0.2]
 [0.  0.  0.  0.5 0.  0.1 0.1 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  2.  1.6 2.  2. ]
 [0.  0.  0.8 0.  0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.45 0.   0.09 0.09 0.45 0.27 0.18 0.45]
 [0.   0.   0.   0.45 0.   0.09 0.09 0.45 0.27 0.18 0.45]
 [0.   0.   0.   0.45 0.   0.09 0.09 0.45 0.27 0.18 0.45]
 [0.   0.   0.   0.   0.45 0.36 0.36 0.   0.18 0.27 0.  ]
 [0.   0.   0.   0.   0.   0.09 0.09 0.45 0.27 0.18 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.18 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.18 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
11 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  2.2 1.8 2.2 2.2]
 [0.  0.  0.8 0.  0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.42 0.   0.08 0.08 0.42 0.25 0.17 0.42 0.42]
 [0.   0.   0.   0.42 0.   0.08 0.08 0.42 0.25 0.17 0.42 0.42]
 [0.   0.   0.   0.42 0.   0.08 0.08 0.42 0.25 0.17 0.42 0.42]
 [0.   0.   0.   0.   0.42 0.33 0.33 0.   0.17 0.25 0.   0.  ]
 [0.   0.   0.   0.   0.   0.08 0.08 0.42 0.25 0.17 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.08 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.08 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
11 classifiers pre label
Counter({1.0: 28, -1.0: 28})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  2.4 2.  2.4 2.4]
 [0.  0.  0.8 0.  0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.38 0.   0.08 0.08 0.38 0.23 0.15 0.38 0.38 0.  ]
 [0.   0.   0.   0.38 0.   0.08 0.08 0.38 0.23 0.15 0.38 0.38 0.  ]
 [0.   0.   0.   0.38 0.   0.08 0.08 0.38 0.23 0.15 0.38 0.38 0.  ]
 [0.   0.   0.   0.   0.38 0.31 0.31 0.   0.15 0.23 0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.08 0.08 0.38 0.23 0.15 0.38 0.38 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.08 0.31 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.08 0.31 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.15 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
11 classifiers pre label
Counter({1.0: 28, -1.0: 28})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  2.6 2.2 2.6 2.6]
 [0.  0.  0.8 0.  0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.36 0.   0.07 0.07 0.36 0.21 0.14 0.36 0.36 0.   0.  ]
 [0.   0.   0.   0.36 0.   0.07 0.07 0.36 0.21 0.14 0.36 0.36 0.   0.  ]
 [0.   0.   0.   0.36 0.   0.07 0.07 0.36 0.21 0.14 0.36 0.36 0.   0.  ]
 [0.   0.   0.   0.   0.36 0.29 0.29 0.   0.14 0.21 0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.07 0.07 0.36 0.21 0.14 0.36 0.36 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.07 0.29 0.29 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.07 0.29 0.29 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.14 0.14 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
11 classifiers pre label
Counter({1.0: 28, -1.0: 28})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 28, -1.0: 28})
14 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  2.8 2.2 2.8 2.8]
 [0.  0.  1.  0.  0.4]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.33 0.   0.07 0.07 0.33 0.2  0.13 0.33 0.33 0.   0.
  0.07]
 [0.   0.   0.   0.33 0.   0.07 0.07 0.33 0.2  0.13 0.33 0.33 0.   0.
  0.07]
 [0.   0.   0.   0.33 0.   0.07 0.07 0.33 0.2  0.13 0.33 0.33 0.   0.
  0.07]
 [0.   0.   0.   0.   0.33 0.27 0.27 0.   0.13 0.2  0.   0.   0.33 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.07 0.07 0.33 0.2  0.13 0.33 0.33 0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.07 0.27 0.27 0.07 0.07
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.07 0.27 0.27 0.07 0.07
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.   0.   0.33 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.13 0.13 0.2  0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.13 0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
11 classifiers pre label
Counter({1.0: 28, -1.0: 28})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 28, -1.0: 28})
14 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
15 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  3.  2.4 3.  3. ]
 [0.  0.  1.  0.  0.4]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.31 0.   0.06 0.06 0.31 0.19 0.12 0.31 0.31 0.   0.
  0.06 0.31]
 [0.   0.   0.   0.31 0.   0.06 0.06 0.31 0.19 0.12 0.31 0.31 0.   0.
  0.06 0.31]
 [0.   0.   0.   0.31 0.   0.06 0.06 0.31 0.19 0.12 0.31 0.31 0.   0.
  0.06 0.31]
 [0.   0.   0.   0.   0.31 0.25 0.25 0.   0.12 0.19 0.   0.   0.31 0.31
  0.25 0.  ]
 [0.   0.   0.   0.   0.   0.06 0.06 0.31 0.19 0.12 0.31 0.31 0.   0.
  0.06 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.06 0.25 0.25 0.06 0.06
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.06 0.25 0.25 0.06 0.06
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.   0.   0.31 0.31
  0.25 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.12 0.19 0.19
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.12 0.12
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31
  0.25 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31
  0.25 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({1.0: 28, -1.0: 28})
5 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 28, -1.0: 28})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 28, -1.0: 28})
11 classifiers pre label
Counter({1.0: 28, -1.0: 28})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 28, -1.0: 28})
14 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
15 classifiers pre label
Counter({1.0: 28, -1.0: 28})
16 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  3.2 2.6 3.2 3.2]
 [0.  0.  1.  0.  0.4]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.   0.   0.29 0.   0.06 0.06 0.29 0.18 0.12 0.29 0.29 0.   0.
  0.06 0.29 0.29]
 [0.   0.   0.   0.29 0.   0.06 0.06 0.29 0.18 0.12 0.29 0.29 0.   0.
  0.06 0.29 0.29]
 [0.   0.   0.   0.29 0.   0.06 0.06 0.29 0.18 0.12 0.29 0.29 0.   0.
  0.06 0.29 0.29]
 [0.   0.   0.   0.   0.29 0.24 0.24 0.   0.12 0.18 0.   0.   0.29 0.29
  0.24 0.   0.  ]
 [0.   0.   0.   0.   0.   0.06 0.06 0.29 0.18 0.12 0.29 0.29 0.   0.
  0.06 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.06 0.24 0.24 0.06 0.06
  0.   0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.06 0.24 0.24 0.06 0.06
  0.   0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.   0.   0.29 0.29
  0.24 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.12 0.18 0.18
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.12 0.12
  0.06 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29
  0.24 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29
  0.24 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})

**********      classifier acc  **************
[0.804, 0.804, 0.804, 0.804, 0.804, 0.625, 0.625, 0.804, 0.786, 0.661, 0.804, 0.804, 0.804, 0.804, 0.625, 0.804, 0.804]
before cutting matrix
[[-1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
after cutting matrix
[[-1. -1. -1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 87, -1.0: 79})
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]


SVM classifier
Time: 2019-01-09 22:18:34
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  0.  0.]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  0.]
 [-1.  0.]
 [ 0.  1.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 3  5  0  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  0.  1.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  0.]
 [ 1.  0. -1.]
 [-1.  0.  0.]
 [ 0.  1.  1.]
 [ 0.  0. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 4  3  0  1  1]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.6]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[ 0. -1.  0.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  0. -1.]
 [ 1.  0. -1. -1.]
 [-1.  0.  0.  0.]
 [ 0.  1.  1.  0.]
 [ 0.  0. -1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 4  3  0  1  1]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.4 0.6 0.8 0.8]
 [0.  0.  0.6 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.  ]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1. -1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  0. -1.  0.]
 [ 1.  0. -1. -1. -1.]
 [-1.  0.  0.  0. -1.]
 [ 0.  1.  1.  0.  1.]
 [ 0.  0. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
confusion matrix
[[21  4  0  0  0]
 [11  3  0  0  0]
 [ 2  5  1  0  1]
 [ 2  2  1  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.6 0.8 1.  1. ]
 [0.  0.  0.6 1.  0.4]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  0.8 0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.]
 [ 1.  0. -1. -1. -1.  0.]
 [-1.  0.  0.  0. -1. -1.]
 [ 0.  1.  1.  0.  1.  1.]
 [ 0.  0. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
confusion matrix
[[22  3  0  0  0]
 [12  2  0  0  0]
 [ 6  1  0  1  1]
 [ 3  1  0  1  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.8 1.  1.  1.2]
 [0.  0.  0.8 1.2 0.4]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.67 0.67 0.33]
 [0.   0.   0.5  0.5  0.67 0.33]
 [0.   0.   0.   0.5  0.17 0.67]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  1.  0.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
1
new_column
None


============== iter  7 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.]
 [ 1.  0. -1. -1. -1.  0.]
 [-1.  0.  0.  0. -1. -1.]
 [ 0.  1.  1.  0.  1.  1.]
 [ 0.  0. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
confusion matrix
[[22  3  0  0  0]
 [12  2  0  0  0]
 [ 6  1  0  1  1]
 [ 3  1  0  1  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.8 1.  1.  1.2]
 [0.  0.  0.8 1.2 0.4]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.67 0.67 0.33]
 [0.   0.   0.5  0.5  0.67 0.33]
 [0.   0.   0.   0.5  0.17 0.67]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1.  0. -1.  1.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.]
 [ 1.  0. -1. -1. -1.  0.  0.]
 [-1.  0.  0.  0. -1. -1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.]
 [ 0.  0. -1.  1. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.  1.2 1.2 1.4]
 [0.  0.  1.  1.4 0.4]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.57 0.57 0.29 0.29]
 [0.   0.   0.43 0.43 0.57 0.29 0.43]
 [0.   0.   0.   0.43 0.14 0.57 0.71]
 [0.   0.   0.   0.   0.57 0.71 0.71]
 [0.   0.   0.   0.   0.   0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.2 1.4 1.2 1.6]
 [0.  0.  1.2 1.6 0.4]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.62 0.5  0.5  0.25 0.25 0.25]
 [0.   0.   0.38 0.38 0.5  0.25 0.38 0.62]
 [0.   0.   0.   0.38 0.12 0.5  0.62 0.5 ]
 [0.   0.   0.   0.   0.5  0.62 0.62 0.38]
 [0.   0.   0.   0.   0.   0.38 0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  0.  1. -1.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  4  0  3  0]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.4 1.6 1.4 1.8]
 [0.  0.  1.4 1.6 0.6]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.56 0.44 0.44 0.22 0.22 0.22 0.56]
 [0.   0.   0.33 0.33 0.44 0.22 0.33 0.56 0.56]
 [0.   0.   0.   0.33 0.11 0.44 0.56 0.44 0.33]
 [0.   0.   0.   0.   0.44 0.56 0.56 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.11 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1. -1.  0.]
select_j_column
[ 0. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  4  0  3  0]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.4 1.6 1.6 2. ]
 [0.  0.  1.4 1.8 0.8]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.5 0.4 0.4 0.2 0.2 0.2 0.5 0.2]
 [0.  0.  0.3 0.3 0.4 0.2 0.3 0.5 0.5 0.5]
 [0.  0.  0.  0.3 0.1 0.4 0.5 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.5 0.5 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  0.  1.]
select_j_column
[-1. -1.  0.  0.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
confusion matrix
[[22  3  0  0  0]
 [10  3  0  1  0]
 [ 2  6  0  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  1.6 1.8 1.8 2.2]
 [0.  0.  1.4 2.  1. ]
 [0.  0.  0.  1.8 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.45 0.36 0.36 0.18 0.18 0.18 0.45 0.18 0.09]
 [0.   0.   0.27 0.27 0.36 0.18 0.27 0.45 0.45 0.45 0.36]
 [0.   0.   0.   0.27 0.09 0.36 0.45 0.36 0.27 0.36 0.36]
 [0.   0.   0.   0.   0.36 0.45 0.45 0.27 0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.27 0.36 0.27 0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.09 0.36 0.45 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1. -1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
confusion matrix
[[22  3  0  0  0]
 [12  2  0  0  0]
 [ 2  6  0  1  0]
 [ 2  2  0  1  0]
 [ 1  2  0  0  0]]
row HD
[[0.  1.8 2.  2.  2.4]
 [0.  0.  1.4 2.2 1. ]
 [0.  0.  0.  2.  1.6]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.42 0.33 0.33 0.17 0.17 0.17 0.42 0.17 0.08 0.33]
 [0.   0.   0.25 0.25 0.33 0.17 0.25 0.42 0.42 0.42 0.33 0.33]
 [0.   0.   0.   0.25 0.08 0.33 0.42 0.33 0.25 0.33 0.33 0.08]
 [0.   0.   0.   0.   0.33 0.42 0.42 0.25 0.25 0.33 0.25 0.33]
 [0.   0.   0.   0.   0.   0.25 0.33 0.25 0.25 0.33 0.25 0.  ]
 [0.   0.   0.   0.   0.   0.   0.08 0.33 0.42 0.33 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  14 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
12 classifiers pre label
Counter({1.0: 54, 0.0: 2})
confusion matrix
[[25  0  0  0  0]
 [13  1  0  0  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.  2.2 2.  2.6]
 [0.  0.  1.6 2.4 1.2]
 [0.  0.  0.  2.2 1.6]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.38 0.31 0.31 0.15 0.15 0.15 0.38 0.15 0.08 0.31 0.23]
 [0.   0.   0.23 0.23 0.31 0.15 0.23 0.38 0.38 0.38 0.31 0.31 0.15]
 [0.   0.   0.   0.23 0.08 0.31 0.38 0.31 0.23 0.31 0.31 0.08 0.15]
 [0.   0.   0.   0.   0.31 0.38 0.38 0.23 0.23 0.31 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.23 0.31 0.23 0.23 0.31 0.23 0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.08 0.31 0.38 0.31 0.15 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.31 0.15 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  0.  1.]
select_j_column
[ 0. -1.  0.  1. -1.]
most_cplx_inx
4
new_column
None


============== iter  15 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
12 classifiers pre label
Counter({1.0: 54, 0.0: 2})
confusion matrix
[[25  0  0  0  0]
 [13  1  0  0  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.  2.2 2.  2.6]
 [0.  0.  1.6 2.4 1.2]
 [0.  0.  0.  2.2 1.6]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.38 0.31 0.31 0.15 0.15 0.15 0.38 0.15 0.08 0.31 0.23]
 [0.   0.   0.23 0.23 0.31 0.15 0.23 0.38 0.38 0.38 0.31 0.31 0.15]
 [0.   0.   0.   0.23 0.08 0.31 0.38 0.31 0.23 0.31 0.31 0.08 0.15]
 [0.   0.   0.   0.   0.31 0.38 0.38 0.23 0.23 0.31 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.23 0.31 0.23 0.23 0.31 0.23 0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.08 0.31 0.38 0.31 0.15 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.31 0.15 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 1.  1.  1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.  1.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.  1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.  0.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
12 classifiers pre label
Counter({1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [13  1  0  0  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.  2.4 2.2 2.8]
 [0.  0.  1.8 2.6 1.4]
 [0.  0.  0.  2.4 1.8]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.36 0.29 0.29 0.14 0.14 0.14 0.36 0.14 0.07 0.29 0.21 0.  ]
 [0.   0.   0.21 0.21 0.29 0.14 0.21 0.36 0.36 0.36 0.29 0.29 0.14 0.29]
 [0.   0.   0.   0.21 0.07 0.29 0.36 0.29 0.21 0.29 0.29 0.07 0.14 0.36]
 [0.   0.   0.   0.   0.29 0.36 0.36 0.21 0.21 0.29 0.21 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.21 0.29 0.21 0.21 0.29 0.21 0.   0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.07 0.29 0.36 0.29 0.14 0.21 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29 0.14 0.29 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.21 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.21 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  0.  1. -1.]
select_j_column
[ 1. -1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.  1. -1.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.  1.  0.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0. -1.  1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.  0.  1.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.  0. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
12 classifiers pre label
Counter({1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({1.0: 53, 0.0: 3})
14 classifiers pre label
Counter({-1.0: 39, 1.0: 9, 0.0: 8})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.2 2.6 2.4 2.8]
 [0.  0.  2.  2.8 1.6]
 [0.  0.  0.  2.4 2. ]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.33 0.27 0.27 0.13 0.13 0.13 0.33 0.13 0.07 0.27 0.2  0.
  0.33]
 [0.   0.   0.2  0.2  0.27 0.13 0.2  0.33 0.33 0.33 0.27 0.27 0.13 0.27
  0.13]
 [0.   0.   0.   0.2  0.07 0.27 0.33 0.27 0.2  0.27 0.27 0.07 0.13 0.33
  0.2 ]
 [0.   0.   0.   0.   0.27 0.33 0.33 0.2  0.2  0.27 0.2  0.27 0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.2  0.27 0.2  0.2  0.27 0.2  0.   0.2  0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.07 0.27 0.33 0.27 0.13 0.2  0.13 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27 0.13 0.27 0.2  0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.2  0.2  0.33 0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.2  0.27 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.13 0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 0.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.  1. -1.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.  1.  0.  0.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0. -1.  1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.  0.  1.  1.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.  0. -1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
12 classifiers pre label
Counter({1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({1.0: 53, 0.0: 3})
14 classifiers pre label
Counter({-1.0: 39, 1.0: 9, 0.0: 8})
15 classifiers pre label
Counter({0.0: 51, 1.0: 5})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.2 2.8 2.6 3. ]
 [0.  0.  2.2 3.  1.8]
 [0.  0.  0.  2.6 2.2]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.31 0.25 0.25 0.12 0.12 0.12 0.31 0.12 0.06 0.25 0.19 0.
  0.31 0.25]
 [0.   0.   0.19 0.19 0.25 0.12 0.19 0.31 0.31 0.31 0.25 0.25 0.12 0.25
  0.12 0.19]
 [0.   0.   0.   0.19 0.06 0.25 0.31 0.25 0.19 0.25 0.25 0.06 0.12 0.31
  0.19 0.19]
 [0.   0.   0.   0.   0.25 0.31 0.31 0.19 0.19 0.25 0.19 0.25 0.19 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.19 0.25 0.19 0.19 0.25 0.19 0.   0.19 0.25
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.06 0.25 0.31 0.25 0.12 0.19 0.12 0.12
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.12 0.25 0.19 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19 0.19 0.31 0.12
  0.31 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.19 0.25 0.31
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.25 0.12
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.12 0.06
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.  1. -1.  0.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.  1.  0.  0. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0. -1.  1. -1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.  0. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 38, 0.0: 10, 1.0: 8})
2 classifiers pre label
Counter({0.0: 45, -1.0: 9, 1.0: 2})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({0.0: 43, -1.0: 13})
5 classifiers pre label
Counter({1.0: 48, 0.0: 8})
6 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
7 classifiers pre label
Counter({0.0: 46, 1.0: 10})
8 classifiers pre label
Counter({0.0: 43, -1.0: 13})
9 classifiers pre label
Counter({1.0: 53, 0.0: 3})
10 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 13})
12 classifiers pre label
Counter({1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({1.0: 53, 0.0: 3})
14 classifiers pre label
Counter({-1.0: 39, 1.0: 9, 0.0: 8})
15 classifiers pre label
Counter({0.0: 51, 1.0: 5})
16 classifiers pre label
Counter({0.0: 46, -1.0: 10})
confusion matrix
[[22  3  0  0  0]
 [11  2  0  1  0]
 [ 2  3  0  3  1]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.4 3.  2.6 3.2]
 [0.  0.  2.2 3.2 2. ]
 [0.  0.  0.  2.8 2.4]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.29 0.24 0.24 0.12 0.12 0.12 0.29 0.12 0.06 0.24 0.18 0.
  0.29 0.24 0.18]
 [0.   0.   0.18 0.18 0.24 0.12 0.18 0.29 0.29 0.29 0.24 0.24 0.12 0.24
  0.12 0.18 0.29]
 [0.   0.   0.   0.18 0.06 0.24 0.29 0.24 0.18 0.24 0.24 0.06 0.12 0.29
  0.18 0.18 0.18]
 [0.   0.   0.   0.   0.24 0.29 0.29 0.18 0.18 0.24 0.18 0.24 0.18 0.24
  0.24 0.24 0.12]
 [0.   0.   0.   0.   0.   0.18 0.24 0.18 0.18 0.24 0.18 0.   0.18 0.24
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.06 0.24 0.29 0.24 0.12 0.18 0.12 0.12
  0.18 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.24 0.12 0.24 0.18 0.12
  0.24 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.18 0.18 0.29 0.12
  0.29 0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.18 0.24 0.29
  0.24 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.24 0.12
  0.18 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.12 0.06
  0.29 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})

**********      classifier acc  **************
[0.812, 0.767, 0.182, 0.929, 0.258, 0.667, 0.769, 0.115, 0.129, 0.902, 0.667, 0.258, 0.682, 0.812, 0.667, 0.059, 0.192]
before cutting matrix
[[ 1. -1.  0. -1.  0.  1.  1.  0.  0.  1.  1.  0.  1.  1. -1.  0.  0.]
 [ 1.  0. -1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.  1.  0.  0. -1.]
 [-1.  0.  0.  0. -1. -1. -1. -1.  1.  1. -1. -1.  0. -1.  1. -1. -1.]
 [ 0.  1.  1.  0.  1.  1. -1.  0. -1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [ 0.  0. -1.  1. -1.  0.  0.  1.  1. -1.  0. -1.  0.  0. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 87, 1.0: 24})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({-1.0: 87, 1.0: 24})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 37, 1.0: 24})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({-1.0: 37, 1.0: 24})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({-1.0: 55, 1.0: 24})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 111, -1.0: 18})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 111, -1.0: 18})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 87, -1.0: 42})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 37, -1.0: 18})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({-1.0: 53, 1.0: 26})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({-1.0: 53, 1.0: 26})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 87, -1.0: 47})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 55, 1.0: 24})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({-1.0: 55, 1.0: 24})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 111, -1.0: 29})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({-1.0: 95, 1.0: 42})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
positive and negative ratio
Counter({-1.0: 47, 1.0: 8})
after cutting matrix
[[ 1. -1.  1.  1.  1.  1.  1. -1.  0.  0.]
 [ 1. -1.  0.  1. -1. -1.  1.  0.  0. -1.]
 [-1.  0. -1.  1. -1.  0. -1.  1. -1. -1.]
 [ 0.  0. -1.  0.  0.  1.  0.  1.  1.  0.]
 [ 0.  1.  0. -1.  0.  0.  0. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 111, -1.0: 29})
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 95, 1.0: 42})
Counter({1.0: 32, -1.0: 18})
Counter({-1.0: 47, 1.0: 8})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [11  2  0  1  0]
 [ 2  3  0  4  0]
 [ 2  1  0  2  0]
 [ 0  1  0  2  0]]


SVM classifier
Time: 2019-01-09 22:18:39
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1.  1. -1.  1.]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
pre label
Counter({-1.0: 35, 1.0: 32})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.17 0.17 0.   0.17 0.17]
 [0.   0.   0.   0.17 0.   0.33]
 [0.   0.   0.   0.17 0.   0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  0  2  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.   0.17 0.17]
 [0.   0.   0.   0.33 0.17 0.5 ]
 [0.   0.   0.   0.33 0.17 0.5 ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.   0.33 0.17]
 [0.   0.   0.   0.33 0.33 0.5 ]
 [0.   0.   0.   0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.25 0.5 ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.   0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.67]
 [0.   0.   0.   0.33 0.33 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 1.  0.4 0.8]
 [0.  0.  0.6 0.4 0. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None}
select_i_column
[ 1.  1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 52, -1.0: 15})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.   0.5  0.5 ]
 [0.   0.   0.   0.33 0.5  0.83]
 [0.   0.   0.   0.33 0.5  0.83]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.83 0.33 0.67 0.5 ]
 [0.   0.   0.5  0.33 0.   0.17]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 52, -1.0: 15})
6 classifiers pre label
Counter({1.0: 52, -1.0: 15})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.   0.67 0.67]
 [0.   0.   0.   0.33 0.67 1.  ]
 [0.   0.   0.   0.33 0.67 1.  ]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.71 0.29 0.57 0.43 0.43]
 [0.   0.   0.43 0.29 0.   0.14 0.14]
 [0.   0.   0.   0.43 0.43 0.29 0.29]
 [0.   0.   0.   0.   0.29 0.14 0.14]
 [0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None}
select_i_column
[ 1.  1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 52, -1.0: 15})
6 classifiers pre label
Counter({1.0: 52, -1.0: 15})
7 classifiers pre label
Counter({1.0: 52, -1.0: 15})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.   0.83 0.83]
 [0.   0.   0.   0.33 0.83 1.17]
 [0.   0.   0.   0.33 0.83 1.17]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.62 0.25 0.5  0.38 0.38 0.38]
 [0.   0.   0.38 0.25 0.   0.12 0.12 0.12]
 [0.   0.   0.   0.38 0.38 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.25 0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 52, -1.0: 15})
6 classifiers pre label
Counter({1.0: 52, -1.0: 15})
7 classifiers pre label
Counter({1.0: 52, -1.0: 15})
8 classifiers pre label
Counter({1.0: 58, -1.0: 9})
confusion matrix
[[17  0  0  0  0  0]
 [ 2  9  1  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  0  1  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.5  0.33 0.   0.83 0.83]
 [0.   0.   0.17 0.5  1.   1.33]
 [0.   0.   0.   0.33 0.83 1.17]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.44 0.56 0.22 0.44 0.33 0.33 0.33 0.22]
 [0.   0.   0.33 0.22 0.   0.11 0.11 0.11 0.22]
 [0.   0.   0.   0.33 0.33 0.22 0.22 0.22 0.56]
 [0.   0.   0.   0.   0.22 0.11 0.11 0.11 0.22]
 [0.   0.   0.   0.   0.   0.11 0.11 0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 52, -1.0: 15})
6 classifiers pre label
Counter({1.0: 52, -1.0: 15})
7 classifiers pre label
Counter({1.0: 52, -1.0: 15})
8 classifiers pre label
Counter({1.0: 58, -1.0: 9})
9 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[17  0  0  0  0  0]
 [ 2  9  1  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  0  1  0  0  0]
 [ 2  0  0  0  9  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.67 0.5  0.   0.83 0.83]
 [0.   0.   0.17 0.67 1.17 1.5 ]
 [0.   0.   0.   0.5  1.   1.33]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.5 0.2 0.4 0.3 0.3 0.3 0.2 0.1]
 [0.  0.  0.3 0.2 0.  0.1 0.1 0.1 0.2 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.2 0.2 0.5 0.6]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({1.0: 61, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
3 classifiers pre label
Counter({1.0: 58, -1.0: 9})
4 classifiers pre label
Counter({1.0: 61, -1.0: 6})
5 classifiers pre label
Counter({1.0: 52, -1.0: 15})
6 classifiers pre label
Counter({1.0: 52, -1.0: 15})
7 classifiers pre label
Counter({1.0: 52, -1.0: 15})
8 classifiers pre label
Counter({1.0: 58, -1.0: 9})
9 classifiers pre label
Counter({1.0: 45, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 42, 1.0: 25})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 2  0  0  0  9  0]
 [ 1  0  0  1  0  6]]
row HD
[[0.   0.67 0.67 0.17 0.83 1.  ]
 [0.   0.   0.33 0.83 1.17 1.67]
 [0.   0.   0.   0.5  1.17 1.33]
 [0.   0.   0.   0.   1.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.36 0.45 0.18 0.36 0.27 0.27 0.27 0.18 0.09 0.18]
 [0.   0.   0.27 0.18 0.   0.09 0.09 0.09 0.18 0.27 0.36]
 [0.   0.   0.   0.27 0.27 0.18 0.18 0.18 0.45 0.55 0.27]
 [0.   0.   0.   0.   0.18 0.09 0.09 0.09 0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.09 0.09 0.09 0.18 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})

**********      classifier acc  **************
[0.985, 0.97, 0.955, 0.97, 0.97, 0.94, 0.94, 0.94, 0.955, 0.955, 0.97]
before cutting matrix
[[ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 127, 1.0: 74})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({-1.0: 127, 1.0: 74})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 167, -1.0: 34})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 167, -1.0: 34})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 167, -1.0: 34})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 167, -1.0: 34})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 170, -1.0: 31})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 170, -1.0: 31})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 127, -1.0: 74})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 121, 1.0: 80})
positive and negative ratio
Counter({1.0: 127, -1.0: 74})
after cutting matrix
[[ 1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 192, -1.0: 9})
Counter({1.0: 176, -1.0: 25})
Counter({1.0: 192, -1.0: 9})
Counter({-1.0: 121, 1.0: 80})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  2  0  0  9  0]
 [ 1  0  0  1  0  6]]


SVM classifier
Time: 2019-01-09 22:18:42
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0. -1.  1.  1.]
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
pre label
Counter({1.0: 32, -1.0: 24, 0.0: 11})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 6  2  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  0.  0. -1.  0.  1.]
select_j_column
[ 0.  0. -1.  1. -1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 105, -1.0: 65})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 32, -1.0: 24, 0.0: 11})
1 classifiers pre label
Counter({1.0: 36, -1.0: 17, 0.0: 14})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  1  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  6  1  0]
 [ 0  0  0  0 11  0]
 [ 1  1  0  0  6  0]]
row HD
[[0.   0.33 0.33 0.17 0.33 0.33]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 1. -1.  0. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  0.  0.]
 [ 0.  1.  0.]
 [-1.  1. -1.]
 [ 1.  1.  0.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 105, -1.0: 65})
Counter({1.0: 74, -1.0: 28})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 32, -1.0: 24, 0.0: 11})
1 classifiers pre label
Counter({1.0: 36, -1.0: 17, 0.0: 14})
2 classifiers pre label
Counter({0.0: 36, 1.0: 23, -1.0: 8})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  1  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  6  1  0]
 [ 0  0  0  0 11  0]
 [ 1  1  0  0  0  6]]
row HD
[[0.   0.5  0.5  0.33 0.5  0.33]
 [0.   0.   0.33 0.5  0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 105, -1.0: 65})
Counter({1.0: 74, -1.0: 28})

**********      classifier acc  **************
[0.946, 0.945, 0.909]
before cutting matrix
[[-1. -1.  1.]
 [ 1.  0.  0.]
 [ 0.  1.  0.]
 [-1.  1. -1.]
 [ 1.  1.  0.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 105, -1.0: 65})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 105, -1.0: 65})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({1.0: 105, -1.0: 65})
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
positive and negative ratio
Counter({1.0: 74, -1.0: 28})
after cutting matrix
[[-1.  1.]
 [ 1.  0.]
 [ 0.  0.]
 [-1. -1.]
 [ 1.  0.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 65})
Counter({1.0: 74, -1.0: 28})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0 11  0  0  0  0]
 [ 1  1  0  0  0  6]]


SVM classifier
Time: 2019-01-09 22:18:43
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({1.0: 108, -1.0: 80})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 1 21  0  0  0  0  0  0  0  0]
 [ 5 21  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [21  2  0  0  0  0  0  0  0  0]
 [18  1  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 2 15  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [10  3  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 21  0  0  0  0  0  0  0  0]
 [ 1 21  0  0  0  0  0  0  4  0]
 [ 0 16  0  0  0  0  0  0  1  0]
 [ 2  2  0  0  0  0  0  0 19  0]
 [ 3  1  0  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2 15  0  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  3  0  0  0  0  0  0  9  0]]
row HD
[[0.  0.1 0.1 0.1 0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  4  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  0  0  4  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 2  0  2  0  0  0  0  0 19  0]
 [ 3  0  1  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2 14  1  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  3  0  0  0  0  0  9  0]]
row HD
[[0.  0.1 0.2 0.2 0.  0.3 0.2 0.  0.1 0.1]
 [0.  0.  0.1 0.1 0.1 0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1. -1.  1.  1.]
 [-1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  4  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  0  0  4  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 2  0  2  0  0  0  0  0 19  0]
 [ 3  0  1  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2 14  1  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  3  0  0  0  0  0  9  0]]
row HD
[[0.  0.2 0.2 0.2 0.  0.3 0.2 0.1 0.1 0.1]
 [0.  0.  0.2 0.2 0.2 0.3 0.2 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.25 1.25]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.]
 [-1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  4  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  0  0  4  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 2  0  2  0  0  0  0  0 19  0]
 [ 3  0  1  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2 14  1  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  3  0  0  0  0  0  9  0]]
row HD
[[0.  0.3 0.2 0.2 0.1 0.4 0.2 0.1 0.2 0.1]
 [0.  0.  0.3 0.3 0.2 0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.2 0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.2 1.  1. ]
 [0.  0.  1.  1.  1.4]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  4  0  0  0  0  0  0  0]
 [ 1  2 19  0  0  0  0  0  4  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 2  0  2  0  0  0  0  0 19  0]
 [ 3  0  1  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2 14  1  0  0  0  0  0  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  3  0  0  0  0  0  9  0]]
row HD
[[0.  0.3 0.2 0.2 0.1 0.5 0.2 0.1 0.2 0.1]
 [0.  0.  0.3 0.3 0.2 0.4 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.4 0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.17 0.83 0.83 0.67]
 [0.   0.   0.83 0.83 1.17 1.33]
 [0.   0.   0.   1.   1.   0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.]
 [-1.  1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  2 19  0  0  0  0  0  4  0]
 [ 0  0 11  0  0  0  0  5  1  0]
 [ 2  0  2  0  0  0  0  0 19  0]
 [ 3  0  1  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  1  0  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  3  0  0  0  0  0  9  0]]
row HD
[[0.  0.4 0.2 0.2 0.2 0.6 0.2 0.1 0.3 0.1]
 [0.  0.  0.4 0.4 0.2 0.5 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.4 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.14 0.71 0.71 0.57 0.86]
 [0.   0.   0.71 0.71 1.   1.14 1.29]
 [0.   0.   0.   0.86 0.86 0.43 0.86]
 [0.   0.   0.   0.   0.57 0.43 0.71]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  2 19  0  0  0  0  0  4  0]
 [ 0  0 11  0  0  0  0  5  1  0]
 [ 2  0  2  0  0  0  0  0 19  0]
 [ 3  0  1  0  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  1  0  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  3  0  0  0  0  0  9  0]]
row HD
[[0.  0.4 0.2 0.2 0.2 0.7 0.2 0.1 0.3 0.1]
 [0.  0.  0.4 0.4 0.2 0.6 0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.5 0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.5 0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.6 0.4 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.12 0.62 0.62 0.5  0.75 0.5 ]
 [0.   0.   0.62 0.62 0.88 1.   1.12 1.  ]
 [0.   0.   0.   0.75 0.75 0.38 0.75 0.38]
 [0.   0.   0.   0.   0.5  0.38 0.62 0.38]
 [0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  1.  0. -1.  1.  1.  0.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.5 0.2 0.3 0.3 0.7 0.3 0.2 0.4 0.2]
 [0.  0.  0.5 0.5 0.2 0.7 0.5 0.4 0.3 0.6]
 [0.  0.  0.  0.1 0.5 0.5 0.1 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.5 0.6 0.  0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.7 0.5 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.11 0.56 0.56 0.44 0.67 0.44 0.67]
 [0.   0.   0.56 0.56 0.78 0.89 1.   0.89 0.67]
 [0.   0.   0.   0.67 0.67 0.33 0.67 0.33 0.56]
 [0.   0.   0.   0.   0.44 0.33 0.56 0.33 0.78]
 [0.   0.   0.   0.   0.   0.33 0.33 0.33 1.11]
 [0.   0.   0.   0.   0.   0.   0.33 0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.33 1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.6 0.2 0.4 0.4 0.8 0.4 0.3 0.5 0.3]
 [0.  0.  0.6 0.5 0.2 0.7 0.5 0.4 0.3 0.6]
 [0.  0.  0.  0.2 0.6 0.6 0.2 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.5 0.6 0.  0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.7 0.5 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.1 0.5 0.5 0.4 0.6 0.4 0.6 0.5]
 [0.  0.  0.5 0.5 0.7 0.8 0.9 0.8 0.6 0.5]
 [0.  0.  0.  0.6 0.6 0.3 0.6 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.5 0.3 0.7 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 1.  0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.  0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 1.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.7 0.2 0.4 0.4 0.8 0.4 0.4 0.5 0.3]
 [0.  0.  0.7 0.6 0.3 0.8 0.6 0.4 0.4 0.7]
 [0.  0.  0.  0.2 0.6 0.6 0.2 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.5 0.6 0.  0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.7 0.5 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 1.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.09 0.45 0.45 0.36 0.55 0.36 0.55 0.45 0.45]
 [0.   0.   0.45 0.45 0.64 0.73 0.82 0.73 0.55 0.45 0.45]
 [0.   0.   0.   0.55 0.55 0.27 0.55 0.27 0.45 0.36 0.55]
 [0.   0.   0.   0.   0.36 0.27 0.45 0.27 0.64 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.27 0.27 0.27 0.91 0.55 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.   0.64 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.91 0.55 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.8 0.2 0.4 0.5 0.9 0.4 0.5 0.6 0.4]
 [0.  0.  0.8 0.7 0.4 0.9 0.7 0.5 0.5 0.8]
 [0.  0.  0.  0.2 0.7 0.7 0.2 0.7 0.8 0.6]
 [0.  0.  0.  0.  0.6 0.7 0.  0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.7 0.6 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.7 1.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.08 0.42 0.42 0.33 0.5  0.33 0.5  0.42 0.42 0.67]
 [0.   0.   0.42 0.42 0.58 0.67 0.75 0.67 0.5  0.42 0.42 0.75]
 [0.   0.   0.   0.5  0.5  0.25 0.5  0.25 0.42 0.33 0.5  0.75]
 [0.   0.   0.   0.   0.33 0.25 0.42 0.25 0.58 0.33 0.   0.42]
 [0.   0.   0.   0.   0.   0.25 0.25 0.25 0.83 0.5  0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.25 0.   0.58 0.25 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.83 0.5  0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.25 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.58 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.8 0.2 0.4 0.5 1.  0.4 0.5 0.6 0.4]
 [0.  0.  0.8 0.7 0.4 1.  0.7 0.5 0.5 0.8]
 [0.  0.  0.  0.2 0.7 0.8 0.2 0.7 0.8 0.6]
 [0.  0.  0.  0.  0.6 0.8 0.  0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.8 0.6 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.8 1.1 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.08 0.38 0.38 0.31 0.46 0.31 0.46 0.38 0.38 0.62 0.31]
 [0.   0.   0.38 0.38 0.54 0.62 0.69 0.62 0.46 0.38 0.38 0.69 0.62]
 [0.   0.   0.   0.46 0.46 0.23 0.46 0.23 0.38 0.31 0.46 0.69 0.23]
 [0.   0.   0.   0.   0.31 0.23 0.38 0.23 0.54 0.31 0.   0.38 0.23]
 [0.   0.   0.   0.   0.   0.23 0.23 0.23 0.77 0.46 0.31 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.   0.54 0.23 0.23 0.46 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.77 0.46 0.38 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.23 0.23 0.46 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.54 0.69 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.62 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.8 0.2 0.4 0.6 1.  0.4 0.5 0.6 0.4]
 [0.  0.  0.8 0.7 0.5 1.  0.7 0.5 0.5 0.8]
 [0.  0.  0.  0.2 0.8 0.8 0.2 0.7 0.8 0.6]
 [0.  0.  0.  0.  0.7 0.8 0.  0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.9 0.7 0.6 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 1.1 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.07 0.36 0.36 0.29 0.43 0.29 0.43 0.36 0.36 0.57 0.29 0.43]
 [0.   0.   0.36 0.36 0.5  0.57 0.64 0.57 0.43 0.36 0.36 0.64 0.57 0.43]
 [0.   0.   0.   0.43 0.43 0.21 0.43 0.21 0.36 0.29 0.43 0.64 0.21 0.36]
 [0.   0.   0.   0.   0.29 0.21 0.36 0.21 0.5  0.29 0.   0.36 0.21 0.21]
 [0.   0.   0.   0.   0.   0.21 0.21 0.21 0.71 0.43 0.29 0.36 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.21 0.   0.5  0.21 0.21 0.43 0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.71 0.43 0.36 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.21 0.21 0.43 0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.64 0.5  0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.57 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0. -1.  1.  0. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.9 0.2 0.5 0.7 1.  0.5 0.6 0.7 0.5]
 [0.  0.  0.9 0.8 0.5 1.1 0.8 0.5 0.5 0.8]
 [0.  0.  0.  0.3 0.9 0.8 0.3 0.8 0.9 0.7]
 [0.  0.  0.  0.  0.8 0.9 0.  0.6 0.8 0.5]
 [0.  0.  0.  0.  0.  1.  0.8 0.6 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.9 1.2 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.07 0.33 0.33 0.27 0.4  0.27 0.4  0.33 0.33 0.53 0.27 0.4
  0.27]
 [0.   0.   0.33 0.33 0.47 0.53 0.6  0.53 0.4  0.33 0.33 0.6  0.53 0.4
  0.4 ]
 [0.   0.   0.   0.4  0.4  0.2  0.4  0.2  0.33 0.27 0.4  0.6  0.2  0.33
  0.2 ]
 [0.   0.   0.   0.   0.27 0.2  0.33 0.2  0.47 0.27 0.   0.33 0.2  0.2
  0.47]
 [0.   0.   0.   0.   0.   0.2  0.2  0.2  0.67 0.4  0.27 0.33 0.2  0.2
  0.53]
 [0.   0.   0.   0.   0.   0.   0.2  0.   0.47 0.2  0.2  0.4  0.   0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.67 0.4  0.33 0.27 0.2  0.27
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.2  0.2  0.4  0.   0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.6  0.47 0.53
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.53 0.2  0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.2
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0. -1.  1.  0. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.9 0.2 0.6 0.8 1.  0.6 0.7 0.8 0.6]
 [0.  0.  0.9 0.9 0.6 1.1 0.9 0.6 0.6 0.9]
 [0.  0.  0.  0.4 1.  0.8 0.4 0.9 1.  0.8]
 [0.  0.  0.  0.  0.9 1.  0.  0.7 0.9 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.6 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  1.  1.3 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.06 0.31 0.31 0.25 0.38 0.25 0.38 0.31 0.31 0.5  0.25 0.38
  0.25 0.38]
 [0.   0.   0.31 0.31 0.44 0.5  0.56 0.5  0.38 0.31 0.31 0.56 0.5  0.38
  0.38 0.38]
 [0.   0.   0.   0.38 0.38 0.19 0.38 0.19 0.31 0.25 0.38 0.56 0.19 0.31
  0.19 0.44]
 [0.   0.   0.   0.   0.25 0.19 0.31 0.19 0.44 0.25 0.   0.31 0.19 0.19
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.19 0.19 0.19 0.62 0.38 0.25 0.31 0.19 0.19
  0.5  0.31]
 [0.   0.   0.   0.   0.   0.   0.19 0.   0.44 0.19 0.19 0.38 0.   0.12
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.62 0.38 0.31 0.25 0.19 0.25
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.19 0.19 0.38 0.   0.12
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.56 0.44 0.5
  0.12 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.5  0.19 0.19
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.19
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38
  0.56 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.9 0.3 0.6 0.8 1.  0.6 0.7 0.8 0.6]
 [0.  0.  1.  0.9 0.6 1.1 0.9 0.6 0.6 0.9]
 [0.  0.  0.  0.5 1.1 0.9 0.5 1.  1.1 0.9]
 [0.  0.  0.  0.  0.9 1.  0.  0.7 0.9 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.6 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  1.  1.3 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.06 0.29 0.29 0.24 0.35 0.24 0.35 0.29 0.29 0.47 0.24 0.35
  0.24 0.35 0.24]
 [0.   0.   0.29 0.29 0.41 0.47 0.53 0.47 0.35 0.29 0.29 0.53 0.47 0.35
  0.35 0.35 0.35]
 [0.   0.   0.   0.35 0.35 0.18 0.35 0.18 0.29 0.24 0.35 0.53 0.18 0.29
  0.18 0.41 0.18]
 [0.   0.   0.   0.   0.24 0.18 0.29 0.18 0.41 0.24 0.   0.29 0.18 0.18
  0.41 0.35 0.18]
 [0.   0.   0.   0.   0.   0.18 0.18 0.18 0.59 0.35 0.24 0.29 0.18 0.18
  0.47 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.18 0.   0.41 0.18 0.18 0.35 0.   0.12
  0.29 0.35 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.59 0.35 0.29 0.24 0.18 0.24
  0.47 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.18 0.18 0.35 0.   0.12
  0.29 0.35 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.41 0.53 0.41 0.47
  0.12 0.59 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.47 0.18 0.18
  0.29 0.29 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.18
  0.41 0.35 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35
  0.53 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.29 0.35 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.41 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  1.  0.3 0.6 0.8 1.  0.6 0.8 0.8 0.6]
 [0.  0.  1.1 1.  0.7 1.2 1.  0.6 0.7 1. ]
 [0.  0.  0.  0.5 1.1 0.9 0.5 1.1 1.1 0.9]
 [0.  0.  0.  0.  0.9 1.  0.  0.8 0.9 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.7 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  1.  1.4 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.06 0.28 0.28 0.22 0.33 0.22 0.33 0.28 0.28 0.44 0.22 0.33
  0.22 0.33 0.22 0.28]
 [0.   0.   0.28 0.28 0.39 0.44 0.5  0.44 0.33 0.28 0.28 0.5  0.44 0.33
  0.33 0.33 0.33 0.28]
 [0.   0.   0.   0.33 0.33 0.17 0.33 0.17 0.28 0.22 0.33 0.5  0.17 0.28
  0.17 0.39 0.17 0.33]
 [0.   0.   0.   0.   0.22 0.17 0.28 0.17 0.39 0.22 0.   0.28 0.17 0.17
  0.39 0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17 0.17 0.17 0.56 0.33 0.22 0.28 0.17 0.17
  0.44 0.28 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.17 0.   0.39 0.17 0.17 0.33 0.   0.11
  0.28 0.33 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.56 0.33 0.28 0.22 0.17 0.22
  0.44 0.22 0.28 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.17 0.17 0.33 0.   0.11
  0.28 0.33 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.39 0.5  0.39 0.44
  0.11 0.56 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.44 0.17 0.17
  0.28 0.28 0.06 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.17 0.17
  0.39 0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33
  0.5  0.22 0.39 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11
  0.28 0.33 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.39 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.5  0.28 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  0. -1.  1.  0.  0.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
18 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  1.1 0.3 0.7 0.9 1.1 0.7 0.9 0.9 0.7]
 [0.  0.  1.2 1.  0.7 1.2 1.  0.6 0.7 1. ]
 [0.  0.  0.  0.6 1.2 1.  0.6 1.2 1.2 1. ]
 [0.  0.  0.  0.  0.9 1.  0.  0.8 0.9 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.7 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  1.  1.4 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.05 0.26 0.26 0.21 0.32 0.21 0.32 0.26 0.26 0.42 0.21 0.32
  0.21 0.32 0.21 0.26 0.26]
 [0.   0.   0.26 0.26 0.37 0.42 0.47 0.42 0.32 0.26 0.26 0.47 0.42 0.32
  0.32 0.32 0.32 0.26 0.26]
 [0.   0.   0.   0.32 0.32 0.16 0.32 0.16 0.26 0.21 0.32 0.47 0.16 0.26
  0.16 0.37 0.16 0.32 0.21]
 [0.   0.   0.   0.   0.21 0.16 0.26 0.16 0.37 0.21 0.   0.26 0.16 0.16
  0.37 0.32 0.16 0.   0.21]
 [0.   0.   0.   0.   0.   0.16 0.16 0.16 0.53 0.32 0.21 0.26 0.16 0.16
  0.42 0.26 0.26 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.16 0.   0.37 0.16 0.16 0.32 0.   0.11
  0.26 0.32 0.11 0.16 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.16 0.53 0.32 0.26 0.21 0.16 0.21
  0.42 0.21 0.26 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.16 0.16 0.32 0.   0.11
  0.26 0.32 0.11 0.16 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.37 0.47 0.37 0.42
  0.11 0.53 0.37 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.42 0.16 0.16
  0.26 0.26 0.05 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.16 0.16
  0.37 0.32 0.16 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32
  0.47 0.21 0.37 0.26 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11
  0.26 0.32 0.11 0.16 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.32 0.37 0.11 0.16 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.47 0.26 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.16 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 0.  1.  0. -1.  1.  0. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1. -1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1. -1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
18 classifiers pre label
Counter({1.0: 147, -1.0: 41})
19 classifiers pre label
Counter({-1.0: 175, 0.0: 13})
confusion matrix
[[17  0  0  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 3  0 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 4  0  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  1.2 0.3 0.7 1.  1.2 0.7 0.9 1.  0.7]
 [0.  0.  1.3 1.1 0.7 1.3 1.1 0.7 0.7 1.1]
 [0.  0.  0.  0.6 1.3 1.1 0.6 1.2 1.3 1. ]
 [0.  0.  0.  0.  1.  1.1 0.  0.8 1.  0.5]
 [0.  0.  0.  0.  0.  1.2 1.  0.8 0.2 0.7]
 [0.  0.  0.  0.  0.  0.  1.1 1.5 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.05 0.25 0.25 0.2  0.3  0.2  0.3  0.25 0.25 0.4  0.2  0.3
  0.2  0.3  0.2  0.25 0.25 0.25]
 [0.   0.   0.25 0.25 0.35 0.4  0.45 0.4  0.3  0.25 0.25 0.45 0.4  0.3
  0.3  0.3  0.3  0.25 0.25 0.2 ]
 [0.   0.   0.   0.3  0.3  0.15 0.3  0.15 0.25 0.2  0.3  0.45 0.15 0.25
  0.15 0.35 0.15 0.3  0.2  0.2 ]
 [0.   0.   0.   0.   0.2  0.15 0.25 0.15 0.35 0.2  0.   0.25 0.15 0.15
  0.35 0.3  0.15 0.   0.2  0.35]
 [0.   0.   0.   0.   0.   0.15 0.15 0.15 0.5  0.3  0.2  0.25 0.15 0.15
  0.4  0.25 0.25 0.2  0.3  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.15 0.   0.35 0.15 0.15 0.3  0.   0.1
  0.25 0.3  0.1  0.15 0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.5  0.3  0.25 0.2  0.15 0.2
  0.4  0.2  0.25 0.25 0.3  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.15 0.15 0.3  0.   0.1
  0.25 0.3  0.1  0.15 0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.45 0.35 0.4
  0.1  0.5  0.35 0.35 0.35 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.4  0.15 0.15
  0.25 0.25 0.05 0.2  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.15 0.15
  0.35 0.3  0.15 0.   0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3
  0.45 0.2  0.35 0.25 0.4  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1
  0.25 0.3  0.1  0.15 0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.35 0.1  0.15 0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.45 0.25 0.35 0.25 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.3  0.3  0.25 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.15 0.05 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1. -1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.  0. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1. -1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
18 classifiers pre label
Counter({1.0: 147, -1.0: 41})
19 classifiers pre label
Counter({-1.0: 175, 0.0: 13})
20 classifiers pre label
Counter({-1.0: 98, 1.0: 90})
confusion matrix
[[13  0  0  0  3  0  0  1  0  1]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  0  0  2  1  3]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  2  0  0  0 19  0]
 [ 0  0  0  1  3  0  0  0 13  2]
 [ 2  0  0  0  0  0  0  0  1 16]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  0  0  0  2  9]
 [ 0  0  0  3  1  0  0  0  9  0]]
row HD
[[0.  1.3 0.3 0.7 1.1 1.3 0.7 1.  1.1 0.7]
 [0.  0.  1.4 1.2 0.7 1.3 1.2 0.7 0.7 1.2]
 [0.  0.  0.  0.6 1.4 1.2 0.6 1.3 1.4 1. ]
 [0.  0.  0.  0.  1.1 1.2 0.  0.9 1.1 0.5]
 [0.  0.  0.  0.  0.  1.2 1.1 0.8 0.2 0.8]
 [0.  0.  0.  0.  0.  0.  1.2 1.5 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.05 0.24 0.24 0.19 0.29 0.19 0.29 0.24 0.24 0.38 0.19 0.29
  0.19 0.29 0.19 0.24 0.24 0.24 0.29]
 [0.   0.   0.24 0.24 0.33 0.38 0.43 0.38 0.29 0.24 0.24 0.43 0.38 0.29
  0.29 0.29 0.29 0.24 0.24 0.19 0.29]
 [0.   0.   0.   0.29 0.29 0.14 0.29 0.14 0.24 0.19 0.29 0.43 0.14 0.24
  0.14 0.33 0.14 0.29 0.19 0.19 0.33]
 [0.   0.   0.   0.   0.19 0.14 0.24 0.14 0.33 0.19 0.   0.24 0.14 0.14
  0.33 0.29 0.14 0.   0.19 0.33 0.14]
 [0.   0.   0.   0.   0.   0.14 0.14 0.14 0.48 0.29 0.19 0.24 0.14 0.14
  0.38 0.24 0.24 0.19 0.29 0.48 0.05]
 [0.   0.   0.   0.   0.   0.   0.14 0.   0.33 0.14 0.14 0.29 0.   0.1
  0.24 0.29 0.1  0.14 0.14 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.48 0.29 0.24 0.19 0.14 0.19
  0.38 0.19 0.24 0.24 0.29 0.48 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.14 0.14 0.29 0.   0.1
  0.24 0.29 0.1  0.14 0.14 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.43 0.33 0.38
  0.1  0.48 0.33 0.33 0.33 0.1  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.38 0.14 0.14
  0.24 0.24 0.05 0.19 0.   0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.14 0.14
  0.33 0.29 0.14 0.   0.19 0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29
  0.43 0.19 0.33 0.24 0.38 0.43 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1
  0.24 0.29 0.1  0.14 0.14 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.33 0.1  0.14 0.14 0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.43 0.24 0.33 0.24 0.19 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29 0.29 0.24 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.05 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.19 0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  0. -1.  1.  0.  0.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  22 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1. -1.  1.  0.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.  1. -1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1. -1.  1.  0.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.  1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.  0. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
18 classifiers pre label
Counter({1.0: 147, -1.0: 41})
19 classifiers pre label
Counter({-1.0: 175, 0.0: 13})
20 classifiers pre label
Counter({-1.0: 98, 1.0: 90})
21 classifiers pre label
Counter({-1.0: 90, 0.0: 64, 1.0: 34})
confusion matrix
[[13  1  0  0  3  0  0  0  0  1]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  1  3]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  2  0  0  0 19  0]
 [ 0  0  0  1  3  0  0  0 13  2]
 [ 2  0  0  0  0  0  0  0  1 16]
 [ 0  2  0  1  2  0  0 12  0  0]
 [ 2  0  0  0  1  0  0  0  2  9]
 [ 0  0  0  3  1  0  0  0  9  0]]
row HD
[[0.  1.3 0.3 0.8 1.2 1.4 0.8 1.1 1.2 0.8]
 [0.  0.  1.4 1.3 0.8 1.4 1.3 0.8 0.8 1.3]
 [0.  0.  0.  0.7 1.5 1.3 0.7 1.4 1.5 1.1]
 [0.  0.  0.  0.  1.1 1.3 0.  1.  1.1 0.5]
 [0.  0.  0.  0.  0.  1.3 1.1 0.9 0.2 0.8]
 [0.  0.  0.  0.  0.  0.  1.3 1.5 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.05 0.23 0.23 0.18 0.27 0.18 0.27 0.23 0.23 0.36 0.18 0.27
  0.18 0.27 0.18 0.23 0.23 0.23 0.27 0.32]
 [0.   0.   0.23 0.23 0.32 0.36 0.41 0.36 0.27 0.23 0.23 0.41 0.36 0.27
  0.27 0.27 0.27 0.23 0.23 0.18 0.27 0.27]
 [0.   0.   0.   0.27 0.27 0.14 0.27 0.14 0.23 0.18 0.27 0.41 0.14 0.23
  0.14 0.32 0.14 0.27 0.18 0.18 0.32 0.32]
 [0.   0.   0.   0.   0.18 0.14 0.23 0.14 0.32 0.18 0.   0.23 0.14 0.14
  0.32 0.27 0.14 0.   0.18 0.32 0.14 0.41]
 [0.   0.   0.   0.   0.   0.14 0.14 0.14 0.45 0.27 0.18 0.23 0.14 0.14
  0.36 0.23 0.23 0.18 0.27 0.45 0.05 0.32]
 [0.   0.   0.   0.   0.   0.   0.14 0.   0.32 0.14 0.14 0.27 0.   0.09
  0.23 0.27 0.09 0.14 0.14 0.32 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.45 0.27 0.23 0.18 0.14 0.18
  0.36 0.18 0.23 0.23 0.27 0.45 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.14 0.14 0.27 0.   0.09
  0.23 0.27 0.09 0.14 0.14 0.32 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.41 0.32 0.36
  0.09 0.45 0.32 0.32 0.32 0.09 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.36 0.14 0.14
  0.23 0.23 0.05 0.18 0.   0.23 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.14 0.14
  0.32 0.27 0.14 0.   0.18 0.32 0.14 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27
  0.41 0.18 0.32 0.23 0.36 0.41 0.23 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09
  0.23 0.27 0.09 0.14 0.14 0.32 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27 0.32 0.09 0.14 0.14 0.36 0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.41 0.23 0.32 0.23 0.18 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.27 0.27 0.23 0.36 0.23 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.05 0.27 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.18 0.32 0.14 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.23 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.41 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  1.  0. -1.  1.  1.  0.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1. -1.  1.  0.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.  1. -1.  0.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1. -1.  1.  0.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.  1. -1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.  0. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
18 classifiers pre label
Counter({1.0: 147, -1.0: 41})
19 classifiers pre label
Counter({-1.0: 175, 0.0: 13})
20 classifiers pre label
Counter({-1.0: 98, 1.0: 90})
21 classifiers pre label
Counter({-1.0: 90, 0.0: 64, 1.0: 34})
22 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  1  0  0  3  0  0  0  0  1]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  1  3]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  2  0  0  0 19  0]
 [ 0  0  0  1  3  0  0  0 13  2]
 [ 2  0  0  0  0  0  0  0  1 16]
 [ 0  2  0  1  2  0  0 12  0  0]
 [ 2  0  0  0  1  0  0  0  2  9]
 [ 0  0  0  3  1  0  0  0  9  0]]
row HD
[[0.  1.3 0.3 0.8 1.2 1.5 0.8 1.1 1.2 0.8]
 [0.  0.  1.4 1.3 0.8 1.5 1.3 0.8 0.8 1.3]
 [0.  0.  0.  0.7 1.5 1.4 0.7 1.4 1.5 1.1]
 [0.  0.  0.  0.  1.1 1.4 0.  1.  1.1 0.5]
 [0.  0.  0.  0.  0.  1.4 1.1 0.9 0.2 0.8]
 [0.  0.  0.  0.  0.  0.  1.4 1.6 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.04 0.22 0.22 0.17 0.26 0.17 0.26 0.22 0.22 0.35 0.17 0.26
  0.17 0.26 0.17 0.22 0.22 0.22 0.26 0.3  0.17]
 [0.   0.   0.22 0.22 0.3  0.35 0.39 0.35 0.26 0.22 0.22 0.39 0.35 0.26
  0.26 0.26 0.26 0.22 0.22 0.17 0.26 0.26 0.35]
 [0.   0.   0.   0.26 0.26 0.13 0.26 0.13 0.22 0.17 0.26 0.39 0.13 0.22
  0.13 0.3  0.13 0.26 0.17 0.17 0.3  0.3  0.13]
 [0.   0.   0.   0.   0.17 0.13 0.22 0.13 0.3  0.17 0.   0.22 0.13 0.13
  0.3  0.26 0.13 0.   0.17 0.3  0.13 0.39 0.13]
 [0.   0.   0.   0.   0.   0.13 0.13 0.13 0.43 0.26 0.17 0.22 0.13 0.13
  0.35 0.22 0.22 0.17 0.26 0.43 0.04 0.3  0.13]
 [0.   0.   0.   0.   0.   0.   0.13 0.   0.3  0.13 0.13 0.26 0.   0.09
  0.22 0.26 0.09 0.13 0.13 0.3  0.17 0.39 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.43 0.26 0.22 0.17 0.13 0.17
  0.35 0.17 0.22 0.22 0.26 0.43 0.17 0.35 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.13 0.13 0.26 0.   0.09
  0.22 0.26 0.09 0.13 0.13 0.3  0.17 0.39 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.39 0.3  0.35
  0.09 0.43 0.3  0.3  0.3  0.09 0.39 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.35 0.13 0.13
  0.22 0.22 0.04 0.17 0.   0.22 0.3  0.35 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.13 0.13
  0.3  0.26 0.13 0.   0.17 0.3  0.13 0.39 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.26
  0.39 0.17 0.3  0.22 0.35 0.39 0.22 0.43 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09
  0.22 0.26 0.09 0.13 0.13 0.3  0.17 0.39 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.3  0.09 0.13 0.13 0.35 0.17 0.3  0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.39 0.22 0.3  0.22 0.17 0.39 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.26 0.22 0.35 0.22 0.43 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.13 0.04 0.26 0.26 0.35 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.17 0.3  0.13 0.39 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.22 0.3  0.35 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.39 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.35 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1.  0. -1.  1.  0.  0.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1. -1.  1.  0.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.  1. -1.  0.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1. -1.  1.  0.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.  1. -1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.  0. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 108, -1.0: 80})
1 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 149, -1.0: 39})
4 classifiers pre label
Counter({1.0: 111, -1.0: 77})
5 classifiers pre label
Counter({1.0: 188})
6 classifiers pre label
Counter({1.0: 114, 0.0: 74})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 82, -1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 149, -1.0: 39})
11 classifiers pre label
Counter({1.0: 95, 0.0: 93})
12 classifiers pre label
Counter({1.0: 188})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 116, 0.0: 49, -1.0: 23})
15 classifiers pre label
Counter({0.0: 80, 1.0: 54, -1.0: 54})
16 classifiers pre label
Counter({1.0: 170, -1.0: 18})
17 classifiers pre label
Counter({1.0: 149, -1.0: 39})
18 classifiers pre label
Counter({1.0: 147, -1.0: 41})
19 classifiers pre label
Counter({-1.0: 175, 0.0: 13})
20 classifiers pre label
Counter({-1.0: 98, 1.0: 90})
21 classifiers pre label
Counter({-1.0: 90, 0.0: 64, 1.0: 34})
22 classifiers pre label
Counter({1.0: 188})
23 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  0  0  3  0  0  1  0  1]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  0  0  2  1  3]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  2  0  0  0 19  0]
 [ 0  0  0  1  3  0  0  0 13  2]
 [ 2  0  0  0  0  0  0  0  1 16]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  0  0  0  2  9]
 [ 0  0  0  3  1  0  0  0  9  0]]
row HD
[[0.  1.4 0.3 0.8 1.2 1.5 0.8 1.1 1.2 0.8]
 [0.  0.  1.5 1.4 0.9 1.6 1.4 0.9 0.9 1.4]
 [0.  0.  0.  0.7 1.5 1.4 0.7 1.4 1.5 1.1]
 [0.  0.  0.  0.  1.1 1.4 0.  1.  1.1 0.5]
 [0.  0.  0.  0.  0.  1.4 1.1 0.9 0.2 0.8]
 [0.  0.  0.  0.  0.  0.  1.4 1.6 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.04 0.21 0.21 0.17 0.25 0.17 0.25 0.21 0.21 0.33 0.17 0.25
  0.17 0.25 0.17 0.21 0.21 0.21 0.25 0.29 0.17 0.17]
 [0.   0.   0.21 0.21 0.29 0.33 0.38 0.33 0.25 0.21 0.21 0.38 0.33 0.25
  0.25 0.25 0.25 0.21 0.21 0.17 0.25 0.25 0.33 0.25]
 [0.   0.   0.   0.25 0.25 0.12 0.25 0.12 0.21 0.17 0.25 0.38 0.12 0.21
  0.12 0.29 0.12 0.25 0.17 0.17 0.29 0.29 0.12 0.21]
 [0.   0.   0.   0.   0.17 0.12 0.21 0.12 0.29 0.17 0.   0.21 0.12 0.12
  0.29 0.25 0.12 0.   0.17 0.29 0.12 0.38 0.12 0.04]
 [0.   0.   0.   0.   0.   0.12 0.12 0.12 0.42 0.25 0.17 0.21 0.12 0.12
  0.33 0.21 0.21 0.17 0.25 0.42 0.04 0.29 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.12 0.   0.29 0.12 0.12 0.25 0.   0.08
  0.21 0.25 0.08 0.12 0.12 0.29 0.17 0.38 0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.42 0.25 0.21 0.17 0.12 0.17
  0.33 0.17 0.21 0.21 0.25 0.42 0.17 0.33 0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.12 0.12 0.25 0.   0.08
  0.21 0.25 0.08 0.12 0.12 0.29 0.17 0.38 0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.38 0.29 0.33
  0.08 0.42 0.29 0.29 0.29 0.08 0.38 0.21 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.12 0.12
  0.21 0.21 0.04 0.17 0.   0.21 0.29 0.33 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.12 0.12
  0.29 0.25 0.12 0.   0.17 0.29 0.12 0.38 0.12 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25
  0.38 0.17 0.29 0.21 0.33 0.38 0.21 0.42 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08
  0.21 0.25 0.08 0.12 0.12 0.29 0.17 0.38 0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.29 0.08 0.12 0.12 0.33 0.17 0.29 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38 0.21 0.29 0.21 0.17 0.38 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.25 0.21 0.33 0.21 0.42 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.12 0.04 0.25 0.25 0.33 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.17 0.29 0.12 0.38 0.12 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.21 0.29 0.33 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.38 0.29 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})

**********      classifier acc  **************
[0.654, 0.718, 0.681, 0.915, 0.654, 0.899, 0.597, 0.899, 0.488, 0.91, 0.915, 0.676, 0.899, 0.878, 0.64, 0.522, 0.947, 0.915, 0.91, 0.615, 0.761, 0.598, 0.899, 0.883]
before cutting matrix
[[ 1. -1.  1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  1.
  -1. -1.  1.  0.  1.  1.]
 [-1. -1.  1. -1. -1.  1.  0.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.
   1.  1. -1.  0.  1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  0. -1. -1.  1.
  -1. -1.  1.  0.  1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0.  1.  1.
   1.  1. -1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1. -1.  0.  1.  1.  0. -1.  1.  0. -1.  1.  1.
   1.  0. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1.  1.  0.  1. -1.
   1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.
   1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.  1.  1.  1.  1.
   1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 281, -1.0: 281})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 339, -1.0: 223})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 322, -1.0: 240})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 322, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 322, -1.0: 67})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({-1.0: 216, 1.0: 173})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 216, 1.0: 173})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 205, -1.0: 58})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 205, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 290, -1.0: 99})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({1.0: 290, -1.0: 99})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({-1.0: 231, 1.0: 150})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 231, 1.0: 150})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 322, 1.0: 173})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 322, 1.0: 173})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 306, 1.0: 256})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 306, 1.0: 256})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({-1.0: 265, 1.0: 133})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
positive and negative ratio
Counter({-1.0: 265, 1.0: 133})
after cutting matrix
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 438, -1.0: 124})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 495, -1.0: 67})
Counter({1.0: 504, -1.0: 58})
cutting matrix's confusion matrix
[[13  0  0  3  0  0  0  1  1  0]
 [ 0  0  0  5  0  0  0 17  0  0]
 [ 1  0 17  2  0  0  0  2  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  4  0  0  0  0 19  0]
 [ 0  0  0  4  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  0  3  0  0  0 14  0  0]
 [ 2  0  0  1  0  0  0  0 11  0]
 [ 0  0  0  4  0  0  0  0  9  0]]


SVM classifier
Time: 2019-01-09 22:19:15
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
confusion matrix
[[13  1  4  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [ 3  2 21  0  0  0  0  0  0  0]
 [10  0  7  0  0  0  0  0  0  0]
 [ 2  0 21  0  0  0  0  0  0  0]
 [ 1  0 18  0  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 1  2 14  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]
 [ 3  0 10  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [-1. -1.]
 [ 0. -1.]
 [ 0.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0 18  0  0  0  0]
 [ 1  2 18  2  0  0  3  0  0  0]
 [ 0  0  2 10  0  5  0  0  0  0]
 [ 0  0 19  2  0  2  0  0  0  0]
 [ 0  0 13  1  0  3  2  0  0  0]
 [ 2  0  1  0  0  0 16  0  0  0]
 [ 0  2  0  1  0 14  0  0  0  0]
 [ 2  0  2  0  0  1  9  0  0  0]
 [ 0  0  9  3  0  1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.2 0.1 0.2 0.1 0.1 0.1]
 [0.  0.  0.1 0.1 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  0.]
 [ 1. -1.  1.]
 [ 0. -1.  1.]
 [-1. -1.  1.]
 [ 0. -1. -1.]
 [ 0.  0.  1.]
 [ 0.  1.  1.]
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0 18  0  0  0  0]
 [ 1  2 18  2  0  0  3  0  0  0]
 [ 0  0  2 10  0  5  0  0  0  0]
 [ 0  0 19  2  0  2  0  0  0  0]
 [ 0  0 13  1  0  3  2  0  0  0]
 [ 2  0  1  0  0  0 16  0  0  0]
 [ 0  2  0  1  0 14  0  0  0  0]
 [ 2  0  2  0  0  1  9  0  0  0]
 [ 0  0  9  3  0  1  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.3 0.2 0.3 0.2 0.2 0.2]
 [0.  0.  0.1 0.1 0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 3.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  0.  1.]
 [ 1. -1.  1.  0.]
 [ 0. -1.  1.  1.]
 [-1. -1.  1.  0.]
 [ 0. -1. -1.  1.]
 [ 0.  0.  1.  1.]
 [ 0.  1.  1.  1.]
 [ 0.  0.  1. -1.]
 [ 0.  0.  1. -1.]
 [ 0.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 18  2  0  0  3  0  0  0]
 [ 0  0  2 10  0  0  0  5  0  0]
 [ 0  0 19  2  0  2  0  0  0  0]
 [ 0  0 13  1  0  3  2  0  0  0]
 [ 2  0  1  0  0  0 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  2  0  0  1  9  0  0  0]
 [ 0  0  9  3  0  1  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.3 0.3 0.2 0.3 0.3 0.3 0.2]
 [0.  0.  0.2 0.1 0.3 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.2 0.1 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 2.25 2.5 ]
 [0.   0.   1.75 2.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  0.  1.  1.]
 [ 1. -1.  1.  0. -1.]
 [ 0. -1.  1.  1. -1.]
 [-1. -1.  1.  0.  1.]
 [ 0. -1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.]
 [ 0.  1.  1.  1. -1.]
 [ 0.  0.  1. -1.  0.]
 [ 0.  0.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
confusion matrix
[[13  1  0  0  0  4  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  4  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 18  0  0  0  0]
 [ 2  0  0  0  0 17  0  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.3 0.4 0.2 0.4 0.4 0.3 0.2]
 [0.  0.  0.2 0.2 0.3 0.4 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.3 0.1 0.2 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.8 2.  1.8]
 [0.  0.  1.4 1.8 1.2]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.]
 [ 1. -1.  1.  0. -1.  0.]
 [ 0. -1.  1.  1. -1.  1.]
 [-1. -1.  1.  0.  1.  0.]
 [ 0. -1. -1.  1. -1. -1.]
 [ 0.  0.  1.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.]
 [ 0.  0.  1. -1.  0. -1.]
 [ 0.  0.  1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
confusion matrix
[[13  1  0  0  0  3  0  0  0  1]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  0  4]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  0 15]
 [ 2  0  0  0  0  0  0  0  0 17]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  0 11]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.6 0.4 0.4 0.5 0.2 0.5 0.5 0.4 0.3]
 [0.  0.  0.3 0.2 0.4 0.5 0.4 0.5 0.5 0.4]
 [0.  0.  0.  0.4 0.2 0.2 0.2 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.5  1.67 1.5  1.5 ]
 [0.   0.   1.17 1.5  1.   1.33]
 [0.   0.   0.   1.   0.83 1.17]
 [0.   0.   0.   0.   1.17 0.5 ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1. -1. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.]
 [ 0. -1.  1.  1. -1.  1. -1.]
 [-1. -1.  1.  0.  1.  0.  1.]
 [ 0. -1. -1.  1. -1. -1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
confusion matrix
[[13  1  0  0  0  3  0  0  0  1]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  3  0  0  0  0  0  3]
 [ 0  0  1 11  0  0  0  5  0  0]
 [ 0  0  0 21  0  2  0  0  0  0]
 [ 0  0  0 14  0  3  0  0  0  2]
 [ 2  0  0  1  0  0  0  0  0 16]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  2  0  1  0  0  0  9]
 [ 0  0  0 12  0  1  0  0  0  0]]
row HD
[[0.  0.7 0.5 0.5 0.6 0.3 0.6 0.5 0.5 0.3]
 [0.  0.  0.3 0.3 0.5 0.6 0.5 0.6 0.6 0.5]
 [0.  0.  0.  0.5 0.3 0.3 0.3 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.2 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 1.29 1.43 1.29 1.29 1.14]
 [0.   0.   1.   1.29 0.86 1.14 0.57]
 [0.   0.   0.   0.86 0.71 1.   0.71]
 [0.   0.   0.   0.   1.   0.43 1.  ]
 [0.   0.   0.   0.   0.   0.86 0.57]
 [0.   0.   0.   0.   0.   0.   1.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
confusion matrix
[[13  0  1  0  0  3  0  0  0  1]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  0  3]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  0  9]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.8 0.6 0.6 0.7 0.4 0.7 0.6 0.6 0.4]
 [0.  0.  0.4 0.3 0.6 0.7 0.5 0.7 0.6 0.5]
 [0.  0.  0.  0.6 0.3 0.3 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.5 0.5 0.7 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 1.12 1.25 1.12 1.12 1.   1.12]
 [0.   0.   0.88 1.12 0.75 1.   0.5  0.75]
 [0.   0.   0.   0.75 0.62 0.88 0.62 0.38]
 [0.   0.   0.   0.   0.88 0.38 0.88 0.88]
 [0.   0.   0.   0.   0.   0.75 0.5  0.62]
 [0.   0.   0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
confusion matrix
[[13  0  1  0  0  3  0  0  0  1]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  0  3]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  0  9]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.9 0.7 0.6 0.8 0.4 0.7 0.7 0.6 0.4]
 [0.  0.  0.4 0.4 0.6 0.8 0.6 0.8 0.7 0.6]
 [0.  0.  0.  0.7 0.3 0.4 0.5 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.7 0.5 0.5 0.8 0.4 0.4]
 [0.  0.  0.  0.  0.  0.5 0.4 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 1.   1.11 1.   1.   0.89 1.   1.  ]
 [0.   0.   0.78 1.   0.67 0.89 0.44 0.67 0.56]
 [0.   0.   0.   0.67 0.56 0.78 0.56 0.33 0.44]
 [0.   0.   0.   0.   0.78 0.33 0.78 0.78 0.67]
 [0.   0.   0.   0.   0.   0.67 0.44 0.56 0.11]
 [0.   0.   0.   0.   0.   0.   0.89 0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
confusion matrix
[[16  1  0  0  0  0  0  0  0  1]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  0  0  0  3]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  0  9]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.9 0.8 0.6 0.9 0.5 0.7 0.7 0.6 0.4]
 [0.  0.  0.5 0.4 0.7 0.9 0.6 0.8 0.7 0.6]
 [0.  0.  0.  0.8 0.3 0.5 0.6 0.7 0.8 0.7]
 [0.  0.  0.  0.  0.8 0.6 0.5 0.8 0.4 0.4]
 [0.  0.  0.  0.  0.  0.6 0.5 0.7 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.9 1.  0.9 0.9 0.8 0.9 0.9 0.7]
 [0.  0.  0.7 0.9 0.6 0.8 0.4 0.6 0.5 0.9]
 [0.  0.  0.  0.6 0.5 0.7 0.5 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.7 0.3 0.7 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.6 0.4 0.5 0.1 0.6]
 [0.  0.  0.  0.  0.  0.  0.8 0.8 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  11 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.8 0.7 0.9 0.5 0.7 0.8 0.7 0.5]
 [0.  0.  0.6 0.4 0.8 1.  0.7 0.8 0.8 0.6]
 [0.  0.  0.  0.9 0.3 0.5 0.6 0.8 0.9 0.8]
 [0.  0.  0.  0.  0.9 0.7 0.6 0.8 0.5 0.4]
 [0.  0.  0.  0.  0.  0.6 0.5 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.82 0.91 0.82 0.82 0.73 0.82 0.82 0.64 0.73]
 [0.   0.   0.64 0.82 0.55 0.73 0.36 0.55 0.45 0.82 0.64]
 [0.   0.   0.   0.55 0.45 0.64 0.45 0.27 0.36 0.36 0.64]
 [0.   0.   0.   0.   0.64 0.27 0.64 0.64 0.55 0.64 0.18]
 [0.   0.   0.   0.   0.   0.55 0.36 0.45 0.09 0.55 0.64]
 [0.   0.   0.   0.   0.   0.   0.73 0.73 0.64 0.82 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.27 0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1.  1.  0. -1.  0.]
select_j_column
[ 1.  1.  0.  1.  0. -1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.1 0.9 0.8 1.  0.6 0.7 0.9 0.8 0.6]
 [0.  0.  0.7 0.4 0.9 1.  0.8 0.8 0.9 0.6]
 [0.  0.  0.  1.  0.3 0.6 0.7 0.9 0.9 0.9]
 [0.  0.  0.  0.  1.  0.7 0.7 0.8 0.6 0.4]
 [0.  0.  0.  0.  0.  0.7 0.6 0.9 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.75 0.83 0.75 0.75 0.67 0.75 0.75 0.58 0.67 0.67]
 [0.   0.   0.58 0.75 0.5  0.67 0.33 0.5  0.42 0.75 0.58 0.58]
 [0.   0.   0.   0.5  0.42 0.58 0.42 0.25 0.33 0.33 0.58 0.58]
 [0.   0.   0.   0.   0.58 0.25 0.58 0.58 0.5  0.58 0.17 0.58]
 [0.   0.   0.   0.   0.   0.5  0.33 0.42 0.08 0.5  0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.67 0.67 0.58 0.75 0.25 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.25 0.58 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.5  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1.  1.  0. -1.  0.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1.  0.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.2 1.  0.9 1.1 0.6 0.8 0.9 0.9 0.7]
 [0.  0.  0.8 0.5 1.  1.1 0.9 0.9 0.9 0.7]
 [0.  0.  0.  1.  0.3 0.7 0.7 1.  1.  0.9]
 [0.  0.  0.  0.  1.  0.8 0.7 0.9 0.7 0.4]
 [0.  0.  0.  0.  0.  0.8 0.6 1.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.69 0.77 0.69 0.69 0.62 0.69 0.69 0.54 0.62 0.62 0.46]
 [0.   0.   0.54 0.69 0.46 0.62 0.31 0.46 0.38 0.69 0.54 0.54 0.31]
 [0.   0.   0.   0.46 0.38 0.54 0.38 0.23 0.31 0.31 0.54 0.54 0.46]
 [0.   0.   0.   0.   0.54 0.23 0.54 0.54 0.46 0.54 0.15 0.54 0.77]
 [0.   0.   0.   0.   0.   0.46 0.31 0.38 0.08 0.46 0.54 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.62 0.62 0.54 0.69 0.23 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.54 0.38 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.69 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46 0.62 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1.  0.  1.  1.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]]


============== iter  14 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.3 1.  0.9 1.2 0.6 0.9 0.9 1.  0.8]
 [0.  0.  0.9 0.6 1.  1.2 1.  1.  1.  0.8]
 [0.  0.  0.  1.  0.4 0.7 0.8 1.  1.1 1. ]
 [0.  0.  0.  0.  1.1 0.8 0.8 0.9 0.8 0.5]
 [0.  0.  0.  0.  0.  0.9 0.7 1.1 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.64 0.71 0.64 0.64 0.57 0.64 0.64 0.5  0.57 0.57 0.43 0.5 ]
 [0.   0.   0.5  0.64 0.43 0.57 0.29 0.43 0.36 0.64 0.5  0.5  0.29 0.43]
 [0.   0.   0.   0.43 0.36 0.5  0.36 0.21 0.29 0.29 0.5  0.5  0.43 0.36]
 [0.   0.   0.   0.   0.5  0.21 0.5  0.5  0.43 0.5  0.14 0.5  0.71 0.5 ]
 [0.   0.   0.   0.   0.   0.43 0.29 0.36 0.07 0.43 0.5  0.57 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.57 0.57 0.5  0.64 0.21 0.57 0.57 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.5  0.36 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.64 0.43 0.36 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.57 0.43 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.64 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 1. -1. -1.  1. -1.  1.  1.  0.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.3 1.  1.  1.2 0.6 1.  0.9 1.  0.9]
 [0.  0.  0.9 0.7 1.  1.2 1.1 1.  1.  0.9]
 [0.  0.  0.  1.1 0.4 0.7 0.9 1.  1.1 1.1]
 [0.  0.  0.  0.  1.2 0.9 0.9 1.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.9 0.8 1.1 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.9 0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.6  0.67 0.6  0.6  0.53 0.6  0.6  0.47 0.53 0.53 0.4  0.47
  0.6 ]
 [0.   0.   0.47 0.6  0.4  0.53 0.27 0.4  0.33 0.6  0.47 0.47 0.27 0.4
  0.67]
 [0.   0.   0.   0.4  0.33 0.47 0.33 0.2  0.27 0.27 0.47 0.47 0.4  0.33
  0.33]
 [0.   0.   0.   0.   0.47 0.2  0.47 0.47 0.4  0.47 0.13 0.47 0.67 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.4  0.27 0.33 0.07 0.4  0.47 0.53 0.33 0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.53 0.53 0.47 0.6  0.2  0.53 0.53 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.47 0.33 0.4  0.4  0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.6  0.4  0.33 0.53
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.53 0.4  0.33
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.53 0.53 0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.6  0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.  1.  0.  1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.3 1.1 1.  1.3 0.6 1.  1.  1.  0.9]
 [0.  0.  1.  0.7 1.1 1.2 1.1 1.1 1.  0.9]
 [0.  0.  0.  1.2 0.5 0.8 1.  1.  1.2 1.2]
 [0.  0.  0.  0.  1.3 0.9 0.9 1.1 0.9 0.6]
 [0.  0.  0.  0.  0.  1.  0.9 1.2 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.56 0.62 0.56 0.56 0.5  0.56 0.56 0.44 0.5  0.5  0.38 0.44
  0.56 0.44]
 [0.   0.   0.44 0.56 0.38 0.5  0.25 0.38 0.31 0.56 0.44 0.44 0.25 0.38
  0.62 0.44]
 [0.   0.   0.   0.38 0.31 0.44 0.31 0.19 0.25 0.25 0.44 0.44 0.38 0.31
  0.31 0.19]
 [0.   0.   0.   0.   0.44 0.19 0.44 0.44 0.38 0.44 0.12 0.44 0.62 0.44
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.38 0.25 0.31 0.06 0.38 0.44 0.5  0.31 0.31
  0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.5  0.5  0.44 0.56 0.19 0.5  0.5  0.31
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.44 0.31 0.38 0.38 0.38
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.56 0.38 0.31 0.5
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.5  0.38 0.31
  0.44 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.5  0.44
  0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.56 0.38
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.44
  0.38 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]]


============== iter  17 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  9  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.4 1.2 1.1 1.4 0.7 1.1 1.  1.1 0.9]
 [0.  0.  1.1 0.8 1.2 1.2 1.1 1.2 1.  1. ]
 [0.  0.  0.  1.2 0.5 0.9 1.1 1.1 1.3 1.3]
 [0.  0.  0.  0.  1.3 1.  1.  1.2 1.  0.7]
 [0.  0.  0.  0.  0.  1.1 1.  1.3 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.9 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  1.3 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.53 0.59 0.53 0.53 0.47 0.53 0.53 0.41 0.47 0.47 0.35 0.41
  0.53 0.41 0.47]
 [0.   0.   0.41 0.53 0.35 0.47 0.24 0.35 0.29 0.53 0.41 0.41 0.24 0.35
  0.59 0.41 0.35]
 [0.   0.   0.   0.35 0.29 0.41 0.29 0.18 0.24 0.24 0.41 0.41 0.35 0.29
  0.29 0.18 0.41]
 [0.   0.   0.   0.   0.41 0.18 0.41 0.41 0.35 0.41 0.12 0.41 0.59 0.41
  0.29 0.35 0.41]
 [0.   0.   0.   0.   0.   0.35 0.24 0.29 0.06 0.35 0.41 0.47 0.29 0.29
  0.35 0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.47 0.47 0.41 0.53 0.18 0.47 0.47 0.29
  0.29 0.41 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.41 0.29 0.35 0.35 0.35
  0.41 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.53 0.35 0.29 0.47
  0.47 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.47 0.35 0.29
  0.41 0.12 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.47 0.41
  0.35 0.18 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.35
  0.29 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.41
  0.35 0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53
  0.35 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1. -1. -1. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  18 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
confusion matrix
[[13  1  0  0  0  3  0  0  0  1]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  1  0  0  0  3]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  0  2]
 [ 2  0  0  0  0  1  0  0  0 16]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  0  9]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.5 1.3 1.2 1.4 0.7 1.1 1.1 1.2 1. ]
 [0.  0.  1.2 0.9 1.3 1.3 1.2 1.3 1.1 1. ]
 [0.  0.  0.  1.2 0.6 1.  1.2 1.1 1.3 1.4]
 [0.  0.  0.  0.  1.4 1.1 1.1 1.2 1.  0.8]
 [0.  0.  0.  0.  0.  1.1 1.  1.4 1.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.9 1.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.4 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.28 0.5  0.56 0.5  0.5  0.44 0.5  0.5  0.39 0.44 0.44 0.33 0.39
  0.5  0.39 0.44 0.44]
 [0.   0.   0.39 0.5  0.33 0.44 0.22 0.33 0.28 0.5  0.39 0.39 0.22 0.33
  0.56 0.39 0.33 0.33]
 [0.   0.   0.   0.33 0.28 0.39 0.28 0.17 0.22 0.22 0.39 0.39 0.33 0.28
  0.28 0.17 0.39 0.44]
 [0.   0.   0.   0.   0.39 0.17 0.39 0.39 0.33 0.39 0.11 0.39 0.56 0.39
  0.28 0.33 0.39 0.17]
 [0.   0.   0.   0.   0.   0.33 0.22 0.28 0.06 0.33 0.39 0.44 0.28 0.28
  0.33 0.17 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.44 0.44 0.39 0.5  0.17 0.44 0.44 0.28
  0.28 0.39 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.17 0.39 0.28 0.33 0.33 0.33
  0.39 0.28 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.22 0.5  0.33 0.28 0.44
  0.44 0.22 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33 0.44 0.33 0.28
  0.39 0.11 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.44 0.39
  0.33 0.17 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.5  0.33
  0.28 0.33 0.28 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.39
  0.33 0.5  0.28 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5
  0.33 0.33 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.33 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1.  1.  0. -1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  19 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
18 classifiers pre label
Counter({-1.0: 118, 1.0: 36, 0.0: 34})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.5 1.4 1.3 1.5 0.8 1.2 1.2 1.2 1.1]
 [0.  0.  1.3 1.  1.4 1.4 1.3 1.4 1.1 1.1]
 [0.  0.  0.  1.2 0.6 1.  1.2 1.2 1.4 1.5]
 [0.  0.  0.  0.  1.4 1.1 1.1 1.3 1.1 0.9]
 [0.  0.  0.  0.  0.  1.1 1.  1.5 1.4 1.6]
 [0.  0.  0.  0.  0.  0.  0.9 1.1 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.5 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.47 0.53 0.47 0.47 0.42 0.47 0.47 0.37 0.42 0.42 0.32 0.37
  0.47 0.37 0.42 0.42 0.32]
 [0.   0.   0.37 0.47 0.32 0.42 0.21 0.32 0.26 0.47 0.37 0.37 0.21 0.32
  0.53 0.37 0.32 0.32 0.26]
 [0.   0.   0.   0.32 0.26 0.37 0.26 0.16 0.21 0.21 0.37 0.37 0.32 0.26
  0.26 0.16 0.37 0.42 0.37]
 [0.   0.   0.   0.   0.37 0.16 0.37 0.37 0.32 0.37 0.11 0.37 0.53 0.37
  0.26 0.32 0.37 0.16 0.47]
 [0.   0.   0.   0.   0.   0.32 0.21 0.26 0.05 0.32 0.37 0.42 0.26 0.26
  0.32 0.16 0.32 0.37 0.21]
 [0.   0.   0.   0.   0.   0.   0.42 0.42 0.37 0.47 0.16 0.42 0.42 0.26
  0.26 0.37 0.32 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.16 0.37 0.26 0.32 0.32 0.32
  0.37 0.26 0.21 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.47 0.32 0.26 0.42
  0.42 0.21 0.37 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.42 0.32 0.26
  0.37 0.11 0.37 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.42 0.37
  0.32 0.16 0.42 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.47 0.32
  0.26 0.32 0.26 0.16 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.37
  0.32 0.47 0.26 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47
  0.32 0.32 0.37 0.42 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.32 0.32 0.32 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.32 0.37 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.42 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  0.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.  0.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.  0.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1. -1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0. -1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0. -1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
18 classifiers pre label
Counter({-1.0: 118, 1.0: 36, 0.0: 34})
19 classifiers pre label
Counter({-1.0: 116, 0.0: 36, 1.0: 36})
confusion matrix
[[16  1  0  1  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  5  0  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  3  0 13  0  0  0  0]
 [ 2  0  0 16  0  1  0  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  9  0  2  0  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.6 1.4 1.3 1.6 0.9 1.3 1.3 1.3 1.2]
 [0.  0.  1.4 1.1 1.4 1.5 1.4 1.5 1.1 1.2]
 [0.  0.  0.  1.2 0.7 1.1 1.3 1.3 1.5 1.6]
 [0.  0.  0.  0.  1.5 1.2 1.2 1.4 1.2 1. ]
 [0.  0.  0.  0.  0.  1.2 1.1 1.6 1.4 1.7]
 [0.  0.  0.  0.  0.  0.  0.9 1.1 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.45 0.5  0.45 0.45 0.4  0.45 0.45 0.35 0.4  0.4  0.3  0.35
  0.45 0.35 0.4  0.4  0.3  0.4 ]
 [0.   0.   0.35 0.45 0.3  0.4  0.2  0.3  0.25 0.45 0.35 0.35 0.2  0.3
  0.5  0.35 0.3  0.3  0.25 0.45]
 [0.   0.   0.   0.3  0.25 0.35 0.25 0.15 0.2  0.2  0.35 0.35 0.3  0.25
  0.25 0.15 0.35 0.4  0.35 0.35]
 [0.   0.   0.   0.   0.35 0.15 0.35 0.35 0.3  0.35 0.1  0.35 0.5  0.35
  0.25 0.3  0.35 0.15 0.45 0.35]
 [0.   0.   0.   0.   0.   0.3  0.2  0.25 0.05 0.3  0.35 0.4  0.25 0.25
  0.3  0.15 0.3  0.35 0.2  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.4  0.4  0.35 0.45 0.15 0.4  0.4  0.25
  0.25 0.35 0.3  0.2  0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.15 0.35 0.25 0.3  0.3  0.3
  0.35 0.25 0.2  0.25 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.45 0.3  0.25 0.4
  0.4  0.2  0.35 0.35 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.4  0.3  0.25
  0.35 0.1  0.35 0.3  0.25 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.4  0.35
  0.3  0.15 0.4  0.4  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.45 0.3
  0.25 0.3  0.25 0.15 0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35
  0.3  0.45 0.25 0.35 0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45
  0.3  0.3  0.35 0.4  0.15 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.3  0.3  0.35 0.35 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.3  0.35 0.35 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.4  0.35 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.35 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 0. -1.  1. -1.  1. -1.  0. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  21 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.  0.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.  1. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.  0.  1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.  0. -1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1. -1.  0.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1. -1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0. -1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
18 classifiers pre label
Counter({-1.0: 118, 1.0: 36, 0.0: 34})
19 classifiers pre label
Counter({-1.0: 116, 0.0: 36, 1.0: 36})
20 classifiers pre label
Counter({1.0: 100, 0.0: 65, -1.0: 23})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.7 1.5 1.4 1.7 0.9 1.4 1.3 1.4 1.2]
 [0.  0.  1.5 1.1 1.5 1.6 1.5 1.6 1.2 1.3]
 [0.  0.  0.  1.3 0.7 1.2 1.3 1.4 1.5 1.7]
 [0.  0.  0.  0.  1.6 1.3 1.3 1.5 1.3 1.1]
 [0.  0.  0.  0.  0.  1.3 1.1 1.7 1.4 1.8]
 [0.  0.  0.  0.  0.  0.  1.  1.1 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.43 0.48 0.43 0.43 0.38 0.43 0.43 0.33 0.38 0.38 0.29 0.33
  0.43 0.33 0.38 0.38 0.29 0.38 0.29]
 [0.   0.   0.33 0.43 0.29 0.38 0.19 0.29 0.24 0.43 0.33 0.33 0.19 0.29
  0.48 0.33 0.29 0.29 0.24 0.43 0.14]
 [0.   0.   0.   0.29 0.24 0.33 0.24 0.14 0.19 0.19 0.33 0.33 0.29 0.24
  0.24 0.14 0.33 0.38 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.33 0.14 0.33 0.33 0.29 0.33 0.1  0.33 0.48 0.33
  0.24 0.29 0.33 0.14 0.43 0.33 0.33]
 [0.   0.   0.   0.   0.   0.29 0.19 0.24 0.05 0.29 0.33 0.38 0.24 0.24
  0.29 0.14 0.29 0.33 0.19 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.38 0.38 0.33 0.43 0.14 0.38 0.38 0.24
  0.24 0.33 0.29 0.19 0.29 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.14 0.33 0.24 0.29 0.29 0.29
  0.33 0.24 0.19 0.24 0.29 0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.43 0.29 0.24 0.38
  0.38 0.19 0.33 0.33 0.24 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.38 0.29 0.24
  0.33 0.1  0.33 0.29 0.24 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.38 0.33
  0.29 0.14 0.38 0.38 0.29 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.43 0.29
  0.24 0.29 0.24 0.14 0.33 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33
  0.29 0.43 0.24 0.33 0.33 0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43
  0.29 0.29 0.33 0.38 0.14 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.29 0.29 0.33 0.33 0.48 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.33 0.33 0.29 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.38 0.33 0.24 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33 0.29 0.29 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  1.  1.  1.  1.  0.  1.  0.]
select_j_column
[ 1. -1. -1.  1. -1.  1.  1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  22 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.  0.  0.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.  1. -1. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.  0.  1. -1.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.  0. -1.  1.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1. -1.  0.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1. -1.  1.  1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0. -1.  0.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0. -1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
18 classifiers pre label
Counter({-1.0: 118, 1.0: 36, 0.0: 34})
19 classifiers pre label
Counter({-1.0: 116, 0.0: 36, 1.0: 36})
20 classifiers pre label
Counter({1.0: 100, 0.0: 65, -1.0: 23})
21 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.8 1.6 1.5 1.8 1.  1.5 1.3 1.5 1.2]
 [0.  0.  1.5 1.2 1.5 1.7 1.6 1.7 1.3 1.4]
 [0.  0.  0.  1.4 0.7 1.3 1.4 1.5 1.6 1.8]
 [0.  0.  0.  0.  1.7 1.3 1.3 1.6 1.3 1.2]
 [0.  0.  0.  0.  0.  1.4 1.2 1.8 1.5 1.9]
 [0.  0.  0.  0.  0.  0.  1.  1.2 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.41 0.45 0.41 0.41 0.36 0.41 0.41 0.32 0.36 0.36 0.27 0.32
  0.41 0.32 0.36 0.36 0.27 0.36 0.27 0.36]
 [0.   0.   0.32 0.41 0.27 0.36 0.18 0.27 0.23 0.41 0.32 0.32 0.18 0.27
  0.45 0.32 0.27 0.27 0.23 0.41 0.14 0.14]
 [0.   0.   0.   0.27 0.23 0.32 0.23 0.14 0.18 0.18 0.32 0.32 0.27 0.23
  0.23 0.14 0.32 0.36 0.32 0.32 0.27 0.18]
 [0.   0.   0.   0.   0.32 0.14 0.32 0.32 0.27 0.32 0.09 0.32 0.45 0.32
  0.23 0.27 0.32 0.14 0.41 0.32 0.32 0.36]
 [0.   0.   0.   0.   0.   0.27 0.18 0.23 0.05 0.27 0.32 0.36 0.23 0.23
  0.27 0.14 0.27 0.32 0.18 0.36 0.32 0.14]
 [0.   0.   0.   0.   0.   0.   0.36 0.36 0.32 0.41 0.14 0.36 0.36 0.23
  0.23 0.32 0.27 0.18 0.27 0.32 0.36 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.14 0.32 0.23 0.27 0.27 0.27
  0.32 0.23 0.18 0.23 0.27 0.32 0.14 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.41 0.27 0.23 0.36
  0.36 0.18 0.32 0.32 0.23 0.23 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.36 0.27 0.23
  0.32 0.09 0.32 0.27 0.23 0.41 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.36 0.32
  0.27 0.14 0.36 0.36 0.27 0.27 0.36 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.41 0.27
  0.23 0.27 0.23 0.14 0.32 0.36 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.32
  0.27 0.41 0.23 0.32 0.32 0.18 0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41
  0.27 0.27 0.32 0.36 0.14 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27 0.27 0.27 0.32 0.32 0.45 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.27 0.32 0.32 0.27 0.18 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.36 0.32 0.23 0.32 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.32 0.27 0.27 0.18 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.27 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.27 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
select_j_column
[ 0. -1.  1.  1.  1. -1. -1.  0. -1.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.  0.  0.  0.  0.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.  1. -1. -1. -1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.  0.  1. -1.  0.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.  0. -1.  1.  0.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.  1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1. -1.  0.  1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1. -1.  1.  1. -1.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0. -1.  0.  0.  1.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.  1.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0. -1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
18 classifiers pre label
Counter({-1.0: 118, 1.0: 36, 0.0: 34})
19 classifiers pre label
Counter({-1.0: 116, 0.0: 36, 1.0: 36})
20 classifiers pre label
Counter({1.0: 100, 0.0: 65, -1.0: 23})
21 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
22 classifiers pre label
Counter({1.0: 116, 0.0: 36, -1.0: 36})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.9 1.6 1.5 1.9 1.1 1.6 1.4 1.6 1.3]
 [0.  0.  1.6 1.3 1.6 1.7 1.6 1.8 1.3 1.5]
 [0.  0.  0.  1.4 0.8 1.4 1.5 1.6 1.7 1.9]
 [0.  0.  0.  0.  1.8 1.4 1.4 1.7 1.4 1.3]
 [0.  0.  0.  0.  0.  1.5 1.3 1.8 1.6 1.9]
 [0.  0.  0.  0.  0.  0.  1.  1.3 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.8 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.39 0.43 0.39 0.39 0.35 0.39 0.39 0.3  0.35 0.35 0.26 0.3
  0.39 0.3  0.35 0.35 0.26 0.35 0.26 0.35 0.39]
 [0.   0.   0.3  0.39 0.26 0.35 0.17 0.26 0.22 0.39 0.3  0.3  0.17 0.26
  0.43 0.3  0.26 0.26 0.22 0.39 0.13 0.13 0.35]
 [0.   0.   0.   0.26 0.22 0.3  0.22 0.13 0.17 0.17 0.3  0.3  0.26 0.22
  0.22 0.13 0.3  0.35 0.3  0.3  0.26 0.17 0.3 ]
 [0.   0.   0.   0.   0.3  0.13 0.3  0.3  0.26 0.3  0.09 0.3  0.43 0.3
  0.22 0.26 0.3  0.13 0.39 0.3  0.3  0.35 0.26]
 [0.   0.   0.   0.   0.   0.26 0.17 0.22 0.04 0.26 0.3  0.35 0.22 0.22
  0.26 0.13 0.26 0.3  0.17 0.35 0.3  0.13 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.35 0.3  0.39 0.13 0.35 0.35 0.22
  0.22 0.3  0.26 0.17 0.26 0.3  0.35 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.13 0.3  0.22 0.26 0.26 0.26
  0.3  0.22 0.17 0.22 0.26 0.3  0.13 0.04 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.39 0.26 0.22 0.35
  0.35 0.17 0.3  0.3  0.22 0.22 0.3  0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26 0.35 0.26 0.22
  0.3  0.09 0.3  0.26 0.22 0.39 0.26 0.09 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.35 0.3
  0.26 0.13 0.35 0.35 0.26 0.26 0.35 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.39 0.26
  0.22 0.26 0.22 0.13 0.3  0.35 0.22 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.3
  0.26 0.39 0.22 0.3  0.3  0.17 0.17 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39
  0.26 0.26 0.3  0.35 0.13 0.22 0.22 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.26 0.26 0.3  0.3  0.43 0.3  0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.3  0.3  0.26 0.17 0.3  0.35 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35 0.3  0.22 0.3  0.3  0.17 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.26 0.26 0.17 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.26 0.35 0.26 0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.26 0.26 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.3  0.35 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.  0.  0.  0.  0.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.  1. -1. -1. -1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.  0.  1. -1.  0.  0.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.  0. -1.  1.  0.  0.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.  1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1. -1.  0.  1. -1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1. -1.  1.  1. -1.  0.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0. -1.  0.  0.  1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.  1.  1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0. -1.  0.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({1.0: 170, 0.0: 18})
3 classifiers pre label
Counter({1.0: 126, -1.0: 34, 0.0: 28})
4 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 54, 0.0: 18})
8 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
9 classifiers pre label
Counter({1.0: 124, 0.0: 64})
10 classifiers pre label
Counter({1.0: 126, 0.0: 62})
11 classifiers pre label
Counter({-1.0: 121, 0.0: 49, 1.0: 18})
12 classifiers pre label
Counter({-1.0: 118, 0.0: 65, 1.0: 5})
13 classifiers pre label
Counter({1.0: 157, 0.0: 31})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 136, 0.0: 52})
16 classifiers pre label
Counter({-1.0: 95, 0.0: 52, 1.0: 41})
17 classifiers pre label
Counter({-1.0: 83, 1.0: 77, 0.0: 28})
18 classifiers pre label
Counter({-1.0: 118, 1.0: 36, 0.0: 34})
19 classifiers pre label
Counter({-1.0: 116, 0.0: 36, 1.0: 36})
20 classifiers pre label
Counter({1.0: 100, 0.0: 65, -1.0: 23})
21 classifiers pre label
Counter({1.0: 113, 0.0: 52, -1.0: 23})
22 classifiers pre label
Counter({1.0: 116, 0.0: 36, -1.0: 36})
23 classifiers pre label
Counter({1.0: 105, 0.0: 83})
confusion matrix
[[16  1  0  0  0  0  1  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  1  3  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  2  0  0  0]
 [ 2  0  0  0  0  1 16  0  0  0]
 [ 2  2  0  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  9  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.9 1.7 1.6 1.9 1.2 1.7 1.5 1.6 1.3]
 [0.  0.  1.7 1.4 1.6 1.8 1.7 1.9 1.3 1.5]
 [0.  0.  0.  1.4 0.9 1.5 1.5 1.6 1.8 2. ]
 [0.  0.  0.  0.  1.9 1.5 1.4 1.7 1.5 1.4]
 [0.  0.  0.  0.  0.  1.6 1.4 1.9 1.6 1.9]
 [0.  0.  0.  0.  0.  0.  1.1 1.4 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.8 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.38 0.42 0.38 0.38 0.33 0.38 0.38 0.29 0.33 0.33 0.25 0.29
  0.38 0.29 0.33 0.33 0.25 0.33 0.25 0.33 0.38 0.25]
 [0.   0.   0.29 0.38 0.25 0.33 0.17 0.25 0.21 0.38 0.29 0.29 0.17 0.25
  0.42 0.29 0.25 0.25 0.21 0.38 0.12 0.12 0.33 0.38]
 [0.   0.   0.   0.25 0.21 0.29 0.21 0.12 0.17 0.17 0.29 0.29 0.25 0.21
  0.21 0.12 0.29 0.33 0.29 0.29 0.25 0.17 0.29 0.29]
 [0.   0.   0.   0.   0.29 0.12 0.29 0.29 0.25 0.29 0.08 0.29 0.42 0.29
  0.21 0.25 0.29 0.12 0.38 0.29 0.29 0.33 0.25 0.25]
 [0.   0.   0.   0.   0.   0.25 0.17 0.21 0.04 0.25 0.29 0.33 0.21 0.21
  0.25 0.12 0.25 0.29 0.17 0.33 0.29 0.12 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.29 0.38 0.12 0.33 0.33 0.21
  0.21 0.29 0.25 0.17 0.25 0.29 0.33 0.29 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.12 0.29 0.21 0.25 0.25 0.25
  0.29 0.21 0.17 0.21 0.25 0.29 0.12 0.04 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.38 0.25 0.21 0.33
  0.33 0.17 0.29 0.29 0.21 0.21 0.29 0.17 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25 0.33 0.25 0.21
  0.29 0.08 0.29 0.25 0.21 0.38 0.25 0.08 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.33 0.29
  0.25 0.12 0.33 0.33 0.25 0.25 0.33 0.29 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.38 0.25
  0.21 0.25 0.21 0.12 0.29 0.33 0.21 0.25 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.29
  0.25 0.38 0.21 0.29 0.29 0.17 0.17 0.29 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.25 0.25 0.29 0.33 0.12 0.21 0.21 0.21 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.25 0.25 0.29 0.29 0.42 0.29 0.21 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.29 0.29 0.25 0.17 0.29 0.33 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.29 0.21 0.29 0.29 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.25 0.25 0.17 0.21 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.25 0.33 0.25 0.25 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25 0.25 0.21 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29 0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})

**********      classifier acc  **************
[0.404, 0.701, 0.835, 0.799, 0.544, 0.706, 0.721, 0.676, 0.655, 0.763, 0.815, 0.675, 0.634, 0.641, 0.813, 0.683, 0.571, 0.673, 0.696, 0.433, 0.694, 0.557, 0.614, 0.578]
before cutting matrix
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0.  1.
   1.  0.  0.  0.  0.  1.]
 [ 1. -1.  1.  0. -1.  0. -1.  1. -1.  1.  0. -1.  1. -1.  1.  1. -1.  0.
   1.  1. -1. -1. -1.  1.]
 [ 0. -1.  1.  1. -1.  1. -1. -1. -1.  0.  1.  1. -1.  1.  1.  0.  1. -1.
  -1.  0.  1. -1.  0.  0.]
 [-1. -1.  1.  0.  1.  0.  1.  1.  1.  1.  0. -1. -1.  1.  0.  1.  1. -1.
  -1.  0. -1.  1.  0.  0.]
 [ 0. -1. -1.  1. -1. -1.  1. -1. -1.  0.  1.  1. -1. -1.  1. -1.  1.  1.
  -1.  1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1. -1.  1.
  -1. -1.  0.  1. -1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  0. -1.  0. -1.  1. -1.  1.
  -1. -1.  1.  1. -1.  0.]
 [ 0.  0.  1. -1.  0. -1.  0. -1.  0.  1.  0. -1.  0.  1.  1.  0.  0. -1.
   0. -1.  0.  0.  1.  0.]
 [ 0.  0.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1. -1.
   1.  1.  1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  0.  0.  1.  1.  1.  0. -1. -1.  0. -1.  1.  0.  0.
   0. -1.  0.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({-1.0: 224, 1.0: 44})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 224, 1.0: 44})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 283, -1.0: 213})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({1.0: 283, -1.0: 213})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({-1.0: 225, 1.0: 173})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 225, 1.0: 173})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({-1.0: 261, 1.0: 119})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 261, 1.0: 119})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 294, -1.0: 112})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({1.0: 294, -1.0: 112})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 230, 1.0: 166})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 239, 1.0: 214})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 239, 1.0: 214})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 277, 1.0: 168})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 277, 1.0: 168})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 228, 1.0: 173})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 216, -1.0: 113})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({1.0: 216, -1.0: 113})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 227, -1.0: 169})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({1.0: 227, -1.0: 169})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({-1.0: 230, 1.0: 171})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 230, 1.0: 171})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
Counter({1.0: 273, -1.0: 67})
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
positive and negative ratio
Counter({1.0: 273, -1.0: 67})
after cutting matrix
[[-1.  0.  1.  0.  0.  1.  1.  1.  0.  1.  1.  0.  0.]
 [ 1.  1.  0. -1.  1. -1.  1.  0. -1.  1.  1. -1.  1.]
 [ 0.  1.  1. -1. -1. -1.  0.  1.  1.  1.  0.  1.  0.]
 [-1.  1.  0.  1.  1.  1.  1.  0. -1.  0.  1.  1.  0.]
 [ 0. -1.  1.  1. -1. -1.  0.  1.  1.  1. -1.  1.  1.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [ 0.  1.  1.  1.  1.  1.  1.  1.  0. -1.  1. -1. -1.]
 [ 0.  1. -1.  0. -1.  0.  1.  0. -1.  1.  0.  0. -1.]
 [ 0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 104, 1.0: 58})
Counter({1.0: 459, -1.0: 54})
Counter({1.0: 322, -1.0: 127})
Counter({1.0: 281, -1.0: 115})
Counter({1.0: 269, -1.0: 244})
Counter({1.0: 327, -1.0: 169})
Counter({1.0: 384, -1.0: 67})
Counter({1.0: 271, -1.0: 61})
Counter({-1.0: 297, 1.0: 172})
Counter({1.0: 412, -1.0: 95})
Counter({1.0: 385, -1.0: 54})
Counter({-1.0: 230, 1.0: 166})
Counter({-1.0: 228, 1.0: 173})
cutting matrix's confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 4  2 17  2  0  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 2  0  0  1  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整


SVM classifier
Time: 2019-01-09 22:19:41
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1.  1.]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.  0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.6]
 [0.  0.  0.6 0.6 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.5 ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.6]
 [0.  0.  0.6 0.8 0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.6 0.4 0.4]
 [0.  0.  0.6 0.4 0. ]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 0.6 0.6]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.5  0.33 0.33 0.17]
 [0.   0.   0.5  0.33 0.   0.17]
 [0.   0.   0.   0.83 0.5  0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 0.8 0.6]
 [0.  0.  0.8 1.  0.4]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.43 0.29 0.29 0.14 0.29]
 [0.   0.   0.43 0.29 0.   0.14 0.  ]
 [0.   0.   0.   0.71 0.43 0.29 0.43]
 [0.   0.   0.   0.   0.29 0.43 0.29]
 [0.   0.   0.   0.   0.   0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.  0.6]
 [0.  0.  0.8 1.2 0.4]
 [0.  0.  0.  1.2 0.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.38 0.25 0.25 0.12 0.25 0.25]
 [0.   0.   0.38 0.25 0.   0.12 0.   0.  ]
 [0.   0.   0.   0.62 0.38 0.25 0.38 0.38]
 [0.   0.   0.   0.   0.25 0.38 0.25 0.25]
 [0.   0.   0.   0.   0.   0.12 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.2 0.6]
 [0.  0.  0.8 1.4 0.4]
 [0.  0.  0.  1.4 0.4]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.33 0.22 0.22 0.11 0.22 0.22 0.22]
 [0.   0.   0.33 0.22 0.   0.11 0.   0.   0.  ]
 [0.   0.   0.   0.56 0.33 0.22 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.22 0.33 0.22 0.22 0.22]
 [0.   0.   0.   0.   0.   0.11 0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.11 0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.4 0.6]
 [0.  0.  0.8 1.6 0.4]
 [0.  0.  0.  1.6 0.4]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.3 0.2 0.2 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.3 0.2 0.  0.1 0.  0.  0.  0. ]
 [0.  0.  0.  0.5 0.3 0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.4 0.8]
 [0.  0.  0.8 1.6 0.6]
 [0.  0.  0.  1.6 0.6]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.27 0.18 0.18 0.09 0.18 0.18 0.18 0.18 0.36]
 [0.   0.   0.27 0.18 0.   0.09 0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.45 0.27 0.18 0.27 0.27 0.27 0.27 0.09]
 [0.   0.   0.   0.   0.18 0.27 0.18 0.18 0.18 0.18 0.36]
 [0.   0.   0.   0.   0.   0.09 0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.09 0.09 0.09 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.6 0.8]
 [0.  0.  0.8 1.8 0.6]
 [0.  0.  0.  1.8 0.6]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.25 0.17 0.17 0.08 0.17 0.17 0.17 0.17 0.33 0.25]
 [0.   0.   0.25 0.17 0.   0.08 0.   0.   0.   0.   0.17 0.42]
 [0.   0.   0.   0.42 0.25 0.17 0.25 0.25 0.25 0.25 0.08 0.17]
 [0.   0.   0.   0.   0.17 0.25 0.17 0.17 0.17 0.17 0.33 0.25]
 [0.   0.   0.   0.   0.   0.08 0.   0.   0.   0.   0.17 0.42]
 [0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.6 1. ]
 [0.  0.  0.8 1.8 0.8]
 [0.  0.  0.  1.8 0.8]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.23 0.15 0.15 0.08 0.15 0.15 0.15 0.15 0.31 0.23 0.31]
 [0.   0.   0.23 0.15 0.   0.08 0.   0.   0.   0.   0.15 0.38 0.15]
 [0.   0.   0.   0.38 0.23 0.15 0.23 0.23 0.23 0.23 0.08 0.15 0.08]
 [0.   0.   0.   0.   0.15 0.23 0.15 0.15 0.15 0.15 0.31 0.23 0.31]
 [0.   0.   0.   0.   0.   0.08 0.   0.   0.   0.   0.15 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.2 1.8 1. ]
 [0.  0.  0.8 2.  0.8]
 [0.  0.  0.  2.  0.8]
 [0.  0.  0.  0.  2.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.21 0.14 0.14 0.07 0.14 0.14 0.14 0.14 0.29 0.21 0.29 0.14]
 [0.   0.   0.21 0.14 0.   0.07 0.   0.   0.   0.   0.14 0.36 0.14 0.  ]
 [0.   0.   0.   0.36 0.21 0.14 0.21 0.21 0.21 0.21 0.07 0.14 0.07 0.21]
 [0.   0.   0.   0.   0.14 0.21 0.14 0.14 0.14 0.14 0.29 0.21 0.29 0.14]
 [0.   0.   0.   0.   0.   0.07 0.   0.   0.   0.   0.14 0.36 0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.21 0.29 0.21 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.2 1.8 1.2]
 [0.  0.  1.  2.2 0.8]
 [0.  0.  0.  2.  1. ]
 [0.  0.  0.  0.  3. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.2  0.13 0.13 0.07 0.13 0.13 0.13 0.13 0.27 0.2  0.27 0.13
  0.2 ]
 [0.   0.   0.2  0.13 0.   0.07 0.   0.   0.   0.   0.13 0.33 0.13 0.
  0.2 ]
 [0.   0.   0.   0.33 0.2  0.13 0.2  0.2  0.2  0.2  0.07 0.13 0.07 0.2
  0.  ]
 [0.   0.   0.   0.   0.13 0.2  0.13 0.13 0.13 0.13 0.27 0.2  0.27 0.13
  0.33]
 [0.   0.   0.   0.   0.   0.07 0.   0.   0.   0.   0.13 0.33 0.13 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.2  0.27 0.2  0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.13 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.13 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.13 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.13 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.   0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.33
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 40, -1.0: 16})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.  0.2 2.  1.4]
 [0.  0.  1.2 2.2 0.8]
 [0.  0.  0.  2.2 1.2]
 [0.  0.  0.  0.  3. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.19 0.12 0.12 0.06 0.12 0.12 0.12 0.12 0.25 0.19 0.25 0.12
  0.19 0.12]
 [0.   0.   0.19 0.12 0.   0.06 0.   0.   0.   0.   0.12 0.31 0.12 0.
  0.19 0.12]
 [0.   0.   0.   0.31 0.19 0.12 0.19 0.19 0.19 0.19 0.06 0.12 0.06 0.19
  0.   0.06]
 [0.   0.   0.   0.   0.12 0.19 0.12 0.12 0.12 0.12 0.25 0.19 0.25 0.12
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.06 0.   0.   0.   0.   0.12 0.31 0.12 0.
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.19 0.25 0.19 0.06
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.12 0.
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.12 0.
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.12 0.
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.12 0.
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.   0.12
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.31
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 48, -1.0: 8})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 40, -1.0: 16})
16 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.  0.2 2.2 1.4]
 [0.  0.  1.2 2.4 0.8]
 [0.  0.  0.  2.4 1.2]
 [0.  0.  0.  0.  3.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.18 0.12 0.12 0.06 0.12 0.12 0.12 0.12 0.24 0.18 0.24 0.12
  0.18 0.12 0.18]
 [0.   0.   0.18 0.12 0.   0.06 0.   0.   0.   0.   0.12 0.29 0.12 0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.29 0.18 0.12 0.18 0.18 0.18 0.18 0.06 0.12 0.06 0.18
  0.   0.06 0.12]
 [0.   0.   0.   0.   0.12 0.18 0.12 0.12 0.12 0.12 0.24 0.18 0.24 0.12
  0.29 0.24 0.18]
 [0.   0.   0.   0.   0.   0.06 0.   0.   0.   0.   0.12 0.29 0.12 0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.18 0.24 0.18 0.06
  0.12 0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.12 0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.12 0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.12 0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.12 0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.12
  0.06 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.29
  0.12 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.06 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})

**********      classifier acc  **************
[0.857, 0.911, 0.821, 0.821, 0.911, 0.714, 0.911, 0.911, 0.911, 0.911, 0.982, 0.911, 0.982, 0.911, 0.821, 0.696, 0.911]
before cutting matrix
[[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 128, -1.0: 38})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({-1.0: 128, 1.0: 38})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 128, -1.0: 38})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 128, -1.0: 38})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
positive and negative ratio
Counter({1.0: 105, -1.0: 61})
after cutting matrix
[[ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
cutting matrix's confusion matrix
[[33  1  0  0  0]
 [ 7  2  0  0  0]
 [ 3  4  0  0  0]
 [ 4  1  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-09 22:19:44
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0.  0.]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  1.  0.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [-1. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0. -1.]
 [-1. -1.  1.]
 [ 0.  1.  1.]
 [ 0. -1.  1.]
 [ 0. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[28  0  1  5  0]
 [ 5  0  2  2  0]
 [ 0  0  1  6  0]
 [ 1  0  1  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  0. -1.  1.]
 [-1. -1.  1. -1.]
 [ 0.  1.  1. -1.]
 [ 0. -1.  1. -1.]
 [ 0. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[28  0  1  5  0]
 [ 5  0  2  2  0]
 [ 0  0  1  6  0]
 [ 1  0  1  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 0.8 0.8 0.8]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 0.75]
 [0.   0.   1.   0.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1.  0. -1.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1.  0. -1.  1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 0.  1.  1. -1.  1.]
 [ 0. -1.  1. -1.  0.]
 [ 0. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[28  0  1  5  0]
 [ 5  0  2  2  0]
 [ 0  0  1  6  0]
 [ 1  0  1  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  0.8 1.  1. ]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  0.6 0.2]
 [0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1.  0.  0.]
select_j_column
[ 0. -1.  1.  0.  0.]
most_cplx_inx
4
new_column
None


============== iter  6 ================
current matrix is 
[[ 1.  0. -1.  1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 0.  1.  1. -1.  1.]
 [ 0. -1.  1. -1.  0.]
 [ 0. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[28  0  1  5  0]
 [ 5  0  2  2  0]
 [ 0  0  1  6  0]
 [ 1  0  1  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  0.8 1.  1. ]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  0.6 0.2]
 [0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1. -1.]
 [ 0.  1.  1. -1.  1.  1.]
 [ 0. -1.  1. -1.  0.  1.]
 [ 0. -1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[28  0  0  0  6]
 [ 5  0  0  0  4]
 [ 0  0  0  0  7]
 [ 1  0  0  0  4]
 [ 0  0  0  0  1]]
row HD
[[0.  1.  1.  1.2 1. ]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.5  0.17 0.67]
 [0.   0.   0.67 0.33 0.5  0.33]
 [0.   0.   0.   0.83 0.67 0.33]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 1. -1.  1.  0. -1.]
select_j_column
[ 1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.]
 [ 0. -1.  1. -1.  0. -1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[28  0  1  0  5]
 [ 5  0  2  0  2]
 [ 0  0  1  0  6]
 [ 1  0  1  0  3]
 [ 0  0  0  0  1]]
row HD
[[0.  1.2 1.  1.4 1.2]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.43 0.14 0.57 0.29]
 [0.   0.   0.57 0.29 0.43 0.29 0.29]
 [0.   0.   0.   0.71 0.57 0.29 0.57]
 [0.   0.   0.   0.   0.43 0.43 0.29]
 [0.   0.   0.   0.   0.   0.43 0.14]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[ 0. -1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[28  0  1  5  0]
 [ 5  0  2  2  0]
 [ 0  0  1  5  1]
 [ 1  0  1  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.  1.6 1.4]
 [0.  0.  1.  1.  0.6]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.62 0.38 0.12 0.5  0.25 0.38]
 [0.   0.   0.5  0.25 0.38 0.25 0.25 0.38]
 [0.   0.   0.   0.62 0.5  0.25 0.5  0.38]
 [0.   0.   0.   0.   0.38 0.38 0.25 0.38]
 [0.   0.   0.   0.   0.   0.38 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[28  0  1  5  0]
 [ 5  0  2  2  0]
 [ 0  0  1  5  1]
 [ 1  0  1  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.4 1.2 1.6 1.6]
 [0.  0.  1.2 1.2 0.8]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.56 0.33 0.11 0.44 0.22 0.33 0.44]
 [0.   0.   0.44 0.22 0.33 0.22 0.22 0.33 0.33]
 [0.   0.   0.   0.56 0.44 0.22 0.44 0.33 0.44]
 [0.   0.   0.   0.   0.33 0.33 0.22 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33 0.11 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  0. -1.]
select_j_column
[ 0.  1. -1.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
confusion matrix
[[29  0  0  5  0]
 [ 7  0  0  2  0]
 [ 1  1  0  5  0]
 [ 2  0  0  3  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.6 1.4 1.6 1.8]
 [0.  0.  1.4 1.4 1. ]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.5 0.3 0.1 0.4 0.2 0.3 0.4 0.3]
 [0.  0.  0.4 0.2 0.3 0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.5 0.4 0.2 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.1 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  1.  0.  0.]
select_j_column
[ 0. -1.  1.  0.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[29  0  0  5  0]
 [ 7  0  0  2  0]
 [ 1  1  0  5  0]
 [ 2  0  0  3  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.8 1.6 1.6 2. ]
 [0.  0.  1.6 1.6 1. ]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.45 0.27 0.09 0.36 0.18 0.27 0.36 0.27 0.36]
 [0.   0.   0.36 0.18 0.27 0.18 0.18 0.27 0.27 0.18 0.36]
 [0.   0.   0.   0.45 0.36 0.18 0.36 0.27 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.27 0.27 0.18 0.27 0.27 0.36 0.36]
 [0.   0.   0.   0.   0.   0.27 0.09 0.18 0.36 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.18 0.27 0.36 0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.27 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 0.  1. -1.  0. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
11 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.  1.6 1.8 2. ]
 [0.  0.  1.8 1.8 1.2]
 [0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.42 0.25 0.08 0.33 0.17 0.25 0.33 0.25 0.33 0.33]
 [0.   0.   0.33 0.17 0.25 0.17 0.17 0.25 0.25 0.17 0.33 0.33]
 [0.   0.   0.   0.42 0.33 0.17 0.33 0.25 0.33 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.25 0.25 0.17 0.25 0.25 0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.25 0.08 0.17 0.33 0.17 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.17 0.25 0.33 0.25 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.17 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0. -1.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
11 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
12 classifiers pre label
Counter({1.0: 37, 0.0: 16, -1.0: 3})
confusion matrix
[[34  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.2 1.8 2.  2.2]
 [0.  0.  1.8 2.  1.4]
 [0.  0.  0.  1.8 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.38 0.23 0.08 0.31 0.15 0.23 0.31 0.23 0.31 0.31 0.23]
 [0.   0.   0.31 0.15 0.23 0.15 0.15 0.23 0.23 0.15 0.31 0.31 0.23]
 [0.   0.   0.   0.38 0.31 0.15 0.31 0.23 0.31 0.23 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.23 0.23 0.15 0.23 0.23 0.31 0.31 0.23 0.15]
 [0.   0.   0.   0.   0.   0.23 0.08 0.15 0.31 0.15 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.15 0.23 0.31 0.23 0.38 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.15 0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.23 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.08 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  0.  1.]
select_j_column
[ 0. -1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  0. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0. -1.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
11 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
12 classifiers pre label
Counter({1.0: 37, 0.0: 16, -1.0: 3})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  2  0]
 [ 5  1  0  1  0]
 [ 5  0  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  2.4 2.  2.  2.4]
 [0.  0.  2.  2.2 1.6]
 [0.  0.  0.  2.  1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.36 0.21 0.07 0.29 0.14 0.21 0.29 0.21 0.29 0.29 0.21 0.21]
 [0.   0.   0.29 0.14 0.21 0.14 0.14 0.21 0.21 0.14 0.29 0.29 0.21 0.14]
 [0.   0.   0.   0.36 0.29 0.14 0.29 0.21 0.29 0.21 0.21 0.21 0.36 0.21]
 [0.   0.   0.   0.   0.21 0.21 0.14 0.21 0.21 0.29 0.29 0.21 0.14 0.29]
 [0.   0.   0.   0.   0.   0.21 0.07 0.14 0.29 0.14 0.29 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.14 0.21 0.29 0.21 0.36 0.21 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.14 0.29 0.21 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.21 0.14 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.07 0.07 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  0.  0.]
select_j_column
[ 0. -1.  1.  0.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.  0.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  0. -1. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0. -1.  0.  0.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
11 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
12 classifiers pre label
Counter({1.0: 37, 0.0: 16, -1.0: 3})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
14 classifiers pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.6 2.  2.2 2.4]
 [0.  0.  2.2 2.4 1.8]
 [0.  0.  0.  2.2 1.4]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.33 0.2  0.07 0.27 0.13 0.2  0.27 0.2  0.27 0.27 0.2  0.2
  0.13]
 [0.   0.   0.27 0.13 0.2  0.13 0.13 0.2  0.2  0.13 0.27 0.27 0.2  0.13
  0.2 ]
 [0.   0.   0.   0.33 0.27 0.13 0.27 0.2  0.27 0.2  0.2  0.2  0.33 0.2
  0.2 ]
 [0.   0.   0.   0.   0.2  0.2  0.13 0.2  0.2  0.27 0.27 0.2  0.13 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.2  0.07 0.13 0.27 0.13 0.27 0.27 0.27 0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.13 0.2  0.27 0.2  0.33 0.2  0.27 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.13 0.27 0.2  0.2  0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.2  0.13 0.2  0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.07 0.07 0.27 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.33 0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.  0.  1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  0. -1. -1.  0.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1.  1. -1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0. -1.  0.  0. -1.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
11 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
12 classifiers pre label
Counter({1.0: 37, 0.0: 16, -1.0: 3})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
14 classifiers pre label
Counter({1.0: 55, 0.0: 1})
15 classifiers pre label
Counter({0.0: 53, -1.0: 3})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.6 2.2 2.4 2.6]
 [0.  0.  2.4 2.6 2. ]
 [0.  0.  0.  2.2 1.6]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.31 0.19 0.06 0.25 0.12 0.19 0.25 0.19 0.25 0.25 0.19 0.19
  0.12 0.31]
 [0.   0.   0.25 0.12 0.19 0.12 0.12 0.19 0.19 0.12 0.25 0.25 0.19 0.12
  0.19 0.19]
 [0.   0.   0.   0.31 0.25 0.12 0.25 0.19 0.25 0.19 0.19 0.19 0.31 0.19
  0.19 0.25]
 [0.   0.   0.   0.   0.19 0.19 0.12 0.19 0.19 0.25 0.25 0.19 0.12 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.19 0.06 0.12 0.25 0.12 0.25 0.25 0.25 0.12
  0.06 0.31]
 [0.   0.   0.   0.   0.   0.   0.12 0.19 0.25 0.19 0.31 0.19 0.25 0.19
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.12 0.25 0.19 0.19 0.12
  0.06 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.19 0.12 0.19 0.19
  0.12 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.06 0.06 0.25 0.19
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.31 0.
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.12
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  0.  1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.  0.  1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  0. -1. -1.  0. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1.  1. -1.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({0.0: 39, -1.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({1.0: 55, 0.0: 1})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 55, 0.0: 1})
7 classifiers pre label
Counter({1.0: 55, 0.0: 1})
8 classifiers pre label
Counter({0.0: 40, 1.0: 16})
9 classifiers pre label
Counter({0.0: 40, -1.0: 16})
10 classifiers pre label
Counter({0.0: 40, 1.0: 16})
11 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
12 classifiers pre label
Counter({1.0: 37, 0.0: 16, -1.0: 3})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
14 classifiers pre label
Counter({1.0: 55, 0.0: 1})
15 classifiers pre label
Counter({0.0: 53, -1.0: 3})
16 classifiers pre label
Counter({0.0: 39, 1.0: 17})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.8 2.4 2.6 2.8]
 [0.  0.  2.6 2.8 2.2]
 [0.  0.  0.  2.2 1.6]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.29 0.18 0.06 0.24 0.12 0.18 0.24 0.18 0.24 0.24 0.18 0.18
  0.12 0.29 0.24]
 [0.   0.   0.24 0.12 0.18 0.12 0.12 0.18 0.18 0.12 0.24 0.24 0.18 0.12
  0.18 0.18 0.12]
 [0.   0.   0.   0.29 0.24 0.12 0.24 0.18 0.24 0.18 0.18 0.18 0.29 0.18
  0.18 0.24 0.12]
 [0.   0.   0.   0.   0.18 0.18 0.12 0.18 0.18 0.24 0.24 0.18 0.12 0.24
  0.18 0.18 0.24]
 [0.   0.   0.   0.   0.   0.18 0.06 0.12 0.24 0.12 0.24 0.24 0.24 0.12
  0.06 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.12 0.18 0.24 0.18 0.29 0.18 0.24 0.18
  0.18 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.12 0.24 0.18 0.18 0.12
  0.06 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.18 0.12 0.18 0.18
  0.12 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.06 0.06 0.24 0.18
  0.24 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.29 0.
  0.06 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.12
  0.18 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24
  0.24 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})

**********      classifier acc  **************
[0.791, 0.273, 0.786, 0.786, 0.8, 0.786, 0.784, 0.961, 0.118, 0.118, 0.176, 0.804, 0.725, 0.118, 0.804, 0.154, 0.455]
before cutting matrix
[[ 1.  0. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.  0.  1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  0. -1. -1.  0. -1.]
 [ 0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1.  1. -1.  1.]
 [ 0. -1.  1. -1.  0.  1.  0.  0.  0.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0. -1.  1. -1.  0. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
positive and negative ratio
Counter({-1.0: 61, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 61, 1.0: 16})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({1.0: 29, -1.0: 25})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 29, 1.0: 25})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({1.0: 38, -1.0: 16})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({1.0: 89, -1.0: 32})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 29, 1.0: 25})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
positive and negative ratio
Counter({1.0: 48, -1.0: 29})
after cutting matrix
[[-1.  1.  1. -1.  1.  1.  0. -1.  1.  0.  1.  0.  0.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  0. -1. -1.  0. -1.]
 [ 1. -1.  1.  1.  1.  1. -1. -1.  0.  1.  1. -1.  1.]
 [ 1. -1.  0.  1.  0.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 1. -1.  0. -1. -1. -1.  1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 89, -1.0: 77})
Counter({1.0: 105, -1.0: 29})
Counter({-1.0: 127, 1.0: 39})
Counter({1.0: 105, -1.0: 38})
Counter({1.0: 134, -1.0: 9})
Counter({1.0: 38, -1.0: 16})
Counter({-1.0: 114, 1.0: 29})
Counter({1.0: 89, -1.0: 32})
Counter({-1.0: 29, 1.0: 25})
Counter({1.0: 114, -1.0: 29})
Counter({-1.0: 39, 1.0: 9})
Counter({1.0: 48, -1.0: 29})
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 7  0  2  0  0]
 [ 5  0  1  1  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]


SVM classifier
Time: 2019-01-09 22:19:48
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 49, 1.0: 18})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 34, -1.0: 33})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  5  0  0]]
row HD
[[0.   0.   0.33 0.17 0.17 0.17]
 [0.   0.   0.33 0.17 0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 34, -1.0: 33})
2 classifiers pre label
Counter({1.0: 34, -1.0: 33})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  5  0  0]]
row HD
[[0.   0.   0.5  0.33 0.33 0.33]
 [0.   0.   0.5  0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1. 1.]
 [0. 0. 0.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1.  0.]
 [-1.  1.  1. -1.]
 [-1.  1.  1.  0.]
 [-1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 34, -1.0: 33})
2 classifiers pre label
Counter({1.0: 34, -1.0: 33})
3 classifiers pre label
Counter({1.0: 35, 0.0: 27, -1.0: 5})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.   0.67 0.5  0.5  0.5 ]
 [0.   0.   0.67 0.5  0.5  0.5 ]
 [0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.75 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.]
 [ 1.  1.  1.  0.  1.]
 [-1.  1.  1. -1. -1.]
 [-1.  1.  1.  0.  1.]
 [-1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 34, -1.0: 33})
2 classifiers pre label
Counter({1.0: 34, -1.0: 33})
3 classifiers pre label
Counter({1.0: 35, 0.0: 27, -1.0: 5})
4 classifiers pre label
Counter({1.0: 62, -1.0: 5})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.   0.67 0.67 0.5  0.5 ]
 [0.   0.   0.67 0.67 0.5  0.5 ]
 [0.   0.   0.   0.5  0.17 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.6 1.  0.8]
 [0.  0.  0.  1.2 0.6]
 [0.  0.  0.  1.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  0.  1.  1.]
 [-1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  0.  1. -1.]
 [-1.  1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
1 classifiers pre label
Counter({1.0: 34, -1.0: 33})
2 classifiers pre label
Counter({1.0: 34, -1.0: 33})
3 classifiers pre label
Counter({1.0: 35, 0.0: 27, -1.0: 5})
4 classifiers pre label
Counter({1.0: 62, -1.0: 5})
5 classifiers pre label
Counter({1.0: 51, -1.0: 16})
confusion matrix
[[21  1  0  0  0  0]
 [ 1  7  0  0  1  1]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.67 0.67 0.67 0.5 ]
 [0.   0.   0.83 0.83 0.5  0.67]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  0.83 0.67 0.5 ]
 [0.   0.   0.   1.   0.5  0.33]
 [0.   0.   0.   1.   0.5  0.33]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})

**********      classifier acc  **************
[1.0, 0.925, 0.925, 0.925, 0.955, 0.91]
before cutting matrix
[[-1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  0.  1.  1.]
 [-1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  0.  1. -1.]
 [-1.  1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({1.0: 105, -1.0: 96})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 105, -1.0: 96})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({1.0: 105, -1.0: 96})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
positive and negative ratio
Counter({1.0: 135, -1.0: 66})
after cutting matrix
[[-1.  1.  1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  0.  1.  1.]
 [-1. -1. -1.  1.]
 [-1.  0.  1. -1.]
 [-1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 164, 1.0: 37})
Counter({1.0: 96, -1.0: 30})
Counter({1.0: 171, -1.0: 30})
Counter({1.0: 135, -1.0: 66})
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-09 22:19:49
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1.  0.  1.  0.]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  0. -1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1.  0.]
 [-1.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 95, -1.0: 10})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
1 classifiers pre label
Counter({0.0: 34, 1.0: 28, -1.0: 5})
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.17 0.33 0.17]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 95, -1.0: 10})

**********      classifier acc  **************
[1.0, 0.914]
before cutting matrix
[[ 0.  0.]
 [ 1.  0.]
 [-1.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 95, -1.0: 10})
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 95, -1.0: 10})
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
positive and negative ratio
Counter({1.0: 95, -1.0: 10})
after cutting matrix
[[ 0.  0.]
 [ 1.  0.]
 [-1.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 95, -1.0: 10})
cutting matrix's confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-09 22:19:50
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({1.0: 140, -1.0: 48})
confusion matrix
[[ 5  0  0 15  0  0  0  0  0  0]
 [16  0  0  5  0  0  0  0  0  0]
 [16  0  0  6  0  0  0  0  0  0]
 [ 5  0  0 14  0  0  0  0  0  0]
 [ 2  0  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [ 0  0  0 21  0  0  0  0  0  0]
 [ 0  0  0 14  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 5  0  0  6  0  0  9  0  0  0]
 [16  0  0  5  0  0  0  0  0  0]
 [16  0  0  3  0  0  3  0  0  0]
 [ 5  0  0 14  0  0  0  0  0  0]
 [ 2  0  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 13  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [ 0  0  0  7  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
confusion matrix
[[ 0  5  0  6  0  0  9  0  0  0]
 [ 0 16  0  5  0  0  0  0  0  0]
 [ 0 16  0  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 13  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [ 0  0  0  7  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.1 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.  0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.2 0.2 0.  0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   0.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
confusion matrix
[[ 0  5  0  6  0  0  9  0  0  0]
 [ 0 16  0  5  0  0  0  0  0  0]
 [ 0 16  0  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0 24  0  0  0  0  0  0]
 [ 0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 13  0  0  0]
 [ 0  4  0 11  0  0  0  0  0  0]
 [ 0  0  0  7  0  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.1 0.2 0.3 0.1 0.3 0.1]
 [0.  0.  0.  0.3 0.3 0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.3 0.3 0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.3 0.2 0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  0.25 0.75]
 [0.   0.   1.25 0.75]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
confusion matrix
[[ 0  1  4  2  4  0  9  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  6  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.3 0.2 0.2 0.1 0.3 0.4 0.1 0.4 0.1]
 [0.  0.  0.1 0.3 0.4 0.  0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.4 0.3 0.1 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.1 0.3 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.4 0.3 0.  0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 0.2 0.6 1. ]
 [0.  0.  1.  0.6 0.6]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
confusion matrix
[[ 0  1  4  2  4  0  9  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  6  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.1 0.3 0.4 0.1 0.4 0.1]
 [0.  0.  0.2 0.4 0.5 0.1 0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.4 0.3 0.1 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.1 0.3 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.4 0.3 0.  0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.17 0.5  0.83 0.5 ]
 [0.   0.   0.83 0.5  0.5  0.5 ]
 [0.   0.   0.   0.33 0.67 0.33]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
confusion matrix
[[ 0  1  4  2  4  0  9  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  6  0 14  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.5 0.2 0.3 0.1 0.4 0.5 0.1 0.5 0.1]
 [0.  0.  0.3 0.4 0.6 0.1 0.4 0.6 0.4 0.6]
 [0.  0.  0.  0.5 0.3 0.2 0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.5 0.4 0.  0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.14 0.43 0.71 0.43 0.71]
 [0.   0.   0.71 0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.29 0.57 0.29 0.57]
 [0.   0.   0.   0.   0.29 0.57 0.29]
 [0.   0.   0.   0.   0.   0.57 0.  ]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.6 0.2 0.3 0.1 0.4 0.6 0.1 0.6 0.2]
 [0.  0.  0.4 0.5 0.7 0.2 0.4 0.7 0.4 0.6]
 [0.  0.  0.  0.5 0.3 0.2 0.6 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.  0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.12 0.38 0.62 0.38 0.62 0.5 ]
 [0.   0.   0.62 0.38 0.38 0.38 0.38 1.  ]
 [0.   0.   0.   0.25 0.5  0.25 0.5  0.62]
 [0.   0.   0.   0.   0.25 0.5  0.25 0.88]
 [0.   0.   0.   0.   0.   0.5  0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.5  0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.2 0.4 0.1 0.5 0.7 0.1 0.7 0.2]
 [0.  0.  0.5 0.5 0.8 0.2 0.4 0.8 0.4 0.7]
 [0.  0.  0.  0.6 0.3 0.3 0.7 0.3 0.7 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.  0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.11 0.33 0.56 0.33 0.56 0.44 0.56]
 [0.   0.   0.56 0.33 0.33 0.33 0.33 0.89 0.33]
 [0.   0.   0.   0.22 0.44 0.22 0.44 0.56 0.44]
 [0.   0.   0.   0.   0.22 0.44 0.22 0.78 0.22]
 [0.   0.   0.   0.   0.   0.44 0.   0.78 0.  ]
 [0.   0.   0.   0.   0.   0.   0.44 0.78 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.2 0.4 0.1 0.5 0.8 0.1 0.8 0.2]
 [0.  0.  0.5 0.5 0.8 0.2 0.5 0.8 0.5 0.7]
 [0.  0.  0.  0.6 0.3 0.3 0.8 0.3 0.8 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.6 0.7 0.  0.7 0.1]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.1 0.3 0.5 0.3 0.5 0.4 0.5 0.6]
 [0.  0.  0.5 0.3 0.3 0.3 0.3 0.8 0.3 0. ]
 [0.  0.  0.  0.2 0.4 0.2 0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.2 0.4 0.2 0.7 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.  0.7 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.8 0.2 0.4 0.1 0.5 0.9 0.1 0.9 0.3]
 [0.  0.  0.6 0.6 0.9 0.3 0.5 0.9 0.5 0.7]
 [0.  0.  0.  0.6 0.3 0.3 0.9 0.3 0.9 0.5]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.6 0.8 0.  0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.09 0.27 0.45 0.27 0.45 0.36 0.45 0.55 0.55]
 [0.   0.   0.45 0.27 0.27 0.27 0.27 0.73 0.27 0.   0.18]
 [0.   0.   0.   0.18 0.36 0.18 0.36 0.45 0.36 0.45 0.45]
 [0.   0.   0.   0.   0.18 0.36 0.18 0.64 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.36 0.   0.64 0.   0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.36 0.64 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.   0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.73 0.91]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.9 0.2 0.4 0.1 0.6 0.9 0.1 0.9 0.3]
 [0.  0.  0.7 0.7 1.  0.3 0.6 1.  0.6 0.8]
 [0.  0.  0.  0.6 0.3 0.4 0.9 0.3 0.9 0.5]
 [0.  0.  0.  0.  0.3 0.4 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.7 0.8 0.  0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.08 0.25 0.42 0.25 0.42 0.33 0.42 0.5  0.5  0.17]
 [0.   0.   0.42 0.25 0.25 0.25 0.25 0.67 0.25 0.   0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.17 0.33 0.42 0.33 0.42 0.42 0.08]
 [0.   0.   0.   0.   0.17 0.33 0.17 0.58 0.17 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.33 0.   0.58 0.   0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.33 0.58 0.33 0.25 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.58 0.   0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.67 0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.9 0.2 0.4 0.1 0.6 1.  0.1 1.  0.3]
 [0.  0.  0.7 0.7 1.  0.3 0.7 1.  0.7 0.8]
 [0.  0.  0.  0.6 0.3 0.4 1.  0.3 1.  0.5]
 [0.  0.  0.  0.  0.3 0.4 0.6 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.7 0.9 0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.46 0.08 0.23 0.38 0.23 0.38 0.31 0.38 0.46 0.46 0.15 0.46]
 [0.   0.   0.38 0.23 0.23 0.23 0.23 0.62 0.23 0.   0.15 0.31 0.  ]
 [0.   0.   0.   0.15 0.31 0.15 0.31 0.38 0.31 0.38 0.38 0.08 0.38]
 [0.   0.   0.   0.   0.15 0.31 0.15 0.54 0.15 0.23 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.31 0.   0.54 0.   0.23 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.31 0.54 0.31 0.23 0.23 0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.54 0.   0.23 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.62 0.77 0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.  0.2 0.4 0.1 0.6 1.  0.1 1.  0.3]
 [0.  0.  0.8 0.8 1.1 0.4 0.8 1.1 0.8 0.9]
 [0.  0.  0.  0.6 0.3 0.4 1.  0.3 1.  0.5]
 [0.  0.  0.  0.  0.3 0.4 0.6 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.7 0.9 0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.07 0.21 0.36 0.21 0.36 0.29 0.36 0.43 0.43 0.14 0.43 0.21]
 [0.   0.   0.36 0.21 0.21 0.21 0.21 0.57 0.21 0.   0.14 0.29 0.   0.21]
 [0.   0.   0.   0.14 0.29 0.14 0.29 0.36 0.29 0.36 0.36 0.07 0.36 0.14]
 [0.   0.   0.   0.   0.14 0.29 0.14 0.5  0.14 0.21 0.21 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.29 0.   0.5  0.   0.21 0.21 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.5  0.29 0.21 0.21 0.07 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.   0.21 0.21 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.57 0.71 0.43 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
confusion matrix
[[ 0  1  4  2  2  0  9  0  0  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  3  0  0  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0 14  0  0  5]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.1 0.3 0.4 0.1 0.7 1.  0.1 1.  0.3]
 [0.  0.  0.8 0.9 1.2 0.4 0.9 1.2 0.9 1. ]
 [0.  0.  0.  0.7 0.4 0.4 1.1 0.4 1.1 0.6]
 [0.  0.  0.  0.  0.3 0.5 0.6 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.8 0.9 0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.07 0.2  0.33 0.2  0.33 0.27 0.33 0.4  0.4  0.13 0.4  0.2
  0.07]
 [0.   0.   0.33 0.2  0.2  0.2  0.2  0.53 0.2  0.   0.13 0.27 0.   0.2
  0.33]
 [0.   0.   0.   0.13 0.27 0.13 0.27 0.33 0.27 0.33 0.33 0.07 0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.13 0.27 0.13 0.47 0.13 0.2  0.2  0.2  0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.27 0.   0.47 0.   0.2  0.2  0.2  0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.27 0.47 0.27 0.2  0.2  0.07 0.2  0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.   0.2  0.2  0.2  0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.67 0.4  0.53 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.2  0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.   0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.07
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.1 0.3 0.5 0.1 0.8 1.1 0.1 1.  0.3]
 [0.  0.  0.8 1.  1.2 0.5 1.  1.2 0.9 1. ]
 [0.  0.  0.  0.8 0.4 0.5 1.2 0.4 1.1 0.6]
 [0.  0.  0.  0.  0.4 0.5 0.6 0.4 0.7 0.6]
 [0.  0.  0.  0.  0.  0.9 1.  0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.9 0.9 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.06 0.19 0.31 0.19 0.31 0.25 0.31 0.38 0.38 0.12 0.38 0.19
  0.06 0.31]
 [0.   0.   0.31 0.19 0.19 0.19 0.19 0.5  0.19 0.   0.12 0.25 0.   0.19
  0.31 0.19]
 [0.   0.   0.   0.12 0.25 0.12 0.25 0.31 0.25 0.31 0.31 0.06 0.31 0.12
  0.   0.25]
 [0.   0.   0.   0.   0.12 0.25 0.12 0.44 0.12 0.19 0.19 0.19 0.19 0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.25 0.   0.44 0.   0.19 0.19 0.19 0.19 0.25
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.25 0.44 0.25 0.19 0.19 0.06 0.19 0.
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.   0.19 0.19 0.19 0.19 0.25
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.5  0.62 0.38 0.5  0.44
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19 0.19 0.25
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.   0.19
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.19
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.06
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.2 0.3 0.5 0.1 0.8 1.2 0.1 1.1 0.3]
 [0.  0.  0.9 1.1 1.3 0.6 1.  1.3 0.9 1.1]
 [0.  0.  0.  0.8 0.4 0.5 1.3 0.4 1.2 0.6]
 [0.  0.  0.  0.  0.4 0.5 0.7 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.9 1.1 0.  1.  0.2]
 [0.  0.  0.  0.  0.  0.  1.  0.9 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.06 0.18 0.29 0.18 0.29 0.24 0.29 0.35 0.35 0.12 0.35 0.18
  0.06 0.29 0.29]
 [0.   0.   0.29 0.18 0.18 0.18 0.18 0.47 0.18 0.   0.12 0.24 0.   0.18
  0.29 0.18 0.06]
 [0.   0.   0.   0.12 0.24 0.12 0.24 0.29 0.24 0.29 0.29 0.06 0.29 0.12
  0.   0.24 0.24]
 [0.   0.   0.   0.   0.12 0.24 0.12 0.41 0.12 0.18 0.18 0.18 0.18 0.24
  0.12 0.24 0.12]
 [0.   0.   0.   0.   0.   0.24 0.   0.41 0.   0.18 0.18 0.18 0.18 0.24
  0.24 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.24 0.41 0.24 0.18 0.18 0.06 0.18 0.
  0.12 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.41 0.   0.18 0.18 0.18 0.18 0.24
  0.24 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.47 0.59 0.35 0.47 0.41
  0.29 0.29 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.18 0.18 0.24
  0.24 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.   0.18
  0.29 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.18
  0.29 0.29 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.06
  0.06 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.29 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.2 0.3 0.6 0.2 0.8 1.2 0.2 1.1 0.4]
 [0.  0.  0.9 1.2 1.4 0.6 1.  1.4 0.9 1.2]
 [0.  0.  0.  0.9 0.5 0.5 1.3 0.5 1.2 0.7]
 [0.  0.  0.  0.  0.4 0.6 0.8 0.4 0.9 0.6]
 [0.  0.  0.  0.  0.  1.  1.2 0.  1.1 0.2]
 [0.  0.  0.  0.  0.  0.  1.  1.  1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.06 0.17 0.28 0.17 0.28 0.22 0.28 0.33 0.33 0.11 0.33 0.17
  0.06 0.28 0.28 0.11]
 [0.   0.   0.28 0.17 0.17 0.17 0.17 0.44 0.17 0.   0.11 0.22 0.   0.17
  0.28 0.17 0.06 0.22]
 [0.   0.   0.   0.11 0.22 0.11 0.22 0.28 0.22 0.28 0.28 0.06 0.28 0.11
  0.   0.22 0.22 0.17]
 [0.   0.   0.   0.   0.11 0.22 0.11 0.39 0.11 0.17 0.17 0.17 0.17 0.22
  0.11 0.22 0.11 0.06]
 [0.   0.   0.   0.   0.   0.22 0.   0.39 0.   0.17 0.17 0.17 0.17 0.22
  0.22 0.11 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.22 0.39 0.22 0.17 0.17 0.06 0.17 0.
  0.11 0.22 0.11 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.39 0.   0.17 0.17 0.17 0.17 0.22
  0.22 0.11 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.44 0.56 0.33 0.44 0.39
  0.28 0.28 0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.17 0.17 0.22
  0.22 0.11 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.22 0.   0.17
  0.28 0.17 0.06 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.11 0.17
  0.28 0.28 0.06 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.06
  0.06 0.17 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.28 0.17 0.06 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.11 0.22 0.11 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
18 classifiers pre label
Counter({1.0: 140, -1.0: 48})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.3 0.4 0.6 0.2 0.9 1.2 0.2 1.1 0.4]
 [0.  0.  0.9 1.3 1.5 0.6 1.1 1.5 1.  1.3]
 [0.  0.  0.  1.  0.6 0.5 1.4 0.6 1.3 0.8]
 [0.  0.  0.  0.  0.4 0.7 0.8 0.4 0.9 0.6]
 [0.  0.  0.  0.  0.  1.1 1.2 0.  1.1 0.2]
 [0.  0.  0.  0.  0.  0.  1.1 1.1 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.05 0.16 0.26 0.16 0.26 0.21 0.26 0.32 0.32 0.11 0.32 0.16
  0.05 0.26 0.26 0.11 0.05]
 [0.   0.   0.26 0.16 0.16 0.16 0.16 0.42 0.16 0.   0.11 0.21 0.   0.16
  0.26 0.16 0.05 0.21 0.26]
 [0.   0.   0.   0.11 0.21 0.11 0.21 0.26 0.21 0.26 0.26 0.05 0.26 0.11
  0.   0.21 0.21 0.16 0.  ]
 [0.   0.   0.   0.   0.11 0.21 0.11 0.37 0.11 0.16 0.16 0.16 0.16 0.21
  0.11 0.21 0.11 0.05 0.11]
 [0.   0.   0.   0.   0.   0.21 0.   0.37 0.   0.16 0.16 0.16 0.16 0.21
  0.21 0.11 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.21 0.37 0.21 0.16 0.16 0.05 0.16 0.
  0.11 0.21 0.11 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.37 0.   0.16 0.16 0.16 0.16 0.21
  0.21 0.11 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.42 0.53 0.32 0.42 0.37
  0.26 0.26 0.47 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.16 0.16 0.16 0.21
  0.21 0.11 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.21 0.   0.16
  0.26 0.16 0.05 0.21 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.11 0.16
  0.26 0.26 0.05 0.21 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.05
  0.05 0.16 0.16 0.21 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16
  0.26 0.16 0.05 0.21 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.11 0.21 0.11 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.21 0.16 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]]


============== iter  20 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
18 classifiers pre label
Counter({1.0: 140, -1.0: 48})
19 classifiers pre label
Counter({0.0: 88, -1.0: 52, 1.0: 48})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.3 0.4 0.7 0.3 0.9 1.3 0.3 1.2 0.5]
 [0.  0.  0.9 1.4 1.6 0.6 1.2 1.6 1.1 1.4]
 [0.  0.  0.  1.1 0.7 0.5 1.5 0.7 1.4 0.9]
 [0.  0.  0.  0.  0.4 0.8 0.9 0.4 1.  0.6]
 [0.  0.  0.  0.  0.  1.2 1.3 0.  1.2 0.2]
 [0.  0.  0.  0.  0.  0.  1.2 1.2 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 0.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.05 0.15 0.25 0.15 0.25 0.2  0.25 0.3  0.3  0.1  0.3  0.15
  0.05 0.25 0.25 0.1  0.05 0.5 ]
 [0.   0.   0.25 0.15 0.15 0.15 0.15 0.4  0.15 0.   0.1  0.2  0.   0.15
  0.25 0.15 0.05 0.2  0.25 0.2 ]
 [0.   0.   0.   0.1  0.2  0.1  0.2  0.25 0.2  0.25 0.25 0.05 0.25 0.1
  0.   0.2  0.2  0.15 0.   0.45]
 [0.   0.   0.   0.   0.1  0.2  0.1  0.35 0.1  0.15 0.15 0.15 0.15 0.2
  0.1  0.2  0.1  0.05 0.1  0.35]
 [0.   0.   0.   0.   0.   0.2  0.   0.35 0.   0.15 0.15 0.15 0.15 0.2
  0.2  0.1  0.1  0.15 0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.2  0.35 0.2  0.15 0.15 0.05 0.15 0.
  0.1  0.2  0.1  0.25 0.1  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.   0.15 0.15 0.15 0.15 0.2
  0.2  0.1  0.1  0.15 0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.4  0.5  0.3  0.4  0.35
  0.25 0.25 0.45 0.3  0.25 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15 0.15 0.15 0.2
  0.2  0.1  0.1  0.15 0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.2  0.   0.15
  0.25 0.15 0.05 0.2  0.25 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.1  0.15
  0.25 0.25 0.05 0.2  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.05
  0.05 0.15 0.15 0.2  0.05 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15
  0.25 0.15 0.05 0.2  0.25 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.1  0.2  0.1  0.25 0.1  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.2  0.2  0.15 0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.2  0.25 0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.15 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
18 classifiers pre label
Counter({1.0: 140, -1.0: 48})
19 classifiers pre label
Counter({0.0: 88, -1.0: 52, 1.0: 48})
20 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.3 0.4 0.7 0.3 0.9 1.4 0.3 1.3 0.5]
 [0.  0.  0.9 1.4 1.6 0.6 1.3 1.6 1.2 1.4]
 [0.  0.  0.  1.1 0.7 0.5 1.6 0.7 1.5 0.9]
 [0.  0.  0.  0.  0.4 0.8 1.  0.4 1.1 0.6]
 [0.  0.  0.  0.  0.  1.2 1.4 0.  1.3 0.2]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.4 0.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.05 0.14 0.24 0.14 0.24 0.19 0.24 0.29 0.29 0.1  0.29 0.14
  0.05 0.24 0.24 0.1  0.05 0.48 0.29]
 [0.   0.   0.24 0.14 0.14 0.14 0.14 0.38 0.14 0.   0.1  0.19 0.   0.14
  0.24 0.14 0.05 0.19 0.24 0.19 0.  ]
 [0.   0.   0.   0.1  0.19 0.1  0.19 0.24 0.19 0.24 0.24 0.05 0.24 0.1
  0.   0.19 0.19 0.14 0.   0.43 0.24]
 [0.   0.   0.   0.   0.1  0.19 0.1  0.33 0.1  0.14 0.14 0.14 0.14 0.19
  0.1  0.19 0.1  0.05 0.1  0.33 0.14]
 [0.   0.   0.   0.   0.   0.19 0.   0.33 0.   0.14 0.14 0.14 0.14 0.19
  0.19 0.1  0.1  0.14 0.19 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.19 0.33 0.19 0.14 0.14 0.05 0.14 0.
  0.1  0.19 0.1  0.24 0.1  0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.   0.14 0.14 0.14 0.14 0.19
  0.19 0.1  0.1  0.14 0.19 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.38 0.48 0.29 0.38 0.33
  0.24 0.24 0.43 0.29 0.24 0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.14 0.14 0.19
  0.19 0.1  0.1  0.14 0.19 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.19 0.   0.14
  0.24 0.14 0.05 0.19 0.24 0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.1  0.14
  0.24 0.24 0.05 0.19 0.24 0.24 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.05
  0.05 0.14 0.14 0.19 0.05 0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14
  0.24 0.14 0.05 0.19 0.24 0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.1  0.19 0.1  0.24 0.1  0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19 0.19 0.14 0.   0.43 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.19 0.24 0.19 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.19 0.24 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.43 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  0.  0.  1. -1.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  0.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.  1.  1.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.  0.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1. -1. -1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
18 classifiers pre label
Counter({1.0: 140, -1.0: 48})
19 classifiers pre label
Counter({0.0: 88, -1.0: 52, 1.0: 48})
20 classifiers pre label
Counter({1.0: 147, -1.0: 41})
21 classifiers pre label
Counter({0.0: 100, 1.0: 88})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.3 0.4 0.8 0.4 1.  1.4 0.4 1.4 0.6]
 [0.  0.  0.9 1.5 1.7 0.7 1.3 1.7 1.3 1.5]
 [0.  0.  0.  1.2 0.8 0.6 1.6 0.8 1.6 1. ]
 [0.  0.  0.  0.  0.5 0.9 1.1 0.5 1.1 0.7]
 [0.  0.  0.  0.  0.  1.2 1.5 0.  1.4 0.2]
 [0.  0.  0.  0.  0.  0.  1.4 1.2 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.5 0.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.05 0.14 0.23 0.14 0.23 0.18 0.23 0.27 0.27 0.09 0.27 0.14
  0.05 0.23 0.23 0.09 0.05 0.45 0.27 0.32]
 [0.   0.   0.23 0.14 0.14 0.14 0.14 0.36 0.14 0.   0.09 0.18 0.   0.14
  0.23 0.14 0.05 0.18 0.23 0.18 0.   0.23]
 [0.   0.   0.   0.09 0.18 0.09 0.18 0.23 0.18 0.23 0.23 0.05 0.23 0.09
  0.   0.18 0.18 0.14 0.   0.41 0.23 0.32]
 [0.   0.   0.   0.   0.09 0.18 0.09 0.32 0.09 0.14 0.14 0.14 0.14 0.18
  0.09 0.18 0.09 0.05 0.09 0.32 0.14 0.27]
 [0.   0.   0.   0.   0.   0.18 0.   0.32 0.   0.14 0.14 0.14 0.14 0.18
  0.18 0.09 0.09 0.14 0.18 0.27 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.18 0.32 0.18 0.14 0.14 0.05 0.14 0.
  0.09 0.18 0.09 0.23 0.09 0.32 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.   0.14 0.14 0.14 0.14 0.18
  0.18 0.09 0.09 0.14 0.18 0.27 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.36 0.45 0.27 0.36 0.32
  0.23 0.23 0.41 0.27 0.23 0.41 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.14 0.14 0.18
  0.18 0.09 0.09 0.14 0.18 0.27 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.18 0.   0.14
  0.23 0.14 0.05 0.18 0.23 0.18 0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.09 0.14
  0.23 0.23 0.05 0.18 0.23 0.23 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.05
  0.05 0.14 0.14 0.18 0.05 0.36 0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14
  0.23 0.14 0.05 0.18 0.23 0.18 0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.09 0.18 0.09 0.23 0.09 0.32 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.18 0.14 0.   0.41 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18 0.23 0.18 0.27 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.18 0.23 0.05 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.36 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.41 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  0.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.  1.  1.  0.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.  0.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1. -1. -1.  0. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
18 classifiers pre label
Counter({1.0: 140, -1.0: 48})
19 classifiers pre label
Counter({0.0: 88, -1.0: 52, 1.0: 48})
20 classifiers pre label
Counter({1.0: 147, -1.0: 41})
21 classifiers pre label
Counter({0.0: 100, 1.0: 88})
22 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.3 0.4 0.8 0.4 1.  1.5 0.4 1.4 0.6]
 [0.  0.  0.9 1.5 1.7 0.7 1.4 1.7 1.3 1.5]
 [0.  0.  0.  1.2 0.8 0.6 1.7 0.8 1.6 1. ]
 [0.  0.  0.  0.  0.5 0.9 1.2 0.5 1.1 0.7]
 [0.  0.  0.  0.  0.  1.2 1.6 0.  1.4 0.2]
 [0.  0.  0.  0.  0.  0.  1.5 1.2 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.6 0.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.04 0.13 0.22 0.13 0.22 0.17 0.22 0.26 0.26 0.09 0.26 0.13
  0.04 0.22 0.22 0.09 0.04 0.43 0.26 0.3  0.22]
 [0.   0.   0.22 0.13 0.13 0.13 0.13 0.35 0.13 0.   0.09 0.17 0.   0.13
  0.22 0.13 0.04 0.17 0.22 0.17 0.   0.22 0.04]
 [0.   0.   0.   0.09 0.17 0.09 0.17 0.22 0.17 0.22 0.22 0.04 0.22 0.09
  0.   0.17 0.17 0.13 0.   0.39 0.22 0.3  0.17]
 [0.   0.   0.   0.   0.09 0.17 0.09 0.3  0.09 0.13 0.13 0.13 0.13 0.17
  0.09 0.17 0.09 0.04 0.09 0.3  0.13 0.26 0.17]
 [0.   0.   0.   0.   0.   0.17 0.   0.3  0.   0.13 0.13 0.13 0.13 0.17
  0.17 0.09 0.09 0.13 0.17 0.26 0.13 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.17 0.3  0.17 0.13 0.13 0.04 0.13 0.
  0.09 0.17 0.09 0.22 0.09 0.3  0.13 0.26 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.   0.13 0.13 0.13 0.13 0.17
  0.17 0.09 0.09 0.13 0.17 0.26 0.13 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.43 0.26 0.35 0.3
  0.22 0.22 0.39 0.26 0.22 0.39 0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.13 0.13 0.17
  0.17 0.09 0.09 0.13 0.17 0.26 0.13 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.17 0.   0.13
  0.22 0.13 0.04 0.17 0.22 0.17 0.   0.22 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.09 0.13
  0.22 0.22 0.04 0.17 0.22 0.22 0.09 0.26 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.04
  0.04 0.13 0.13 0.17 0.04 0.35 0.17 0.3  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.22 0.13 0.04 0.17 0.22 0.17 0.   0.22 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.09 0.17 0.09 0.22 0.09 0.3  0.13 0.26 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.17 0.13 0.   0.39 0.22 0.3  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.22 0.17 0.26 0.13 0.26 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.13 0.17 0.22 0.04 0.22 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.13 0.35 0.17 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.39 0.22 0.3  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.22 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  24 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  0.  1.  0.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.  1.  1.  0.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.  1.  1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.  0.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.  0.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1. -1. -1.  0. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 140, -1.0: 48})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 140, -1.0: 48})
3 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
4 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
5 classifiers pre label
Counter({1.0: 159, -1.0: 29})
6 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
7 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
8 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 107, -1.0: 81})
11 classifiers pre label
Counter({1.0: 159, -1.0: 29})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 159, -1.0: 29})
14 classifiers pre label
Counter({1.0: 140, -1.0: 48})
15 classifiers pre label
Counter({1.0: 188})
16 classifiers pre label
Counter({1.0: 107, -1.0: 81})
17 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
18 classifiers pre label
Counter({1.0: 140, -1.0: 48})
19 classifiers pre label
Counter({0.0: 88, -1.0: 52, 1.0: 48})
20 classifiers pre label
Counter({1.0: 147, -1.0: 41})
21 classifiers pre label
Counter({0.0: 100, 1.0: 88})
22 classifiers pre label
Counter({1.0: 188})
23 classifiers pre label
Counter({0.0: 159, -1.0: 29})
confusion matrix
[[ 0  1  4  2  2  0  0  0  9  2]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  1  2  0  0  0  3  0]
 [ 0  5  0  1 13  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  0  0  2]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 13  1]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 0  0  0  1  1  0  0  0 14  5]
 [ 0  0  0 12  0  0  0  0  2  0]]
row HD
[[0.  1.4 0.4 0.8 0.4 1.1 1.6 0.4 1.5 0.6]
 [0.  0.  1.  1.6 1.8 0.7 1.5 1.8 1.4 1.6]
 [0.  0.  0.  1.2 0.8 0.7 1.8 0.8 1.7 1. ]
 [0.  0.  0.  0.  0.5 1.  1.3 0.5 1.2 0.7]
 [0.  0.  0.  0.  0.  1.3 1.7 0.  1.5 0.2]
 [0.  0.  0.  0.  0.  0.  1.6 1.3 1.6 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.7 0.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.04 0.12 0.21 0.12 0.21 0.17 0.21 0.25 0.25 0.08 0.25 0.12
  0.04 0.21 0.21 0.08 0.04 0.42 0.25 0.29 0.21 0.25]
 [0.   0.   0.21 0.12 0.12 0.12 0.12 0.33 0.12 0.   0.08 0.17 0.   0.12
  0.21 0.12 0.04 0.17 0.21 0.17 0.   0.21 0.04 0.42]
 [0.   0.   0.   0.08 0.17 0.08 0.17 0.21 0.17 0.21 0.21 0.04 0.21 0.08
  0.   0.17 0.17 0.12 0.   0.38 0.21 0.29 0.17 0.25]
 [0.   0.   0.   0.   0.08 0.17 0.08 0.29 0.08 0.12 0.12 0.12 0.12 0.17
  0.08 0.17 0.08 0.04 0.08 0.29 0.12 0.25 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17 0.   0.29 0.   0.12 0.12 0.12 0.12 0.17
  0.17 0.08 0.08 0.12 0.17 0.25 0.12 0.21 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.17 0.29 0.17 0.12 0.12 0.04 0.12 0.
  0.08 0.17 0.08 0.21 0.08 0.29 0.12 0.25 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.   0.12 0.12 0.12 0.12 0.17
  0.17 0.08 0.08 0.12 0.17 0.25 0.12 0.21 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.42 0.25 0.33 0.29
  0.21 0.21 0.38 0.25 0.21 0.38 0.33 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12 0.12 0.17
  0.17 0.08 0.08 0.12 0.17 0.25 0.12 0.21 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.   0.12
  0.21 0.12 0.04 0.17 0.21 0.17 0.   0.21 0.04 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.08 0.12
  0.21 0.21 0.04 0.17 0.21 0.21 0.08 0.25 0.12 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.04
  0.04 0.12 0.12 0.17 0.04 0.33 0.17 0.29 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.21 0.12 0.04 0.17 0.21 0.17 0.   0.21 0.04 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.08 0.17 0.08 0.21 0.08 0.29 0.12 0.25 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.17 0.12 0.   0.38 0.21 0.29 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.21 0.17 0.25 0.12 0.25 0.08 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.12 0.17 0.21 0.04 0.21 0.08 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.12 0.33 0.17 0.25 0.21 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.38 0.21 0.29 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.33 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.21 0.04 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})

**********      classifier acc  **************
[0.718, 0.883, 0.771, 0.66, 0.617, 0.894, 0.617, 0.739, 0.617, 0.883, 0.739, 0.809, 0.883, 0.894, 0.771, 0.739, 0.793, 0.761, 0.771, 0.614, 0.883, 0.55, 0.926, 0.208]
before cutting matrix
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  0.  1.  0.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.
  -1.  1.  1.  0.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.
  -1.  1.  1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1.
   1.  0.  1. -1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.  0.]
 [-1.  1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.
  -1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1. -1. -1. -1.
   1. -1. -1.  0. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1. -1.  1.  1.  1. -1. -1.
   1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 340, -1.0: 222})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({-1.0: 289, 1.0: 273})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({-1.0: 290, 1.0: 272})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({-1.0: 290, 1.0: 272})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 339, 1.0: 223})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({-1.0: 339, 1.0: 223})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({-1.0: 290, 1.0: 272})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({-1.0: 290, 1.0: 272})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 339, -1.0: 223})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 339, -1.0: 223})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 396, -1.0: 166})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({-1.0: 332, 1.0: 230})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({-1.0: 332, 1.0: 230})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 222, -1.0: 110})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 222, -1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 229, -1.0: 126})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 119, 1.0: 110})
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
positive and negative ratio
Counter({-1.0: 119, 1.0: 110})
after cutting matrix
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1. -1. -1.  1.  0.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  0. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 443, -1.0: 119})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 503, -1.0: 59})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 393, -1.0: 169})
Counter({1.0: 383, -1.0: 179})
Counter({1.0: 452, -1.0: 110})
Counter({1.0: 229, -1.0: 126})
Counter({1.0: 517, -1.0: 45})
cutting matrix's confusion matrix
[[ 2  1  4  0  4  0  0  0  9  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 0  4 12  0  3  0  0  0  3  0]
 [ 0  5  0  0 14  0  0  0  0  0]
 [ 2  2  0  0 22  0  0  0  0  0]
 [ 0  0  0  0 16  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0 11  0  0  0  0  0]
 [ 5  0  0  0  2  0  0  0 14  0]
 [ 0  0  0  0 12  0  0  0  2  0]]


SVM classifier
Time: 2019-01-09 22:20:22
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
confusion matrix
[[18  0  0  0  0  2  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [21  0  0  0  0  5  0  0  0  0]
 [ 3  0  0  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
select_j_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [-1.  1.]
 [-1.  0.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
confusion matrix
[[16  0  0  0  2  2  0  0  0  0]
 [17  0  0  0  4  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [ 4  0  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  4.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
most_cplx_inx
7
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [-1.  1.]
 [-1.  0.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
confusion matrix
[[16  0  0  0  2  2  0  0  0  0]
 [17  0  0  0  4  0  0  0  0  0]
 [19  0  0  2  0  1  0  0  0  0]
 [ 5  0  0 13  0  1  0  0  0  0]
 [ 4  0  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 4  0  0 11  0  0  0  0  0  0]
 [19  0  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  4.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]
 [ 0. -1. -1.]
 [-1.  1. -1.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [-1.  1. -1.]
 [-1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
confusion matrix
[[13  3  0  0  2  2  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [15  4  0  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  4  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [13  1  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [14  5  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.  0.2 0.2 0.2 0.  0.1 0.2 0.3]
 [0.  0.  0.1 0.2 0.2 0.2 0.1 0.  0.2 0.3]
 [0.  0.  0.  0.2 0.2 0.2 0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.   1.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
2
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]
 [ 0. -1. -1.]
 [-1.  1. -1.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [-1.  1. -1.]
 [-1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
confusion matrix
[[13  3  0  0  2  2  0  0  0  0]
 [ 1 16  0  0  4  0  0  0  0  0]
 [15  4  0  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  4  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [13  1  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [14  5  0  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.  0.2 0.2 0.2 0.  0.1 0.2 0.3]
 [0.  0.  0.1 0.2 0.2 0.2 0.1 0.  0.2 0.3]
 [0.  0.  0.  0.2 0.2 0.2 0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.   1.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
most_cplx_inx
7
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  1. -1.]
 [ 0.  1.  0.  0.]
 [ 0.  1.  1.  0.]
 [ 1.  1. -1. -1.]
 [ 0. -1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 0.  1.  1.  0.]
 [ 0.  1.  0.  1.]
 [-1.  1. -1.  1.]
 [-1.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
confusion matrix
[[ 0  1 13  0  2  2  0  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 15  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0 13  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0 14  1  0  1  0  5  0  0]
 [ 0  0  2  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.3 0.2 0.1 0.2 0.3 0.4]
 [0.  0.  0.1 0.3 0.3 0.3 0.1 0.1 0.3 0.3]
 [0.  0.  0.  0.3 0.3 0.3 0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.25 1.25 1.5 ]
 [0.   0.   1.5  1.75]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  1. -1.  1.]
 [ 0.  1.  0.  0.  0.]
 [ 0.  1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 0. -1. -1.  1.  0.]
 [-1.  1. -1. -1.  1.]
 [ 0.  1.  1.  0.  1.]
 [ 0.  1.  0.  1.  1.]
 [-1.  1. -1.  1. -1.]
 [-1.  0. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
confusion matrix
[[ 0  1 13  0  2  2  0  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 15  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0 13  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0 14  1  0  1  0  5  0  0]
 [ 0  0  2  0  0 12  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.4 0.2 0.1 0.2 0.4 0.4]
 [0.  0.  0.2 0.4 0.3 0.4 0.2 0.2 0.4 0.4]
 [0.  0.  0.  0.3 0.4 0.3 0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.8 1.  1.2 1.2]
 [0.  0.  1.2 1.4 0.8]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  1.  0.  1.  1.  1. -1.  1.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.]
 [ 0.  1.  1.  0.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.]
 [-1.  1. -1. -1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.]
 [-1.  0. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
confusion matrix
[[ 0  1 13  0  2  2  0  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 15  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0 13  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0 14  1  0  1  0  5  0  0]
 [ 0  0  2  0  0 12  0  0  0  0]]
row HD
[[0.  0.4 0.1 0.2 0.4 0.2 0.1 0.2 0.5 0.4]
 [0.  0.  0.3 0.5 0.4 0.5 0.3 0.3 0.5 0.5]
 [0.  0.  0.  0.3 0.4 0.3 0.  0.2 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  0.83 1.   1.   1.17]
 [0.   0.   1.   1.17 0.67 0.67]
 [0.   0.   0.   1.17 0.83 0.83]
 [0.   0.   0.   0.   1.33 1.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  1.  0.  1.  1.  1. -1.  1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0.]
 [ 0.  1.  1.  0.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
confusion matrix
[[ 0  1 13  0  2  2  0  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 15  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0 13  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0 14  1  0  1  0  5  0  0]
 [ 0  0  2  0  0 12  0  0  0  0]]
row HD
[[0.  0.5 0.1 0.2 0.4 0.2 0.1 0.2 0.6 0.4]
 [0.  0.  0.4 0.6 0.5 0.6 0.4 0.4 0.6 0.6]
 [0.  0.  0.  0.3 0.4 0.3 0.  0.2 0.6 0.3]
 [0.  0.  0.  0.  0.4 0.1 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.29 0.71 0.86 0.86 1.   1.  ]
 [0.   0.   0.86 1.   0.57 0.57 0.57]
 [0.   0.   0.   1.   0.71 0.71 0.71]
 [0.   0.   0.   0.   1.14 1.   1.  ]
 [0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 1.  0.  1. -1. -1. -1.  1.  0. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
confusion matrix
[[ 0  1  4  0  2  0  9  2  0  2]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  0  3  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  2  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 14  5  0  1]
 [ 0  0  0  0  0  0  2  0  0 12]]
row HD
[[0.  0.6 0.2 0.2 0.5 0.3 0.1 0.2 0.6 0.4]
 [0.  0.  0.4 0.7 0.6 0.6 0.5 0.5 0.7 0.7]
 [0.  0.  0.  0.4 0.5 0.3 0.1 0.3 0.7 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.12 0.62 0.75 0.75 0.88 0.88 0.88]
 [0.   0.   0.75 0.88 0.5  0.5  0.5  0.62]
 [0.   0.   0.   0.88 0.62 0.62 0.62 0.88]
 [0.   0.   0.   0.   1.   0.88 0.88 0.88]
 [0.   0.   0.   0.   0.   0.12 0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
most_cplx_inx
0
new_column
None


============== iter  11 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
confusion matrix
[[ 0  1  4  0  2  0  9  2  0  2]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  0  3  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  2  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 14  5  0  1]
 [ 0  0  0  0  0  0  2  0  0 12]]
row HD
[[0.  0.6 0.2 0.2 0.5 0.3 0.1 0.2 0.6 0.4]
 [0.  0.  0.4 0.7 0.6 0.6 0.5 0.5 0.7 0.7]
 [0.  0.  0.  0.4 0.5 0.3 0.1 0.3 0.7 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.12 0.62 0.75 0.75 0.88 0.88 0.88]
 [0.   0.   0.75 0.88 0.5  0.5  0.5  0.62]
 [0.   0.   0.   0.88 0.62 0.62 0.62 0.88]
 [0.   0.   0.   0.   1.   0.88 0.88 0.88]
 [0.   0.   0.   0.   0.   0.12 0.12 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: None}
select_i_column
[-1.  0.  0. -1.  1. -1.  0.  1.  1.  0.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
confusion matrix
[[ 0  1  4  0  2  0  0 11  0  2]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  0  0  3  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  2  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [ 0  0  0  0  0  0  0 14  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  0  0 19  0  1]
 [ 0  0  0  0  0  0  0  2  0 12]]
row HD
[[0.  0.6 0.3 0.2 0.6 0.4 0.2 0.2 0.7 0.4]
 [0.  0.  0.5 0.7 0.7 0.7 0.6 0.5 0.8 0.7]
 [0.  0.  0.  0.5 0.6 0.4 0.2 0.4 0.8 0.5]
 [0.  0.  0.  0.  0.6 0.3 0.4 0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.56 0.67 0.67 0.78 0.78 0.78 0.78]
 [0.   0.   0.67 0.78 0.44 0.44 0.44 0.56 1.  ]
 [0.   0.   0.   0.78 0.56 0.56 0.56 0.78 0.78]
 [0.   0.   0.   0.   0.89 0.78 0.78 0.78 0.78]
 [0.   0.   0.   0.   0.   0.11 0.11 0.44 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.56 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.56 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  13 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
confusion matrix
[[ 0  1  4  0  2  0  9  0  0  4]
 [ 0 15  1  0  4  0  0  0  0  1]
 [ 0  4 12  2  0  0  3  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  0  0  7]
 [ 0  0  0  0  3  0  0  0  0 13]
 [ 0  0  0  0  0  0 13  0  0  1]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 14  0  0  6]
 [ 0  0  0  0  0  0  2  0  0 12]]
row HD
[[0.  0.7 0.4 0.3 0.6 0.5 0.2 0.3 0.8 0.5]
 [0.  0.  0.6 0.8 0.8 0.7 0.7 0.5 0.8 0.8]
 [0.  0.  0.  0.5 0.7 0.5 0.3 0.5 0.9 0.5]
 [0.  0.  0.  0.  0.7 0.4 0.5 0.4 0.7 0.3]
 [0.  0.  0.  0.  0.  0.6 0.5 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.9 0.5 0.6 0.6 0.7 0.7 0.7 0.7 0.9]
 [0.  0.  0.6 0.7 0.4 0.4 0.4 0.5 0.9 0.4]
 [0.  0.  0.  0.7 0.5 0.5 0.5 0.7 0.7 0.9]
 [0.  0.  0.  0.  0.8 0.7 0.7 0.7 0.7 0.5]
 [0.  0.  0.  0.  0.  0.1 0.1 0.4 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.4 0.3 0.7 0.5 0.2 0.3 0.8 0.6]
 [0.  0.  0.6 0.8 0.9 0.7 0.7 0.5 0.8 0.9]
 [0.  0.  0.  0.5 0.8 0.5 0.3 0.5 0.9 0.6]
 [0.  0.  0.  0.  0.8 0.4 0.5 0.4 0.7 0.4]
 [0.  0.  0.  0.  0.  0.7 0.6 0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.82 0.45 0.55 0.55 0.64 0.64 0.64 0.64 0.82 0.64]
 [0.   0.   0.55 0.64 0.36 0.36 0.36 0.45 0.82 0.36 0.18]
 [0.   0.   0.   0.64 0.45 0.45 0.45 0.64 0.64 0.82 0.55]
 [0.   0.   0.   0.   0.73 0.64 0.64 0.64 0.64 0.45 0.73]
 [0.   0.   0.   0.   0.   0.09 0.09 0.36 0.73 0.73 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.82 0.73 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.82 0.73 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.73 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 1.  0.  1.  1.  1.  1.  1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.4 0.3 0.7 0.5 0.2 0.3 0.9 0.6]
 [0.  0.  0.6 0.8 0.9 0.7 0.7 0.5 0.9 0.9]
 [0.  0.  0.  0.5 0.8 0.5 0.3 0.5 1.  0.6]
 [0.  0.  0.  0.  0.8 0.4 0.5 0.4 0.8 0.4]
 [0.  0.  0.  0.  0.  0.7 0.6 0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.42 0.5  0.5  0.58 0.58 0.58 0.58 0.75 0.58 0.67]
 [0.   0.   0.5  0.58 0.33 0.33 0.33 0.42 0.75 0.33 0.17 0.25]
 [0.   0.   0.   0.58 0.42 0.42 0.42 0.58 0.58 0.75 0.5  0.5 ]
 [0.   0.   0.   0.   0.67 0.58 0.58 0.58 0.58 0.42 0.67 0.67]
 [0.   0.   0.   0.   0.   0.08 0.08 0.33 0.67 0.67 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.75 0.67 0.33 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.75 0.67 0.33 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.67 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.58 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.4 0.4 0.7 0.6 0.2 0.3 1.  0.6]
 [0.  0.  0.6 0.9 0.9 0.8 0.7 0.5 1.  0.9]
 [0.  0.  0.  0.6 0.8 0.6 0.3 0.5 1.1 0.6]
 [0.  0.  0.  0.  0.9 0.5 0.6 0.5 0.9 0.5]
 [0.  0.  0.  0.  0.  0.8 0.6 0.7 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.69 0.38 0.46 0.46 0.54 0.54 0.54 0.54 0.69 0.54 0.62 0.62]
 [0.   0.   0.46 0.54 0.31 0.31 0.31 0.38 0.69 0.31 0.15 0.23 0.38]
 [0.   0.   0.   0.54 0.38 0.38 0.38 0.54 0.54 0.69 0.46 0.46 0.38]
 [0.   0.   0.   0.   0.62 0.54 0.54 0.54 0.54 0.38 0.62 0.62 0.54]
 [0.   0.   0.   0.   0.   0.08 0.08 0.31 0.62 0.62 0.23 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.69 0.62 0.31 0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.69 0.62 0.31 0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.62 0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.54 0.69 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
confusion matrix
[[11  1  4  0  2  0  0  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 17  0  0  2  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [13  0  0  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [15  0  0  1  0  0  0  5  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.8 0.5 0.5 0.8 0.7 0.3 0.4 1.  0.6]
 [0.  0.  0.6 0.9 0.9 0.9 0.7 0.5 1.1 1. ]
 [0.  0.  0.  0.6 0.8 0.7 0.3 0.5 1.2 0.7]
 [0.  0.  0.  0.  0.9 0.6 0.6 0.5 1.  0.6]
 [0.  0.  0.  0.  0.  0.9 0.6 0.7 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.4 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.36 0.43 0.43 0.5  0.5  0.5  0.5  0.64 0.5  0.57 0.57 0.5 ]
 [0.   0.   0.43 0.5  0.29 0.29 0.29 0.36 0.64 0.29 0.14 0.21 0.36 0.36]
 [0.   0.   0.   0.5  0.36 0.36 0.36 0.5  0.5  0.64 0.43 0.43 0.36 0.43]
 [0.   0.   0.   0.   0.57 0.5  0.5  0.5  0.5  0.36 0.57 0.57 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.07 0.07 0.29 0.57 0.57 0.21 0.14 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.64 0.57 0.29 0.07 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.64 0.57 0.29 0.07 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.29 0.36 0.36 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.5  0.64 0.64 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  0.  1. -1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[11  1  4  0  2  0  0  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 17  0  0  2  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [13  0  0  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [15  0  0  1  0  0  0  5  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.8 0.5 0.5 0.8 0.7 0.3 0.4 1.1 0.6]
 [0.  0.  0.6 0.9 0.9 0.9 0.7 0.5 1.2 1. ]
 [0.  0.  0.  0.6 0.8 0.7 0.3 0.5 1.3 0.7]
 [0.  0.  0.  0.  0.9 0.6 0.6 0.5 1.1 0.6]
 [0.  0.  0.  0.  0.  0.9 0.6 0.7 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.4 1.1 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.6  0.33 0.4  0.4  0.47 0.47 0.47 0.47 0.6  0.47 0.53 0.53 0.47
  0.53]
 [0.   0.   0.4  0.47 0.27 0.27 0.27 0.33 0.6  0.27 0.13 0.2  0.33 0.33
  0.2 ]
 [0.   0.   0.   0.47 0.33 0.33 0.33 0.47 0.47 0.6  0.4  0.4  0.33 0.4
  0.4 ]
 [0.   0.   0.   0.   0.53 0.47 0.47 0.47 0.47 0.33 0.53 0.53 0.47 0.47
  0.53]
 [0.   0.   0.   0.   0.   0.07 0.07 0.27 0.53 0.53 0.2  0.13 0.27 0.33
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.6  0.53 0.27 0.07 0.2  0.27
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.6  0.53 0.27 0.07 0.2  0.27
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.53 0.27 0.33 0.33 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.47 0.6  0.6  0.4
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.47 0.47 0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.33 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1. -1. -1. -1.  1.  0. -1. -1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  19 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
confusion matrix
[[ 9  1  4  0  2  0  0  2  0  2]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 3  4 12  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  2  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [13  0  0  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  1  0  0  0  5  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
row HD
[[0.  0.9 0.5 0.6 0.9 0.7 0.3 0.4 1.2 0.7]
 [0.  0.  0.7 0.9 1.  1.  0.8 0.6 1.2 1. ]
 [0.  0.  0.  0.7 0.9 0.7 0.3 0.5 1.4 0.8]
 [0.  0.  0.  0.  1.  0.7 0.7 0.6 1.1 0.6]
 [0.  0.  0.  0.  0.  1.  0.7 0.8 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.4 1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.31 0.38 0.38 0.44 0.44 0.44 0.44 0.56 0.44 0.5  0.5  0.44
  0.5  0.56]
 [0.   0.   0.38 0.44 0.25 0.25 0.25 0.31 0.56 0.25 0.12 0.19 0.31 0.31
  0.19 0.19]
 [0.   0.   0.   0.44 0.31 0.31 0.31 0.44 0.44 0.56 0.38 0.38 0.31 0.38
  0.38 0.31]
 [0.   0.   0.   0.   0.5  0.44 0.44 0.44 0.44 0.31 0.5  0.5  0.44 0.44
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.06 0.06 0.25 0.5  0.5  0.19 0.12 0.25 0.31
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.56 0.5  0.25 0.06 0.19 0.25
  0.06 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.56 0.5  0.25 0.06 0.19 0.25
  0.06 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.25 0.31 0.31 0.44
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.44 0.56 0.56 0.38
  0.56 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.44 0.44 0.44
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.31 0.25
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.12 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  1.  1.  1.  1.  1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  20 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
confusion matrix
[[ 9  1  4  0  2  0  0  2  0  2]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 3  4 12  2  0  0  0  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  0  2  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [13  0  0  0  0  0  0  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  1  0  0  0  5  0  1]
 [ 2  0  0  0  0  0  0  0  0 12]]
row HD
[[0.  1.  0.5 0.6 0.9 0.7 0.3 0.4 1.3 0.7]
 [0.  0.  0.8 1.  1.1 1.1 0.9 0.7 1.3 1.1]
 [0.  0.  0.  0.7 0.9 0.7 0.3 0.5 1.5 0.8]
 [0.  0.  0.  0.  1.  0.7 0.7 0.6 1.2 0.6]
 [0.  0.  0.  0.  0.  1.  0.7 0.8 1.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.4 1.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.53 0.29 0.35 0.35 0.41 0.41 0.41 0.41 0.53 0.41 0.47 0.47 0.41
  0.47 0.53 0.41]
 [0.   0.   0.35 0.41 0.24 0.24 0.24 0.29 0.53 0.24 0.12 0.18 0.29 0.29
  0.18 0.18 0.24]
 [0.   0.   0.   0.41 0.29 0.29 0.29 0.41 0.41 0.53 0.35 0.35 0.29 0.35
  0.35 0.29 0.29]
 [0.   0.   0.   0.   0.47 0.41 0.41 0.41 0.41 0.29 0.47 0.47 0.41 0.41
  0.47 0.41 0.41]
 [0.   0.   0.   0.   0.   0.06 0.06 0.24 0.47 0.47 0.18 0.12 0.24 0.29
  0.12 0.24 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.53 0.47 0.24 0.06 0.18 0.24
  0.06 0.24 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.53 0.47 0.24 0.06 0.18 0.24
  0.06 0.24 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.24 0.29 0.29 0.41
  0.29 0.41 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.41 0.53 0.53 0.35
  0.53 0.47 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.41 0.41 0.41
  0.41 0.29 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.29 0.24
  0.18 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18
  0.   0.29 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.12 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  1.  1.  1.  1.  0.  1.  1. -1. -1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  21 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
confusion matrix
[[ 0  1  4  0  2  0 11  0  0  2]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  2  0  0  3  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  2  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 19  0  0  1]
 [ 0  0  0  0  0  0  2  0  0 12]]
row HD
[[0.  1.1 0.6 0.6 1.  0.7 0.4 0.4 1.4 0.7]
 [0.  0.  0.8 1.1 1.1 1.2 0.9 0.8 1.3 1.2]
 [0.  0.  0.  0.8 0.9 0.8 0.3 0.6 1.5 0.9]
 [0.  0.  0.  0.  1.1 0.7 0.8 0.6 1.3 0.6]
 [0.  0.  0.  0.  0.  1.1 0.7 0.9 1.4 1.1]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.28 0.33 0.33 0.39 0.39 0.39 0.39 0.5  0.39 0.44 0.44 0.39
  0.44 0.5  0.39 0.44]
 [0.   0.   0.33 0.39 0.22 0.22 0.22 0.28 0.5  0.22 0.11 0.17 0.28 0.28
  0.17 0.17 0.22 0.33]
 [0.   0.   0.   0.39 0.28 0.28 0.28 0.39 0.39 0.5  0.33 0.33 0.28 0.33
  0.33 0.28 0.28 0.28]
 [0.   0.   0.   0.   0.44 0.39 0.39 0.39 0.39 0.28 0.44 0.44 0.39 0.39
  0.44 0.39 0.39 0.28]
 [0.   0.   0.   0.   0.   0.06 0.06 0.22 0.44 0.44 0.17 0.11 0.22 0.28
  0.11 0.22 0.06 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.5  0.44 0.22 0.06 0.17 0.22
  0.06 0.22 0.   0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.5  0.44 0.22 0.06 0.17 0.22
  0.06 0.22 0.   0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.22 0.28 0.28 0.39
  0.28 0.39 0.28 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.39 0.5  0.5  0.33
  0.5  0.44 0.5  0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.39 0.39 0.39
  0.39 0.28 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.28 0.22
  0.17 0.28 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.17
  0.   0.28 0.06 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.11 0.28 0.17 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.39 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.28 0.06 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 1.  0.  1. -1. -1. -1.  1.  0. -1. -1.]
select_j_column
[ 1.  0.  1.  1.  1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
18 classifiers pre label
Counter({1.0: 159, 0.0: 29})
confusion matrix
[[ 0  1  4  0  2  0 11  0  0  2]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  2  0  0  3  0  0  1]
 [ 0  5  0 13  0  0  0  0  0  1]
 [ 0  2  0  0 17  0  2  0  0  5]
 [ 0  0  0  0  3  0  0  0  0 13]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  0 19  0  0  1]
 [ 0  0  0  0  0  0  2  0  0 12]]
row HD
[[0.  1.2 0.6 0.6 1.  0.7 0.4 0.4 1.5 0.7]
 [0.  0.  0.9 1.2 1.2 1.3 1.  0.9 1.4 1.3]
 [0.  0.  0.  0.8 0.9 0.8 0.3 0.6 1.6 0.9]
 [0.  0.  0.  0.  1.1 0.7 0.8 0.6 1.4 0.6]
 [0.  0.  0.  0.  0.  1.1 0.7 0.9 1.5 1.1]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.26 0.32 0.32 0.37 0.37 0.37 0.37 0.47 0.37 0.42 0.42 0.37
  0.42 0.47 0.37 0.42 0.37]
 [0.   0.   0.32 0.37 0.21 0.21 0.21 0.26 0.47 0.21 0.11 0.16 0.26 0.26
  0.16 0.16 0.21 0.32 0.21]
 [0.   0.   0.   0.37 0.26 0.26 0.26 0.37 0.37 0.47 0.32 0.32 0.26 0.32
  0.32 0.26 0.26 0.26 0.26]
 [0.   0.   0.   0.   0.42 0.37 0.37 0.37 0.37 0.26 0.42 0.42 0.37 0.37
  0.42 0.37 0.37 0.26 0.37]
 [0.   0.   0.   0.   0.   0.05 0.05 0.21 0.42 0.42 0.16 0.11 0.21 0.26
  0.11 0.21 0.05 0.42 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.47 0.42 0.21 0.05 0.16 0.21
  0.05 0.21 0.   0.37 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.47 0.42 0.21 0.05 0.16 0.21
  0.05 0.21 0.   0.37 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.21 0.26 0.26 0.37
  0.26 0.37 0.26 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.37 0.47 0.47 0.32
  0.47 0.42 0.47 0.26 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.37 0.37 0.37
  0.37 0.26 0.42 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.26 0.21
  0.16 0.26 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.16
  0.   0.26 0.05 0.32 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21
  0.11 0.26 0.16 0.26 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.16 0.37 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.05 0.32 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.42 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.37 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  0.  1. -1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  0.  1. -1.  1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  23 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0. -1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.  0.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1. -1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
18 classifiers pre label
Counter({1.0: 159, 0.0: 29})
19 classifiers pre label
Counter({-1.0: 126, 0.0: 62})
confusion matrix
[[ 0  1  4  2  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  2  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.2 0.6 0.7 1.  0.8 0.4 0.4 1.6 0.7]
 [0.  0.  0.9 1.3 1.2 1.4 1.  0.9 1.5 1.3]
 [0.  0.  0.  0.9 0.9 0.9 0.3 0.6 1.7 0.9]
 [0.  0.  0.  0.  1.2 0.8 0.9 0.7 1.5 0.7]
 [0.  0.  0.  0.  0.  1.2 0.7 0.9 1.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.25 0.3  0.3  0.35 0.35 0.35 0.35 0.45 0.35 0.4  0.4  0.35
  0.4  0.45 0.35 0.4  0.35 0.45]
 [0.   0.   0.3  0.35 0.2  0.2  0.2  0.25 0.45 0.2  0.1  0.15 0.25 0.25
  0.15 0.15 0.2  0.3  0.2  0.35]
 [0.   0.   0.   0.35 0.25 0.25 0.25 0.35 0.35 0.45 0.3  0.3  0.25 0.3
  0.3  0.25 0.25 0.25 0.25 0.4 ]
 [0.   0.   0.   0.   0.4  0.35 0.35 0.35 0.35 0.25 0.4  0.4  0.35 0.35
  0.4  0.35 0.35 0.25 0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.05 0.05 0.2  0.4  0.4  0.15 0.1  0.2  0.25
  0.1  0.2  0.05 0.4  0.05 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.45 0.4  0.2  0.05 0.15 0.2
  0.05 0.2  0.   0.35 0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.45 0.4  0.2  0.05 0.15 0.2
  0.05 0.2  0.   0.35 0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.2  0.25 0.25 0.35
  0.25 0.35 0.25 0.35 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.35 0.45 0.45 0.3
  0.45 0.4  0.45 0.25 0.45 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.35 0.35
  0.35 0.25 0.4  0.35 0.4  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.25 0.2
  0.15 0.25 0.2  0.25 0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.15
  0.   0.25 0.05 0.3  0.05 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.1  0.25 0.15 0.25 0.15 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.15 0.35 0.2  0.2  0.2  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.05 0.3  0.05 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.2  0.4  0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.35 0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  0.  1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  24 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.  0.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0. -1.  0.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.  0.  0.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.  1.  0.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1. -1.  0.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.  1.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
18 classifiers pre label
Counter({1.0: 159, 0.0: 29})
19 classifiers pre label
Counter({-1.0: 126, 0.0: 62})
20 classifiers pre label
Counter({0.0: 162, 1.0: 26})
confusion matrix
[[ 0  1  4  2  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  2  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.2 0.6 0.7 1.1 0.8 0.4 0.4 1.7 0.8]
 [0.  0.  0.9 1.3 1.3 1.4 1.  0.9 1.6 1.4]
 [0.  0.  0.  0.9 1.  0.9 0.3 0.6 1.8 1. ]
 [0.  0.  0.  0.  1.3 0.8 0.9 0.7 1.6 0.8]
 [0.  0.  0.  0.  0.  1.3 0.8 1.  1.6 1.2]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.24 0.29 0.29 0.33 0.33 0.33 0.33 0.43 0.33 0.38 0.38 0.33
  0.38 0.43 0.33 0.38 0.33 0.43 0.19]
 [0.   0.   0.29 0.33 0.19 0.19 0.19 0.24 0.43 0.19 0.1  0.14 0.24 0.24
  0.14 0.14 0.19 0.29 0.19 0.33 0.43]
 [0.   0.   0.   0.33 0.24 0.24 0.24 0.33 0.33 0.43 0.29 0.29 0.24 0.29
  0.29 0.24 0.24 0.24 0.24 0.38 0.33]
 [0.   0.   0.   0.   0.38 0.33 0.33 0.33 0.33 0.24 0.38 0.38 0.33 0.33
  0.38 0.33 0.33 0.24 0.33 0.38 0.24]
 [0.   0.   0.   0.   0.   0.05 0.05 0.19 0.38 0.38 0.14 0.1  0.19 0.24
  0.1  0.19 0.05 0.38 0.05 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.43 0.38 0.19 0.05 0.14 0.19
  0.05 0.19 0.   0.33 0.   0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.43 0.38 0.19 0.05 0.14 0.19
  0.05 0.19 0.   0.33 0.   0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.19 0.24 0.24 0.33
  0.24 0.33 0.24 0.33 0.24 0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.33 0.43 0.43 0.29
  0.43 0.38 0.43 0.24 0.43 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.33 0.33
  0.33 0.24 0.38 0.33 0.38 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.24 0.19
  0.14 0.24 0.19 0.24 0.19 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.14
  0.   0.24 0.05 0.29 0.05 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.1  0.24 0.14 0.24 0.14 0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.14 0.33 0.19 0.19 0.19 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.05 0.29 0.05 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.19 0.38 0.19 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33 0.   0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  25 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.  0.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0. -1.  0.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.  0.  0.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1. -1.  1.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.  1.  0. -1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1. -1.  0.  0.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.  1.  1.  0.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
18 classifiers pre label
Counter({1.0: 159, 0.0: 29})
19 classifiers pre label
Counter({-1.0: 126, 0.0: 62})
20 classifiers pre label
Counter({0.0: 162, 1.0: 26})
21 classifiers pre label
Counter({1.0: 143, 0.0: 26, -1.0: 19})
confusion matrix
[[ 0  1  4  2  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  2  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.2 0.7 0.7 1.2 0.9 0.4 0.5 1.8 0.8]
 [0.  0.  1.  1.3 1.4 1.5 1.  1.  1.7 1.4]
 [0.  0.  0.  1.  1.1 0.9 0.4 0.7 1.9 1.1]
 [0.  0.  0.  0.  1.4 0.9 0.9 0.8 1.7 0.8]
 [0.  0.  0.  0.  0.  1.4 0.9 1.  1.6 1.3]
 [0.  0.  0.  0.  0.  0.  1.  0.9 1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.6 1.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.23 0.27 0.27 0.32 0.32 0.32 0.32 0.41 0.32 0.36 0.36 0.32
  0.36 0.41 0.32 0.36 0.32 0.41 0.18 0.27]
 [0.   0.   0.27 0.32 0.18 0.18 0.18 0.23 0.41 0.18 0.09 0.14 0.23 0.23
  0.14 0.14 0.18 0.27 0.18 0.32 0.41 0.27]
 [0.   0.   0.   0.32 0.23 0.23 0.23 0.32 0.32 0.41 0.27 0.27 0.23 0.27
  0.27 0.23 0.23 0.23 0.23 0.36 0.32 0.27]
 [0.   0.   0.   0.   0.36 0.32 0.32 0.32 0.32 0.23 0.36 0.36 0.32 0.32
  0.36 0.32 0.32 0.23 0.32 0.36 0.23 0.41]
 [0.   0.   0.   0.   0.   0.05 0.05 0.18 0.36 0.36 0.14 0.09 0.18 0.23
  0.09 0.18 0.05 0.36 0.05 0.41 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.41 0.36 0.18 0.05 0.14 0.18
  0.05 0.18 0.   0.32 0.   0.41 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.41 0.36 0.18 0.05 0.14 0.18
  0.05 0.18 0.   0.32 0.   0.41 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.18 0.23 0.23 0.32
  0.23 0.32 0.23 0.32 0.23 0.32 0.41 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.32 0.41 0.41 0.27
  0.41 0.36 0.41 0.23 0.41 0.27 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.32 0.32 0.32
  0.32 0.23 0.36 0.32 0.36 0.18 0.32 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.23 0.18
  0.14 0.23 0.18 0.23 0.18 0.32 0.36 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.14
  0.   0.23 0.05 0.27 0.05 0.41 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.09 0.23 0.14 0.23 0.14 0.41 0.36 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.14 0.32 0.18 0.18 0.18 0.36 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.23 0.05 0.27 0.05 0.41 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18 0.36 0.18 0.32 0.36 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.32 0.   0.41 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32 0.27 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.41 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.32 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  0. -1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1.  1.  0. -1.  1.  1.  1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  26 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.  0.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0. -1.  0.  1. -1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.  0.  0.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1. -1.  1.  0.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.  1.  0. -1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1. -1.  0.  0.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.  1.  1.  0.  1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
18 classifiers pre label
Counter({1.0: 159, 0.0: 29})
19 classifiers pre label
Counter({-1.0: 126, 0.0: 62})
20 classifiers pre label
Counter({0.0: 162, 1.0: 26})
21 classifiers pre label
Counter({1.0: 143, 0.0: 26, -1.0: 19})
22 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
confusion matrix
[[ 0  1  4  2  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  2  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.3 0.8 0.7 1.3 0.9 0.4 0.5 1.8 0.8]
 [0.  0.  1.  1.4 1.5 1.6 1.1 1.1 1.8 1.5]
 [0.  0.  0.  1.1 1.2 1.  0.5 0.8 2.  1.2]
 [0.  0.  0.  0.  1.5 0.9 0.9 0.8 1.7 0.8]
 [0.  0.  0.  0.  0.  1.5 1.  1.1 1.7 1.4]
 [0.  0.  0.  0.  0.  0.  1.  0.9 1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.6 1.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.39 0.22 0.26 0.26 0.3  0.3  0.3  0.3  0.39 0.3  0.35 0.35 0.3
  0.35 0.39 0.3  0.35 0.3  0.39 0.17 0.26 0.35]
 [0.   0.   0.26 0.3  0.17 0.17 0.17 0.22 0.39 0.17 0.09 0.13 0.22 0.22
  0.13 0.13 0.17 0.26 0.17 0.3  0.39 0.26 0.17]
 [0.   0.   0.   0.3  0.22 0.22 0.22 0.3  0.3  0.39 0.26 0.26 0.22 0.26
  0.26 0.22 0.22 0.22 0.22 0.35 0.3  0.26 0.35]
 [0.   0.   0.   0.   0.35 0.3  0.3  0.3  0.3  0.22 0.35 0.35 0.3  0.3
  0.35 0.3  0.3  0.22 0.3  0.35 0.22 0.39 0.35]
 [0.   0.   0.   0.   0.   0.04 0.04 0.17 0.35 0.35 0.13 0.09 0.17 0.22
  0.09 0.17 0.04 0.35 0.04 0.39 0.39 0.22 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.39 0.35 0.17 0.04 0.13 0.17
  0.04 0.17 0.   0.3  0.   0.39 0.35 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.39 0.35 0.17 0.04 0.13 0.17
  0.04 0.17 0.   0.3  0.   0.39 0.35 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.17 0.22 0.22 0.3
  0.22 0.3  0.22 0.3  0.22 0.3  0.39 0.13 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.3  0.39 0.39 0.26
  0.39 0.35 0.39 0.22 0.39 0.26 0.3  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.3  0.3  0.3
  0.3  0.22 0.35 0.3  0.35 0.17 0.3  0.39 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.22 0.17
  0.13 0.22 0.17 0.22 0.17 0.3  0.35 0.22 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.13
  0.   0.22 0.04 0.26 0.04 0.39 0.39 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.09 0.22 0.13 0.22 0.13 0.39 0.35 0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13 0.3  0.17 0.17 0.17 0.35 0.3  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.04 0.26 0.04 0.39 0.39 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.35 0.17 0.3  0.35 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.   0.39 0.35 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.26 0.3  0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.39 0.35 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.3  0.39 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  0.  1.  1.  1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  27 ================
current matrix is 
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.  0.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0. -1.  0.  1. -1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0. -1. -1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.  0.  0.  1.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1. -1.  1.  0.  0.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.  1.  0. -1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1. -1.  0.  0.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.  1.  1.  0.  1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
1 classifiers pre label
Counter({1.0: 162, -1.0: 26})
2 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
3 classifiers pre label
Counter({1.0: 97, -1.0: 62, 0.0: 29})
4 classifiers pre label
Counter({1.0: 133, 0.0: 55})
5 classifiers pre label
Counter({1.0: 159, 0.0: 29})
6 classifiers pre label
Counter({1.0: 159, 0.0: 29})
7 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
8 classifiers pre label
Counter({-1.0: 143, 0.0: 26, 1.0: 19})
9 classifiers pre label
Counter({-1.0: 78, 0.0: 62, 1.0: 48})
10 classifiers pre label
Counter({1.0: 162, 0.0: 26})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 126, 0.0: 62})
13 classifiers pre label
Counter({1.0: 112, -1.0: 76})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({0.0: 91, 1.0: 71, -1.0: 26})
16 classifiers pre label
Counter({1.0: 159, 0.0: 29})
17 classifiers pre label
Counter({1.0: 126, -1.0: 62})
18 classifiers pre label
Counter({1.0: 159, 0.0: 29})
19 classifiers pre label
Counter({-1.0: 126, 0.0: 62})
20 classifiers pre label
Counter({0.0: 162, 1.0: 26})
21 classifiers pre label
Counter({1.0: 143, 0.0: 26, -1.0: 19})
22 classifiers pre label
Counter({1.0: 114, -1.0: 48, 0.0: 26})
23 classifiers pre label
Counter({1.0: 162, 0.0: 26})
confusion matrix
[[ 0  1  4  2  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  2  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  1.3 0.9 0.7 1.4 0.9 0.4 0.5 1.9 0.8]
 [0.  0.  1.1 1.4 1.6 1.6 1.1 1.1 1.9 1.5]
 [0.  0.  0.  1.2 1.2 1.1 0.6 0.9 2.1 1.3]
 [0.  0.  0.  0.  1.6 0.9 0.9 0.8 1.8 0.8]
 [0.  0.  0.  0.  0.  1.6 1.1 1.2 1.8 1.5]
 [0.  0.  0.  0.  0.  0.  1.  0.9 1.5 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.6 1.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.21 0.25 0.25 0.29 0.29 0.29 0.29 0.38 0.29 0.33 0.33 0.29
  0.33 0.38 0.29 0.33 0.29 0.38 0.17 0.25 0.33 0.25]
 [0.   0.   0.25 0.29 0.17 0.17 0.17 0.21 0.38 0.17 0.08 0.12 0.21 0.21
  0.12 0.12 0.17 0.25 0.17 0.29 0.38 0.25 0.17 0.17]
 [0.   0.   0.   0.29 0.21 0.21 0.21 0.29 0.29 0.38 0.25 0.25 0.21 0.25
  0.25 0.21 0.21 0.21 0.21 0.33 0.29 0.25 0.33 0.29]
 [0.   0.   0.   0.   0.33 0.29 0.29 0.29 0.29 0.21 0.33 0.33 0.29 0.29
  0.33 0.29 0.29 0.21 0.29 0.33 0.21 0.38 0.33 0.33]
 [0.   0.   0.   0.   0.   0.04 0.04 0.17 0.33 0.33 0.12 0.08 0.17 0.21
  0.08 0.17 0.04 0.33 0.04 0.38 0.38 0.21 0.12 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.38 0.33 0.17 0.04 0.12 0.17
  0.04 0.17 0.   0.29 0.   0.38 0.33 0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.38 0.33 0.17 0.04 0.12 0.17
  0.04 0.17 0.   0.29 0.   0.38 0.33 0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.17 0.21 0.21 0.29
  0.21 0.29 0.21 0.29 0.21 0.29 0.38 0.12 0.04 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.38 0.38 0.25
  0.38 0.33 0.38 0.21 0.38 0.25 0.29 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.29 0.29 0.29
  0.29 0.21 0.33 0.29 0.33 0.17 0.29 0.38 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.21 0.17
  0.12 0.21 0.17 0.21 0.17 0.29 0.33 0.21 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.12
  0.   0.21 0.04 0.25 0.04 0.38 0.38 0.21 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.08 0.21 0.12 0.21 0.12 0.38 0.33 0.21 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.29 0.17 0.17 0.17 0.33 0.29 0.29 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.04 0.25 0.04 0.38 0.38 0.21 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.33 0.17 0.29 0.33 0.29 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.   0.38 0.33 0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.25 0.29 0.29 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.38 0.33 0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29 0.38 0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})

**********      classifier acc  **************
[0.557, 0.897, 0.75, 0.59, 0.73, 0.79, 0.79, 0.735, 0.793, 0.496, 0.858, 0.888, 0.586, 0.779, 0.888, 0.558, 0.79, 0.777, 0.79, 0.586, 0.279, 0.706, 0.815, 0.786]
before cutting matrix
[[ 0.  1.  1. -1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1. -1.
   1. -1.  0.  1.  1.  1.]
 [ 0.  1.  0.  0.  0.  0.  0. -1. -1.  1.  1.  1.  1.  1.  1.  0.  0.  1.
   0. -1.  0.  1. -1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0. -1. -1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  1.  1.  0.  1. -1.
   1.  0.  0.  1.  1.  1.]
 [ 0. -1. -1.  1.  0.  1.  1.  0.  0. -1.  0.  1.  1.  1.  1. -1.  1.  1.
   1. -1.  1.  0.  0.  0.]
 [-1.  1. -1. -1.  1.  1.  1. -1.  0.  1.  1.  1. -1.  0.  1.  1.  1. -1.
   1.  1.  0. -1.  1.  1.]
 [ 0.  1.  1.  0.  1.  1.  1.  1.  0. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.  0.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1. -1.  0.  0.  1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  0.  1.  1. -1. -1. -1. -1.  0. -1.  1.
  -1.  1.  1.  0.  1. -1.]
 [-1.  0. -1.  0.  1.  1.  1.  1. -1.  0. -1.  1.  1. -1.  1.  0.  1. -1.
   1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({-1.0: 291, 1.0: 148})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 291, 1.0: 148})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({1.0: 180, -1.0: 164})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({-1.0: 281, 1.0: 60})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 281, 1.0: 60})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 248, -1.0: 139})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({1.0: 248, -1.0: 139})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 376, -1.0: 125})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({1.0: 376, -1.0: 125})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 272, -1.0: 51})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({1.0: 272, -1.0: 51})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 376, 1.0: 125})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 376, 1.0: 125})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 262, -1.0: 120})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({1.0: 262, -1.0: 120})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 392, -1.0: 119})
Counter({1.0: 386, -1.0: 65})
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 392, -1.0: 119})
positive and negative ratio
Counter({1.0: 386, -1.0: 65})
after cutting matrix
[[ 0.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1.  0.  1.]
 [ 0.  1.  0.  0.  0.  0. -1.  1.  1.  1.  1.  0.  1.  0.  0. -1.]
 [ 0.  1.  0.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  0. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.  1.]
 [ 0. -1.  1.  0.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  0.]
 [-1.  1. -1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1.  0.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]
 [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1.  1.  1.]
 [-1.  0.  0.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 457, -1.0: 51})
Counter({1.0: 180, -1.0: 164})
Counter({1.0: 387, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 332, -1.0: 179})
Counter({1.0: 457, -1.0: 54})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 340, -1.0: 162})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 438, -1.0: 65})
Counter({-1.0: 282, 1.0: 280})
Counter({1.0: 438, -1.0: 65})
Counter({1.0: 116, -1.0: 54})
Counter({1.0: 392, -1.0: 119})
cutting matrix's confusion matrix
[[ 2  1  4  0  2  0 11  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 1  4 12  2  0  0  3  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 17  0  2  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 1  0  0  1  0  0 19  0  0  0]
 [12  0  0  0  0  0  2  0  0  0]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整


SVM classifier
Time: 2019-01-09 22:20:46
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.4 0.2 0. ]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.2 0.2]
 [0.  0.  0.2 0.6 0.6]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.75]
 [0.   0.   0.5  1.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.6 0.8 0.2 0.2]
 [0.  0.  0.2 0.8 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.4 0.6 0.6]
 [0.  0.  0.4 1.  1. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 1.  0.4 0.2]
 [0.  0.  0.2 0.8 1. ]
 [0.  0.  0.  0.6 1.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.5  0.5  0.17]
 [0.   0.   0.33 0.83 0.83 0.17]
 [0.   0.   0.   0.5  0.5  0.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.  1.2 0.4 0.2]
 [0.  0.  0.2 1.  1.2]
 [0.  0.  0.  0.8 1.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.29 0.43 0.43 0.14 0.29]
 [0.   0.   0.29 0.71 0.71 0.14 0.  ]
 [0.   0.   0.   0.43 0.43 0.14 0.29]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.2 1.4 0.6 0.2]
 [0.  0.  0.2 1.  1.4]
 [0.  0.  0.  0.8 1.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.25 0.38 0.38 0.12 0.25 0.12]
 [0.   0.   0.25 0.62 0.62 0.12 0.   0.12]
 [0.   0.   0.   0.38 0.38 0.12 0.25 0.12]
 [0.   0.   0.   0.   0.   0.5  0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.2 1.4 0.8 0.2]
 [0.  0.  0.2 1.2 1.4]
 [0.  0.  0.  1.  1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.22 0.33 0.33 0.11 0.22 0.11 0.44]
 [0.   0.   0.22 0.56 0.56 0.11 0.   0.11 0.22]
 [0.   0.   0.   0.33 0.33 0.11 0.22 0.11 0.22]
 [0.   0.   0.   0.   0.   0.44 0.56 0.44 0.33]
 [0.   0.   0.   0.   0.   0.44 0.56 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.11 0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.4 1.6 1.  0.2]
 [0.  0.  0.2 1.2 1.6]
 [0.  0.  0.  1.  1.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.2 0.3 0.3 0.1 0.2 0.1 0.4 0.4]
 [0.  0.  0.2 0.5 0.5 0.1 0.  0.1 0.2 0.4]
 [0.  0.  0.  0.3 0.3 0.1 0.2 0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.6 1.8 1.2 0.2]
 [0.  0.  0.2 1.4 1.8]
 [0.  0.  0.  1.2 2. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.18 0.27 0.27 0.09 0.18 0.09 0.36 0.36 0.18]
 [0.   0.   0.18 0.45 0.45 0.09 0.   0.09 0.18 0.36 0.09]
 [0.   0.   0.   0.27 0.27 0.09 0.18 0.09 0.18 0.36 0.18]
 [0.   0.   0.   0.   0.   0.36 0.45 0.36 0.27 0.09 0.45]
 [0.   0.   0.   0.   0.   0.36 0.45 0.36 0.27 0.09 0.45]
 [0.   0.   0.   0.   0.   0.   0.09 0.   0.27 0.45 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.18 0.36 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.45 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
11 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 2.  1.4 0.2]
 [0.  0.  0.2 1.4 2. ]
 [0.  0.  0.  1.2 2.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.17 0.25 0.25 0.08 0.17 0.08 0.33 0.33 0.17 0.08]
 [0.   0.   0.17 0.42 0.42 0.08 0.   0.08 0.17 0.33 0.08 0.08]
 [0.   0.   0.   0.25 0.25 0.08 0.17 0.08 0.17 0.33 0.17 0.08]
 [0.   0.   0.   0.   0.   0.33 0.42 0.33 0.25 0.08 0.42 0.33]
 [0.   0.   0.   0.   0.   0.33 0.42 0.33 0.25 0.08 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.08 0.   0.25 0.42 0.08 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.33 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.42 0.08 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
11 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
12 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.  2.2 1.6 0.2]
 [0.  0.  0.2 1.4 2.2]
 [0.  0.  0.  1.2 2.4]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.15 0.23 0.23 0.08 0.15 0.08 0.31 0.31 0.15 0.08 0.31]
 [0.   0.   0.15 0.38 0.38 0.08 0.   0.08 0.15 0.31 0.08 0.08 0.31]
 [0.   0.   0.   0.23 0.23 0.08 0.15 0.08 0.15 0.31 0.15 0.08 0.31]
 [0.   0.   0.   0.   0.   0.31 0.38 0.31 0.23 0.08 0.38 0.31 0.08]
 [0.   0.   0.   0.   0.   0.31 0.38 0.31 0.23 0.08 0.38 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.08 0.   0.23 0.38 0.08 0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.15 0.31 0.08 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.38 0.08 0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
11 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
12 classifiers pre label
Counter({1.0: 34, -1.0: 22})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.2 2.4 1.6 0.2]
 [0.  0.  0.2 1.6 2.4]
 [0.  0.  0.  1.4 2.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.14 0.21 0.21 0.07 0.14 0.07 0.29 0.29 0.14 0.07 0.29 0.21]
 [0.   0.   0.14 0.36 0.36 0.07 0.   0.07 0.14 0.29 0.07 0.07 0.29 0.36]
 [0.   0.   0.   0.21 0.21 0.07 0.14 0.07 0.14 0.29 0.14 0.07 0.29 0.21]
 [0.   0.   0.   0.   0.   0.29 0.36 0.29 0.21 0.07 0.36 0.29 0.07 0.  ]
 [0.   0.   0.   0.   0.   0.29 0.36 0.29 0.21 0.07 0.36 0.29 0.07 0.  ]
 [0.   0.   0.   0.   0.   0.   0.07 0.   0.21 0.36 0.07 0.   0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.14 0.29 0.07 0.07 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36 0.07 0.   0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.21 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.   0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
11 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
12 classifiers pre label
Counter({1.0: 34, -1.0: 22})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 33, -1.0: 23})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.4 2.4 1.8 0.4]
 [0.  0.  0.4 1.6 2.4]
 [0.  0.  0.  1.6 2.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.13 0.2  0.2  0.07 0.13 0.07 0.27 0.27 0.13 0.07 0.27 0.2
  0.13]
 [0.   0.   0.13 0.33 0.33 0.07 0.   0.07 0.13 0.27 0.07 0.07 0.27 0.33
  0.13]
 [0.   0.   0.   0.2  0.2  0.07 0.13 0.07 0.13 0.27 0.13 0.07 0.27 0.2
  0.13]
 [0.   0.   0.   0.   0.   0.27 0.33 0.27 0.2  0.07 0.33 0.27 0.07 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.27 0.33 0.27 0.2  0.07 0.33 0.27 0.07 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.07 0.   0.2  0.33 0.07 0.   0.33 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.13 0.27 0.07 0.07 0.27 0.33
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.33 0.07 0.   0.33 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.2  0.13 0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.   0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.33 0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
11 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
12 classifiers pre label
Counter({1.0: 34, -1.0: 22})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 33, -1.0: 23})
15 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.6 2.6 2.  0.4]
 [0.  0.  0.4 1.6 2.6]
 [0.  0.  0.  1.6 3. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.12 0.19 0.19 0.06 0.12 0.06 0.25 0.25 0.12 0.06 0.25 0.19
  0.12 0.06]
 [0.   0.   0.12 0.31 0.31 0.06 0.   0.06 0.12 0.25 0.06 0.06 0.25 0.31
  0.12 0.06]
 [0.   0.   0.   0.19 0.19 0.06 0.12 0.06 0.12 0.25 0.12 0.06 0.25 0.19
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.25 0.31 0.25 0.19 0.06 0.31 0.25 0.06 0.
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.25 0.31 0.25 0.19 0.06 0.31 0.25 0.06 0.
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.06 0.   0.19 0.31 0.06 0.   0.31 0.25
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.25 0.06 0.06 0.25 0.31
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.31 0.06 0.   0.31 0.25
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.19 0.12 0.19
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.   0.06
  0.12 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.31 0.31
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.25
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06
  0.12 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1. -1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 34, -1.0: 22})
10 classifiers pre label
Counter({-1.0: 38, 1.0: 16, 0.0: 2})
11 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
12 classifiers pre label
Counter({1.0: 34, -1.0: 22})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 33, -1.0: 23})
15 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
16 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.6 2.6 2.2 0.4]
 [0.  0.  0.4 1.8 2.6]
 [0.  0.  0.  1.8 3. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.12 0.18 0.18 0.06 0.12 0.06 0.24 0.24 0.12 0.06 0.24 0.18
  0.12 0.06 0.24]
 [0.   0.   0.12 0.29 0.29 0.06 0.   0.06 0.12 0.24 0.06 0.06 0.24 0.29
  0.12 0.06 0.12]
 [0.   0.   0.   0.18 0.18 0.06 0.12 0.06 0.12 0.24 0.12 0.06 0.24 0.18
  0.12 0.06 0.12]
 [0.   0.   0.   0.   0.   0.24 0.29 0.24 0.18 0.06 0.29 0.24 0.06 0.
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.24 0.29 0.24 0.18 0.06 0.29 0.24 0.06 0.
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.06 0.   0.18 0.29 0.06 0.   0.29 0.24
  0.18 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.24 0.06 0.06 0.24 0.29
  0.12 0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.29 0.06 0.   0.29 0.24
  0.18 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.18 0.12 0.18
  0.12 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.   0.06
  0.12 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.29 0.29
  0.18 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.24
  0.18 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06
  0.12 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})

**********      classifier acc  **************
[0.768, 0.714, 0.946, 0.714, 0.714, 0.839, 0.714, 0.839, 0.875, 0.839, 0.735, 0.839, 0.839, 0.714, 0.821, 0.839, 0.875]
before cutting matrix
[[-1. -1.  1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  0.  1. -1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 120, -1.0: 46})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 120, -1.0: 46})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({-1.0: 99, 1.0: 46})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
positive and negative ratio
Counter({1.0: 120, -1.0: 46})
after cutting matrix
[[ 1.  1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 120, -1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 99, -1.0: 67})
Counter({1.0: 120, -1.0: 46})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 145, -1.0: 21})
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 3  0  0  6  0]
 [ 2  0  0  5  0]
 [ 0  0  0  7  0]
 [ 0  0  0  3  0]]


SVM classifier
Time: 2019-01-09 22:20:50
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1.  0. -1.]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 3  2  2  0  0]
 [ 0  2  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [ 0.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  2  0  1  0]
 [ 3  3  1  0  0]
 [ 0  1  1  1  0]]
row HD
[[0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  0.  0.]
 [ 0.  0.  1.]
 [-1.  1. -1.]
 [ 0.  1.  1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 3  3  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.6 0.6 0.6]
 [0.  0.  0.6 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  0.  0.  0.]
 [ 0.  0.  1.  1.]
 [-1.  1. -1. -1.]
 [ 0.  1.  1.  1.]
 [-1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 3  3  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.8 0.8 0.8]
 [0.  0.  0.8 0.2 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  0.  0.  0.  0.]
 [ 0.  0.  1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [ 0.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 4  2  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 1.  1.  1. ]
 [0.  0.  1.  0.2 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.8 0.8]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [ 0.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 4  2  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  1.  1.2 1.2 1.2]
 [0.  0.  1.2 0.2 0.4]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.67 0.67 0.67 0.67]
 [0.   0.   0.5  0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 3  2  0  2  0]
 [ 4  2  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  1.2 1.4 1.4 1.4]
 [0.  0.  1.4 0.2 0.6]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.57 0.57 0.57 0.57 0.71]
 [0.   0.   0.43 0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[ 0.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.4 1.4 1.4 1.4]
 [0.  0.  1.6 0.4 0.8]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.5  0.5  0.5  0.5  0.62 0.5 ]
 [0.   0.   0.38 0.38 0.38 0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.4 1.6 1.4 1.6]
 [0.  0.  1.8 0.4 1. ]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.44 0.44 0.44 0.44 0.56 0.44 0.22]
 [0.   0.   0.33 0.33 0.33 0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  1. -1.  1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.6 1.8 1.4 1.6]
 [0.  0.  1.8 0.6 1.2]
 [0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.3 0.4 0.4 0.4 0.4 0.5 0.4 0.2 0.4]
 [0.  0.  0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1.  1.]
select_j_column
[ 0.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 2.  1.6 1.8]
 [0.  0.  2.  0.6 1.2]
 [0.  0.  0.  1.8 1.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.36 0.36 0.36 0.36 0.45 0.36 0.18 0.36 0.36]
 [0.   0.   0.27 0.27 0.27 0.27 0.27 0.27 0.27 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.18 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.18 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.18 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.18 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.45 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
11 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 2.2 1.8 2. ]
 [0.  0.  2.2 0.8 1.4]
 [0.  0.  0.  1.8 1.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.33 0.33 0.33 0.33 0.42 0.33 0.17 0.33 0.33 0.42]
 [0.   0.   0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.17 0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.17 0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.17 0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.17 0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.42 0.25 0.08 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.  1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
11 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
12 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 2.2 1.8 2.2]
 [0.  0.  2.2 0.8 1.6]
 [0.  0.  0.  1.8 1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.31 0.31 0.31 0.31 0.38 0.31 0.15 0.31 0.31 0.38 0.23]
 [0.   0.   0.23 0.23 0.23 0.23 0.23 0.23 0.23 0.23 0.15 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.15 0.31 0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.15 0.31 0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.15 0.31 0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.15 0.31 0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.23 0.08 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.23 0.08 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  1. -1. -1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.  1.  0.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
11 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.  2.4 2.  2.4]
 [0.  0.  2.4 0.8 1.6]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.29 0.29 0.29 0.29 0.36 0.29 0.14 0.29 0.29 0.36 0.21 0.29]
 [0.   0.   0.21 0.21 0.21 0.21 0.21 0.21 0.21 0.21 0.14 0.21 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.14 0.29 0.29 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.14 0.29 0.29 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.14 0.29 0.29 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.14 0.29 0.29 0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.21 0.07 0.14 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.21 0.07 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.29 0.07 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1.  1. -1.  1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.  1.  0.  0.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
11 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({0.0: 38, -1.0: 18})
14 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  0  0  4  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 4  0  0  3  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.2 2.6 2.2 2.6]
 [0.  0.  2.4 0.8 1.8]
 [0.  0.  0.  2.  2. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.27 0.27 0.27 0.27 0.33 0.27 0.13 0.27 0.27 0.33 0.2  0.27
  0.27]
 [0.   0.   0.2  0.2  0.2  0.2  0.2  0.2  0.2  0.2  0.13 0.2  0.13 0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.13 0.27 0.27 0.2  0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.13 0.27 0.27 0.2  0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.13 0.27 0.27 0.2  0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.13 0.27 0.27 0.2  0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.2  0.07 0.13 0.27 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.2  0.07 0.13 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.27 0.07 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.  1.  0.  0. -1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
11 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({0.0: 38, -1.0: 18})
14 classifiers pre label
Counter({0.0: 38, 1.0: 18})
15 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
confusion matrix
[[29  0  0  1  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 3  0  0  4  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.4 2.8 2.4 2.8]
 [0.  0.  2.4 0.8 1.8]
 [0.  0.  0.  2.  2. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.25 0.25 0.25 0.25 0.31 0.25 0.12 0.25 0.25 0.31 0.19 0.25
  0.25 0.31]
 [0.   0.   0.19 0.19 0.19 0.19 0.19 0.19 0.19 0.19 0.12 0.19 0.12 0.12
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.12 0.25 0.25 0.19 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.12 0.25 0.25 0.19 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.12 0.25 0.25 0.19 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.12 0.25 0.25 0.19 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.19 0.06 0.12 0.25 0.06
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.19 0.06 0.12 0.19
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.25 0.06 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.12 0.12
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.  1.  0.  0. -1.  1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 39, 0.0: 14, -1.0: 3})
1 classifiers pre label
Counter({0.0: 50, 1.0: 6})
2 classifiers pre label
Counter({0.0: 38, 1.0: 18})
3 classifiers pre label
Counter({0.0: 38, 1.0: 18})
4 classifiers pre label
Counter({0.0: 38, 1.0: 18})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({0.0: 38, -1.0: 18})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({0.0: 38, -1.0: 18})
11 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({0.0: 38, -1.0: 18})
14 classifiers pre label
Counter({0.0: 38, 1.0: 18})
15 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
16 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 5  0  0  4  0]
 [ 3  0  0  4  0]
 [ 3  0  0  4  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.4 2.8 2.4 3. ]
 [0.  0.  2.4 0.8 2. ]
 [0.  0.  0.  2.  2.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.24 0.24 0.24 0.24 0.29 0.24 0.12 0.24 0.24 0.29 0.18 0.24
  0.24 0.29 0.18]
 [0.   0.   0.18 0.18 0.18 0.18 0.18 0.18 0.18 0.18 0.12 0.18 0.12 0.12
  0.06 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.12 0.24 0.24 0.18 0.18 0.24
  0.12 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.12 0.24 0.24 0.18 0.18 0.24
  0.12 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.12 0.24 0.24 0.18 0.18 0.24
  0.12 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.12 0.24 0.24 0.18 0.18 0.24
  0.12 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.18 0.06 0.12 0.24 0.06
  0.18 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.18 0.06 0.12 0.18
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.24 0.06 0.24
  0.12 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.12 0.12
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.
  0.12 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18
  0.18 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.06 0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})

**********      classifier acc  **************
[0.675, 0.176, 0.385, 0.385, 0.385, 0.385, 0.269, 0.839, 0.821, 0.714, 0.385, 0.857, 0.946, 0.385, 0.423, 0.839, 0.946]
before cutting matrix
[[ 1.  0.  0.  0.  0.  0.  0.  1.  1. -1.  0. -1.  1.  0.  0. -1.  1.]
 [ 0.  0.  1.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 58, -1.0: 15})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 58, -1.0: 15})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 58, -1.0: 15})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 58, -1.0: 15})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 58, -1.0: 15})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({-1.0: 52, 1.0: 21})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 58, 1.0: 15})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 58, 1.0: 15})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({-1.0: 58, 1.0: 15})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 67, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
positive and negative ratio
Counter({1.0: 67, -1.0: 6})
after cutting matrix
[[ 1.  0.  1.  1. -1.  1. -1.  1.]
 [ 0.  0. -1.  1. -1.  1.  1.  1.]
 [-1.  1.  1. -1.  1.  1.  1.  1.]
 [ 0.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 93, -1.0: 21})
Counter({1.0: 36, -1.0: 6})
Counter({1.0: 135, -1.0: 31})
Counter({1.0: 145, -1.0: 21})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 160, -1.0: 6})
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 3  1  0  3  0]
 [ 1  1  0  5  0]
 [ 0  1  0  2  0]]


SVM classifier
Time: 2019-01-09 22:20:54
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1.  1.]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.   0.5  0.33 0.  ]
 [0.   0.   0.   0.5  0.33 0.  ]
 [0.   0.   0.   0.5  0.33 0.  ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1.  0.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1. -1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.5  0.33 0.17]
 [0.   0.   0.17 0.5  0.33 0.17]
 [0.   0.   0.   0.67 0.5  0.17]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1.  0.  1.]
 [-1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.5  0.33 0.33]
 [0.   0.   0.17 0.5  0.33 0.33]
 [0.   0.   0.   0.67 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.2 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.]
 [-1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.67 0.5  0.33]
 [0.   0.   0.17 0.67 0.5  0.33]
 [0.   0.   0.   0.83 0.67 0.33]
 [0.   0.   0.   0.   0.17 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.17 0.67 0.33 0.17]
 [0.   0.   0.   0.5  0.5  0.  ]
 [0.   0.   0.   0.5  0.5  0.  ]
 [0.   0.   0.   0.   1.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.]
 [-1. -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.83 0.67 0.5 ]
 [0.   0.   0.33 0.67 0.5  0.5 ]
 [0.   0.   0.   1.   0.83 0.5 ]
 [0.   0.   0.   0.   0.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.14 0.14 0.57 0.29 0.14 0.57]
 [0.   0.   0.   0.43 0.43 0.   0.71]
 [0.   0.   0.   0.43 0.43 0.   0.71]
 [0.   0.   0.   0.   0.86 0.43 0.71]
 [0.   0.   0.   0.   0.   0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 1.   0.83 0.5 ]
 [0.   0.   0.5  0.67 0.5  0.67]
 [0.   0.   0.   1.17 1.   0.5 ]
 [0.   0.   0.   0.   0.17 1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.12 0.12 0.5  0.25 0.12 0.5  0.25]
 [0.   0.   0.   0.38 0.38 0.   0.62 0.12]
 [0.   0.   0.   0.38 0.38 0.   0.62 0.12]
 [0.   0.   0.   0.   0.75 0.38 0.62 0.25]
 [0.   0.   0.   0.   0.   0.38 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.62 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 1.17 1.   0.67]
 [0.   0.   0.5  0.83 0.67 0.83]
 [0.   0.   0.   1.33 1.17 0.67]
 [0.   0.   0.   0.   0.17 1.5 ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.11 0.11 0.44 0.22 0.11 0.44 0.22 0.44]
 [0.   0.   0.   0.33 0.33 0.   0.56 0.11 0.33]
 [0.   0.   0.   0.33 0.33 0.   0.56 0.11 0.33]
 [0.   0.   0.   0.   0.67 0.33 0.56 0.22 0.22]
 [0.   0.   0.   0.   0.   0.33 0.22 0.44 0.67]
 [0.   0.   0.   0.   0.   0.   0.56 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 1.33 1.17 0.83]
 [0.   0.   0.5  1.   0.83 1.  ]
 [0.   0.   0.   1.5  1.33 0.83]
 [0.   0.   0.   0.   0.17 1.67]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.1 0.1 0.4 0.2 0.1 0.4 0.2 0.4 0.5]
 [0.  0.  0.  0.3 0.3 0.  0.5 0.1 0.3 0.6]
 [0.  0.  0.  0.3 0.3 0.  0.5 0.1 0.3 0.6]
 [0.  0.  0.  0.  0.6 0.3 0.5 0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.3 0.2 0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.1 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 1.5  1.33 0.83]
 [0.   0.   0.5  1.17 1.   1.  ]
 [0.   0.   0.   1.67 1.5  0.83]
 [0.   0.   0.   0.   0.33 1.83]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.09 0.09 0.36 0.18 0.09 0.36 0.18 0.36 0.45 0.55]
 [0.   0.   0.   0.27 0.27 0.   0.45 0.09 0.27 0.55 0.55]
 [0.   0.   0.   0.27 0.27 0.   0.45 0.09 0.27 0.55 0.55]
 [0.   0.   0.   0.   0.55 0.27 0.45 0.18 0.18 0.45 0.36]
 [0.   0.   0.   0.   0.   0.27 0.18 0.36 0.55 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.45 0.09 0.27 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.55 0.36 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.55 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.5  1.33 1.  ]
 [0.   0.   0.67 1.17 1.   1.17]
 [0.   0.   0.   1.83 1.67 0.83]
 [0.   0.   0.   0.   0.33 2.  ]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.08 0.08 0.33 0.17 0.08 0.33 0.17 0.33 0.42 0.5  0.25]
 [0.   0.   0.   0.25 0.25 0.   0.42 0.08 0.25 0.5  0.5  0.33]
 [0.   0.   0.   0.25 0.25 0.   0.42 0.08 0.25 0.5  0.5  0.33]
 [0.   0.   0.   0.   0.5  0.25 0.42 0.17 0.17 0.42 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.25 0.17 0.33 0.5  0.25 0.33 0.08]
 [0.   0.   0.   0.   0.   0.   0.42 0.08 0.25 0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.33 0.08 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.5  0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  0. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
12 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.5  1.33 1.17]
 [0.   0.   0.67 1.17 1.   1.33]
 [0.   0.   0.   1.83 1.67 1.  ]
 [0.   0.   0.   0.   0.33 2.17]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.08 0.08 0.31 0.15 0.08 0.31 0.15 0.31 0.38 0.46 0.23 0.15]
 [0.   0.   0.   0.23 0.23 0.   0.38 0.08 0.23 0.46 0.46 0.31 0.23]
 [0.   0.   0.   0.23 0.23 0.   0.38 0.08 0.23 0.46 0.46 0.31 0.23]
 [0.   0.   0.   0.   0.46 0.23 0.38 0.15 0.15 0.38 0.31 0.46 0.46]
 [0.   0.   0.   0.   0.   0.23 0.15 0.31 0.46 0.23 0.31 0.08 0.  ]
 [0.   0.   0.   0.   0.   0.   0.38 0.08 0.23 0.46 0.46 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.08 0.31 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.46 0.38 0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.46 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
12 classifiers pre label
Counter({1.0: 67})
13 classifiers pre label
Counter({1.0: 56, -1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.67 1.5  1.17]
 [0.   0.   0.67 1.33 1.17 1.33]
 [0.   0.   0.   2.   1.83 1.  ]
 [0.   0.   0.   0.   0.33 2.33]
 [0.   0.   0.   0.   0.   2.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.07 0.07 0.29 0.14 0.07 0.29 0.14 0.29 0.36 0.43 0.21 0.14 0.07]
 [0.   0.   0.   0.21 0.21 0.   0.36 0.07 0.21 0.43 0.43 0.29 0.21 0.  ]
 [0.   0.   0.   0.21 0.21 0.   0.36 0.07 0.21 0.43 0.43 0.29 0.21 0.  ]
 [0.   0.   0.   0.   0.43 0.21 0.36 0.14 0.14 0.36 0.29 0.43 0.43 0.21]
 [0.   0.   0.   0.   0.   0.21 0.14 0.29 0.43 0.21 0.29 0.07 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.36 0.07 0.21 0.43 0.43 0.29 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.07 0.29 0.14 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.43 0.36 0.36 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.43 0.43 0.43 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.21 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
12 classifiers pre label
Counter({1.0: 67})
13 classifiers pre label
Counter({1.0: 56, -1.0: 11})
14 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.83 1.5  1.17]
 [0.   0.   0.67 1.5  1.17 1.33]
 [0.   0.   0.   2.17 1.83 1.  ]
 [0.   0.   0.   0.   0.5  2.5 ]
 [0.   0.   0.   0.   0.   2.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.07 0.07 0.27 0.13 0.07 0.27 0.13 0.27 0.33 0.4  0.2  0.13 0.07
  0.  ]
 [0.   0.   0.   0.2  0.2  0.   0.33 0.07 0.2  0.4  0.4  0.27 0.2  0.
  0.07]
 [0.   0.   0.   0.2  0.2  0.   0.33 0.07 0.2  0.4  0.4  0.27 0.2  0.
  0.07]
 [0.   0.   0.   0.   0.4  0.2  0.33 0.13 0.13 0.33 0.27 0.4  0.4  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.2  0.13 0.27 0.4  0.2  0.27 0.07 0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.33 0.07 0.2  0.4  0.4  0.27 0.2  0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.07 0.27 0.13 0.13 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.4  0.33 0.33 0.27 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.4  0.4  0.4  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.2  0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
12 classifiers pre label
Counter({1.0: 67})
13 classifiers pre label
Counter({1.0: 56, -1.0: 11})
14 classifiers pre label
Counter({1.0: 67})
15 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.83 1.5  1.33]
 [0.   0.   0.67 1.5  1.17 1.5 ]
 [0.   0.   0.   2.17 1.83 1.17]
 [0.   0.   0.   0.   0.5  2.67]
 [0.   0.   0.   0.   0.   2.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.06 0.06 0.25 0.12 0.06 0.25 0.12 0.25 0.31 0.38 0.19 0.12 0.06
  0.   0.12]
 [0.   0.   0.   0.19 0.19 0.   0.31 0.06 0.19 0.38 0.38 0.25 0.19 0.
  0.06 0.19]
 [0.   0.   0.   0.19 0.19 0.   0.31 0.06 0.19 0.38 0.38 0.25 0.19 0.
  0.06 0.19]
 [0.   0.   0.   0.   0.38 0.19 0.31 0.12 0.12 0.31 0.25 0.38 0.38 0.19
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.19 0.12 0.25 0.38 0.19 0.25 0.06 0.   0.19
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.31 0.06 0.19 0.38 0.38 0.25 0.19 0.
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.06 0.25 0.12 0.12 0.31
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.38 0.31 0.31 0.25 0.06
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.38 0.38 0.38 0.19
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.19 0.38
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.38
  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.25
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1.  0.  1.  1. -1.]
select_j_column
[ 0.  0.  0.  1.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.  1.  1.  1.  0.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
12 classifiers pre label
Counter({1.0: 67})
13 classifiers pre label
Counter({1.0: 56, -1.0: 11})
14 classifiers pre label
Counter({1.0: 67})
15 classifiers pre label
Counter({1.0: 67})
16 classifiers pre label
Counter({0.0: 31, 1.0: 19, -1.0: 17})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.33 2.   1.67 1.5 ]
 [0.   0.   0.83 1.67 1.33 1.5 ]
 [0.   0.   0.   2.33 2.   1.33]
 [0.   0.   0.   0.   0.5  2.83]
 [0.   0.   0.   0.   0.   2.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.06 0.06 0.24 0.12 0.06 0.24 0.12 0.24 0.29 0.35 0.18 0.12 0.06
  0.   0.12 0.18]
 [0.   0.   0.   0.18 0.18 0.   0.29 0.06 0.18 0.35 0.35 0.24 0.18 0.
  0.06 0.18 0.12]
 [0.   0.   0.   0.18 0.18 0.   0.29 0.06 0.18 0.35 0.35 0.24 0.18 0.
  0.06 0.18 0.12]
 [0.   0.   0.   0.   0.35 0.18 0.29 0.12 0.12 0.29 0.24 0.35 0.35 0.18
  0.24 0.35 0.12]
 [0.   0.   0.   0.   0.   0.18 0.12 0.24 0.35 0.18 0.24 0.06 0.   0.18
  0.12 0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.06 0.18 0.35 0.35 0.24 0.18 0.
  0.06 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.06 0.24 0.12 0.12 0.29
  0.24 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.35 0.29 0.29 0.24 0.06
  0.12 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.35 0.35 0.35 0.18
  0.24 0.35 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.18 0.35
  0.29 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.35
  0.35 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.24
  0.18 0.06 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.12 0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  0. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.  1.  1.  1.  0.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({1.0: 56, -1.0: 11})
2 classifiers pre label
Counter({1.0: 56, -1.0: 11})
3 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
4 classifiers pre label
Counter({1.0: 67})
5 classifiers pre label
Counter({1.0: 56, -1.0: 11})
6 classifiers pre label
Counter({1.0: 36, 0.0: 31})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({0.0: 47, -1.0: 20})
9 classifiers pre label
Counter({0.0: 47, 1.0: 20})
10 classifiers pre label
Counter({-1.0: 56, 0.0: 11})
11 classifiers pre label
Counter({1.0: 53, -1.0: 14})
12 classifiers pre label
Counter({1.0: 67})
13 classifiers pre label
Counter({1.0: 56, -1.0: 11})
14 classifiers pre label
Counter({1.0: 67})
15 classifiers pre label
Counter({1.0: 67})
16 classifiers pre label
Counter({0.0: 31, 1.0: 19, -1.0: 17})
17 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.33 2.   1.67 1.67]
 [0.   0.   0.83 1.67 1.33 1.67]
 [0.   0.   0.   2.33 2.   1.5 ]
 [0.   0.   0.   0.   0.5  3.  ]
 [0.   0.   0.   0.   0.   2.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.06 0.06 0.22 0.11 0.06 0.22 0.11 0.22 0.28 0.33 0.17 0.11 0.06
  0.   0.11 0.17 0.11]
 [0.   0.   0.   0.17 0.17 0.   0.28 0.06 0.17 0.33 0.33 0.22 0.17 0.
  0.06 0.17 0.11 0.17]
 [0.   0.   0.   0.17 0.17 0.   0.28 0.06 0.17 0.33 0.33 0.22 0.17 0.
  0.06 0.17 0.11 0.17]
 [0.   0.   0.   0.   0.33 0.17 0.28 0.11 0.11 0.28 0.22 0.33 0.33 0.17
  0.22 0.33 0.11 0.33]
 [0.   0.   0.   0.   0.   0.17 0.11 0.22 0.33 0.17 0.22 0.06 0.   0.17
  0.11 0.   0.28 0.  ]
 [0.   0.   0.   0.   0.   0.   0.28 0.06 0.17 0.33 0.33 0.22 0.17 0.
  0.06 0.17 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.06 0.22 0.11 0.11 0.28
  0.22 0.11 0.17 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.28 0.28 0.22 0.06
  0.11 0.22 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.33 0.33 0.17
  0.22 0.33 0.06 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.17 0.17 0.33
  0.28 0.17 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.22 0.33
  0.33 0.22 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.22
  0.17 0.06 0.28 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.11 0.   0.28 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.17 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.17 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.28 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})

**********      classifier acc  **************
[0.896, 0.91, 0.91, 0.923, 0.94, 0.91, 0.882, 1.0, 0.762, 0.762, 0.86, 0.925, 0.94, 0.91, 0.896, 0.94, 0.941, 0.94]
before cutting matrix
[[ 1.  1.  1. -1.  1.  1.  0.  1.  0.  0. -1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  0.  0. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  0.  1.  1.  0.  1.  0.  0. -1. -1.  1.  1.  1.  1.  0.  1.]
 [-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  0.  1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 93, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 93, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 55, 1.0: 10})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 55, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 55, -1.0: 10})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 55, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 146, 1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 146, 1.0: 29})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 146, -1.0: 55})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 146, -1.0: 55})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 172, -1.0: 29})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
after cutting matrix
[[-1.  1.  1.  1.  1.  1.  0.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  1.]
 [ 0.  1.  1. -1.  1.  1.  0.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 55, 1.0: 48})
Counter({1.0: 191, -1.0: 10})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  2  0  5  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]


SVM classifier
Time: 2019-01-09 22:21:01
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  0. -1.]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0 15  0  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0 10  0  0  0  0]
 [ 0  2  0  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[-1. -1. -1.  1. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  1.]
 [ 0.  0.]
 [-1. -1.]
 [ 0.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
confusion matrix
[[17  1  0  0  0  0]
 [ 0 12  0  0  0  1]
 [ 0  1 14  0  0  0]
 [ 0  1  0  0  0  6]
 [ 0 10  0  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.17]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0.  0. -1.  1.  1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  0.]
 [-1. -1.  1.]
 [ 0.  1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.33 0.5  0.33 0.33]
 [0.   0.   0.17 0.5  0.17 0.33]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0.  1. -1. -1.]
select_j_column
[ 1.  0.  0. -1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  1.]
 [ 0.  1.  0.  0.]
 [ 0.  0.  0.  0.]
 [-1. -1.  1.  1.]
 [ 0.  1. -1.  0.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  2  0]]
row HD
[[0.   0.33 0.5  0.5  0.5  0.5 ]
 [0.   0.   0.17 0.67 0.17 0.5 ]
 [0.   0.   0.   0.67 0.33 0.67]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 0.75 0.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  0.  0. -1.  0. -1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  1.  1.]
 [ 0.  1.  0.  0. -1.]
 [ 0.  0.  0.  0.  0.]
 [-1. -1.  1.  1. -1.]
 [ 0.  1. -1.  0.  1.]
 [-1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  3  0  0  1  0]]
row HD
[[0.   0.5  0.67 0.67 0.5  0.67]
 [0.   0.   0.33 0.67 0.33 0.5 ]
 [0.   0.   0.   0.83 0.5  0.83]
 [0.   0.   0.   0.   0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.6 0.2 0.4]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0.  1. -1. -1.]
select_j_column
[ 1.  0.  0.  1.  0. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1.]
 [ 0.  1.  0.  0. -1.  0.]
 [ 0.  0.  0.  0.  0.  0.]
 [-1. -1.  1.  1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1.]
 [-1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  3  1  0  0  0]]
row HD
[[0.   0.67 0.83 0.83 0.67 0.67]
 [0.   0.   0.33 0.83 0.5  0.67]
 [0.   0.   0.   1.   0.67 1.  ]
 [0.   0.   0.   0.   0.83 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.5  0.17 0.33 0.33]
 [0.   0.   0.83 0.67 0.33 0.33]
 [0.   0.   0.   0.33 0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0.  1. -1. -1.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.]
 [ 0.  1.  0.  0. -1.  0. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.]
 [-1. -1.  1.  1. -1. -1.  1.]
 [ 0.  1. -1.  0.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  3  0  0  1  0]]
row HD
[[0.   0.67 1.   1.   0.67 0.67]
 [0.   0.   0.5  1.   0.5  0.67]
 [0.   0.   0.   1.17 0.83 1.17]
 [0.   0.   0.   0.   1.   0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.43 0.14 0.29 0.29 0.57]
 [0.   0.   0.71 0.57 0.29 0.29 0.71]
 [0.   0.   0.   0.29 0.57 0.43 0.29]
 [0.   0.   0.   0.   0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  0.  0.  1.  0. -1.]
select_j_column
[ 1.  1.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.]
 [-1. -1.  1.  1. -1. -1.  1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  3  0  0  1  0]]
row HD
[[0.   0.83 1.   1.17 0.83 0.83]
 [0.   0.   0.67 1.   0.5  0.83]
 [0.   0.   0.   1.33 1.   1.33]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.38 0.12 0.25 0.25 0.5  0.5 ]
 [0.   0.   0.62 0.5  0.25 0.25 0.62 0.38]
 [0.   0.   0.   0.25 0.5  0.38 0.25 0.38]
 [0.   0.   0.   0.   0.38 0.38 0.38 0.62]
 [0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 1. -1.  0. -1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  3  0  0  1  0]]
row HD
[[0.   1.   1.17 1.33 0.83 0.83]
 [0.   0.   0.83 1.17 0.67 1.  ]
 [0.   0.   0.   1.33 1.17 1.5 ]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.33 0.11 0.22 0.22 0.44 0.44 0.33]
 [0.   0.   0.56 0.44 0.22 0.22 0.56 0.33 0.22]
 [0.   0.   0.   0.22 0.44 0.33 0.22 0.33 0.56]
 [0.   0.   0.   0.   0.33 0.33 0.33 0.56 0.44]
 [0.   0.   0.   0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.44 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0.  1. -1. -1.]
select_j_column
[ 0.  0.  0.  1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   1.   1.17 1.5  1.   1.  ]
 [0.   0.   0.83 1.33 0.83 1.17]
 [0.   0.   0.   1.5  1.33 1.67]
 [0.   0.   0.   0.   1.33 1.33]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.3 0.1 0.2 0.2 0.4 0.4 0.3 0.3]
 [0.  0.  0.5 0.4 0.2 0.2 0.5 0.3 0.2 0.2]
 [0.  0.  0.  0.2 0.4 0.3 0.2 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[ 1.  1.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   1.   1.17 1.67 1.   1.17]
 [0.   0.   0.83 1.5  0.83 1.33]
 [0.   0.   0.   1.67 1.33 1.83]
 [0.   0.   0.   0.   1.5  1.5 ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.27 0.27 0.09 0.18 0.18 0.36 0.36 0.27 0.27 0.55]
 [0.   0.   0.45 0.36 0.18 0.18 0.45 0.27 0.18 0.18 0.55]
 [0.   0.   0.   0.18 0.36 0.27 0.18 0.27 0.45 0.27 0.36]
 [0.   0.   0.   0.   0.27 0.27 0.27 0.45 0.36 0.36 0.45]
 [0.   0.   0.   0.   0.   0.27 0.27 0.27 0.27 0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.36 0.18 0.18 0.18 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.55 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  0. -1.  1. -1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
11 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   1.17 1.17 1.83 1.17 1.33]
 [0.   0.   1.   1.5  1.   1.33]
 [0.   0.   0.   1.83 1.5  2.  ]
 [0.   0.   0.   0.   1.67 1.5 ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.25 0.08 0.17 0.17 0.33 0.33 0.25 0.25 0.5  0.25]
 [0.   0.   0.42 0.33 0.17 0.17 0.42 0.25 0.17 0.17 0.5  0.25]
 [0.   0.   0.   0.17 0.33 0.25 0.17 0.25 0.42 0.25 0.33 0.25]
 [0.   0.   0.   0.   0.25 0.25 0.25 0.42 0.33 0.33 0.42 0.33]
 [0.   0.   0.   0.   0.   0.25 0.25 0.25 0.25 0.25 0.42 0.08]
 [0.   0.   0.   0.   0.   0.   0.33 0.17 0.17 0.17 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.5  0.42 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  0. -1.  1.  1.]
select_j_column
[ 0. -1.  0. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.  1.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.  0.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
11 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
12 classifiers pre label
Counter({1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  4  0  0  0  0]]
row HD
[[0.   1.17 1.33 2.   1.17 1.33]
 [0.   0.   1.17 1.67 1.   1.33]
 [0.   0.   0.   2.   1.67 2.17]
 [0.   0.   0.   0.   1.83 1.67]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.23 0.23 0.08 0.15 0.15 0.31 0.31 0.23 0.23 0.46 0.23 0.23]
 [0.   0.   0.38 0.31 0.15 0.15 0.38 0.23 0.15 0.15 0.46 0.23 0.  ]
 [0.   0.   0.   0.15 0.31 0.23 0.15 0.23 0.38 0.23 0.31 0.23 0.38]
 [0.   0.   0.   0.   0.23 0.23 0.23 0.38 0.31 0.31 0.38 0.31 0.31]
 [0.   0.   0.   0.   0.   0.23 0.23 0.23 0.23 0.23 0.38 0.08 0.15]
 [0.   0.   0.   0.   0.   0.   0.31 0.15 0.15 0.15 0.38 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.46 0.38 0.15 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.31 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 1.  1.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.  1.  0.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.  0. -1.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.  1.  0.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
11 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
12 classifiers pre label
Counter({1.0: 53, 0.0: 14})
13 classifiers pre label
Counter({0.0: 28, -1.0: 27, 1.0: 12})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 1  1  0  0  0  2]]
row HD
[[0.   1.33 1.5  2.17 1.17 1.5 ]
 [0.   0.   1.33 1.83 1.17 1.5 ]
 [0.   0.   0.   2.   1.83 2.17]
 [0.   0.   0.   0.   2.   1.67]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.21 0.21 0.07 0.14 0.14 0.29 0.29 0.21 0.21 0.43 0.21 0.21 0.21]
 [0.   0.   0.36 0.29 0.14 0.14 0.36 0.21 0.14 0.14 0.43 0.21 0.   0.29]
 [0.   0.   0.   0.14 0.29 0.21 0.14 0.21 0.36 0.21 0.29 0.21 0.36 0.29]
 [0.   0.   0.   0.   0.21 0.21 0.21 0.36 0.29 0.29 0.36 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.21 0.21 0.21 0.21 0.21 0.36 0.07 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.14 0.14 0.14 0.36 0.29 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.43 0.36 0.14 0.21 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.29 0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.29 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.14 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0. -1.  0. -1. -1.  1.]
select_j_column
[ 0.  1. -1. -1.  0. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.  1.  0.  0.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.  1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.  0. -1.  0.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.  1.  0.  0.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
11 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
12 classifiers pre label
Counter({1.0: 53, 0.0: 14})
13 classifiers pre label
Counter({0.0: 28, -1.0: 27, 1.0: 12})
14 classifiers pre label
Counter({0.0: 42, 1.0: 22, -1.0: 3})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  4  3  0  0  0]
 [ 0  0  0  0 10  0]
 [ 1  1  0  0  0  2]]
row HD
[[0.   1.5  1.5  2.33 1.17 1.67]
 [0.   0.   1.5  2.   1.33 1.5 ]
 [0.   0.   0.   2.17 1.83 2.33]
 [0.   0.   0.   0.   2.17 1.83]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.2  0.2  0.07 0.13 0.13 0.27 0.27 0.2  0.2  0.4  0.2  0.2  0.2
  0.2 ]
 [0.   0.   0.33 0.27 0.13 0.13 0.33 0.2  0.13 0.13 0.4  0.2  0.   0.27
  0.13]
 [0.   0.   0.   0.13 0.27 0.2  0.13 0.2  0.33 0.2  0.27 0.2  0.33 0.27
  0.27]
 [0.   0.   0.   0.   0.2  0.2  0.2  0.33 0.27 0.27 0.33 0.27 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.2  0.2  0.2  0.2  0.2  0.33 0.07 0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.27 0.13 0.13 0.13 0.33 0.27 0.13 0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.4  0.33 0.13 0.2  0.33 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.27 0.13 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.27 0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.13 0.13 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0.  1.  0.  0.]
select_j_column
[ 1.  1.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.  1.  0.  0.  1.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.  1.  1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.  0. -1.  0.  0.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.  1.  0.  0. -1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
11 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
12 classifiers pre label
Counter({1.0: 53, 0.0: 14})
13 classifiers pre label
Counter({0.0: 28, -1.0: 27, 1.0: 12})
14 classifiers pre label
Counter({0.0: 42, 1.0: 22, -1.0: 3})
15 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0  0  0 10  0]
 [ 1  1  0  0  0  2]]
row HD
[[0.   1.5  1.67 2.5  1.33 1.83]
 [0.   0.   1.67 2.17 1.5  1.67]
 [0.   0.   0.   2.33 2.   2.5 ]
 [0.   0.   0.   0.   2.17 1.83]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.19 0.19 0.06 0.12 0.12 0.25 0.25 0.19 0.19 0.38 0.19 0.19 0.19
  0.19 0.12]
 [0.   0.   0.31 0.25 0.12 0.12 0.31 0.19 0.12 0.12 0.38 0.19 0.   0.25
  0.12 0.12]
 [0.   0.   0.   0.12 0.25 0.19 0.12 0.19 0.31 0.19 0.25 0.19 0.31 0.25
  0.25 0.19]
 [0.   0.   0.   0.   0.19 0.19 0.19 0.31 0.25 0.25 0.31 0.25 0.25 0.25
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.19 0.19 0.19 0.19 0.19 0.31 0.06 0.12 0.25
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.25 0.12 0.12 0.12 0.31 0.25 0.12 0.31
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.38 0.31 0.12 0.19 0.31 0.31
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.25 0.12 0.19 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.25 0.12 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.12 0.12 0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.31
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  1. -1. -1.  0. -1.]
select_j_column
[ 1.  1.  0. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.  1.  0.  0.  1.  1.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.  1.  1.  1. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.  0. -1.  0.  0. -1.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.  1.  0.  0. -1. -1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 41, 1.0: 17, -1.0: 9})
1 classifiers pre label
Counter({1.0: 53, 0.0: 14})
2 classifiers pre label
Counter({0.0: 47, -1.0: 13, 1.0: 7})
3 classifiers pre label
Counter({0.0: 41, 1.0: 26})
4 classifiers pre label
Counter({1.0: 29, -1.0: 24, 0.0: 14})
5 classifiers pre label
Counter({0.0: 30, 1.0: 20, -1.0: 17})
6 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 36, 0.0: 31})
8 classifiers pre label
Counter({1.0: 30, -1.0: 21, 0.0: 16})
9 classifiers pre label
Counter({0.0: 47, 1.0: 13, -1.0: 7})
10 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
11 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
12 classifiers pre label
Counter({1.0: 53, 0.0: 14})
13 classifiers pre label
Counter({0.0: 28, -1.0: 27, 1.0: 12})
14 classifiers pre label
Counter({0.0: 42, 1.0: 22, -1.0: 3})
15 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 14})
16 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  3  3  0  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.67 1.83 2.5  1.5  1.83]
 [0.   0.   1.67 2.33 1.5  1.83]
 [0.   0.   0.   2.5  2.   2.67]
 [0.   0.   0.   0.   2.33 1.83]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.18 0.18 0.06 0.12 0.12 0.24 0.24 0.18 0.18 0.35 0.18 0.18 0.18
  0.18 0.12 0.29]
 [0.   0.   0.29 0.24 0.12 0.12 0.29 0.18 0.12 0.12 0.35 0.18 0.   0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.12 0.24 0.18 0.12 0.18 0.29 0.18 0.24 0.18 0.29 0.24
  0.24 0.18 0.24]
 [0.   0.   0.   0.   0.18 0.18 0.18 0.29 0.24 0.24 0.29 0.24 0.24 0.24
  0.24 0.18 0.24]
 [0.   0.   0.   0.   0.   0.18 0.18 0.18 0.18 0.18 0.29 0.06 0.12 0.24
  0.24 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.24 0.12 0.12 0.12 0.29 0.24 0.12 0.29
  0.18 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.35 0.29 0.12 0.18 0.29 0.29
  0.29 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.24 0.12 0.18 0.24
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.24 0.12 0.24
  0.24 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.12 0.12 0.24
  0.12 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.29
  0.35 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18
  0.18 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})

**********      classifier acc  **************
[0.862, 0.865, 0.857, 0.793, 0.981, 0.923, 0.865, 0.882, 0.926, 0.857, 0.889, 1.0, 0.865, 0.974, 0.833, 0.962, 0.97]
before cutting matrix
[[ 1.  1.  0.  1.  1.  1. -1.  0.  1.  0. -1.  0.  1.  0.  0.  1.  1.]
 [ 0.  1.  0.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.  1.  1.  1. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. -1.  0. -1.  0.  0. -1.  0.  0. -1.]
 [-1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
 [ 0.  1. -1.  0.  1. -1. -1. -1.  1.  1. -1.  1.  1.  0.  0. -1. -1.]
 [-1.  1. -1. -1. -1.  1. -1.  1.  1.  1.  0. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 134, -1.0: 29})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 89, -1.0: 10})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 89, -1.0: 10})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 134, 1.0: 29})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({-1.0: 134, 1.0: 29})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({-1.0: 93, 1.0: 10})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({-1.0: 93, 1.0: 10})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 162, 1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({1.0: 134, -1.0: 29})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
positive and negative ratio
Counter({1.0: 134, -1.0: 29})
after cutting matrix
[[ 1.  0.  1.  1.  1.  0.  0.  0.  0.  1.  1.]
 [ 0.  0. -1.  0.  0.  0. -1.  1.  1.  1. -1.]
 [ 0.  0.  0.  0. -1.  0.  0. -1.  0.  0. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 0. -1.  1. -1.  1.  1.  1.  0.  0. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 39})
Counter({-1.0: 36, 1.0: 29})
Counter({1.0: 86, -1.0: 77})
Counter({1.0: 70, -1.0: 55})
Counter({1.0: 96, -1.0: 67})
Counter({1.0: 36, -1.0: 29})
Counter({-1.0: 77, 1.0: 26})
Counter({-1.0: 77, 1.0: 38})
Counter({1.0: 48, -1.0: 29})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 102, 1.0: 99})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  2  5  0  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  0  3]]


SVM classifier
Time: 2019-01-09 22:21:05
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({1.0: 148, -1.0: 40})
confusion matrix
[[16  0  1  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [14  0  2  0  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [18  0  2  0  0  0  0  0  0  0]
 [ 6  0  9  0  0  0  0  0  0  0]
 [20  0  0  0  0  0  0  0  0  0]
 [17  0  5  0  0  0  0  0  0  0]
 [11  0  2  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
confusion matrix
[[16  0  0  0  0  0  1  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [14  0  2  0  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [18  0  1  0  0  0  1  0  0  0]
 [ 6  0  3  0  0  0  6  0  0  0]
 [20  0  0  0  0  0  0  0  0  0]
 [17  0  3  0  0  0  2  0  0  0]
 [11  0  2  0  0  0  0  0  0  0]]
row HD
[[0.  0.  0.1 0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.1 0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
confusion matrix
[[16  0  0  0  0  0  1  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 3  0 18  1  0  0  0  0  0  0]
 [ 3  0  2 11  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [18  0  1  0  0  0  1  0  0  0]
 [ 6  0  3  0  0  0  6  0  0  0]
 [18  0  0  2  0  0  0  0  0  0]
 [17  0  3  0  0  0  2  0  0  0]
 [ 9  0  2  2  0  0  0  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.1 0.1 0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.1 0.1 0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
confusion matrix
[[16  0  0  0  0  0  1  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 3  0 18  1  0  0  0  0  0  0]
 [ 3  0  2 11  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [18  0  1  0  0  0  1  0  0  0]
 [ 6  0  3  0  0  0  6  0  0  0]
 [18  0  0  2  0  0  0  0  0  0]
 [17  0  3  0  0  0  2  0  0  0]
 [ 9  0  2  2  0  0  0  0  0  0]]
row HD
[[0.  0.  0.1 0.2 0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.1 0.2 0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.3 0.1 0.1 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.2 0.4 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 1.  1. ]
 [0.  0.  0.5 0.5]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
confusion matrix
[[15  0  0  0  0  1  1  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 3  0 18  1  0  0  0  0  0  0]
 [ 3  0  2 11  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [ 2  0  1  0  0 16  1  0  0  0]
 [ 4  0  3  0  0  2  6  0  0  0]
 [17  0  0  2  0  1  0  0  0  0]
 [16  0  3  0  0  1  2  0  0  0]
 [ 9  0  2  2  0  0  0  0  0  0]]
row HD
[[0.  0.  0.1 0.2 0.  0.1 0.2 0.  0.  0.1]
 [0.  0.  0.1 0.2 0.  0.1 0.2 0.  0.  0.1]
 [0.  0.  0.  0.3 0.1 0.2 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.3 0.4 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 0.8 0.8]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
confusion matrix
[[10  5  0  0  0  1  1  0  0  0]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 0  3 11  1  0  1  0  0  0  6]
 [ 3  0  1 11  0  1  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  1]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 0  5  3  0  0  1  6  0  0  0]
 [14  3  0  2  0  1  0  0  0  0]
 [ 5 11  3  0  0  1  2  0  0  0]
 [ 8  1  0  2  0  0  0  0  0  2]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.1 0.3 0.  0.1 0.1]
 [0.  0.  0.1 0.3 0.  0.2 0.2 0.1 0.  0.2]
 [0.  0.  0.  0.4 0.1 0.3 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67 0.67 0.67 0.67]
 [0.   0.   0.33 0.33 0.33 0.67]
 [0.   0.   0.   0.   0.33 1.  ]
 [0.   0.   0.   0.   0.33 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
confusion matrix
[[10  5  0  0  0  1  1  0  0  0]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 0  3 17  1  0  0  0  0  0  1]
 [ 3  0  2 11  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  1]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 0  8  0  0  0  1  6  0  0  0]
 [14  3  0  2  0  1  0  0  0  0]
 [ 5 13  1  0  0  1  2  0  0  0]
 [ 8  1  0  2  0  0  0  0  0  2]]
row HD
[[0.  0.1 0.3 0.2 0.1 0.1 0.3 0.  0.1 0.1]
 [0.  0.  0.2 0.3 0.  0.2 0.2 0.1 0.  0.2]
 [0.  0.  0.  0.5 0.2 0.4 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.57 0.57 0.57 0.57 0.29]
 [0.   0.   0.29 0.29 0.29 0.57 0.29]
 [0.   0.   0.   0.   0.29 0.86 0.29]
 [0.   0.   0.   0.   0.29 0.86 0.29]
 [0.   0.   0.   0.   0.   0.86 0.29]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  1  1]
 [ 3  0  2 11  0  0  0  0  0  0]
 [ 4 11  0  0  0  0  0  0  1  1]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 0  2  0  0  0  1  9  0  3  0]
 [14  3  0  2  0  1  0  0  0  0]
 [ 5  1  1  0  0  1  4  0 10  0]
 [ 8  1  0  2  0  0  0  0  0  2]]
row HD
[[0.  0.1 0.3 0.2 0.1 0.1 0.4 0.  0.2 0.1]
 [0.  0.  0.2 0.3 0.  0.2 0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.5 0.2 0.4 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.6 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.5 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.5  0.5  0.5  0.25 0.38]
 [0.   0.   0.25 0.25 0.25 0.5  0.25 0.12]
 [0.   0.   0.   0.   0.25 0.75 0.25 0.38]
 [0.   0.   0.   0.   0.25 0.75 0.25 0.38]
 [0.   0.   0.   0.   0.   0.75 0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 0  2 16  1  0  1  0  0  1  1]
 [ 1  0  1 11  0  1  0  2  0  0]
 [ 3 11  0  0  0  0  0  1  1  1]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 5  1  1  0  0  1  4  0 10  0]
 [ 8  1  0  2  0  0  0  0  0  2]]
row HD
[[0.  0.1 0.3 0.2 0.1 0.2 0.5 0.1 0.3 0.1]
 [0.  0.  0.2 0.3 0.  0.3 0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.5 0.2 0.5 0.4 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.4 0.7 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.6 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.44 0.44 0.44 0.44 0.22 0.33 0.89]
 [0.   0.   0.22 0.22 0.22 0.44 0.22 0.11 0.89]
 [0.   0.   0.   0.   0.22 0.67 0.22 0.33 0.78]
 [0.   0.   0.   0.   0.22 0.67 0.22 0.33 0.78]
 [0.   0.   0.   0.   0.   0.67 0.22 0.33 0.67]
 [0.   0.   0.   0.   0.   0.   0.44 0.33 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 25  0  1  0  0  0  0  0  0]
 [ 0  2 16  1  0  1  0  0  1  1]
 [ 1  0  1 11  0  1  0  2  0  0]
 [ 3 11  0  0  0  0  0  1  1  1]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 0  1  0  0  0  2  6  0  6  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 5  1  1  0  0  1  2  0 12  0]
 [ 8  1  0  2  0  0  0  0  0  2]]
row HD
[[0.  0.1 0.3 0.2 0.1 0.2 0.6 0.1 0.3 0.1]
 [0.  0.  0.2 0.3 0.  0.3 0.5 0.2 0.2 0.2]
 [0.  0.  0.  0.5 0.2 0.5 0.5 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.4 0.8 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.3 0.5 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.7 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.4 0.4 0.4 0.2 0.3 0.8 0.2]
 [0.  0.  0.2 0.2 0.2 0.4 0.2 0.1 0.8 0. ]
 [0.  0.  0.  0.  0.2 0.6 0.2 0.3 0.7 0.2]
 [0.  0.  0.  0.  0.2 0.6 0.2 0.3 0.7 0.2]
 [0.  0.  0.  0.  0.  0.6 0.2 0.3 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.7 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
confusion matrix
[[ 9  0  0  0  3  1  1  1  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 16  1  0  1  0  0  1  1]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  2  0  0 10  0  0  3  0  1]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 0  0  0  0  2  1  8  0  4  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  1  1  0  0  4  3  0 11  0]
 [ 0  1  0  2  0  6  0  2  0  2]]
row HD
[[0.  0.2 0.4 0.3 0.1 0.3 0.6 0.2 0.4 0.2]
 [0.  0.  0.3 0.3 0.1 0.3 0.6 0.2 0.2 0.2]
 [0.  0.  0.  0.6 0.3 0.6 0.6 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.9 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.4 0.5 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.8 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.36 0.36 0.36 0.36 0.18 0.27 0.73 0.18 0.64]
 [0.   0.   0.18 0.18 0.18 0.36 0.18 0.09 0.73 0.   0.73]
 [0.   0.   0.   0.   0.18 0.55 0.18 0.27 0.64 0.18 0.55]
 [0.   0.   0.   0.   0.18 0.55 0.18 0.27 0.64 0.18 0.55]
 [0.   0.   0.   0.   0.   0.55 0.18 0.27 0.55 0.18 0.55]
 [0.   0.   0.   0.   0.   0.   0.36 0.27 0.82 0.36 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.64 0.18 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.09 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 16  1  1  1  0  0  1  1]
 [ 1  0  1 11  0  1  0  2  0  0]
 [ 1  1  0  0  9  0  0  4  1  1]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  0  0  1  1  8  0  4  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 5  0  1  0  1  1  3  0 11  0]
 [ 7  1  0  2  0  0  0  1  0  2]]
row HD
[[0.  0.2 0.5 0.4 0.2 0.4 0.6 0.3 0.4 0.2]
 [0.  0.  0.4 0.4 0.2 0.4 0.6 0.3 0.2 0.2]
 [0.  0.  0.  0.6 0.3 0.6 0.7 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.4 0.4 1.  0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.4 0.6 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.9 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.33 0.33 0.33 0.33 0.17 0.25 0.67 0.17 0.58 0.5 ]
 [0.   0.   0.17 0.17 0.17 0.33 0.17 0.08 0.67 0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.5  0.17 0.25 0.58 0.17 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.5  0.17 0.25 0.58 0.17 0.5  0.33]
 [0.   0.   0.   0.   0.   0.5  0.17 0.25 0.5  0.17 0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.33 0.25 0.75 0.33 0.58 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.58 0.17 0.58 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.08 0.58 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.58 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 16  1  1  1  0  0  1  1]
 [ 1  0  1 11  0  1  0  2  0  0]
 [ 1  1  0  0  9  0  0  4  1  1]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  0  0  1  1  8  0  4  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 5  0  1  0  1  1  3  0 11  0]
 [ 7  1  0  2  0  0  0  1  0  2]]
row HD
[[0.  0.2 0.5 0.5 0.2 0.4 0.6 0.3 0.4 0.2]
 [0.  0.  0.4 0.5 0.2 0.4 0.6 0.3 0.2 0.2]
 [0.  0.  0.  0.7 0.3 0.6 0.7 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.5 0.5 1.1 0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.4 0.6 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.9 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.31 0.31 0.31 0.31 0.15 0.23 0.62 0.15 0.54 0.46 0.31]
 [0.   0.   0.15 0.15 0.15 0.31 0.15 0.08 0.62 0.   0.62 0.46 0.15]
 [0.   0.   0.   0.   0.15 0.46 0.15 0.23 0.54 0.15 0.46 0.31 0.  ]
 [0.   0.   0.   0.   0.15 0.46 0.15 0.23 0.54 0.15 0.46 0.31 0.  ]
 [0.   0.   0.   0.   0.   0.46 0.15 0.23 0.46 0.15 0.46 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.31 0.23 0.69 0.31 0.54 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.54 0.15 0.54 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.08 0.54 0.54 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.54 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.46 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
confusion matrix
[[12  0  0  0  0  1  1  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  1  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 1  1  0  0  9  3  0  1  1  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  0  0  0  2  8  0  3  1]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  1  0  1  1  3  0 11  3]
 [ 0  1  0  2  0  1  0  0  0  9]]
row HD
[[0.  0.2 0.5 0.5 0.2 0.5 0.7 0.3 0.4 0.3]
 [0.  0.  0.4 0.5 0.2 0.5 0.7 0.3 0.2 0.3]
 [0.  0.  0.  0.7 0.3 0.7 0.8 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.5 0.6 1.2 0.4 0.7 0.6]
 [0.  0.  0.  0.  0.  0.5 0.7 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.9 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.29 0.29 0.29 0.29 0.14 0.21 0.57 0.14 0.5  0.43 0.29 0.57]
 [0.   0.   0.14 0.14 0.14 0.29 0.14 0.07 0.57 0.   0.57 0.43 0.14 0.57]
 [0.   0.   0.   0.   0.14 0.43 0.14 0.21 0.5  0.14 0.43 0.29 0.   0.43]
 [0.   0.   0.   0.   0.14 0.43 0.14 0.21 0.5  0.14 0.43 0.29 0.   0.43]
 [0.   0.   0.   0.   0.   0.43 0.14 0.21 0.43 0.14 0.43 0.29 0.14 0.57]
 [0.   0.   0.   0.   0.   0.   0.29 0.21 0.64 0.29 0.5  0.43 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.5  0.14 0.5  0.29 0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.07 0.5  0.5  0.21 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.5  0.5  0.5  0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.14 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
confusion matrix
[[ 9  3  0  0  0  1  0  0  2  2]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  1  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  2  0  0  9  3  0  1  1  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  1  1  9  0  3  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  1  0  1  1  3  0 11  3]
 [ 0  1  0  2  0  1  0  0  0  9]]
row HD
[[0.  0.3 0.5 0.5 0.3 0.5 0.8 0.3 0.5 0.3]
 [0.  0.  0.5 0.6 0.2 0.6 0.7 0.4 0.2 0.4]
 [0.  0.  0.  0.7 0.4 0.7 0.9 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.6 0.6 1.3 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.6 0.7 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  1.  0.3 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.27 0.27 0.27 0.27 0.13 0.2  0.53 0.13 0.47 0.4  0.27 0.53
  0.33]
 [0.   0.   0.13 0.13 0.13 0.27 0.13 0.07 0.53 0.   0.53 0.4  0.13 0.53
  0.47]
 [0.   0.   0.   0.   0.13 0.4  0.13 0.2  0.47 0.13 0.4  0.27 0.   0.4
  0.33]
 [0.   0.   0.   0.   0.13 0.4  0.13 0.2  0.47 0.13 0.4  0.27 0.   0.4
  0.33]
 [0.   0.   0.   0.   0.   0.4  0.13 0.2  0.4  0.13 0.4  0.27 0.13 0.53
  0.33]
 [0.   0.   0.   0.   0.   0.   0.27 0.2  0.6  0.27 0.47 0.4  0.4  0.27
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.47 0.13 0.47 0.27 0.13 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.07 0.47 0.47 0.2  0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.47 0.47 0.6
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4  0.13 0.53
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
confusion matrix
[[ 9  3  0  0  0  1  1  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  1  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  2  0  0  9  3  0  1  1  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  1  1  9  0  3  0]
 [ 2  3  0  2  0  1  0 12  0  0]
 [ 2  0  1  0  1  1  3  0 11  3]
 [ 0  1  0  2  0  1  0  0  0  9]]
row HD
[[0.  0.3 0.5 0.6 0.3 0.6 0.8 0.4 0.5 0.4]
 [0.  0.  0.5 0.7 0.2 0.7 0.7 0.5 0.2 0.5]
 [0.  0.  0.  0.8 0.4 0.8 0.9 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.7 0.7 1.4 0.5 0.9 0.7]
 [0.  0.  0.  0.  0.  0.7 0.7 0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  1.1 0.3 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.25 0.25 0.25 0.25 0.12 0.19 0.5  0.12 0.44 0.38 0.25 0.5
  0.31 0.38]
 [0.   0.   0.12 0.12 0.12 0.25 0.12 0.06 0.5  0.   0.5  0.38 0.12 0.5
  0.44 0.31]
 [0.   0.   0.   0.   0.12 0.38 0.12 0.19 0.44 0.12 0.38 0.25 0.   0.38
  0.31 0.19]
 [0.   0.   0.   0.   0.12 0.38 0.12 0.19 0.44 0.12 0.38 0.25 0.   0.38
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.38 0.12 0.19 0.38 0.12 0.38 0.25 0.12 0.5
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.19 0.56 0.25 0.44 0.38 0.38 0.25
  0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.44 0.12 0.44 0.25 0.12 0.38
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.06 0.44 0.44 0.19 0.44
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.44 0.44 0.56
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38 0.12 0.5
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.31
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  1  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  2  0  0  9  3  0  1  1  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  1  1  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  1  0  1  1  3  0 11  3]
 [ 0  1  0  2  0  1  0  0  0  9]]
row HD
[[0.  0.4 0.6 0.7 0.4 0.7 0.9 0.5 0.6 0.5]
 [0.  0.  0.5 0.7 0.2 0.7 0.7 0.5 0.2 0.5]
 [0.  0.  0.  0.8 0.4 0.8 0.9 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.7 0.7 1.4 0.5 0.9 0.7]
 [0.  0.  0.  0.  0.  0.7 0.7 0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  1.1 0.3 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.24 0.24 0.24 0.24 0.12 0.18 0.47 0.12 0.41 0.35 0.24 0.47
  0.29 0.35 0.24]
 [0.   0.   0.12 0.12 0.12 0.24 0.12 0.06 0.47 0.   0.47 0.35 0.12 0.47
  0.41 0.29 0.12]
 [0.   0.   0.   0.   0.12 0.35 0.12 0.18 0.41 0.12 0.35 0.24 0.   0.35
  0.29 0.18 0.12]
 [0.   0.   0.   0.   0.12 0.35 0.12 0.18 0.41 0.12 0.35 0.24 0.   0.35
  0.29 0.18 0.12]
 [0.   0.   0.   0.   0.   0.35 0.12 0.18 0.35 0.12 0.35 0.24 0.12 0.47
  0.29 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.24 0.18 0.53 0.24 0.41 0.35 0.35 0.24
  0.53 0.53 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.41 0.12 0.41 0.24 0.12 0.35
  0.29 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.06 0.41 0.41 0.18 0.41
  0.47 0.35 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.41 0.41 0.41 0.53
  0.41 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35 0.12 0.47
  0.41 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.29
  0.24 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24
  0.18 0.29 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.29 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  2  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  1  0  0 11  3  0  1  0  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  1  0  0  1  3  1 11  3]
 [ 0  1  0  2  0  1  0  0  0  9]]
row HD
[[0.  0.4 0.7 0.7 0.5 0.7 0.9 0.5 0.6 0.5]
 [0.  0.  0.6 0.7 0.3 0.7 0.7 0.5 0.2 0.5]
 [0.  0.  0.  0.9 0.4 0.9 1.  0.7 0.8 0.7]
 [0.  0.  0.  0.  0.8 0.7 1.4 0.5 0.9 0.7]
 [0.  0.  0.  0.  0.  0.8 0.8 0.6 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  1.1 0.3 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.22 0.22 0.22 0.22 0.11 0.17 0.44 0.11 0.39 0.33 0.22 0.44
  0.28 0.33 0.22 0.17]
 [0.   0.   0.11 0.11 0.11 0.22 0.11 0.06 0.44 0.   0.44 0.33 0.11 0.44
  0.39 0.28 0.11 0.17]
 [0.   0.   0.   0.   0.11 0.33 0.11 0.17 0.39 0.11 0.33 0.22 0.   0.33
  0.28 0.17 0.11 0.17]
 [0.   0.   0.   0.   0.11 0.33 0.11 0.17 0.39 0.11 0.33 0.22 0.   0.33
  0.28 0.17 0.11 0.17]
 [0.   0.   0.   0.   0.   0.33 0.11 0.17 0.33 0.11 0.33 0.22 0.11 0.44
  0.28 0.22 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.22 0.17 0.5  0.22 0.39 0.33 0.33 0.22
  0.5  0.5  0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.39 0.11 0.39 0.22 0.11 0.33
  0.28 0.28 0.11 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.06 0.39 0.39 0.17 0.39
  0.44 0.33 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.39 0.39 0.39 0.5
  0.39 0.39 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33 0.11 0.44
  0.39 0.28 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33 0.28
  0.22 0.33 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.22
  0.17 0.28 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.28 0.17 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.28 0.44 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.28 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
18 classifiers pre label
Counter({1.0: 129, -1.0: 59})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  1  1  0 10  0  0  4  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  1  0  0  1  3  0 11  3]
 [ 0  1  0  2  0  0  0  1  0  9]]
row HD
[[0.  0.4 0.8 0.7 0.6 0.7 0.9 0.6 0.6 0.5]
 [0.  0.  0.7 0.7 0.4 0.7 0.7 0.6 0.2 0.5]
 [0.  0.  0.  1.  0.4 1.  1.1 0.7 0.9 0.8]
 [0.  0.  0.  0.  0.9 0.7 1.4 0.6 0.9 0.7]
 [0.  0.  0.  0.  0.  0.9 0.9 0.6 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  1.1 0.4 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.21 0.21 0.21 0.21 0.11 0.16 0.42 0.11 0.37 0.32 0.21 0.42
  0.26 0.32 0.21 0.16 0.21]
 [0.   0.   0.11 0.11 0.11 0.21 0.11 0.05 0.42 0.   0.42 0.32 0.11 0.42
  0.37 0.26 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.11 0.32 0.11 0.16 0.37 0.11 0.32 0.21 0.   0.32
  0.26 0.16 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.11 0.32 0.11 0.16 0.37 0.11 0.32 0.21 0.   0.32
  0.26 0.16 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.32 0.11 0.16 0.32 0.11 0.32 0.21 0.11 0.42
  0.26 0.21 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.21 0.16 0.47 0.21 0.37 0.32 0.32 0.21
  0.47 0.47 0.32 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.16 0.37 0.11 0.37 0.21 0.11 0.32
  0.26 0.26 0.11 0.05 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.05 0.37 0.37 0.16 0.37
  0.42 0.32 0.16 0.21 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.37 0.37 0.37 0.47
  0.37 0.37 0.37 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32 0.11 0.42
  0.37 0.26 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.26
  0.21 0.32 0.42 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21
  0.16 0.26 0.32 0.16 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.26 0.16 0.11 0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.42 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.26 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  20 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
18 classifiers pre label
Counter({1.0: 129, -1.0: 59})
19 classifiers pre label
Counter({1.0: 157, -1.0: 31})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  1  1  0 10  0  0  4  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  1  0  0  1  3  0 11  3]
 [ 0  1  0  2  0  0  0  1  0  9]]
row HD
[[0.  0.4 0.8 0.7 0.6 0.7 1.  0.6 0.7 0.5]
 [0.  0.  0.7 0.7 0.4 0.7 0.8 0.6 0.3 0.5]
 [0.  0.  0.  1.  0.4 1.  1.2 0.7 1.  0.8]
 [0.  0.  0.  0.  0.9 0.7 1.5 0.6 1.  0.7]
 [0.  0.  0.  0.  0.  0.9 1.  0.6 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  1.2 0.4 0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.1  0.2  0.2  0.2  0.2  0.1  0.15 0.4  0.1  0.35 0.3  0.2  0.4
  0.25 0.3  0.2  0.15 0.2  0.15]
 [0.   0.   0.1  0.1  0.1  0.2  0.1  0.05 0.4  0.   0.4  0.3  0.1  0.4
  0.35 0.25 0.1  0.15 0.2  0.05]
 [0.   0.   0.   0.   0.1  0.3  0.1  0.15 0.35 0.1  0.3  0.2  0.   0.3
  0.25 0.15 0.1  0.15 0.2  0.15]
 [0.   0.   0.   0.   0.1  0.3  0.1  0.15 0.35 0.1  0.3  0.2  0.   0.3
  0.25 0.15 0.1  0.15 0.2  0.15]
 [0.   0.   0.   0.   0.   0.3  0.1  0.15 0.3  0.1  0.3  0.2  0.1  0.4
  0.25 0.2  0.1  0.15 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.2  0.15 0.45 0.2  0.35 0.3  0.3  0.2
  0.45 0.45 0.3  0.15 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.35 0.1  0.35 0.2  0.1  0.3
  0.25 0.25 0.1  0.05 0.1  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.05 0.35 0.35 0.15 0.35
  0.4  0.3  0.15 0.2  0.25 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.35 0.35 0.35 0.45
  0.35 0.35 0.35 0.35 0.4  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3  0.1  0.4
  0.35 0.25 0.1  0.15 0.2  0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.25
  0.2  0.3  0.4  0.4  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2
  0.15 0.25 0.3  0.15 0.1  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.25 0.15 0.1  0.15 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.4  0.3  0.25 0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.25 0.3  0.25 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.3  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.15 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.05 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  21 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.  1.  0.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  0.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
18 classifiers pre label
Counter({1.0: 129, -1.0: 59})
19 classifiers pre label
Counter({1.0: 157, -1.0: 31})
20 classifiers pre label
Counter({0.0: 131, -1.0: 42, 1.0: 15})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  1  1  0 10  0  0  4  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  1  0  0  1  3  0 11  3]
 [ 0  1  0  2  0  0  0  1  0  9]]
row HD
[[0.  0.4 0.8 0.8 0.6 0.7 1.1 0.7 0.8 0.5]
 [0.  0.  0.7 0.8 0.4 0.7 0.9 0.7 0.4 0.5]
 [0.  0.  0.  1.1 0.4 1.  1.3 0.8 1.1 0.8]
 [0.  0.  0.  0.  1.  0.8 1.6 0.7 1.1 0.8]
 [0.  0.  0.  0.  0.  0.9 1.1 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  1.3 0.5 1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.1  0.19 0.19 0.19 0.19 0.1  0.14 0.38 0.1  0.33 0.29 0.19 0.38
  0.24 0.29 0.19 0.14 0.19 0.14 0.38]
 [0.   0.   0.1  0.1  0.1  0.19 0.1  0.05 0.38 0.   0.38 0.29 0.1  0.38
  0.33 0.24 0.1  0.14 0.19 0.05 0.38]
 [0.   0.   0.   0.   0.1  0.29 0.1  0.14 0.33 0.1  0.29 0.19 0.   0.29
  0.24 0.14 0.1  0.14 0.19 0.14 0.48]
 [0.   0.   0.   0.   0.1  0.29 0.1  0.14 0.33 0.1  0.29 0.19 0.   0.29
  0.24 0.14 0.1  0.14 0.19 0.14 0.48]
 [0.   0.   0.   0.   0.   0.29 0.1  0.14 0.29 0.1  0.29 0.19 0.1  0.38
  0.24 0.19 0.1  0.14 0.19 0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.19 0.14 0.43 0.19 0.33 0.29 0.29 0.19
  0.43 0.43 0.29 0.14 0.19 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.33 0.1  0.33 0.19 0.1  0.29
  0.24 0.24 0.1  0.05 0.1  0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.05 0.33 0.33 0.14 0.33
  0.38 0.29 0.14 0.19 0.24 0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.33 0.33 0.33 0.43
  0.33 0.33 0.33 0.33 0.38 0.43 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.1  0.38
  0.33 0.24 0.1  0.14 0.19 0.05 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.24
  0.19 0.29 0.38 0.38 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19
  0.14 0.24 0.29 0.14 0.1  0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.24 0.14 0.1  0.14 0.19 0.14 0.48]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.38 0.29 0.24 0.19 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.24 0.29 0.24 0.38 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24 0.29 0.29 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.19 0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.05 0.19 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.24 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  0.  1.  0.  1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.  1.  0.  0.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  0.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
18 classifiers pre label
Counter({1.0: 129, -1.0: 59})
19 classifiers pre label
Counter({1.0: 157, -1.0: 31})
20 classifiers pre label
Counter({0.0: 131, -1.0: 42, 1.0: 15})
21 classifiers pre label
Counter({1.0: 152, 0.0: 19, -1.0: 17})
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  0  2  9  0  2  0  2  0  1]
 [ 0  1  1  0 10  0  0  4  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  1  0  0  1  3  0 11  3]
 [ 0  1  0  2  0  0  0  1  0  9]]
row HD
[[0.  0.5 0.9 0.9 0.7 0.8 1.2 0.8 0.9 0.6]
 [0.  0.  0.7 0.9 0.4 0.7 0.9 0.7 0.4 0.5]
 [0.  0.  0.  1.2 0.4 1.  1.3 0.8 1.1 0.8]
 [0.  0.  0.  0.  1.1 0.9 1.7 0.8 1.2 0.9]
 [0.  0.  0.  0.  0.  0.9 1.1 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  1.3 0.5 1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.09 0.18 0.18 0.18 0.18 0.09 0.14 0.36 0.09 0.32 0.27 0.18 0.36
  0.23 0.27 0.18 0.14 0.18 0.14 0.36 0.23]
 [0.   0.   0.09 0.09 0.09 0.18 0.09 0.05 0.36 0.   0.36 0.27 0.09 0.36
  0.32 0.23 0.09 0.14 0.18 0.05 0.36 0.14]
 [0.   0.   0.   0.   0.09 0.27 0.09 0.14 0.32 0.09 0.27 0.18 0.   0.27
  0.23 0.14 0.09 0.14 0.18 0.14 0.45 0.05]
 [0.   0.   0.   0.   0.09 0.27 0.09 0.14 0.32 0.09 0.27 0.18 0.   0.27
  0.23 0.14 0.09 0.14 0.18 0.14 0.45 0.05]
 [0.   0.   0.   0.   0.   0.27 0.09 0.14 0.27 0.09 0.27 0.18 0.09 0.36
  0.23 0.18 0.09 0.14 0.18 0.14 0.41 0.14]
 [0.   0.   0.   0.   0.   0.   0.18 0.14 0.41 0.18 0.32 0.27 0.27 0.18
  0.41 0.41 0.27 0.14 0.18 0.14 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.32 0.09 0.32 0.18 0.09 0.27
  0.23 0.23 0.09 0.05 0.09 0.14 0.41 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.05 0.32 0.32 0.14 0.32
  0.36 0.27 0.14 0.18 0.23 0.   0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.32 0.32 0.32 0.41
  0.32 0.32 0.32 0.32 0.36 0.41 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.09 0.36
  0.32 0.23 0.09 0.14 0.18 0.05 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.23
  0.18 0.27 0.36 0.36 0.32 0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18
  0.14 0.23 0.27 0.14 0.09 0.32 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.23 0.14 0.09 0.14 0.18 0.14 0.45 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.23 0.36 0.27 0.23 0.18 0.32 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.23 0.23 0.27 0.23 0.36 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.23 0.27 0.27 0.27 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.18 0.14 0.41 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.05 0.18 0.41 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.23 0.36 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.  1.  0.  0. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  0.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.  1.  0.  1.  0.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.  1.  0.  1.  0.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
18 classifiers pre label
Counter({1.0: 129, -1.0: 59})
19 classifiers pre label
Counter({1.0: 157, -1.0: 31})
20 classifiers pre label
Counter({0.0: 131, -1.0: 42, 1.0: 15})
21 classifiers pre label
Counter({1.0: 152, 0.0: 19, -1.0: 17})
22 classifiers pre label
Counter({1.0: 129, 0.0: 43, -1.0: 16})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  0  2  9  0  2  0  2  0  1]
 [ 0  1  1  0 10  0  0  4  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  1  1  0  0  1  3  0 11  3]
 [ 0  1  0  2  0  0  0  1  0  9]]
row HD
[[0.  0.6 1.  1.  0.8 0.9 1.3 0.9 1.  0.7]
 [0.  0.  0.8 0.9 0.5 0.7 0.9 0.7 0.4 0.5]
 [0.  0.  0.  1.3 0.4 1.1 1.4 0.9 1.2 0.9]
 [0.  0.  0.  0.  1.2 0.9 1.7 0.8 1.2 0.9]
 [0.  0.  0.  0.  0.  1.  1.2 0.8 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  1.3 0.5 1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.09 0.17 0.17 0.17 0.17 0.09 0.13 0.35 0.09 0.3  0.26 0.17 0.35
  0.22 0.26 0.17 0.13 0.17 0.13 0.35 0.22 0.22]
 [0.   0.   0.09 0.09 0.09 0.17 0.09 0.04 0.35 0.   0.35 0.26 0.09 0.35
  0.3  0.22 0.09 0.13 0.17 0.04 0.35 0.13 0.17]
 [0.   0.   0.   0.   0.09 0.26 0.09 0.13 0.3  0.09 0.26 0.17 0.   0.26
  0.22 0.13 0.09 0.13 0.17 0.13 0.43 0.04 0.17]
 [0.   0.   0.   0.   0.09 0.26 0.09 0.13 0.3  0.09 0.26 0.17 0.   0.26
  0.22 0.13 0.09 0.13 0.17 0.13 0.43 0.04 0.17]
 [0.   0.   0.   0.   0.   0.26 0.09 0.13 0.26 0.09 0.26 0.17 0.09 0.35
  0.22 0.17 0.09 0.13 0.17 0.13 0.39 0.13 0.17]
 [0.   0.   0.   0.   0.   0.   0.17 0.13 0.39 0.17 0.3  0.26 0.26 0.17
  0.39 0.39 0.26 0.13 0.17 0.13 0.3  0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.3  0.09 0.3  0.17 0.09 0.26
  0.22 0.22 0.09 0.04 0.09 0.13 0.39 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.04 0.3  0.3  0.13 0.3
  0.35 0.26 0.13 0.17 0.22 0.   0.3  0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.3  0.3  0.3  0.39
  0.3  0.3  0.3  0.3  0.35 0.39 0.22 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26 0.09 0.35
  0.3  0.22 0.09 0.13 0.17 0.04 0.35 0.13 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26 0.22
  0.17 0.26 0.35 0.35 0.3  0.3  0.3  0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17
  0.13 0.22 0.26 0.13 0.09 0.3  0.39 0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.22 0.13 0.09 0.13 0.17 0.13 0.43 0.04 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.35 0.26 0.22 0.17 0.3  0.35 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.22 0.26 0.22 0.35 0.39 0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.26 0.26 0.26 0.35 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.13 0.17 0.13 0.39 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.04 0.17 0.39 0.17 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.22 0.35 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.3  0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.39 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0.  0.  0.  1.  0.  0. -1. -1. -1.  0.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  24 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.  1.  0.  0. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  0.  1.  1.  0.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.  1.  0.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.  1.  0.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.  1.  0.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 148, -1.0: 40})
1 classifiers pre label
Counter({1.0: 178, -1.0: 10})
2 classifiers pre label
Counter({1.0: 171, -1.0: 17})
3 classifiers pre label
Counter({1.0: 171, -1.0: 17})
4 classifiers pre label
Counter({1.0: 162, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 96, 1.0: 92})
6 classifiers pre label
Counter({1.0: 168, -1.0: 20})
7 classifiers pre label
Counter({1.0: 157, -1.0: 31})
8 classifiers pre label
Counter({0.0: 109, 1.0: 45, -1.0: 34})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
10 classifiers pre label
Counter({-1.0: 120, 1.0: 42, 0.0: 26})
11 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
12 classifiers pre label
Counter({1.0: 171, -1.0: 17})
13 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
14 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
15 classifiers pre label
Counter({1.0: 118, 0.0: 58, -1.0: 12})
16 classifiers pre label
Counter({1.0: 176, -1.0: 12})
17 classifiers pre label
Counter({1.0: 152, -1.0: 36})
18 classifiers pre label
Counter({1.0: 129, -1.0: 59})
19 classifiers pre label
Counter({1.0: 157, -1.0: 31})
20 classifiers pre label
Counter({0.0: 131, -1.0: 42, 1.0: 15})
21 classifiers pre label
Counter({1.0: 152, 0.0: 19, -1.0: 17})
22 classifiers pre label
Counter({1.0: 129, 0.0: 43, -1.0: 16})
23 classifiers pre label
Counter({1.0: 90, 0.0: 69, -1.0: 29})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 0  0  2  9  0  2  0  2  0  1]
 [ 0  1  1  0 10  1  0  3  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 3  0  1  0  0  1  3  0 11  3]
 [ 0  1  0  2  0  0  0  1  0  9]]
row HD
[[0.  0.7 1.  1.  0.8 1.  1.3 1.  1.1 0.8]
 [0.  0.  0.9 1.  0.6 0.7 1.  0.8 0.5 0.5]
 [0.  0.  0.  1.3 0.4 1.2 1.4 1.  1.3 1. ]
 [0.  0.  0.  0.  1.2 1.  1.7 0.9 1.3 1. ]
 [0.  0.  0.  0.  0.  1.1 1.2 0.9 1.  1.1]
 [0.  0.  0.  0.  0.  0.  1.4 0.6 1.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.08 0.17 0.17 0.17 0.17 0.08 0.12 0.33 0.08 0.29 0.25 0.17 0.33
  0.21 0.25 0.17 0.12 0.17 0.12 0.33 0.21 0.21 0.29]
 [0.   0.   0.08 0.08 0.08 0.17 0.08 0.04 0.33 0.   0.33 0.25 0.08 0.33
  0.29 0.21 0.08 0.12 0.17 0.04 0.33 0.12 0.17 0.25]
 [0.   0.   0.   0.   0.08 0.25 0.08 0.12 0.29 0.08 0.25 0.17 0.   0.25
  0.21 0.12 0.08 0.12 0.17 0.12 0.42 0.04 0.17 0.25]
 [0.   0.   0.   0.   0.08 0.25 0.08 0.12 0.29 0.08 0.25 0.17 0.   0.25
  0.21 0.12 0.08 0.12 0.17 0.12 0.42 0.04 0.17 0.25]
 [0.   0.   0.   0.   0.   0.25 0.08 0.12 0.25 0.08 0.25 0.17 0.08 0.33
  0.21 0.17 0.08 0.12 0.17 0.12 0.38 0.12 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.17 0.12 0.38 0.17 0.29 0.25 0.25 0.17
  0.38 0.38 0.25 0.12 0.17 0.12 0.29 0.29 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.08 0.29 0.17 0.08 0.25
  0.21 0.21 0.08 0.04 0.08 0.12 0.38 0.12 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.04 0.29 0.29 0.12 0.29
  0.33 0.25 0.12 0.17 0.21 0.   0.29 0.17 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.29 0.29 0.38
  0.29 0.29 0.29 0.29 0.33 0.38 0.21 0.25 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.08 0.33
  0.29 0.21 0.08 0.12 0.17 0.04 0.33 0.12 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25 0.21
  0.17 0.25 0.33 0.33 0.29 0.29 0.29 0.29 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17
  0.12 0.21 0.25 0.12 0.08 0.29 0.38 0.21 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.21 0.12 0.08 0.12 0.17 0.12 0.42 0.04 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.21 0.33 0.25 0.21 0.17 0.29 0.33 0.25 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.21 0.25 0.21 0.33 0.38 0.21 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.25 0.25 0.25 0.33 0.17 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.12 0.17 0.12 0.38 0.08 0.08 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.04 0.17 0.38 0.17 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.21 0.33 0.21 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29 0.17 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})

**********      classifier acc  **************
[0.83, 0.931, 0.941, 0.941, 0.936, 0.819, 0.957, 0.915, 0.675, 0.931, 0.819, 0.84, 0.941, 0.872, 0.851, 0.844, 0.952, 0.91, 0.872, 0.915, 0.603, 0.865, 0.879, 0.667]
before cutting matrix
[[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1. -1. -1.  1. -1.  1.
   1.  1.  0.  0. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  0.  1.  1.  0.]
 [-1.  1.  1.  1.  1. -1. -1.  1.  0.  1.  0. -1.  1. -1. -1.  1.  1. -1.
  -1.  1.  0.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.  0.  1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.  1.  0.  1.  0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.  1.  0.]
 [-1. -1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.
   1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  0.  1.  1.
  -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1. -1.  0.  1.  1.
   1.  1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 285, -1.0: 277})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 160, -1.0: 54})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 345, 1.0: 160})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({-1.0: 345, 1.0: 160})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({-1.0: 301, 1.0: 261})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({-1.0: 409, 1.0: 153})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({-1.0: 342, 1.0: 220})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 328, -1.0: 65})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 380, -1.0: 182})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({-1.0: 160, 1.0: 65})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 446, -1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 446, -1.0: 65})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 391, -1.0: 51})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 391, -1.0: 51})
positive and negative ratio
Counter({1.0: 282, -1.0: 114})
after cutting matrix
[[ 1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1.  1.  1.  0.
  -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.
   1.  0.]
 [-1.  1.  1.  1.  1. -1.  1.  0.  1. -1.  1. -1.  1.  1. -1. -1.  1.  0.
   0.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  0.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1.
   1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.  1.  1. -1. -1.  1.  0.
   0.  1.]
 [ 1.  1.  1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  0.
   1.  0.]
 [-1. -1.  1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1. -1.
   1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  0.  1.  1. -1.  1. -1.
   1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.
   1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  1.  0.
   1.  0.]]
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
Counter({1.0: 516, -1.0: 46})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 497, -1.0: 65})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 505, -1.0: 57})
Counter({1.0: 464, -1.0: 98})
Counter({1.0: 160, -1.0: 54})
Counter({1.0: 516, -1.0: 46})
Counter({-1.0: 301, 1.0: 261})
Counter({1.0: 497, -1.0: 65})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 328, -1.0: 65})
Counter({1.0: 511, -1.0: 51})
Counter({1.0: 442, -1.0: 120})
Counter({1.0: 380, -1.0: 182})
Counter({1.0: 464, -1.0: 98})
Counter({-1.0: 160, 1.0: 65})
Counter({1.0: 391, -1.0: 51})
Counter({1.0: 282, -1.0: 114})
cutting matrix's confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  1  0  1  0  0  1  0]
 [ 0  0  2 11  0  0  0  2  0  1]
 [ 0  1  1  0 11  0  0  3  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  1  0  0  2  4  0 10  3]
 [ 0  1  0  2  0  0  0  1  0  9]]


SVM classifier
Time: 2019-01-09 22:21:41
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
confusion matrix
[[13  3  0  0  0  0  0  0  0  1]
 [ 0 26  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  3]
 [ 4 16  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [ 0  9  0  0  0  0  0  0  0  4]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 0.  0.]
 [-1.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
confusion matrix
[[11  3  0  0  0  1  0  0  2  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  1  0  0  1  0]
 [ 4  9  0  0  0  3  0  0  0  0]
 [ 2 12  0  0  0  3  0  0  0  0]
 [ 3  2  0  0  0 14  0  0  1  0]
 [ 4  0  0  0  0  2  0  0  9  0]
 [15  4  0  0  0  1  0  0  0  0]
 [ 6  3  0  0  0  1  0  0 12  0]
 [ 0  9  0  0  0  4  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.2 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.2 0.  0.  0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]
 [ 0.  0.  0.]
 [ 0.  0.  0.]
 [ 0.  1.  0.]
 [-1.  1.  0.]
 [-1.  1. -1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
confusion matrix
[[11  3  0  0  0  1  0  0  2  0]
 [ 0 26  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  1  0  0  1  0]
 [ 2  9  0  0  0  3  0  2  0  0]
 [ 1 12  0  0  0  3  0  1  0  0]
 [ 3  2  0  0  0 14  0  0  1  0]
 [ 2  0  0  0  0  2  2  0  9  0]
 [ 2  4  0  0  0  1  0 13  0  0]
 [ 5  3  0  0  0  1  1  0 12  0]
 [ 0  9  0  0  0  4  0  0  0  0]]
row HD
[[0.  0.3 0.  0.3 0.3 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.3 0.  0.  0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  0.]
 [ 0.  0.  0.  0.]
 [-1.  1.  1.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  1.]
 [ 0.  1.  0.  0.]
 [-1.  1.  0. -1.]
 [-1.  1. -1.  0.]
 [-1.  0.  1.  0.]
 [ 1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
confusion matrix
[[11  3  0  0  1  0  0  0  2  0]
 [ 0 22  0  0  4  0  0  0  0  0]
 [19  1  0  0  0  1  0  0  1  0]
 [ 2  9  0  0  0  3  0  2  0  0]
 [ 1  0  0  0 14  1  0  1  0  0]
 [ 3  2  0  0  0 14  0  0  1  0]
 [ 2  0  0  0  0  2  2  0  9  0]
 [ 2  4  0  0  0  1  0 13  0  0]
 [ 5  3  0  0  0  1  1  0 12  0]
 [ 0  8  0  0  5  0  0  0  0  0]]
row HD
[[0.  0.3 0.  0.3 0.4 0.2 0.2 0.1 0.1 0.3]
 [0.  0.  0.3 0.  0.1 0.1 0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.3 0.4 0.2 0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.   1.25]
 [0.   0.   1.25 1.75]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  1.]
 [ 0.  0.  0.  0. -1.]
 [ 0.  0.  0.  1.  1.]
 [ 0.  1.  0.  0.  0.]
 [-1.  1.  0. -1.  0.]
 [-1.  1. -1.  0.  1.]
 [-1.  0.  1.  0. -1.]
 [ 1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
confusion matrix
[[11  3  0  0  1  0  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 2  1 17  0  0  1  0  0  1  0]
 [ 1  1  1  8  0  3  0  2  0  0]
 [ 0  0  1  0 14  1  0  1  0  0]
 [ 2  2  1  0  0 14  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 3  3  4  0  0  1  1  0 10  0]
 [ 0  6  0  2  5  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.4 0.5 0.2 0.2 0.2 0.2 0.4]
 [0.  0.  0.4 0.1 0.2 0.1 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.4 0.4 0.3 0.3 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.4 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 0.8 1.  1.2]
 [0.  0.  1.  1.4 1.4]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  1.  1.]
 [ 0.  0.  0.  0. -1. -1.]
 [ 0.  0.  0.  1.  1.  0.]
 [ 0.  1.  0.  0.  0.  1.]
 [-1.  1.  0. -1.  0.  1.]
 [-1.  1. -1.  0.  1.  1.]
 [-1.  0.  1.  0. -1. -1.]
 [ 1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
confusion matrix
[[11  3  0  0  1  0  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  0  0  1  0  0  3  0]
 [ 0  1  1  8  0  3  0  2  1  0]
 [ 0  0  1  0 14  1  0  1  0  0]
 [ 3  2  1  0  0 14  0  0  0  0]
 [ 7  0  1  0  0  2  2  0  3  0]
 [ 1  3  0  1  0  1  0 13  1  0]
 [ 4  3  4  0  0  1  1  0  9  0]
 [ 0  6  0  2  5  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.5 0.5 0.3 0.3 0.3 0.3 0.5]
 [0.  0.  0.5 0.2 0.2 0.2 0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.5 0.5 0.3 0.3 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.5 0.2 0.6]
 [0.  0.  0.  0.  0.  0.4 0.5 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 0.67 0.83 1.   1.  ]
 [0.   0.   0.83 1.17 1.17 0.67]
 [0.   0.   0.   1.   0.83 1.  ]
 [0.   0.   0.   0.   0.83 1.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  1.  1. -1.]
 [ 0.  0.  0.  0. -1. -1.  0.]
 [ 0.  0.  0.  1.  1.  0.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.]
 [-1.  1.  0. -1.  0.  1.  1.]
 [-1.  1. -1.  0.  1.  1.  0.]
 [-1.  0.  1.  0. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  0  0  1  0  0  3  0]
 [ 0  1  1  8  0  3  0  2  1  0]
 [ 1  0  0  0 12  1  0  1  0  2]
 [ 4  2  0  0  0 14  0  0  0  0]
 [ 8  0  0  0  0  2  2  0  3  0]
 [ 1  3  0  1  0  1  2 11  1  0]
 [ 7  3  1  0  0  1  1  0  9  0]
 [ 0  6  0  2  1  0  0  0  0  4]]
row HD
[[0.  0.4 0.3 0.6 0.6 0.4 0.3 0.4 0.3 0.5]
 [0.  0.  0.6 0.2 0.2 0.2 0.5 0.5 0.5 0.7]
 [0.  0.  0.  0.6 0.6 0.4 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.6 0.5 0.3 0.7]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.57 0.71 0.86 0.86 0.57]
 [0.   0.   0.71 1.   1.   0.57 0.71]
 [0.   0.   0.   0.86 0.71 0.86 0.43]
 [0.   0.   0.   0.   0.71 1.   0.71]
 [0.   0.   0.   0.   0.   0.43 1.  ]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  1.  0. -1.  0.  0.  1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1.]
 [-1.  1. -1.  0.  1.  1.  0. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 17  0  0  1  0  0  2  0]
 [ 1  1  1  8  0  3  0  2  0  0]
 [ 1  0  0  0 12  1  0  1  0  2]
 [ 4  2  0  0  0 14  0  0  0  0]
 [ 8  0  0  0  0  2  2  0  3  0]
 [ 2  3  0  1  0  1  2 11  0  0]
 [ 7  3  1  0  0  1  1  0  9  0]
 [ 0  6  0  2  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.4 0.7 0.6 0.5 0.3 0.4 0.4 0.5]
 [0.  0.  0.6 0.2 0.3 0.2 0.6 0.6 0.6 0.8]
 [0.  0.  0.  0.6 0.7 0.4 0.5 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.7 0.6 0.4 0.8]
 [0.  0.  0.  0.  0.  0.5 0.6 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.5  0.62 0.75 0.75 0.5  0.5 ]
 [0.   0.   0.62 0.88 0.88 0.5  0.62 0.88]
 [0.   0.   0.   0.75 0.62 0.75 0.38 0.62]
 [0.   0.   0.   0.   0.62 0.88 0.62 0.62]
 [0.   0.   0.   0.   0.   0.38 0.88 1.  ]
 [0.   0.   0.   0.   0.   0.   0.75 1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  1.  1. -1.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  1.  1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 17  0  0  1  0  0  2  0]
 [ 1  1  1  8  0  3  0  2  0  0]
 [ 1  0  0  0 12  1  0  1  0  2]
 [ 4  2  0  0  0 14  0  0  0  0]
 [ 8  0  0  0  0  2  2  0  3  0]
 [ 4  3  0  1  0  1  0 11  0  0]
 [ 7  3  1  0  0  1  1  0  9  0]
 [ 0  6  0  2  1  0  0  0  0  4]]
row HD
[[0.  0.5 0.5 0.8 0.6 0.6 0.4 0.5 0.5 0.6]
 [0.  0.  0.7 0.3 0.3 0.3 0.7 0.7 0.7 0.9]
 [0.  0.  0.  0.7 0.8 0.4 0.5 0.3 0.6 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.8 0.7 0.4 0.9]
 [0.  0.  0.  0.  0.  0.6 0.7 0.6 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.44 0.56 0.67 0.67 0.44 0.44 0.56]
 [0.   0.   0.56 0.78 0.78 0.44 0.56 0.78 0.78]
 [0.   0.   0.   0.67 0.56 0.67 0.33 0.56 0.67]
 [0.   0.   0.   0.   0.56 0.78 0.56 0.56 0.78]
 [0.   0.   0.   0.   0.   0.33 0.78 0.89 0.89]
 [0.   0.   0.   0.   0.   0.   0.67 1.   0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
confusion matrix
[[11  0  0  0  3  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 1  2 17  0  0  0  0  0  2  0]
 [ 1  3  1  8  0  1  0  2  0  0]
 [ 1  1  0  0 11  1  0  1  0  2]
 [ 4  0  0  0  0 16  0  0  0  0]
 [ 7  0  1  0  0  2  2  0  3  0]
 [ 2  4  0  1  0  0  2 11  0  0]
 [ 6  0  2  0  0  4  1  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.6 0.6 0.9 0.6 0.6 0.5 0.6 0.6 0.6]
 [0.  0.  0.7 0.3 0.4 0.4 0.7 0.8 0.8 1. ]
 [0.  0.  0.  0.7 0.9 0.5 0.5 0.4 0.7 0.6]
 [0.  0.  0.  0.  0.6 0.5 0.8 0.8 0.5 1. ]
 [0.  0.  0.  0.  0.  0.6 0.8 0.7 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.4 0.5 0.6 0.6 0.4 0.4 0.5 0.9]
 [0.  0.  0.5 0.7 0.7 0.4 0.5 0.7 0.7 0.6]
 [0.  0.  0.  0.6 0.5 0.6 0.3 0.5 0.6 0.9]
 [0.  0.  0.  0.  0.5 0.7 0.5 0.5 0.7 0.8]
 [0.  0.  0.  0.  0.  0.3 0.7 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.6 0.9 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  1.  1. -1.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
confusion matrix
[[11  0  0  0  3  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  2  0]
 [ 0  3  1  9  0  1  0  2  0  0]
 [ 0  1  0  0 11  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 1  6  0  2  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.6 0.7 1.  0.6 0.7 0.6 0.7 0.7 0.7]
 [0.  0.  0.8 0.4 0.4 0.5 0.8 0.9 0.9 1.1]
 [0.  0.  0.  0.8 1.  0.5 0.5 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.7 0.6 0.9 0.9 0.5 1.1]
 [0.  0.  0.  0.  0.  0.7 0.9 0.8 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.36 0.45 0.55 0.55 0.36 0.36 0.45 0.82 0.45]
 [0.   0.   0.45 0.64 0.64 0.36 0.45 0.64 0.64 0.55 0.64]
 [0.   0.   0.   0.55 0.45 0.55 0.27 0.45 0.55 0.82 0.55]
 [0.   0.   0.   0.   0.45 0.64 0.45 0.45 0.64 0.73 0.64]
 [0.   0.   0.   0.   0.   0.27 0.64 0.73 0.73 0.82 0.73]
 [0.   0.   0.   0.   0.   0.   0.55 0.82 0.64 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.55 0.55 0.73 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  0.  0.  0. -1.  1.  1.]
select_j_column
[ 0.  0. -1.  1.  0. -1. -1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
confusion matrix
[[11  0  0  0  3  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  0  2  0]
 [ 0  3  1  9  0  1  0  2  0  0]
 [ 1  1  0  0 11  1  0  1  0  2]
 [ 4  0  0  0  0 16  0  0  0  0]
 [ 7  0  1  0  0  2  2  0  3  0]
 [ 1  6  0  2  0  0  0 11  0  0]
 [ 6  0  2  0  0  4  1  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.7 0.7 1.  0.7 0.8 0.7 0.8 0.7 0.7]
 [0.  0.  0.9 0.5 0.4 0.5 0.8 1.  1.  1.2]
 [0.  0.  0.  0.8 1.1 0.6 0.6 0.5 0.8 0.6]
 [0.  0.  0.  0.  0.8 0.7 1.  1.  0.5 1.1]
 [0.  0.  0.  0.  0.  0.7 0.9 0.9 1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.33 0.42 0.5  0.5  0.33 0.33 0.42 0.75 0.42 0.42]
 [0.   0.   0.42 0.58 0.58 0.33 0.42 0.58 0.58 0.5  0.58 0.5 ]
 [0.   0.   0.   0.5  0.42 0.5  0.25 0.42 0.5  0.75 0.5  0.08]
 [0.   0.   0.   0.   0.42 0.58 0.42 0.42 0.58 0.67 0.58 0.58]
 [0.   0.   0.   0.   0.   0.25 0.58 0.67 0.67 0.75 0.67 0.42]
 [0.   0.   0.   0.   0.   0.   0.5  0.75 0.58 0.67 0.58 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.67 0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.58 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 1  0  0  0 12  1  0  1  0  2]
 [ 3  0  0  0  0 16  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 1  4  0  2  0  1  0 12  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.8 0.8 1.  0.8 0.8 0.8 0.8 0.8 0.8]
 [0.  0.  1.  0.6 0.5 0.6 0.8 1.1 1.  1.3]
 [0.  0.  0.  0.9 1.1 0.7 0.7 0.6 0.9 0.6]
 [0.  0.  0.  0.  0.9 0.7 1.1 1.  0.6 1.2]
 [0.  0.  0.  0.  0.  0.8 1.  1.  1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.7 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.31 0.38 0.46 0.46 0.31 0.31 0.38 0.69 0.38 0.38 0.54]
 [0.   0.   0.38 0.54 0.54 0.31 0.38 0.54 0.54 0.46 0.54 0.46 0.54]
 [0.   0.   0.   0.46 0.38 0.46 0.23 0.38 0.46 0.69 0.46 0.08 0.54]
 [0.   0.   0.   0.   0.38 0.54 0.38 0.38 0.54 0.62 0.54 0.54 0.46]
 [0.   0.   0.   0.   0.   0.23 0.54 0.62 0.62 0.69 0.62 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.46 0.69 0.54 0.62 0.54 0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.46 0.46 0.62 0.46 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.54 0.38 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.   0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 17  0  0  1  0  0  2  0]
 [ 1  0  1  8  0  4  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.9 0.9 1.1 0.9 0.9 0.9 0.8 0.9 0.8]
 [0.  0.  1.1 0.6 0.6 0.7 0.8 1.2 1.1 1.4]
 [0.  0.  0.  1.  1.1 0.7 0.8 0.7 0.9 0.7]
 [0.  0.  0.  0.  1.  0.8 1.1 1.1 0.7 1.3]
 [0.  0.  0.  0.  0.  0.8 1.1 1.1 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.29 0.36 0.43 0.43 0.29 0.29 0.36 0.64 0.36 0.36 0.5  0.43]
 [0.   0.   0.36 0.5  0.5  0.29 0.36 0.5  0.5  0.43 0.5  0.43 0.5  0.43]
 [0.   0.   0.   0.43 0.36 0.43 0.21 0.36 0.43 0.64 0.43 0.07 0.5  0.5 ]
 [0.   0.   0.   0.   0.36 0.5  0.36 0.36 0.5  0.57 0.5  0.5  0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.21 0.5  0.57 0.57 0.64 0.57 0.36 0.57 0.64]
 [0.   0.   0.   0.   0.   0.   0.43 0.64 0.5  0.57 0.5  0.43 0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.57 0.43 0.29 0.29 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.5  0.36 0.43 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.   0.36 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.57 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 17  0  0  1  0  0  2  0]
 [ 1  0  1  8  0  4  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.  1.  1.2 1.  1.  0.9 0.9 0.9 0.9]
 [0.  0.  1.1 0.6 0.7 0.7 0.9 1.3 1.2 1.5]
 [0.  0.  0.  1.  1.2 0.7 0.9 0.8 1.  0.8]
 [0.  0.  0.  0.  1.1 0.8 1.2 1.2 0.8 1.4]
 [0.  0.  0.  0.  0.  0.9 1.2 1.1 1.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.8 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.27 0.33 0.4  0.4  0.27 0.27 0.33 0.6  0.33 0.33 0.47 0.4
  0.2 ]
 [0.   0.   0.33 0.47 0.47 0.27 0.33 0.47 0.47 0.4  0.47 0.4  0.47 0.4
  0.47]
 [0.   0.   0.   0.4  0.33 0.4  0.2  0.33 0.4  0.6  0.4  0.07 0.47 0.47
  0.4 ]
 [0.   0.   0.   0.   0.33 0.47 0.33 0.33 0.47 0.53 0.47 0.47 0.4  0.47
  0.2 ]
 [0.   0.   0.   0.   0.   0.2  0.47 0.53 0.53 0.6  0.53 0.33 0.53 0.6
  0.27]
 [0.   0.   0.   0.   0.   0.   0.4  0.6  0.47 0.53 0.47 0.4  0.53 0.53
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.53 0.4  0.27 0.27 0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.47 0.33 0.4  0.33 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.   0.33 0.4  0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.33 0.27
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  0  0  2  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  1  1  0  0  0 12  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.1 1.1 1.2 1.1 1.1 1.  1.  1.  1. ]
 [0.  0.  1.2 0.7 0.7 0.7 1.  1.3 1.2 1.5]
 [0.  0.  0.  1.1 1.3 0.8 0.9 0.9 1.1 0.9]
 [0.  0.  0.  0.  1.2 0.9 1.3 1.3 0.9 1.5]
 [0.  0.  0.  0.  0.  0.9 1.3 1.1 1.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.25 0.31 0.38 0.38 0.25 0.25 0.31 0.56 0.31 0.31 0.44 0.38
  0.19 0.5 ]
 [0.   0.   0.31 0.44 0.44 0.25 0.31 0.44 0.44 0.38 0.44 0.38 0.44 0.38
  0.44 0.5 ]
 [0.   0.   0.   0.38 0.31 0.38 0.19 0.31 0.38 0.56 0.38 0.06 0.44 0.44
  0.38 0.44]
 [0.   0.   0.   0.   0.31 0.44 0.31 0.31 0.44 0.5  0.44 0.44 0.38 0.44
  0.19 0.56]
 [0.   0.   0.   0.   0.   0.19 0.44 0.5  0.5  0.56 0.5  0.31 0.5  0.56
  0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.38 0.56 0.44 0.5  0.44 0.38 0.5  0.5
  0.38 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.5  0.38 0.25 0.25 0.44
  0.38 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.44 0.31 0.38 0.31 0.31
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.   0.31 0.38 0.38
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.5  0.31 0.25
  0.56 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.38
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  17 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  0  0  2  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  1  1  0  0  0 12  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.1 1.1 1.2 1.1 1.1 1.  1.  1.  1. ]
 [0.  0.  1.2 0.7 0.7 0.7 1.  1.3 1.2 1.5]
 [0.  0.  0.  1.1 1.3 0.8 0.9 0.9 1.1 0.9]
 [0.  0.  0.  0.  1.2 0.9 1.3 1.3 0.9 1.5]
 [0.  0.  0.  0.  0.  0.9 1.3 1.1 1.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.25 0.31 0.38 0.38 0.25 0.25 0.31 0.56 0.31 0.31 0.44 0.38
  0.19 0.5 ]
 [0.   0.   0.31 0.44 0.44 0.25 0.31 0.44 0.44 0.38 0.44 0.38 0.44 0.38
  0.44 0.5 ]
 [0.   0.   0.   0.38 0.31 0.38 0.19 0.31 0.38 0.56 0.38 0.06 0.44 0.44
  0.38 0.44]
 [0.   0.   0.   0.   0.31 0.44 0.31 0.31 0.44 0.5  0.44 0.44 0.38 0.44
  0.19 0.56]
 [0.   0.   0.   0.   0.   0.19 0.44 0.5  0.5  0.56 0.5  0.31 0.5  0.56
  0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.38 0.56 0.44 0.5  0.44 0.38 0.5  0.5
  0.38 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.5  0.38 0.25 0.25 0.44
  0.38 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.44 0.31 0.38 0.31 0.31
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.   0.31 0.38 0.38
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.5  0.31 0.25
  0.56 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.38
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  0.  1.  0.  0.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  1.  1.  0.  0.  0. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  0  0  2  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  1  0 12  1  0  1  0  2]
 [ 2  0  1  0  0 16  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  4  1  1  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.1 1.1 1.2 1.2 1.2 1.  1.1 1.  1. ]
 [0.  0.  1.2 0.7 0.8 0.8 1.  1.4 1.2 1.5]
 [0.  0.  0.  1.1 1.4 0.9 0.9 1.  1.1 0.9]
 [0.  0.  0.  0.  1.3 1.  1.3 1.4 0.9 1.5]
 [0.  0.  0.  0.  0.  0.9 1.4 1.2 1.4 1. ]
 [0.  0.  0.  0.  0.  0.  1.  0.9 1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.24 0.29 0.35 0.35 0.24 0.24 0.29 0.53 0.29 0.29 0.41 0.35
  0.18 0.47 0.35]
 [0.   0.   0.29 0.41 0.41 0.24 0.29 0.41 0.41 0.35 0.41 0.35 0.41 0.35
  0.41 0.47 0.35]
 [0.   0.   0.   0.35 0.29 0.35 0.18 0.29 0.35 0.53 0.35 0.06 0.41 0.41
  0.35 0.41 0.18]
 [0.   0.   0.   0.   0.29 0.41 0.29 0.29 0.41 0.47 0.41 0.41 0.35 0.41
  0.18 0.53 0.47]
 [0.   0.   0.   0.   0.   0.18 0.41 0.47 0.47 0.53 0.47 0.29 0.47 0.53
  0.24 0.47 0.41]
 [0.   0.   0.   0.   0.   0.   0.35 0.53 0.41 0.47 0.41 0.35 0.47 0.47
  0.35 0.53 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.47 0.35 0.24 0.24 0.41
  0.35 0.53 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.41 0.29 0.35 0.29 0.29
  0.24 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.   0.29 0.35 0.35
  0.47 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.47 0.29 0.24
  0.53 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.35
  0.47 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35
  0.41 0.35 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.47 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.41 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0. -1.  1.  0. -1. -1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1. -1.  1.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  19 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  0  0  2  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  4  1  1  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.2 1.2 1.3 1.2 1.3 1.1 1.1 1.1 1.1]
 [0.  0.  1.2 0.7 0.9 0.9 1.  1.5 1.2 1.6]
 [0.  0.  0.  1.1 1.5 1.  0.9 1.1 1.1 1. ]
 [0.  0.  0.  0.  1.4 1.1 1.3 1.5 0.9 1.6]
 [0.  0.  0.  0.  0.  1.  1.5 1.2 1.5 1.1]
 [0.  0.  0.  0.  0.  0.  1.1 1.  1.5 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.39 0.22 0.28 0.33 0.33 0.22 0.22 0.28 0.5  0.28 0.28 0.39 0.33
  0.17 0.44 0.33 0.5 ]
 [0.   0.   0.28 0.39 0.39 0.22 0.28 0.39 0.39 0.33 0.39 0.33 0.39 0.33
  0.39 0.44 0.33 0.33]
 [0.   0.   0.   0.33 0.28 0.33 0.17 0.28 0.33 0.5  0.33 0.06 0.39 0.39
  0.33 0.39 0.17 0.39]
 [0.   0.   0.   0.   0.28 0.39 0.28 0.28 0.39 0.44 0.39 0.39 0.33 0.39
  0.17 0.5  0.44 0.44]
 [0.   0.   0.   0.   0.   0.17 0.39 0.44 0.44 0.5  0.44 0.28 0.44 0.5
  0.22 0.44 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.5  0.39 0.44 0.39 0.33 0.44 0.44
  0.33 0.5  0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.44 0.33 0.22 0.22 0.39
  0.33 0.5  0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.39 0.28 0.33 0.28 0.28
  0.22 0.33 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.   0.28 0.33 0.33
  0.44 0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.44 0.28 0.22
  0.5  0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33 0.33
  0.44 0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33
  0.39 0.33 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.44 0.44 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.39 0.33 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.44 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  1.  1.  0. -1.  1.  0.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
18 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  0  0  0  0  0  2  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  4  1  1  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  5  0  9  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.3 1.3 1.4 1.2 1.4 1.2 1.1 1.2 1.2]
 [0.  0.  1.2 0.7 1.  1.  1.  1.6 1.2 1.7]
 [0.  0.  0.  1.1 1.6 1.1 0.9 1.2 1.1 1.1]
 [0.  0.  0.  0.  1.5 1.2 1.3 1.6 0.9 1.7]
 [0.  0.  0.  0.  0.  1.1 1.6 1.2 1.6 1.2]
 [0.  0.  0.  0.  0.  0.  1.2 1.1 1.6 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.37 0.21 0.26 0.32 0.32 0.21 0.21 0.26 0.47 0.26 0.26 0.37 0.32
  0.16 0.42 0.32 0.47 0.47]
 [0.   0.   0.26 0.37 0.37 0.21 0.26 0.37 0.37 0.32 0.37 0.32 0.37 0.32
  0.37 0.42 0.32 0.32 0.32]
 [0.   0.   0.   0.32 0.26 0.32 0.16 0.26 0.32 0.47 0.32 0.05 0.37 0.37
  0.32 0.37 0.16 0.37 0.37]
 [0.   0.   0.   0.   0.26 0.37 0.26 0.26 0.37 0.42 0.37 0.37 0.32 0.37
  0.16 0.47 0.42 0.42 0.42]
 [0.   0.   0.   0.   0.   0.16 0.37 0.42 0.42 0.47 0.42 0.26 0.42 0.47
  0.21 0.42 0.37 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.32 0.47 0.37 0.42 0.37 0.32 0.42 0.42
  0.32 0.47 0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.42 0.32 0.21 0.21 0.37
  0.32 0.47 0.21 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.37 0.26 0.32 0.26 0.26
  0.21 0.32 0.37 0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.   0.26 0.32 0.32
  0.42 0.32 0.32 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.42 0.26 0.21
  0.47 0.32 0.32 0.16 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.32
  0.42 0.32 0.32 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32
  0.37 0.32 0.11 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.42 0.42 0.32 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.37 0.32 0.21 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.42 0.42 0.53 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.37 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  0.  0.  1. -1.  1.  1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.  1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.  1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
18 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
19 classifiers pre label
Counter({1.0: 112, 0.0: 53, -1.0: 23})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  4  1  1  0  0  0 11  0  0]
 [ 2  0  2  1  0  4  5  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.4 1.4 1.5 1.3 1.4 1.3 1.2 1.3 1.3]
 [0.  0.  1.2 0.7 1.  1.1 1.  1.6 1.3 1.8]
 [0.  0.  0.  1.1 1.6 1.2 0.9 1.2 1.2 1.2]
 [0.  0.  0.  0.  1.5 1.3 1.3 1.6 1.  1.8]
 [0.  0.  0.  0.  0.  1.2 1.6 1.2 1.7 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.7 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.2  0.25 0.3  0.3  0.2  0.2  0.25 0.45 0.25 0.25 0.35 0.3
  0.15 0.4  0.3  0.45 0.45 0.4 ]
 [0.   0.   0.25 0.35 0.35 0.2  0.25 0.35 0.35 0.3  0.35 0.3  0.35 0.3
  0.35 0.4  0.3  0.3  0.3  0.3 ]
 [0.   0.   0.   0.3  0.25 0.3  0.15 0.25 0.3  0.45 0.3  0.05 0.35 0.35
  0.3  0.35 0.15 0.35 0.35 0.4 ]
 [0.   0.   0.   0.   0.25 0.35 0.25 0.25 0.35 0.4  0.35 0.35 0.3  0.35
  0.15 0.45 0.4  0.4  0.4  0.35]
 [0.   0.   0.   0.   0.   0.15 0.35 0.4  0.4  0.45 0.4  0.25 0.4  0.45
  0.2  0.4  0.35 0.4  0.4  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.3  0.45 0.35 0.4  0.35 0.3  0.4  0.4
  0.3  0.45 0.3  0.3  0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.4  0.3  0.2  0.2  0.35
  0.3  0.45 0.2  0.3  0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.35 0.25 0.3  0.25 0.25
  0.2  0.3  0.35 0.4  0.4  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.   0.25 0.3  0.3
  0.4  0.3  0.3  0.2  0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.4  0.25 0.2
  0.45 0.3  0.3  0.15 0.15 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.3
  0.4  0.3  0.3  0.2  0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3
  0.35 0.3  0.1  0.3  0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.4  0.4  0.3  0.2  0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.3  0.2  0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.4  0.4  0.5  0.5  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35 0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.2  0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  22 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.  0. -1.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.  1.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.  1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.  1.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.  1.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.  0. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.  1. -1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.  1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1. -1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
18 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
19 classifiers pre label
Counter({1.0: 112, 0.0: 53, -1.0: 23})
20 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  0  2 11  0  0]
 [ 2  0  2  1  0  4  5  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.5 1.5 1.6 1.4 1.4 1.3 1.2 1.3 1.4]
 [0.  0.  1.3 0.8 1.  1.2 1.1 1.7 1.4 1.8]
 [0.  0.  0.  1.1 1.7 1.3 1.  1.3 1.3 1.3]
 [0.  0.  0.  0.  1.6 1.4 1.4 1.7 1.1 1.9]
 [0.  0.  0.  0.  0.  1.3 1.7 1.3 1.8 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.7 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.19 0.24 0.29 0.29 0.19 0.19 0.24 0.43 0.24 0.24 0.33 0.29
  0.14 0.38 0.29 0.43 0.43 0.38 0.19]
 [0.   0.   0.24 0.33 0.33 0.19 0.24 0.33 0.33 0.29 0.33 0.29 0.33 0.29
  0.33 0.38 0.29 0.29 0.29 0.29 0.33]
 [0.   0.   0.   0.29 0.24 0.29 0.14 0.24 0.29 0.43 0.29 0.05 0.33 0.33
  0.29 0.33 0.14 0.33 0.33 0.38 0.29]
 [0.   0.   0.   0.   0.24 0.33 0.24 0.24 0.33 0.38 0.33 0.33 0.29 0.33
  0.14 0.43 0.38 0.38 0.38 0.33 0.38]
 [0.   0.   0.   0.   0.   0.14 0.33 0.38 0.38 0.43 0.38 0.24 0.38 0.43
  0.19 0.38 0.33 0.38 0.38 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.29 0.43 0.33 0.38 0.33 0.29 0.38 0.38
  0.29 0.43 0.29 0.29 0.29 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.38 0.29 0.19 0.19 0.33
  0.29 0.43 0.19 0.29 0.29 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.33 0.24 0.29 0.24 0.24
  0.19 0.29 0.33 0.38 0.38 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.   0.24 0.29 0.29
  0.38 0.29 0.29 0.19 0.19 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.38 0.24 0.19
  0.43 0.29 0.29 0.14 0.14 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.29
  0.38 0.29 0.29 0.19 0.19 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29
  0.33 0.29 0.1  0.29 0.29 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.38 0.38 0.29 0.19 0.19 0.24 0.48]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.29 0.19 0.24 0.24 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38 0.38 0.48 0.48 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.33 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.19 0.19 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  23 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.  0. -1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.  1.  0.  0.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.  1.  1. -1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.  1.  1.  0.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.  1.  0. -1.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.  0. -1. -1.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.  1. -1. -1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.  1. -1.  1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
18 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
19 classifiers pre label
Counter({1.0: 112, 0.0: 53, -1.0: 23})
20 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
21 classifiers pre label
Counter({-1.0: 99, 0.0: 59, 1.0: 30})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 4  3  0  1  0  0  1 11  0  0]
 [ 4  0  2  1  0  4  3  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.5 1.6 1.6 1.5 1.5 1.4 1.3 1.4 1.5]
 [0.  0.  1.4 0.8 1.1 1.3 1.2 1.8 1.5 1.9]
 [0.  0.  0.  1.2 1.7 1.3 1.  1.4 1.4 1.3]
 [0.  0.  0.  0.  1.7 1.5 1.5 1.8 1.2 2. ]
 [0.  0.  0.  0.  0.  1.3 1.7 1.4 1.9 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.3 1.8 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.18 0.23 0.27 0.27 0.18 0.18 0.23 0.41 0.23 0.23 0.32 0.27
  0.14 0.36 0.27 0.41 0.41 0.36 0.18 0.27]
 [0.   0.   0.23 0.32 0.32 0.18 0.23 0.32 0.32 0.27 0.32 0.27 0.32 0.27
  0.32 0.36 0.27 0.27 0.27 0.27 0.32 0.27]
 [0.   0.   0.   0.27 0.23 0.27 0.14 0.23 0.27 0.41 0.27 0.05 0.32 0.32
  0.27 0.32 0.14 0.32 0.32 0.36 0.27 0.32]
 [0.   0.   0.   0.   0.23 0.32 0.23 0.23 0.32 0.36 0.32 0.32 0.27 0.32
  0.14 0.41 0.36 0.36 0.36 0.32 0.36 0.27]
 [0.   0.   0.   0.   0.   0.14 0.32 0.36 0.36 0.41 0.36 0.23 0.36 0.41
  0.18 0.36 0.32 0.36 0.36 0.18 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.27 0.41 0.32 0.36 0.32 0.27 0.36 0.36
  0.27 0.41 0.27 0.27 0.27 0.23 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.36 0.27 0.18 0.18 0.32
  0.27 0.41 0.18 0.27 0.27 0.36 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.32 0.23 0.27 0.23 0.23
  0.18 0.27 0.32 0.36 0.36 0.36 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.   0.23 0.27 0.27
  0.36 0.27 0.27 0.18 0.18 0.32 0.18 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.36 0.23 0.18
  0.41 0.27 0.27 0.14 0.14 0.23 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.27
  0.36 0.27 0.27 0.18 0.18 0.32 0.18 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27
  0.32 0.27 0.09 0.27 0.27 0.32 0.23 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.36 0.36 0.27 0.18 0.18 0.23 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.32 0.27 0.18 0.23 0.23 0.23 0.27 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.36 0.36 0.45 0.45 0.27 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.32 0.32 0.32 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.18 0.18 0.23 0.27 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 0.  1.  1.  1.  1.  0.  1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  24 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.  0. -1.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.  1.  0.  0.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.  1.  1. -1. -1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.  1.  1.  0.  0.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.  1.  0. -1.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.  0. -1. -1.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.  1. -1. -1.  0.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.  1. -1.  1. -1.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1. -1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
18 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
19 classifiers pre label
Counter({1.0: 112, 0.0: 53, -1.0: 23})
20 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
21 classifiers pre label
Counter({-1.0: 99, 0.0: 59, 1.0: 30})
22 classifiers pre label
Counter({0.0: 85, 1.0: 55, -1.0: 48})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 4  3  0  1  0  0  1 11  0  0]
 [ 4  0  2  1  0  4  3  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.6 1.7 1.6 1.5 1.5 1.4 1.4 1.5 1.6]
 [0.  0.  1.5 0.9 1.2 1.4 1.3 1.9 1.5 2. ]
 [0.  0.  0.  1.3 1.8 1.4 1.1 1.4 1.5 1.3]
 [0.  0.  0.  0.  1.7 1.5 1.5 1.9 1.3 2.1]
 [0.  0.  0.  0.  0.  1.3 1.7 1.5 2.  1.4]
 [0.  0.  0.  0.  0.  0.  1.3 1.4 1.9 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.5 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.7 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.17 0.22 0.26 0.26 0.17 0.17 0.22 0.39 0.22 0.22 0.3  0.26
  0.13 0.35 0.26 0.39 0.39 0.35 0.17 0.26 0.22]
 [0.   0.   0.22 0.3  0.3  0.17 0.22 0.3  0.3  0.26 0.3  0.26 0.3  0.26
  0.3  0.35 0.26 0.26 0.26 0.26 0.3  0.26 0.3 ]
 [0.   0.   0.   0.26 0.22 0.26 0.13 0.22 0.26 0.39 0.26 0.04 0.3  0.3
  0.26 0.3  0.13 0.3  0.3  0.35 0.26 0.3  0.17]
 [0.   0.   0.   0.   0.22 0.3  0.22 0.22 0.3  0.35 0.3  0.3  0.26 0.3
  0.13 0.39 0.35 0.35 0.35 0.3  0.35 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.13 0.3  0.35 0.35 0.39 0.35 0.22 0.35 0.39
  0.17 0.35 0.3  0.35 0.35 0.17 0.3  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.26 0.39 0.3  0.35 0.3  0.26 0.35 0.35
  0.26 0.39 0.26 0.26 0.26 0.22 0.26 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.35 0.26 0.17 0.17 0.3
  0.26 0.39 0.17 0.26 0.26 0.35 0.35 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.3  0.22 0.26 0.22 0.22
  0.17 0.26 0.3  0.35 0.35 0.35 0.26 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.   0.22 0.26 0.26
  0.35 0.26 0.26 0.17 0.17 0.3  0.17 0.13 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.22 0.17
  0.39 0.26 0.26 0.13 0.13 0.22 0.26 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26 0.26
  0.35 0.26 0.26 0.17 0.17 0.3  0.17 0.13 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26
  0.3  0.26 0.09 0.26 0.26 0.3  0.22 0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.35 0.35 0.26 0.17 0.17 0.22 0.43 0.17 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.26 0.17 0.22 0.22 0.22 0.26 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.35 0.43 0.43 0.26 0.26 0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.3  0.3  0.3  0.3  0.26 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17 0.17 0.22 0.26 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.26 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.26 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.3  0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  0.  0.  0.  0. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1. -1.  1.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  25 ================
current matrix is 
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.  0. -1.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.  1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.  1.  1. -1. -1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.  1.  1.  0.  0.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.  1.  0. -1.  0.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.  0. -1. -1.  0.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.  1. -1. -1.  0.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.  1. -1.  1. -1.  0.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1. -1.  0. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({1.0: 94, 0.0: 82, -1.0: 12})
2 classifiers pre label
Counter({0.0: 94, 1.0: 78, -1.0: 16})
3 classifiers pre label
Counter({0.0: 161, 1.0: 24, -1.0: 3})
4 classifiers pre label
Counter({0.0: 84, 1.0: 64, -1.0: 40})
5 classifiers pre label
Counter({1.0: 93, 0.0: 64, -1.0: 31})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 100, -1.0: 74, 1.0: 14})
8 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
9 classifiers pre label
Counter({1.0: 77, -1.0: 69, 0.0: 42})
10 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
11 classifiers pre label
Counter({1.0: 91, 0.0: 82, -1.0: 15})
12 classifiers pre label
Counter({0.0: 82, 1.0: 54, -1.0: 52})
13 classifiers pre label
Counter({0.0: 102, 1.0: 46, -1.0: 40})
14 classifiers pre label
Counter({0.0: 100, -1.0: 45, 1.0: 43})
15 classifiers pre label
Counter({-1.0: 124, 1.0: 35, 0.0: 29})
16 classifiers pre label
Counter({1.0: 123, 0.0: 51, -1.0: 14})
17 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
18 classifiers pre label
Counter({1.0: 96, 0.0: 53, -1.0: 39})
19 classifiers pre label
Counter({1.0: 112, 0.0: 53, -1.0: 23})
20 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
21 classifiers pre label
Counter({-1.0: 99, 0.0: 59, 1.0: 30})
22 classifiers pre label
Counter({0.0: 85, 1.0: 55, -1.0: 48})
23 classifiers pre label
Counter({1.0: 91, 0.0: 87, -1.0: 10})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 1  0  4  8  0  1  0  2  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 4  3  0  1  0  0  1 11  0  0]
 [ 2  0  2  1  0  4  5  0  8  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.7 1.8 1.7 1.5 1.5 1.5 1.4 1.6 1.7]
 [0.  0.  1.5 0.9 1.3 1.5 1.3 2.  1.5 2.1]
 [0.  0.  0.  1.3 1.9 1.5 1.1 1.5 1.5 1.4]
 [0.  0.  0.  0.  1.8 1.6 1.5 2.  1.3 2.2]
 [0.  0.  0.  0.  0.  1.3 1.8 1.5 2.1 1.5]
 [0.  0.  0.  0.  0.  0.  1.4 1.4 2.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.5 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.8 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.17 0.21 0.25 0.25 0.17 0.17 0.21 0.38 0.21 0.21 0.29 0.25
  0.12 0.33 0.25 0.38 0.38 0.33 0.17 0.25 0.21 0.33]
 [0.   0.   0.21 0.29 0.29 0.17 0.21 0.29 0.29 0.25 0.29 0.25 0.29 0.25
  0.29 0.33 0.25 0.25 0.25 0.25 0.29 0.25 0.29 0.25]
 [0.   0.   0.   0.25 0.21 0.25 0.12 0.21 0.25 0.38 0.25 0.04 0.29 0.29
  0.25 0.29 0.12 0.29 0.29 0.33 0.25 0.29 0.17 0.25]
 [0.   0.   0.   0.   0.21 0.29 0.21 0.21 0.29 0.33 0.29 0.29 0.25 0.29
  0.12 0.38 0.33 0.33 0.33 0.29 0.33 0.25 0.29 0.29]
 [0.   0.   0.   0.   0.   0.12 0.29 0.33 0.33 0.38 0.33 0.21 0.33 0.38
  0.17 0.33 0.29 0.33 0.33 0.17 0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.25 0.38 0.29 0.33 0.29 0.25 0.33 0.33
  0.25 0.38 0.25 0.25 0.25 0.21 0.25 0.29 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.33 0.25 0.17 0.17 0.29
  0.25 0.38 0.17 0.25 0.25 0.33 0.33 0.25 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.21 0.25 0.21 0.21
  0.17 0.25 0.29 0.33 0.33 0.33 0.25 0.17 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.   0.21 0.25 0.25
  0.33 0.25 0.25 0.17 0.17 0.29 0.17 0.12 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.21 0.17
  0.38 0.25 0.25 0.12 0.12 0.21 0.25 0.29 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25 0.25
  0.33 0.25 0.25 0.17 0.17 0.29 0.17 0.12 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25
  0.29 0.25 0.08 0.25 0.25 0.29 0.21 0.33 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.33 0.33 0.25 0.17 0.17 0.21 0.42 0.17 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.25 0.17 0.21 0.21 0.21 0.25 0.38 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.33 0.42 0.42 0.25 0.25 0.25 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29 0.29 0.29 0.29 0.25 0.29 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17 0.17 0.21 0.25 0.38 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.25 0.25 0.21 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.25 0.25 0.21 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29 0.29 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})

**********      classifier acc  **************
[0.761, 0.72, 0.723, 0.467, 0.636, 0.68, 0.73, 0.615, 0.68, 0.808, 0.68, 0.718, 0.678, 0.617, 0.673, 0.834, 0.781, 0.821, 0.821, 0.735, 0.871, 0.752, 0.66, 0.728]
before cutting matrix
[[-1.  1.  1.  0.  0.  0.  1. -1.  0. -1.  0.  1.  0. -1. -1.  1.  1.  0.
   0.  0. -1.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  1.  0. -1.  1.  1.
   1.  1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  0. -1.  1. -1.  1. -1.  0.  0.  0.  1.  1.
   1.  1.  1. -1. -1.  1.]
 [ 0.  0.  0.  0. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.
   1.  1.  1.  0.  0.  1.]
 [ 0.  0.  0.  1.  1.  0.  0. -1.  0. -1.  0.  0. -1.  0.  1. -1.  0.  0.
   0.  1.  0. -1.  0.  0.]
 [ 0.  1.  0.  0.  0.  1.  0.  0. -1. -1. -1.  0.  0.  0.  0. -1.  0. -1.
  -1.  0. -1. -1.  0.  0.]
 [-1.  1.  0. -1.  0.  1.  1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  1.  1.
   1.  1. -1. -1.  0.  1.]
 [-1.  1. -1.  0.  1.  1.  0. -1. -1.  0. -1. -1.  0. -1.  1. -1. -1.  0.
   0.  1. -1.  1. -1.  0.]
 [-1.  0.  1.  0. -1. -1.  1.  1.  1.  0.  1.  1.  1.  0. -1. -1.  1.  1.
   1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.
  -1. -1.  0. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 270, -1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 270, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 213, -1.0: 62})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 213, -1.0: 62})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 235, -1.0: 117})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 235, -1.0: 117})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 272, -1.0: 117})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 272, -1.0: 117})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 275, 1.0: 52})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 275, 1.0: 52})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 272, 1.0: 117})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 272, 1.0: 117})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 272, 1.0: 117})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 278, -1.0: 62})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 278, -1.0: 62})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({-1.0: 173, 1.0: 157})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 173, 1.0: 157})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 170, -1.0: 166})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({1.0: 352, -1.0: 105})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 273, 1.0: 114})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({-1.0: 172, 1.0: 111})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 172, 1.0: 111})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
Counter({1.0: 279, -1.0: 53})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
positive and negative ratio
Counter({1.0: 279, -1.0: 53})
after cutting matrix
[[-1.  0.  1. -1. -1. -1.  1.  1.  0.  0.  0. -1.  0.]
 [ 0.  0.  0.  1.  1.  0. -1.  1.  1.  1.  1.  0.  0.]
 [-1.  0. -1.  1.  0.  0.  0.  1.  1.  1.  1.  1. -1.]
 [ 0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.]
 [ 0.  1.  0. -1.  0.  1. -1.  0.  0.  0.  1.  0. -1.]
 [ 0.  0.  0. -1.  0.  0. -1.  0. -1. -1.  0. -1. -1.]
 [-1. -1.  1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1.]
 [-1.  0.  0.  0. -1.  1. -1. -1.  0.  0.  1. -1.  1.]
 [-1.  0.  1.  0.  0. -1. -1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 116, -1.0: 46})
Counter({1.0: 202, -1.0: 57})
Counter({1.0: 227, -1.0: 221})
Counter({1.0: 170, -1.0: 166})
Counter({1.0: 178, -1.0: 149})
Counter({-1.0: 343, 1.0: 116})
Counter({1.0: 383, -1.0: 62})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 279, -1.0: 107})
Counter({1.0: 352, -1.0: 105})
Counter({-1.0: 265, 1.0: 122})
Counter({-1.0: 273, 1.0: 114})
cutting matrix's confusion matrix
[[11  0  0  3  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 1  1 17  2  0  0  0  0  1  0]
 [ 1  0  1 11  2  1  0  0  0  0]
 [ 0  0  0  0 12  2  0  1  0  2]
 [ 2  0  0  0  0 17  1  0  0  0]
 [ 0  0  0  0  0  2  9  0  4  0]
 [ 2  3  0  2  0  0  0 11  2  0]
 [ 2  0  1  1  0  4  4  0 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整


SVM classifier
Time: 2019-01-09 22:22:08
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  0  4  0  0]
 [ 5  0  9  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  0  4  0  0]
 [ 5  0  9  0  0]
 [ 2  0  7  0  0]
 [ 0  0  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.4]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 0  0  0  0  5]
 [ 0  0  0  0  3]]
row HD
[[0.  0.6 0.6 0.6 0.4]
 [0.  0.  0.4 0.  0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.5 0.5]
 [0.  0.  0.  0.5]
 [0.  0.  0.  0.5]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 0  0  0  0  5]
 [ 0  0  0  0  3]]
row HD
[[0.  0.6 0.8 0.6 0.4]
 [0.  0.  0.6 0.  0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 0  0  0  0  5]
 [ 0  0  0  0  3]]
row HD
[[0.  0.6 1.  0.6 0.4]
 [0.  0.  0.8 0.  0.2]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 0  0  0  0  5]
 [ 0  0  0  0  3]]
row HD
[[0.  0.6 1.2 0.6 0.4]
 [0.  0.  1.  0.  0.2]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.29 0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  0  0  0  4]
 [ 5  0  0  0  9]
 [ 2  0  0  0  7]
 [ 0  0  0  0  5]
 [ 0  0  0  0  3]]
row HD
[[0.  0.8 1.2 0.8 0.6]
 [0.  0.  1.2 0.  0.2]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.25 0.25 0.25 0.25 0.25 0.12]
 [0.   0.   0.   0.25 0.25 0.25 0.25 0.12]
 [0.   0.   0.   0.25 0.25 0.25 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  1.  1.2 1.  0.8]
 [0.  0.  1.4 0.  0.2]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.22 0.22 0.22 0.22 0.22 0.11 0.11]
 [0.   0.   0.   0.22 0.22 0.22 0.22 0.11 0.11]
 [0.   0.   0.   0.22 0.22 0.22 0.22 0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  1.2 1.2 1.2 1. ]
 [0.  0.  1.6 0.  0.2]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  1.4 1.2 1.4 1.2]
 [0.  0.  1.8 0.  0.2]
 [0.  0.  0.  1.8 1.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.18 0.18 0.18 0.18 0.18 0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.18 0.18 0.18 0.18 0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.18 0.18 0.18 0.18 0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.09 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[ 1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
11 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  1.4 1.4 1.4 1.2]
 [0.  0.  2.  0.  0.2]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.17 0.17 0.17 0.17 0.17 0.08 0.08 0.08 0.08 0.25]
 [0.   0.   0.   0.17 0.17 0.17 0.17 0.08 0.08 0.08 0.08 0.25]
 [0.   0.   0.   0.17 0.17 0.17 0.17 0.08 0.08 0.08 0.08 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  1.6 1.6 1.6 1.4]
 [0.  0.  2.  0.  0.2]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.15 0.15 0.15 0.15 0.15 0.08 0.08 0.08 0.08 0.23 0.23]
 [0.   0.   0.   0.15 0.15 0.15 0.15 0.08 0.08 0.08 0.08 0.23 0.38]
 [0.   0.   0.   0.15 0.15 0.15 0.15 0.08 0.08 0.08 0.08 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 3  0  0  0  6]
 [ 2  0  0  0  3]
 [ 2  0  0  0  1]]
row HD
[[0.  1.6 1.8 1.6 1.4]
 [0.  0.  2.2 0.  0.2]
 [0.  0.  0.  2.2 2. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.14 0.14 0.14 0.14 0.14 0.07 0.07 0.07 0.07 0.21 0.21 0.14]
 [0.   0.   0.   0.14 0.14 0.14 0.14 0.07 0.07 0.07 0.07 0.21 0.36 0.14]
 [0.   0.   0.   0.14 0.14 0.14 0.14 0.07 0.07 0.07 0.07 0.21 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.36 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.36 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.36 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.36 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: None}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  1.6 2.  1.6 1.6]
 [0.  0.  2.4 0.  0.4]
 [0.  0.  0.  2.4 2. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.13 0.13 0.13 0.13 0.13 0.07 0.07 0.07 0.07 0.2  0.2  0.13
  0.07]
 [0.   0.   0.   0.13 0.13 0.13 0.13 0.07 0.07 0.07 0.07 0.2  0.33 0.13
  0.2 ]
 [0.   0.   0.   0.13 0.13 0.13 0.13 0.07 0.07 0.07 0.07 0.2  0.33 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.33 0.2  0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.33 0.2  0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.33 0.2  0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.33 0.2  0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  1.6 2.2 1.6 1.6]
 [0.  0.  2.6 0.  0.4]
 [0.  0.  0.  2.6 2.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.12 0.12 0.12 0.12 0.12 0.06 0.06 0.06 0.06 0.19 0.19 0.12
  0.06 0.12]
 [0.   0.   0.   0.12 0.12 0.12 0.12 0.06 0.06 0.06 0.06 0.19 0.31 0.12
  0.19 0.12]
 [0.   0.   0.   0.12 0.12 0.12 0.12 0.06 0.06 0.06 0.06 0.19 0.31 0.12
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.31 0.19 0.
  0.06 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.31 0.19 0.
  0.06 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.31 0.19 0.
  0.06 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.31 0.19 0.
  0.06 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.06
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.06
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.06
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.06
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  0.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 28, -1.0: 28})
2 classifiers pre label
Counter({1.0: 28, -1.0: 28})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 56})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
9 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
10 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({1.0: 28, -1.0: 28})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 56})
16 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  4  0  2  0]
 [ 2  2  0  1  0]
 [ 2  1  0  0  0]]
row HD
[[0.  1.6 2.4 1.8 1.8]
 [0.  0.  2.8 0.2 0.6]
 [0.  0.  0.  2.8 2.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.12 0.12 0.12 0.12 0.12 0.06 0.06 0.06 0.06 0.18 0.18 0.12
  0.06 0.12 0.12]
 [0.   0.   0.   0.12 0.12 0.12 0.12 0.06 0.06 0.06 0.06 0.18 0.29 0.12
  0.18 0.12 0.24]
 [0.   0.   0.   0.12 0.12 0.12 0.12 0.06 0.06 0.06 0.06 0.18 0.29 0.12
  0.18 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.29 0.18 0.
  0.06 0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.29 0.18 0.
  0.06 0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.29 0.18 0.
  0.06 0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.29 0.18 0.
  0.06 0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.06
  0.12 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.06
  0.12 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.06
  0.12 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.06
  0.12 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29
  0.24 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.12 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})

**********      classifier acc  **************
[0.661, 0.804, 0.804, 0.839, 0.839, 0.839, 0.839, 0.625, 0.625, 0.625, 0.625, 0.839, 0.804, 0.839, 0.786, 0.839, 0.765]
before cutting matrix
[[-1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  0.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 105, 1.0: 61})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
positive and negative ratio
Counter({1.0: 116, -1.0: 26})
after cutting matrix
[[-1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 148, -1.0: 18})
Counter({-1.0: 148, 1.0: 18})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 148, -1.0: 18})
Counter({1.0: 116, -1.0: 26})
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  5  0  2  0]
 [ 0  4  0  1  0]
 [ 0  3  0  0  0]]


SVM classifier
Time: 2019-01-09 22:22:11
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({0.0: 51, -1.0: 5})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  4  0  0]
 [ 4  0  1  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  0.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  2  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.  0.2 0.4 0.4]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  1.]
 [ 0.  0. -1.]
 [-1.  0.  0.]
 [-1. -1.  0.]
 [ 1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  2  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.6 0.6]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  1. -1.]
 [ 0.  0. -1. -1.]
 [-1.  0.  0.  1.]
 [-1. -1.  0. -1.]
 [ 1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.6 0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
2
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  0.  1. -1.]
 [ 0.  0. -1. -1.]
 [-1.  0.  0.  1.]
 [-1. -1.  0. -1.]
 [ 1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.6 0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
2
new_column
None


============== iter  6 ================
current matrix is 
[[ 0.  0.  1. -1.]
 [ 0.  0. -1. -1.]
 [-1.  0.  0.  1.]
 [-1. -1.  0. -1.]
 [ 1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.6 0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.25 0.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0.  0. -1.  1.]
select_j_column
[ 0.  0.  0. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  1. -1.  0.]
 [ 0.  0. -1. -1.  0.]
 [-1.  0.  0.  1.  0.]
 [-1. -1.  0. -1.  1.]
 [ 1.  1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.8 1. ]
 [0.  0.  0.6 0.8 1. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 1.  0.6 0.6]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  0.  0.  1.]
select_j_column
[ 0.  0.  0.  1. -1.]
most_cplx_inx
1
new_column
None


============== iter  8 ================
current matrix is 
[[ 0.  0.  1. -1.  0.]
 [ 0.  0. -1. -1.  0.]
 [-1.  0.  0.  1.  0.]
 [-1. -1.  0. -1.  1.]
 [ 1.  1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.8 1. ]
 [0.  0.  0.6 0.8 1. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 1.  0.6 0.6]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.]
 [ 0.  0. -1. -1.  0.  1.]
 [-1.  0.  0.  1.  0.  1.]
 [-1. -1.  0. -1.  1.  1.]
 [ 1.  1.  0.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  2  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.8 1.  1.2]
 [0.  0.  0.6 0.8 1. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.83 0.5  0.5  0.67]
 [0.   0.   0.67 0.5  0.33 0.67]
 [0.   0.   0.   0.67 0.67 0.83]
 [0.   0.   0.   0.   0.83 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0.  0. -1.  1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.]
 [ 0.  0. -1. -1.  0.  1.  0.]
 [-1.  0.  0.  1.  0.  1.  0.]
 [-1. -1.  0. -1.  1.  1. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
confusion matrix
[[22  3  0  0  0]
 [13  1  0  0  0]
 [ 3  3  0  3  0]
 [ 3  1  0  1  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.6 1.  1.2 1.2]
 [0.  0.  0.6 1.  1.2]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.71 0.43 0.43 0.57 0.29]
 [0.   0.   0.57 0.43 0.29 0.57 0.14]
 [0.   0.   0.   0.57 0.57 0.71 0.43]
 [0.   0.   0.   0.   0.71 0.29 0.43]
 [0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0.  0.  1. -1.]
select_j_column
[ 0.  0.  0.  1. -1.]
most_cplx_inx
2
new_column
None


============== iter  11 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.]
 [ 0.  0. -1. -1.  0.  1.  0.]
 [-1.  0.  0.  1.  0.  1.  0.]
 [-1. -1.  0. -1.  1.  1. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
confusion matrix
[[22  3  0  0  0]
 [13  1  0  0  0]
 [ 3  3  0  3  0]
 [ 3  1  0  1  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.6 1.  1.2 1.2]
 [0.  0.  0.6 1.  1.2]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.71 0.43 0.43 0.57 0.29]
 [0.   0.   0.57 0.43 0.29 0.57 0.14]
 [0.   0.   0.   0.57 0.57 0.71 0.43]
 [0.   0.   0.   0.   0.71 0.29 0.43]
 [0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 0.  0.  0.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.]
 [ 0.  0. -1. -1.  0.  1.  0. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.]
 [-1. -1.  0. -1.  1.  1. -1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  0  5  0]
 [ 4  0  0  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 1.  1.2 1.2]
 [0.  0.  0.8 1.2 1.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.62 0.38 0.38 0.5  0.25 0.5 ]
 [0.   0.   0.5  0.38 0.25 0.5  0.12 0.5 ]
 [0.   0.   0.   0.5  0.5  0.62 0.38 0.38]
 [0.   0.   0.   0.   0.62 0.25 0.38 0.25]
 [0.   0.   0.   0.   0.   0.5  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  4  1  0]
 [ 4  0  0  1  0]
 [ 2  0  1  0  0]]
row HD
[[0.  1.  1.  1.4 1.2]
 [0.  0.  1.  1.2 1.6]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.56 0.33 0.33 0.44 0.22 0.44 0.33]
 [0.   0.   0.44 0.33 0.22 0.44 0.11 0.44 0.33]
 [0.   0.   0.   0.44 0.44 0.56 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.56 0.22 0.33 0.22 0.11]
 [0.   0.   0.   0.   0.   0.44 0.33 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.44 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.2 1.2 1.6 1.4]
 [0.  0.  1.2 1.2 1.6]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.1 0.5 0.3 0.3 0.4 0.2 0.4 0.3 0.3]
 [0.  0.  0.4 0.3 0.2 0.4 0.1 0.4 0.3 0.3]
 [0.  0.  0.  0.4 0.4 0.5 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.4 1.2 1.6 1.4]
 [0.  0.  1.4 1.4 1.8]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.09 0.45 0.27 0.27 0.36 0.18 0.36 0.27 0.27 0.36]
 [0.   0.   0.36 0.27 0.18 0.36 0.09 0.36 0.27 0.27 0.36]
 [0.   0.   0.   0.36 0.36 0.45 0.27 0.27 0.27 0.36 0.27]
 [0.   0.   0.   0.   0.45 0.18 0.27 0.18 0.09 0.18 0.18]
 [0.   0.   0.   0.   0.   0.36 0.27 0.36 0.45 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.36 0.18 0.27 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.27 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1.  1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 6  0  1  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.6 1.4 1.8 1.6]
 [0.  0.  1.4 1.6 2. ]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.08 0.42 0.25 0.25 0.33 0.17 0.33 0.25 0.25 0.33 0.17]
 [0.   0.   0.33 0.25 0.17 0.33 0.08 0.33 0.25 0.25 0.33 0.25]
 [0.   0.   0.   0.33 0.33 0.42 0.25 0.25 0.25 0.33 0.25 0.33]
 [0.   0.   0.   0.   0.42 0.17 0.25 0.17 0.08 0.17 0.17 0.25]
 [0.   0.   0.   0.   0.   0.33 0.25 0.33 0.42 0.25 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.33 0.17 0.25 0.33 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.33 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.08 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.  0.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
12 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 6  0  1  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.6 1.6 1.8 1.8]
 [0.  0.  1.6 1.6 2.2]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.08 0.38 0.23 0.23 0.31 0.15 0.31 0.23 0.23 0.31 0.15 0.23]
 [0.   0.   0.31 0.23 0.15 0.31 0.08 0.31 0.23 0.23 0.31 0.23 0.15]
 [0.   0.   0.   0.31 0.31 0.38 0.23 0.23 0.23 0.31 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.38 0.15 0.23 0.15 0.08 0.15 0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.31 0.23 0.31 0.38 0.23 0.31 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.31 0.15 0.23 0.31 0.15 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.15 0.31 0.23 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.   0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.08 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  1.  1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1. -1.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
12 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.6 1.8 2.  1.8]
 [0.  0.  1.8 1.8 2.2]
 [0.  0.  0.  1.8 1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.07 0.36 0.21 0.21 0.29 0.14 0.29 0.21 0.21 0.29 0.14 0.21 0.36]
 [0.   0.   0.29 0.21 0.14 0.29 0.07 0.29 0.21 0.21 0.29 0.21 0.14 0.36]
 [0.   0.   0.   0.29 0.29 0.36 0.21 0.21 0.21 0.29 0.21 0.29 0.21 0.21]
 [0.   0.   0.   0.   0.36 0.14 0.21 0.14 0.07 0.14 0.14 0.21 0.07 0.14]
 [0.   0.   0.   0.   0.   0.29 0.21 0.29 0.36 0.21 0.29 0.21 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.14 0.21 0.29 0.14 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.14 0.29 0.21 0.29 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.   0.14 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.07 0.21 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0.  0. -1.  1.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1. -1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1. -1. -1.  0.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1. -1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
12 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
14 classifiers pre label
Counter({0.0: 51, -1.0: 5})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.6 2.  2.2 2. ]
 [0.  0.  2.  2.  2.4]
 [0.  0.  0.  1.8 1.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.07 0.33 0.2  0.2  0.27 0.13 0.27 0.2  0.2  0.27 0.13 0.2  0.33
  0.  ]
 [0.   0.   0.27 0.2  0.13 0.27 0.07 0.27 0.2  0.2  0.27 0.2  0.13 0.33
  0.07]
 [0.   0.   0.   0.27 0.27 0.33 0.2  0.2  0.2  0.27 0.2  0.27 0.2  0.2
  0.33]
 [0.   0.   0.   0.   0.33 0.13 0.2  0.13 0.07 0.13 0.13 0.2  0.07 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.27 0.2  0.27 0.33 0.2  0.27 0.2  0.27 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.27 0.13 0.2  0.27 0.13 0.2  0.2  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.13 0.27 0.2  0.27 0.13 0.33
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.   0.13 0.2  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.07 0.2  0.13 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.2  0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  0. -1.  1.]
select_j_column
[ 0. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  20 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1. -1.  0. -1.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1. -1. -1.  0.  1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1. -1. -1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0. -1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
12 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
14 classifiers pre label
Counter({0.0: 51, -1.0: 5})
15 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 6  0  0  3  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  1.8 2.  2.4 2. ]
 [0.  0.  2.2 2.2 2.6]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.06 0.31 0.19 0.19 0.25 0.12 0.25 0.19 0.19 0.25 0.12 0.19 0.31
  0.   0.25]
 [0.   0.   0.25 0.19 0.12 0.25 0.06 0.25 0.19 0.19 0.25 0.19 0.12 0.31
  0.06 0.31]
 [0.   0.   0.   0.25 0.25 0.31 0.19 0.19 0.19 0.25 0.19 0.25 0.19 0.19
  0.31 0.25]
 [0.   0.   0.   0.   0.31 0.12 0.19 0.12 0.06 0.12 0.12 0.19 0.06 0.12
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.25 0.19 0.25 0.31 0.19 0.25 0.19 0.25 0.25
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.12 0.19 0.25 0.12 0.19 0.19 0.19
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.12 0.25 0.19 0.25 0.12 0.31
  0.12 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.   0.12 0.19 0.19
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06 0.19 0.12 0.19
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19 0.12
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.19
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1. -1.  0. -1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1. -1. -1.  0.  1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1. -1. -1. -1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0. -1.  0.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({0.0: 51, -1.0: 5})
1 classifiers pre label
Counter({0.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 51, 0.0: 5})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({0.0: 43, -1.0: 13})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
12 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
13 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
14 classifiers pre label
Counter({0.0: 51, -1.0: 5})
15 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
16 classifiers pre label
Counter({0.0: 43, -1.0: 10, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  2.  2.2 2.6 2.2]
 [0.  0.  2.2 2.4 2.8]
 [0.  0.  0.  2.2 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.06 0.29 0.18 0.18 0.24 0.12 0.24 0.18 0.18 0.24 0.12 0.18 0.29
  0.   0.24 0.12]
 [0.   0.   0.24 0.18 0.12 0.24 0.06 0.24 0.18 0.18 0.24 0.18 0.12 0.29
  0.06 0.29 0.18]
 [0.   0.   0.   0.24 0.24 0.29 0.18 0.18 0.18 0.24 0.18 0.24 0.18 0.18
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.29 0.12 0.18 0.12 0.06 0.12 0.12 0.18 0.06 0.12
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.24 0.18 0.24 0.29 0.18 0.24 0.18 0.24 0.24
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.24 0.12 0.18 0.24 0.12 0.18 0.18 0.18
  0.24 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.12 0.24 0.18 0.24 0.12 0.29
  0.12 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.   0.12 0.18 0.18
  0.24 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06 0.18 0.12 0.18
  0.18 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.18 0.12
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.18
  0.24 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24
  0.12 0.24 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})

**********      classifier acc  **************
[0.294, 0.125, 0.641, 0.786, 0.125, 0.804, 0.727, 0.75, 0.661, 0.161, 0.75, 0.194, 0.936, 0.824, 0.294, 0.686, 0.194]
before cutting matrix
[[ 0.  0.  1. -1.  0. -1.  1.  1.  1.  0.  1.  0. -1. -1.  0. -1.  0.]
 [ 0.  0. -1. -1.  0.  1.  0. -1. -1. -1. -1. -1. -1. -1.  0.  1. -1.]
 [-1.  0.  0.  1.  0.  1.  0.  1.  1.  1.  1. -1.  0.  1. -1. -1. -1.]
 [-1. -1.  0. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.  0. -1.  0.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({1.0: 87, -1.0: 29})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({1.0: 87, -1.0: 29})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({1.0: 95, -1.0: 24})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 113, -1.0: 53})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({1.0: 113, -1.0: 53})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 61, 1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 61, 1.0: 18})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 113, 1.0: 29})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 47, 1.0: 32})
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
positive and negative ratio
Counter({-1.0: 47, 1.0: 32})
after cutting matrix
[[ 0.  0. -1.  0. -1.  1.  1.  0. -1. -1.  0.  0.]
 [ 0.  0. -1.  0.  1. -1. -1. -1. -1. -1.  0. -1.]
 [-1.  0.  1.  0.  1.  1.  1. -1.  0.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  0. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 24, 1.0: 8})
Counter({-1.0: 140, 1.0: 26})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 47, 1.0: 32})
Counter({-1.0: 140, 1.0: 8})
Counter({-1.0: 124, 1.0: 18})
Counter({-1.0: 42, 1.0: 8})
Counter({-1.0: 47, 1.0: 32})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  2  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-09 22:22:15
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
pre label
Counter({1.0: 49, -1.0: 18})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [11  0  0  0  0  0]
 [ 7  1  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({1.0: 38, -1.0: 29})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  2  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.17 0.   0.33]
 [0.   0.   0.17 0.17 0.33 0.  ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({1.0: 38, -1.0: 29})
2 classifiers pre label
Counter({1.0: 39, -1.0: 28})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  7  0  0  1  0]]
row HD
[[0.   0.5  0.17 0.33 0.17 0.5 ]
 [0.   0.   0.33 0.17 0.33 0.  ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({1.0: 38, -1.0: 29})
2 classifiers pre label
Counter({1.0: 39, -1.0: 28})
3 classifiers pre label
Counter({-1.0: 38, 1.0: 29})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  7  0  0  1  0]]
row HD
[[0.   0.67 0.33 0.5  0.17 0.67]
 [0.   0.   0.33 0.17 0.5  0.  ]
 [0.   0.   0.   0.17 0.5  0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.  1.  0.5]
 [0.  0.  0.5 1.5]
 [0.  0.  0.  1. ]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[-1.  1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [-1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({1.0: 38, -1.0: 29})
2 classifiers pre label
Counter({1.0: 39, -1.0: 28})
3 classifiers pre label
Counter({-1.0: 38, 1.0: 29})
4 classifiers pre label
Counter({1.0: 39, -1.0: 28})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  7  0  0  1  0]]
row HD
[[0.   0.83 0.33 0.67 0.33 0.83]
 [0.   0.   0.5  0.17 0.5  0.  ]
 [0.   0.   0.   0.33 0.67 0.5 ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.8 0.4 0.8]
 [0.  0.  0.4 1.2 0.4]
 [0.  0.  0.  0.8 0. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  1. -1.  1.]
 [-1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({1.0: 38, -1.0: 29})
2 classifiers pre label
Counter({1.0: 39, -1.0: 28})
3 classifiers pre label
Counter({-1.0: 38, 1.0: 29})
4 classifiers pre label
Counter({1.0: 39, -1.0: 28})
5 classifiers pre label
Counter({1.0: 61, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  1  0  0  1  6]]
row HD
[[0.   0.83 0.33 0.67 0.33 1.  ]
 [0.   0.   0.5  0.17 0.5  0.17]
 [0.   0.   0.   0.33 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.67 0.33 0.67 0.17]
 [0.   0.   0.33 1.   0.33 0.5 ]
 [0.   0.   0.   0.67 0.   0.5 ]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})

**********      classifier acc  **************
[0.94, 0.985, 1.0, 0.985, 1.0, 0.97]
before cutting matrix
[[ 1. -1. -1.  1. -1.  1.]
 [-1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})
positive and negative ratio
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
positive and negative ratio
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})
positive and negative ratio
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
positive and negative ratio
Counter({1.0: 192, -1.0: 9})
after cutting matrix
[[-1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 111, -1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({-1.0: 111, 1.0: 90})
Counter({-1.0: 108, 1.0: 93})
Counter({1.0: 192, -1.0: 9})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  1  0  0  1  6]]


SVM classifier
Time: 2019-01-09 22:22:16
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0. -1. -1.  0. -1.]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
pre label
Counter({0.0: 25, -1.0: 25, 1.0: 17})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  1  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  6  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  1.  0. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 0.  0.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 105, -1.0: 28})
*======label=======*
true label
Counter({'1': 17, '2': 12, '3': 11, '5': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({0.0: 25, -1.0: 25, 1.0: 17})
1 classifiers pre label
Counter({1.0: 38, 0.0: 22, -1.0: 7})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  0  1]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.17]
 [0.   0.   0.33 0.33 0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 105, -1.0: 28})

**********      classifier acc  **************
[0.932, 0.978]
before cutting matrix
[[ 1.  1.]
 [ 0.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 0.  0.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 105, -1.0: 28})
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 105, -1.0: 28})
positive and negative ratio
Counter({1.0: 105, -1.0: 28})
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
after cutting matrix
[[ 1.  1.]
 [ 0.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 0.  0.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 80, 1.0: 65})
Counter({1.0: 105, -1.0: 28})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  0  0  1]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-09 22:22:17
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({-1.0: 149, 1.0: 39})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [24  2  0  0  0  0  0  0  0  0]
 [12  5  0  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3 14  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[13  1  4  0  0  0  0  0  0  0]
 [ 4 17  1  0  0  0  0  0  0  0]
 [ 3  2 21  0  0  0  0  0  0  0]
 [10  5  2  0  0  0  0  0  0  0]
 [ 2  0 21  0  0  0  0  0  0  0]
 [ 1  0 18  0  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 1 14  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]
 [ 3  0 10  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.1 0.2 0.1 0.1 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.1 0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[13  1  0  0  4  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 17  2  4  0  0  0  0  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 18  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.1 0.2 0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.2 0.2 0.1 0.1 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.2 0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1.  1.  1.  1.]
 [-1.  1. -1.  1.]
 [-1. -1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
confusion matrix
[[13  1  0  0  1  3  0  0  0  0]
 [ 0 17  0  4  0  1  0  0  0  0]
 [ 1  2 17  2  4  0  0  0  0  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 15  3  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0 14  0  1  0  2  0  0  0  0]
 [ 2  0  0  0 11  1  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0.3 0.2 0.3 0.4 0.3 0.4]
 [0.  0.  0.2 0.2 0.1 0.2 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.25 1.25]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
confusion matrix
[[13  1  0  0  4  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 17  2  4  0  0  0  0  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 18  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.3 0.3 0.3 0.4 0.4 0.3 0.4]
 [0.  0.  0.2 0.3 0.1 0.3 0.2 0.  0.1 0. ]
 [0.  0.  0.  0.3 0.1 0.3 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.  1.  0.8]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.4 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1.]
 [-1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  0  0  0  2  0]
 [ 0  0  0  1 13  0  0  0  5  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  2  0  0  0 10  0]
 [ 0  0  0  3  9  0  0  0  1  0]]
row HD
[[0.  0.5 0.2 0.4 0.4 0.4 0.4 0.4 0.3 0.4]
 [0.  0.  0.3 0.3 0.1 0.3 0.3 0.1 0.2 0.1]
 [0.  0.  0.  0.4 0.2 0.4 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.83 0.83 0.67 0.83]
 [0.   0.   0.33 0.33 0.5  0.67]
 [0.   0.   0.   0.33 0.83 1.  ]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.5 0.2 0.4 0.4 0.5 0.4 0.4 0.4 0.5]
 [0.  0.  0.3 0.3 0.1 0.4 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.4 0.2 0.5 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.2 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.3 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.71 0.71 0.57 0.71 0.57]
 [0.   0.   0.29 0.29 0.43 0.57 0.71]
 [0.   0.   0.   0.29 0.71 0.86 0.71]
 [0.   0.   0.   0.   0.43 0.57 1.  ]
 [0.   0.   0.   0.   0.   0.43 0.86]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 2  0  0  2  0  0  0  0 19  0]
 [ 3  0  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0 11  0]
 [ 1  0  0  3  0  0  0  0  9  0]]
row HD
[[0.  0.6 0.3 0.4 0.5 0.5 0.5 0.5 0.4 0.5]
 [0.  0.  0.3 0.4 0.1 0.5 0.3 0.1 0.4 0.3]
 [0.  0.  0.  0.5 0.2 0.6 0.2 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.2 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.62 0.62 0.5  0.62 0.5  0.75]
 [0.   0.   0.25 0.25 0.38 0.5  0.62 0.88]
 [0.   0.   0.   0.25 0.62 0.75 0.62 0.62]
 [0.   0.   0.   0.   0.38 0.5  0.88 0.88]
 [0.   0.   0.   0.   0.   0.38 0.75 0.75]
 [0.   0.   0.   0.   0.   0.   0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
confusion matrix
[[13  0  0  0  0  0  0  1  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 17  2  0  0  0  2  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  0  1  0  0  0 14  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  0.7 0.3 0.4 0.6 0.5 0.5 0.6 0.5 0.6]
 [0.  0.  0.4 0.5 0.1 0.6 0.4 0.1 0.4 0.3]
 [0.  0.  0.  0.5 0.3 0.6 0.2 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.56 0.56 0.44 0.56 0.44 0.67 0.22]
 [0.   0.   0.22 0.22 0.33 0.44 0.56 0.78 0.33]
 [0.   0.   0.   0.22 0.56 0.67 0.56 0.56 0.33]
 [0.   0.   0.   0.   0.33 0.44 0.78 0.78 0.33]
 [0.   0.   0.   0.   0.   0.33 0.67 0.67 0.22]
 [0.   0.   0.   0.   0.   0.   0.56 0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[13  0  0  0  0  0  0  1  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 17  2  0  0  0  2  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  0  1  0  0  0 14  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  0.8 0.4 0.4 0.7 0.6 0.6 0.7 0.6 0.7]
 [0.  0.  0.4 0.6 0.1 0.6 0.4 0.1 0.4 0.3]
 [0.  0.  0.  0.6 0.3 0.6 0.2 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.5 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.5 0.5 0.4 0.5 0.4 0.6 0.2 0.5]
 [0.  0.  0.2 0.2 0.3 0.4 0.5 0.7 0.3 0. ]
 [0.  0.  0.  0.2 0.5 0.6 0.5 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.4 0.7 0.7 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.6 0.6 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  0  0  0  0  0  1  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 17  2  0  0  0  2  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  0  1  0  0  0 14  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  0.9 0.4 0.4 0.7 0.7 0.6 0.7 0.6 0.7]
 [0.  0.  0.5 0.7 0.2 0.6 0.5 0.2 0.5 0.4]
 [0.  0.  0.  0.6 0.3 0.7 0.2 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.6 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.45 0.45 0.36 0.45 0.36 0.55 0.18 0.45 0.64]
 [0.   0.   0.18 0.18 0.27 0.36 0.45 0.64 0.27 0.   0.36]
 [0.   0.   0.   0.18 0.45 0.55 0.45 0.45 0.27 0.18 0.36]
 [0.   0.   0.   0.   0.27 0.36 0.64 0.64 0.27 0.18 0.18]
 [0.   0.   0.   0.   0.   0.27 0.55 0.55 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.45 0.45 0.45 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.36 0.45 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.55 0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  0  0  0  0  0  1  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 17  2  0  0  0  2  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  0  1  0  0  0 14  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  0.9 0.4 0.4 0.8 0.7 0.6 0.7 0.6 0.7]
 [0.  0.  0.5 0.7 0.3 0.6 0.5 0.2 0.5 0.4]
 [0.  0.  0.  0.6 0.4 0.7 0.2 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.6 0.5 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.7 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.42 0.42 0.33 0.42 0.33 0.5  0.17 0.42 0.58 0.5 ]
 [0.   0.   0.17 0.17 0.25 0.33 0.42 0.58 0.25 0.   0.33 0.25]
 [0.   0.   0.   0.17 0.42 0.5  0.42 0.42 0.25 0.17 0.33 0.25]
 [0.   0.   0.   0.   0.25 0.33 0.58 0.58 0.25 0.17 0.17 0.25]
 [0.   0.   0.   0.   0.   0.25 0.5  0.5  0.17 0.25 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.42 0.42 0.42 0.33 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.42 0.58 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.58 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.  0.4 0.4 0.9 0.8 0.6 0.8 0.7 0.8]
 [0.  0.  0.6 0.8 0.3 0.6 0.6 0.2 0.5 0.4]
 [0.  0.  0.  0.6 0.5 0.8 0.2 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.7 0.6 0.4 0.8 0.7 0.8]
 [0.  0.  0.  0.  0.  0.7 0.5 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.8 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.38 0.31 0.38 0.31 0.46 0.15 0.38 0.54 0.46 0.23]
 [0.   0.   0.15 0.15 0.23 0.31 0.38 0.54 0.23 0.   0.31 0.23 0.15]
 [0.   0.   0.   0.15 0.38 0.46 0.38 0.38 0.23 0.15 0.31 0.23 0.15]
 [0.   0.   0.   0.   0.23 0.31 0.54 0.54 0.23 0.15 0.15 0.23 0.31]
 [0.   0.   0.   0.   0.   0.23 0.46 0.46 0.15 0.23 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.38 0.38 0.38 0.31 0.15 0.23 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.38 0.54 0.46 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.54 0.38 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.38 0.46 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.  0.4 0.4 1.  0.8 0.6 0.9 0.8 0.9]
 [0.  0.  0.6 0.8 0.4 0.6 0.6 0.3 0.6 0.5]
 [0.  0.  0.  0.6 0.6 0.8 0.2 0.5 0.6 0.7]
 [0.  0.  0.  0.  0.8 0.6 0.4 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.8 0.6 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.36 0.36 0.29 0.36 0.29 0.43 0.14 0.36 0.5  0.43 0.21 0.21]
 [0.   0.   0.14 0.14 0.21 0.29 0.36 0.5  0.21 0.   0.29 0.21 0.14 0.29]
 [0.   0.   0.   0.14 0.36 0.43 0.36 0.36 0.21 0.14 0.29 0.21 0.14 0.29]
 [0.   0.   0.   0.   0.21 0.29 0.5  0.5  0.21 0.14 0.14 0.21 0.29 0.29]
 [0.   0.   0.   0.   0.   0.21 0.43 0.43 0.14 0.21 0.21 0.29 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.36 0.36 0.36 0.29 0.14 0.21 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.36 0.5  0.43 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.5  0.36 0.29 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36 0.43 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.  0.5 0.4 1.  0.8 0.7 0.9 0.8 0.9]
 [0.  0.  0.7 0.8 0.4 0.6 0.7 0.3 0.6 0.5]
 [0.  0.  0.  0.7 0.7 0.9 0.2 0.6 0.7 0.8]
 [0.  0.  0.  0.  0.8 0.6 0.5 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.8 0.7 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.33 0.27 0.33 0.27 0.4  0.13 0.33 0.47 0.4  0.2  0.2
  0.33]
 [0.   0.   0.13 0.13 0.2  0.27 0.33 0.47 0.2  0.   0.27 0.2  0.13 0.27
  0.27]
 [0.   0.   0.   0.13 0.33 0.4  0.33 0.33 0.2  0.13 0.27 0.2  0.13 0.27
  0.13]
 [0.   0.   0.   0.   0.2  0.27 0.47 0.47 0.2  0.13 0.13 0.2  0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.2  0.4  0.4  0.13 0.2  0.2  0.27 0.2  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.33 0.27 0.13 0.2  0.4  0.27
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.33 0.47 0.4  0.2  0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.47 0.33 0.27 0.33 0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.33 0.4  0.07 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.4  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.47
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.1 0.6 0.4 1.  0.8 0.8 0.9 0.8 0.9]
 [0.  0.  0.7 0.9 0.5 0.7 0.7 0.4 0.7 0.6]
 [0.  0.  0.  0.8 0.8 1.  0.2 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.6 0.6 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.8 0.8 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.31 0.31 0.25 0.31 0.25 0.38 0.12 0.31 0.44 0.38 0.19 0.19
  0.31 0.38]
 [0.   0.   0.12 0.12 0.19 0.25 0.31 0.44 0.19 0.   0.25 0.19 0.12 0.25
  0.25 0.31]
 [0.   0.   0.   0.12 0.31 0.38 0.31 0.31 0.19 0.12 0.25 0.19 0.12 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.19 0.25 0.44 0.44 0.19 0.12 0.12 0.19 0.25 0.25
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.19 0.38 0.38 0.12 0.19 0.19 0.25 0.19 0.19
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.31 0.31 0.31 0.25 0.12 0.19 0.38 0.25
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.31 0.44 0.38 0.19 0.19
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.44 0.31 0.25 0.31 0.31
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.31 0.38 0.06 0.06
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.12 0.25
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.38 0.25
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.44
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.2 0.6 0.4 1.  0.8 0.8 0.9 0.8 0.9]
 [0.  0.  0.8 1.  0.6 0.8 0.8 0.5 0.8 0.7]
 [0.  0.  0.  0.8 0.8 1.  0.2 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.6 0.6 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.8 0.8 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.29 0.29 0.24 0.29 0.24 0.35 0.12 0.29 0.41 0.35 0.18 0.18
  0.29 0.35 0.47]
 [0.   0.   0.12 0.12 0.18 0.24 0.29 0.41 0.18 0.   0.24 0.18 0.12 0.24
  0.24 0.29 0.18]
 [0.   0.   0.   0.12 0.29 0.35 0.29 0.29 0.18 0.12 0.24 0.18 0.12 0.24
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.18 0.24 0.41 0.41 0.18 0.12 0.12 0.18 0.24 0.24
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.18 0.35 0.35 0.12 0.18 0.18 0.24 0.18 0.18
  0.18 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.29 0.29 0.29 0.24 0.12 0.18 0.35 0.24
  0.35 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.29 0.41 0.35 0.18 0.18
  0.29 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.41 0.29 0.24 0.29 0.29
  0.18 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.29 0.35 0.06 0.06
  0.18 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.12 0.24
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.35 0.24
  0.24 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.41
  0.18 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.12 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.3 0.7 0.5 1.1 0.9 0.9 0.9 0.9 1. ]
 [0.  0.  0.8 1.  0.6 0.8 0.8 0.6 0.8 0.7]
 [0.  0.  0.  0.8 0.8 1.  0.2 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.6 0.6 1.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.8 0.8 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 1.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.28 0.28 0.28 0.22 0.28 0.22 0.33 0.11 0.28 0.39 0.33 0.17 0.17
  0.28 0.33 0.44 0.39]
 [0.   0.   0.11 0.11 0.17 0.22 0.28 0.39 0.17 0.   0.22 0.17 0.11 0.22
  0.22 0.28 0.17 0.11]
 [0.   0.   0.   0.11 0.28 0.33 0.28 0.28 0.17 0.11 0.22 0.17 0.11 0.22
  0.11 0.17 0.17 0.11]
 [0.   0.   0.   0.   0.17 0.22 0.39 0.39 0.17 0.11 0.11 0.17 0.22 0.22
  0.22 0.28 0.17 0.11]
 [0.   0.   0.   0.   0.   0.17 0.33 0.33 0.11 0.17 0.17 0.22 0.17 0.17
  0.17 0.22 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.28 0.28 0.28 0.22 0.11 0.17 0.33 0.22
  0.33 0.28 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.22 0.28 0.39 0.33 0.17 0.17
  0.28 0.22 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.39 0.28 0.22 0.28 0.28
  0.17 0.11 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.28 0.33 0.06 0.06
  0.17 0.22 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.17 0.11 0.22
  0.22 0.28 0.17 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.22
  0.22 0.17 0.06 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.39
  0.17 0.22 0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11
  0.11 0.17 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.17 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
18 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.3 0.7 0.5 1.1 0.9 1.  0.9 0.9 1. ]
 [0.  0.  0.8 1.  0.6 0.8 0.9 0.6 0.8 0.7]
 [0.  0.  0.  0.8 0.8 1.  0.3 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.6 0.7 1.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.8 0.9 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.9 1.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.26 0.26 0.21 0.26 0.21 0.32 0.11 0.26 0.37 0.32 0.16 0.16
  0.26 0.32 0.42 0.37 0.32]
 [0.   0.   0.11 0.11 0.16 0.21 0.26 0.37 0.16 0.   0.21 0.16 0.11 0.21
  0.21 0.26 0.16 0.11 0.16]
 [0.   0.   0.   0.11 0.26 0.32 0.26 0.26 0.16 0.11 0.21 0.16 0.11 0.21
  0.11 0.16 0.16 0.11 0.16]
 [0.   0.   0.   0.   0.16 0.21 0.37 0.37 0.16 0.11 0.11 0.16 0.21 0.21
  0.21 0.26 0.16 0.11 0.16]
 [0.   0.   0.   0.   0.   0.16 0.32 0.32 0.11 0.16 0.16 0.21 0.16 0.16
  0.16 0.21 0.21 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.26 0.26 0.26 0.21 0.11 0.16 0.32 0.21
  0.32 0.26 0.16 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.21 0.26 0.37 0.32 0.16 0.16
  0.26 0.21 0.32 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.37 0.26 0.21 0.26 0.26
  0.16 0.11 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.26 0.32 0.05 0.05
  0.16 0.21 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.16 0.11 0.21
  0.21 0.26 0.16 0.11 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.32 0.21
  0.21 0.16 0.05 0.21 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.37
  0.16 0.21 0.11 0.16 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11
  0.11 0.16 0.26 0.21 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.21 0.16 0.26 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.16 0.21 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.16 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  20 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.  0.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  0.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
18 classifiers pre label
Counter({1.0: 188})
19 classifiers pre label
Counter({1.0: 129, 0.0: 59})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.4 0.7 0.5 1.2 1.  1.  0.9 1.  1. ]
 [0.  0.  0.9 1.1 0.7 0.9 1.  0.7 0.9 0.8]
 [0.  0.  0.  0.8 0.9 1.1 0.3 0.8 0.9 0.9]
 [0.  0.  0.  0.  0.9 0.7 0.7 1.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.8 1.  0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  1.  1.1 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.25 0.25 0.2  0.25 0.2  0.3  0.1  0.25 0.35 0.3  0.15 0.15
  0.25 0.3  0.4  0.35 0.3  0.4 ]
 [0.   0.   0.1  0.1  0.15 0.2  0.25 0.35 0.15 0.   0.2  0.15 0.1  0.2
  0.2  0.25 0.15 0.1  0.15 0.3 ]
 [0.   0.   0.   0.1  0.25 0.3  0.25 0.25 0.15 0.1  0.2  0.15 0.1  0.2
  0.1  0.15 0.15 0.1  0.15 0.3 ]
 [0.   0.   0.   0.   0.15 0.2  0.35 0.35 0.15 0.1  0.1  0.15 0.2  0.2
  0.2  0.25 0.15 0.1  0.15 0.25]
 [0.   0.   0.   0.   0.   0.15 0.3  0.3  0.1  0.15 0.15 0.2  0.15 0.15
  0.15 0.2  0.2  0.25 0.1  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.2  0.1  0.15 0.3  0.2
  0.3  0.25 0.15 0.3  0.25 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.1  0.2  0.25 0.35 0.3  0.15 0.15
  0.25 0.2  0.3  0.25 0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.25 0.2  0.25 0.25
  0.15 0.1  0.2  0.25 0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.25 0.3  0.05 0.05
  0.15 0.2  0.3  0.25 0.2  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.15 0.1  0.2
  0.2  0.25 0.15 0.1  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.3  0.2
  0.2  0.15 0.05 0.2  0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.35
  0.15 0.2  0.1  0.15 0.1  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1
  0.1  0.15 0.25 0.2  0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2  0.15 0.25 0.3  0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.15 0.2  0.05 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.25 0.1  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.15 0.1  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  0.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
18 classifiers pre label
Counter({1.0: 188})
19 classifiers pre label
Counter({1.0: 129, 0.0: 59})
20 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.5 0.7 0.5 1.2 1.  1.  0.9 1.  1. ]
 [0.  0.  1.  1.2 0.8 1.  1.1 0.8 1.  0.9]
 [0.  0.  0.  0.8 0.9 1.1 0.3 0.8 0.9 0.9]
 [0.  0.  0.  0.  0.9 0.7 0.7 1.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.8 1.  0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  1.  1.1 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.24 0.24 0.19 0.24 0.19 0.29 0.1  0.24 0.33 0.29 0.14 0.14
  0.24 0.29 0.38 0.33 0.29 0.38 0.38]
 [0.   0.   0.1  0.1  0.14 0.19 0.24 0.33 0.14 0.   0.19 0.14 0.1  0.19
  0.19 0.24 0.14 0.1  0.14 0.29 0.14]
 [0.   0.   0.   0.1  0.24 0.29 0.24 0.24 0.14 0.1  0.19 0.14 0.1  0.19
  0.1  0.14 0.14 0.1  0.14 0.29 0.14]
 [0.   0.   0.   0.   0.14 0.19 0.33 0.33 0.14 0.1  0.1  0.14 0.19 0.19
  0.19 0.24 0.14 0.1  0.14 0.24 0.14]
 [0.   0.   0.   0.   0.   0.14 0.29 0.29 0.1  0.14 0.14 0.19 0.14 0.14
  0.14 0.19 0.19 0.24 0.1  0.29 0.19]
 [0.   0.   0.   0.   0.   0.   0.24 0.24 0.24 0.19 0.1  0.14 0.29 0.19
  0.29 0.24 0.14 0.29 0.24 0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.1  0.19 0.24 0.33 0.29 0.14 0.14
  0.24 0.19 0.29 0.24 0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.24 0.19 0.24 0.24
  0.14 0.1  0.19 0.24 0.19 0.29 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.24 0.29 0.05 0.05
  0.14 0.19 0.29 0.24 0.19 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.14 0.1  0.19
  0.19 0.24 0.14 0.1  0.14 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.19
  0.19 0.14 0.05 0.19 0.14 0.14 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.33
  0.14 0.19 0.1  0.14 0.1  0.19 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1
  0.1  0.14 0.24 0.19 0.14 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.14 0.24 0.29 0.24 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.14 0.19 0.05 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.24 0.1  0.24 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.1  0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.24 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.  1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  0.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
18 classifiers pre label
Counter({1.0: 188})
19 classifiers pre label
Counter({1.0: 129, 0.0: 59})
20 classifiers pre label
Counter({1.0: 188})
21 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.5 0.7 0.5 1.2 1.  1.1 0.9 1.  1. ]
 [0.  0.  1.  1.2 0.8 1.  1.2 0.8 1.  0.9]
 [0.  0.  0.  0.8 0.9 1.1 0.4 0.8 0.9 0.9]
 [0.  0.  0.  0.  0.9 0.7 0.8 1.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.8 1.1 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  1.1 1.1 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.23 0.23 0.18 0.23 0.18 0.27 0.09 0.23 0.32 0.27 0.14 0.14
  0.23 0.27 0.36 0.32 0.27 0.36 0.36 0.27]
 [0.   0.   0.09 0.09 0.14 0.18 0.23 0.32 0.14 0.   0.18 0.14 0.09 0.18
  0.18 0.23 0.14 0.09 0.14 0.27 0.14 0.14]
 [0.   0.   0.   0.09 0.23 0.27 0.23 0.23 0.14 0.09 0.18 0.14 0.09 0.18
  0.09 0.14 0.14 0.09 0.14 0.27 0.14 0.14]
 [0.   0.   0.   0.   0.14 0.18 0.32 0.32 0.14 0.09 0.09 0.14 0.18 0.18
  0.18 0.23 0.14 0.09 0.14 0.23 0.14 0.14]
 [0.   0.   0.   0.   0.   0.14 0.27 0.27 0.09 0.14 0.14 0.18 0.14 0.14
  0.14 0.18 0.18 0.23 0.09 0.27 0.18 0.09]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.23 0.18 0.09 0.14 0.27 0.18
  0.27 0.23 0.14 0.27 0.23 0.18 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.18 0.23 0.32 0.27 0.14 0.14
  0.23 0.18 0.27 0.23 0.27 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.32 0.23 0.18 0.23 0.23
  0.14 0.09 0.18 0.23 0.18 0.27 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.23 0.27 0.05 0.05
  0.14 0.18 0.27 0.23 0.18 0.36 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.14 0.09 0.18
  0.18 0.23 0.14 0.09 0.14 0.27 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.27 0.18
  0.18 0.14 0.05 0.18 0.14 0.14 0.05 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.32
  0.14 0.18 0.09 0.14 0.09 0.18 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09
  0.09 0.14 0.23 0.18 0.14 0.36 0.23 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.14 0.23 0.27 0.23 0.32 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.14 0.18 0.05 0.27 0.14 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.09 0.23 0.09 0.23 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.09 0.14 0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.27 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.23 0.09 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]]


============== iter  23 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1. -1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.  1.  1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  0.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  0.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.  0.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
18 classifiers pre label
Counter({1.0: 188})
19 classifiers pre label
Counter({1.0: 129, 0.0: 59})
20 classifiers pre label
Counter({1.0: 188})
21 classifiers pre label
Counter({1.0: 188})
22 classifiers pre label
Counter({0.0: 111, 1.0: 41, -1.0: 36})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.6 0.7 0.6 1.3 1.1 1.2 1.  1.1 1.1]
 [0.  0.  1.1 1.3 0.9 1.  1.3 0.9 1.1 1. ]
 [0.  0.  0.  0.9 1.  1.2 0.5 0.9 1.  1. ]
 [0.  0.  0.  0.  0.9 0.8 0.8 1.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.9 1.1 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  1.2 1.2 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.22 0.22 0.17 0.22 0.17 0.26 0.09 0.22 0.3  0.26 0.13 0.13
  0.22 0.26 0.35 0.3  0.26 0.35 0.35 0.26 0.39]
 [0.   0.   0.09 0.09 0.13 0.17 0.22 0.3  0.13 0.   0.17 0.13 0.09 0.17
  0.17 0.22 0.13 0.09 0.13 0.26 0.13 0.13 0.39]
 [0.   0.   0.   0.09 0.22 0.26 0.22 0.22 0.13 0.09 0.17 0.13 0.09 0.17
  0.09 0.13 0.13 0.09 0.13 0.26 0.13 0.13 0.43]
 [0.   0.   0.   0.   0.13 0.17 0.3  0.3  0.13 0.09 0.09 0.13 0.17 0.17
  0.17 0.22 0.13 0.09 0.13 0.22 0.13 0.13 0.35]
 [0.   0.   0.   0.   0.   0.13 0.26 0.26 0.09 0.13 0.13 0.17 0.13 0.13
  0.13 0.17 0.17 0.22 0.09 0.26 0.17 0.09 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.22 0.22 0.22 0.17 0.09 0.13 0.26 0.17
  0.26 0.22 0.13 0.26 0.22 0.17 0.13 0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.17 0.22 0.3  0.26 0.13 0.13
  0.22 0.17 0.26 0.22 0.26 0.35 0.26 0.26 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.3  0.22 0.17 0.22 0.22
  0.13 0.09 0.17 0.22 0.17 0.26 0.17 0.17 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.22 0.26 0.04 0.04
  0.13 0.17 0.26 0.22 0.17 0.35 0.26 0.17 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.13 0.09 0.17
  0.17 0.22 0.13 0.09 0.13 0.26 0.13 0.13 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.26 0.17
  0.17 0.13 0.04 0.17 0.13 0.13 0.04 0.13 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.3
  0.13 0.17 0.09 0.13 0.09 0.17 0.09 0.09 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09
  0.09 0.13 0.22 0.17 0.13 0.35 0.22 0.13 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.13 0.22 0.26 0.22 0.3  0.22 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.04 0.13 0.17 0.04 0.26 0.13 0.04 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.09 0.22 0.09 0.22 0.09 0.09 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.13 0.09 0.13 0.   0.09 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.13 0.26 0.13 0.13 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.22 0.09 0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.13 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.09 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1. -1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  0.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.  0.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({1.0: 147, -1.0: 41})
3 classifiers pre label
Counter({1.0: 157, -1.0: 31})
4 classifiers pre label
Counter({1.0: 165, -1.0: 23})
5 classifiers pre label
Counter({1.0: 119, -1.0: 69})
6 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
7 classifiers pre label
Counter({1.0: 131, -1.0: 57})
8 classifiers pre label
Counter({1.0: 129, -1.0: 59})
9 classifiers pre label
Counter({1.0: 147, -1.0: 41})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 124, -1.0: 64})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 170, -1.0: 18})
15 classifiers pre label
Counter({1.0: 165, -1.0: 23})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({1.0: 170, -1.0: 18})
18 classifiers pre label
Counter({1.0: 188})
19 classifiers pre label
Counter({1.0: 129, 0.0: 59})
20 classifiers pre label
Counter({1.0: 188})
21 classifiers pre label
Counter({1.0: 188})
22 classifiers pre label
Counter({0.0: 111, 1.0: 41, -1.0: 36})
23 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[13  0  1  0  0  0  0  0  4  0]
 [ 0  0  0  4  0  0  0 17  1  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  0  0  0 21  0]
 [ 0  0  0  1  0  0  0  0 18  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  0  0 12  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]
 [ 0  0  0  3  0  0  0  0 10  0]]
row HD
[[0.  1.7 0.7 0.6 1.3 1.2 1.2 1.  1.1 1.1]
 [0.  0.  1.2 1.4 1.  1.  1.4 1.  1.2 1.1]
 [0.  0.  0.  0.9 1.  1.3 0.5 0.9 1.  1. ]
 [0.  0.  0.  0.  0.9 0.9 0.8 1.  0.9 0.9]
 [0.  0.  0.  0.  0.  1.  1.1 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  1.3 1.3 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.21 0.21 0.17 0.21 0.17 0.25 0.08 0.21 0.29 0.25 0.12 0.12
  0.21 0.25 0.33 0.29 0.25 0.33 0.33 0.25 0.38 0.29]
 [0.   0.   0.08 0.08 0.12 0.17 0.21 0.29 0.12 0.   0.17 0.12 0.08 0.17
  0.17 0.21 0.12 0.08 0.12 0.25 0.12 0.12 0.38 0.17]
 [0.   0.   0.   0.08 0.21 0.25 0.21 0.21 0.12 0.08 0.17 0.12 0.08 0.17
  0.08 0.12 0.12 0.08 0.12 0.25 0.12 0.12 0.42 0.17]
 [0.   0.   0.   0.   0.12 0.17 0.29 0.29 0.12 0.08 0.08 0.12 0.17 0.17
  0.17 0.21 0.12 0.08 0.12 0.21 0.12 0.12 0.33 0.08]
 [0.   0.   0.   0.   0.   0.12 0.25 0.25 0.08 0.12 0.12 0.17 0.12 0.12
  0.12 0.17 0.17 0.21 0.08 0.25 0.17 0.08 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.17 0.08 0.12 0.25 0.17
  0.25 0.21 0.12 0.25 0.21 0.17 0.12 0.21 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.21 0.29 0.25 0.12 0.12
  0.21 0.17 0.25 0.21 0.25 0.33 0.25 0.25 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.29 0.21 0.17 0.21 0.21
  0.12 0.08 0.17 0.21 0.17 0.25 0.17 0.17 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.21 0.25 0.04 0.04
  0.12 0.17 0.25 0.21 0.17 0.33 0.25 0.17 0.38 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.12 0.08 0.17
  0.17 0.21 0.12 0.08 0.12 0.25 0.12 0.12 0.38 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.17
  0.17 0.12 0.04 0.17 0.12 0.12 0.04 0.12 0.25 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29
  0.12 0.17 0.08 0.12 0.08 0.17 0.08 0.08 0.33 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08
  0.08 0.12 0.21 0.17 0.12 0.33 0.21 0.12 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.12 0.21 0.25 0.21 0.29 0.21 0.21 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.04 0.12 0.17 0.04 0.25 0.12 0.04 0.38 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.08 0.21 0.08 0.21 0.08 0.08 0.33 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.12 0.08 0.12 0.   0.08 0.29 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.12 0.25 0.12 0.12 0.38 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.21 0.08 0.   0.33 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.12 0.21 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.08 0.29 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})

**********      classifier acc  **************
[0.846, 0.84, 0.91, 0.84, 0.702, 0.734, 0.718, 0.66, 0.66, 0.84, 0.782, 0.878, 0.755, 0.649, 0.846, 0.723, 0.883, 0.856, 0.899, 0.697, 0.883, 0.899, 0.506, 0.782]
before cutting matrix
[[-1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1.  1.
   1. -1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.  1.]
 [-1.  1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.
   1.  0.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.  0.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  0.  1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 396, -1.0: 166})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 328, -1.0: 234})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 290, -1.0: 272})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 437, -1.0: 125})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 357, -1.0: 205})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 357, -1.0: 205})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({-1.0: 330, 1.0: 232})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 330, 1.0: 232})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 403, -1.0: 159})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 403, -1.0: 159})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 322, -1.0: 58})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({1.0: 322, -1.0: 58})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({-1.0: 125, 1.0: 106})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 125, 1.0: 106})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 437, -1.0: 125})
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
positive and negative ratio
Counter({1.0: 437, -1.0: 125})
after cutting matrix
[[-1. -1. -1. -1.  1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 446, -1.0: 116})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 458, -1.0: 104})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 461, -1.0: 101})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 447, -1.0: 115})
Counter({1.0: 518, -1.0: 44})
Counter({1.0: 504, -1.0: 58})
Counter({1.0: 518, -1.0: 44})
cutting matrix's confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  0  0  2  0  2  0  0 19  0]
 [ 0  0  0  1  0  3  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0 11  0]
 [ 0  0  0  3  0  1  0  0  9  0]]


SVM classifier
Time: 2019-01-09 22:22:53
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 129, -1.0: 59})
confusion matrix
[[15  0  0  0  0  3  0  0  0  0]
 [21  0  0  0  0  1  0  0  0  0]
 [25  0  0  0  0  1  0  0  0  0]
 [16  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 3  0  0  0  0 16  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [15  0  0  0  0  2  0  0  0  0]
 [11  0  0  0  0  3  0  0  0  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0. -1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1. -1.]
 [ 0. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
confusion matrix
[[13  2  0  0  0  0  0  0  3  0]
 [ 0 17  4  0  0  0  0  0  1  0]
 [ 1  5 19  0  0  0  0  0  1  0]
 [ 0  5 11  0  0  0  0  0  1  0]
 [ 0  0  2  0  0  0  0  0 21  0]
 [ 0  2  1  0  0  0  0  0 16  0]
 [ 2 16  0  0  0  0  0  0  1  0]
 [ 0 14  1  0  0  0  0  0  2  0]
 [ 2  9  0  0  0  0  0  0  3  0]
 [ 0  0  3  0  0  0  0  0 10  0]]
row HD
[[0.  0.1 0.1 0.2 0.2 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.1 0.2 0.1 0.2 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.1 0.2 0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 0.  1.  0.]
 [ 1.  1.  1.]
 [ 1. -1.  0.]
 [-1.  1.  0.]
 [ 0.  1. -1.]
 [ 0. -1.  1.]
 [-1. -1.  1.]
 [ 0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
confusion matrix
[[13  4  0  0  0  0  0  1  0  0]
 [ 0  1  4  0  0  0  0 17  0  0]
 [ 1  3 19  0  0  0  0  3  0  0]
 [ 0  1 11  0  0  0  0  5  0  0]
 [ 0 21  2  0  0  0  0  0  0  0]
 [ 0 16  1  0  0  0  0  2  0  0]
 [ 2  1  0  0  0  0  0 16  0  0]
 [ 0  4  1  0  0  0  0 12  0  0]
 [ 2  3  0  0  0  0  0  9  0  0]
 [ 0 10  3  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.3 0.2 0.2 0.2 0.2 0.3 0.2]
 [0.  0.  0.1 0.3 0.1 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.1 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 0. -1.  1.  1. -1.  1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [ 0. -1.  0.  0.]
 [ 0.  1.  0.  1.]
 [ 1.  1.  1.  1.]
 [ 1. -1.  0.  1.]
 [-1.  1.  0.  1.]
 [ 0.  1. -1.  1.]
 [ 0. -1.  1.  0.]
 [-1. -1.  1. -1.]
 [ 0. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
confusion matrix
[[13  4  0  0  0  0  0  1  0  0]
 [ 4  1  0  0  0  0  0 17  0  0]
 [ 3  3 17  0  0  0  0  3  0  0]
 [10  1  1  0  0  0  0  5  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  2  0  0]
 [ 2  1  0  0  0  0  0 16  0  0]
 [ 1  4  0  0  0  0  0 12  0  0]
 [ 2  3  0  0  0  0  0  9  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.4 0.3 0.3 0.3 0.2 0.4 0.2]
 [0.  0.  0.2 0.4 0.2 0.3 0.3 0.1 0.3 0.1]
 [0.  0.  0.  0.2 0.2 0.1 0.1 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  0.75]
 [0.   0.   1.75 1.  ]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.  1.]
 [ 0. -1.  0.  0.  1.]
 [ 0.  1.  0.  1.  0.]
 [ 1.  1.  1.  1.  0.]
 [ 1. -1.  0.  1.  0.]
 [-1.  1.  0.  1.  1.]
 [ 0.  1. -1.  1.  1.]
 [ 0. -1.  1.  0.  0.]
 [-1. -1.  1. -1.  0.]
 [ 0. -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 4  1  0  0  0  0  0 17  0  0]
 [ 3  6 17  0  0  0  0  0  0  0]
 [10  1  1  0  0  0  0  5  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 1  4  0  0  0  0  0 12  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.3 0.5 0.4 0.3 0.3 0.3 0.5 0.3]
 [0.  0.  0.3 0.5 0.3 0.3 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 0.6 1.6]
 [0.  0.  1.4 0.8 1.4]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
None


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  0.  1.]
 [ 0. -1.  0.  0.  1.]
 [ 0.  1.  0.  1.  0.]
 [ 1.  1.  1.  1.  0.]
 [ 1. -1.  0.  1.  0.]
 [-1.  1.  0.  1.  1.]
 [ 0.  1. -1.  1.  1.]
 [ 0. -1.  1.  0.  0.]
 [-1. -1.  1. -1.  0.]
 [ 0. -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 4  1  0  0  0  0  0 17  0  0]
 [ 3  6 17  0  0  0  0  0  0  0]
 [10  1  1  0  0  0  0  5  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 1  4  0  0  0  0  0 12  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.3 0.5 0.4 0.3 0.3 0.3 0.5 0.3]
 [0.  0.  0.3 0.5 0.3 0.3 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 0.6 1.6]
 [0.  0.  1.4 0.8 1.4]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0.  0. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1.]
 [ 0. -1.  0.  0.  1.  1.]
 [ 0.  1.  0.  1.  0. -1.]
 [ 1.  1.  1.  1.  0.  0.]
 [ 1. -1.  0.  1.  0.  1.]
 [-1.  1.  0.  1.  1. -1.]
 [ 0.  1. -1.  1.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.]
 [-1. -1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 17  0  0]
 [ 6  3 17  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  0  5  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  2  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 12  0  0]
 [ 5  9  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.6 0.5 0.3 0.4 0.4 0.6 0.3]
 [0.  0.  0.4 0.6 0.3 0.4 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.3 0.3 0.2 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.3 0.6]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   0.5  1.33 1.17]
 [0.   0.   1.17 0.67 1.17 1.33]
 [0.   0.   0.   1.17 1.17 1.5 ]
 [0.   0.   0.   0.   1.17 1.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]]


============== iter  8 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0.]
 [ 0.  1.  0.  1.  0. -1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1.]
 [-1.  1.  0.  1.  1. -1.  0.]
 [ 0.  1. -1.  1.  1.  1.  0.]
 [ 0. -1.  1.  0.  0.  0.  1.]
 [-1. -1.  1. -1.  0.  0.  0.]
 [ 0. -1. -1.  0. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 17  0  0]
 [ 6  3 17  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  0  5  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  2  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 12  0  0]
 [ 5  9  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.7 0.5 0.4 0.5 0.5 0.7 0.4]
 [0.  0.  0.4 0.6 0.4 0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.3 0.4 0.2 0.3 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 0.43 1.14 1.   0.86]
 [0.   0.   1.   0.57 1.   1.14 1.29]
 [0.   0.   0.   1.   1.   1.29 0.86]
 [0.   0.   0.   0.   1.   1.   1.14]
 [0.   0.   0.   0.   0.   0.57 1.  ]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[-1.  0.  0.  0. -1.  0.  0.  1.  0.  0.]
most_cplx_inx
9
new_column
None


============== iter  9 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0.]
 [ 0.  1.  0.  1.  0. -1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1.]
 [-1.  1.  0.  1.  1. -1.  0.]
 [ 0.  1. -1.  1.  1.  1.  0.]
 [ 0. -1.  1.  0.  0.  0.  1.]
 [-1. -1.  1. -1.  0.  0.  0.]
 [ 0. -1. -1.  0. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 17  0  0]
 [ 6  3 17  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  0  5  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  2  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 12  0  0]
 [ 5  9  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.7 0.5 0.4 0.5 0.5 0.7 0.4]
 [0.  0.  0.4 0.6 0.4 0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.3 0.4 0.2 0.3 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 0.43 1.14 1.   0.86]
 [0.   0.   1.   0.57 1.   1.14 1.29]
 [0.   0.   0.   1.   1.   1.29 0.86]
 [0.   0.   0.   0.   1.   1.   1.14]
 [0.   0.   0.   0.   0.   0.57 1.  ]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  0.  0.  1.  0.  0. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
None


============== iter  10 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0.]
 [ 0.  1.  0.  1.  0. -1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1.]
 [-1.  1.  0.  1.  1. -1.  0.]
 [ 0.  1. -1.  1.  1.  1.  0.]
 [ 0. -1.  1.  0.  0.  0.  1.]
 [-1. -1.  1. -1.  0.  0.  0.]
 [ 0. -1. -1.  0. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 17  0  0]
 [ 6  3 17  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  0  5  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  2  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0 12  0  0]
 [ 5  9  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.4 0.7 0.5 0.4 0.5 0.5 0.7 0.4]
 [0.  0.  0.4 0.6 0.4 0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.3 0.4 0.2 0.3 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 0.43 1.14 1.   0.86]
 [0.   0.   1.   0.57 1.   1.14 1.29]
 [0.   0.   0.   1.   1.   1.29 0.86]
 [0.   0.   0.   0.   1.   1.   1.14]
 [0.   0.   0.   0.   0.   0.57 1.  ]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  2 19  0  0  0  0  0  3  1]
 [ 0  0 11  0  0  0  0  5  0  1]
 [ 2  0  2  0  0  0  0  0  0 19]
 [ 3  0  1  0  0  0  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 2  2  1  0  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0  9  2]
 [ 1  0  3  0  0  0  0  0  0  9]]
row HD
[[0.  0.4 0.5 0.8 0.6 0.4 0.5 0.6 0.8 0.5]
 [0.  0.  0.5 0.7 0.4 0.5 0.4 0.5 0.6 0.3]
 [0.  0.  0.  0.3 0.5 0.3 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.4 0.3 0.7]
 [0.  0.  0.  0.  0.  0.6 0.6 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 0.38 1.   0.88 0.75 1.  ]
 [0.   0.   0.88 0.5  0.88 1.   1.12 0.62]
 [0.   0.   0.   0.88 0.88 1.12 0.75 1.  ]
 [0.   0.   0.   0.   0.88 0.88 1.   0.88]
 [0.   0.   0.   0.   0.   0.5  0.88 0.25]
 [0.   0.   0.   0.   0.   0.   0.88 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
None


============== iter  12 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  2 19  0  0  0  0  0  3  1]
 [ 0  0 11  0  0  0  0  5  0  1]
 [ 2  0  2  0  0  0  0  0  0 19]
 [ 3  0  1  0  0  0  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 2  2  1  0  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0  9  2]
 [ 1  0  3  0  0  0  0  0  0  9]]
row HD
[[0.  0.4 0.5 0.8 0.6 0.4 0.5 0.6 0.8 0.5]
 [0.  0.  0.5 0.7 0.4 0.5 0.4 0.5 0.6 0.3]
 [0.  0.  0.  0.3 0.5 0.3 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.4 0.3 0.7]
 [0.  0.  0.  0.  0.  0.6 0.6 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 0.38 1.   0.88 0.75 1.  ]
 [0.   0.   0.88 0.5  0.88 1.   1.12 0.62]
 [0.   0.   0.   0.88 0.88 1.12 0.75 1.  ]
 [0.   0.   0.   0.   0.88 0.88 1.   0.88]
 [0.   0.   0.   0.   0.   0.5  0.88 0.25]
 [0.   0.   0.   0.   0.   0.   0.88 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[-1. -1.  1.  1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  13 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  0 19  0  0  0  0  2  3  1]
 [ 0  0 11  0  0  0  0  5  0  1]
 [ 2  0  2  0  0  0  0  0  0 19]
 [ 3  0  1  0  0  0  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 2  0  1  0  0  0  0 14  0  0]
 [ 3  0  0  0  0  0  0  0  9  2]
 [ 1  0  3  0  0  0  0  0  0  9]]
row HD
[[0.  0.5 0.5 0.8 0.7 0.4 0.5 0.6 0.8 0.6]
 [0.  0.  0.6 0.8 0.5 0.6 0.5 0.6 0.7 0.4]
 [0.  0.  0.  0.3 0.6 0.3 0.4 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.6 0.5 0.5 0.4 0.3 0.8]
 [0.  0.  0.  0.  0.  0.7 0.7 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.8 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.67 0.33 0.89 0.78 0.67 0.89 0.89]
 [0.   0.   0.78 0.44 0.78 0.89 1.   0.56 0.56]
 [0.   0.   0.   0.78 0.78 1.   0.67 0.89 0.67]
 [0.   0.   0.   0.   0.78 0.78 0.89 0.78 0.56]
 [0.   0.   0.   0.   0.   0.44 0.78 0.22 0.67]
 [0.   0.   0.   0.   0.   0.   0.78 0.56 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 5  0  0  0  0  0  0 17  0  0]
 [ 3  0 17  0  0  0  0  2  3  1]
 [10  0  1  0  0  0  0  5  0  1]
 [ 4  0  0  0  0  0  0  0  0 19]
 [ 4  0  0  0  0  0  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 3  0  0  0  0  0  0 14  0  0]
 [ 3  0  0  0  0  0  0  0  9  2]
 [ 4  0  0  0  0  0  0  0  0  9]]
row HD
[[0.  0.6 0.6 0.8 0.8 0.4 0.6 0.7 0.8 0.6]
 [0.  0.  0.6 0.9 0.5 0.7 0.5 0.7 0.8 0.5]
 [0.  0.  0.  0.4 0.6 0.4 0.4 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.7 0.5 0.6 0.5 0.3 0.8]
 [0.  0.  0.  0.  0.  0.8 0.7 0.8 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.4 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.6 0.3 0.8 0.7 0.6 0.8 0.8 0.8]
 [0.  0.  0.7 0.4 0.7 0.8 0.9 0.5 0.5 0.6]
 [0.  0.  0.  0.7 0.7 0.9 0.6 0.8 0.6 0.7]
 [0.  0.  0.  0.  0.7 0.7 0.8 0.7 0.5 0.7]
 [0.  0.  0.  0.  0.  0.4 0.7 0.2 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1.  0.  1.  1.]
select_j_column
[ 1. -1.  0.  0. -1.  1.  1.  0.  0. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  15 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 2  0  0  2  0  0  0  0  0 19]
 [ 3  0  0  1  0  0  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  0  0  0  9  2]
 [ 1  0  0  3  0  0  0  0  0  9]]
row HD
[[0.  0.7 0.6 0.9 0.9 0.4 0.7 0.8 0.9 0.7]
 [0.  0.  0.7 0.9 0.5 0.8 0.6 0.8 0.8 0.6]
 [0.  0.  0.  0.5 0.7 0.4 0.5 0.7 0.7 0.8]
 [0.  0.  0.  0.  0.7 0.6 0.7 0.6 0.3 0.9]
 [0.  0.  0.  0.  0.  0.9 0.8 0.9 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.5 1.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.55 0.27 0.73 0.64 0.55 0.73 0.73 0.73 0.36]
 [0.   0.   0.64 0.36 0.64 0.73 0.82 0.45 0.45 0.55 0.82]
 [0.   0.   0.   0.64 0.64 0.82 0.55 0.73 0.55 0.64 0.73]
 [0.   0.   0.   0.   0.64 0.64 0.73 0.64 0.45 0.64 0.55]
 [0.   0.   0.   0.   0.   0.36 0.64 0.18 0.55 0.64 0.73]
 [0.   0.   0.   0.   0.   0.   0.64 0.45 0.82 0.73 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.55 0.73 0.82 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.55 0.45 0.82]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1.  1.  0.  0.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  0 19  2  0  0  0  0  3  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.7 0.6 1.  0.9 0.4 0.7 0.9 0.9 0.8]
 [0.  0.  0.7 1.  0.5 0.8 0.6 0.9 0.8 0.7]
 [0.  0.  0.  0.6 0.7 0.4 0.5 0.8 0.7 0.9]
 [0.  0.  0.  0.  0.8 0.7 0.8 0.6 0.4 1. ]
 [0.  0.  0.  0.  0.  0.9 0.8 1.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 1.1 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.5  0.25 0.67 0.58 0.5  0.67 0.67 0.67 0.33 0.67]
 [0.   0.   0.58 0.33 0.58 0.67 0.75 0.42 0.42 0.5  0.75 0.5 ]
 [0.   0.   0.   0.58 0.58 0.75 0.5  0.67 0.5  0.58 0.67 0.67]
 [0.   0.   0.   0.   0.58 0.58 0.67 0.58 0.42 0.58 0.5  0.42]
 [0.   0.   0.   0.   0.   0.33 0.58 0.17 0.5  0.58 0.67 0.25]
 [0.   0.   0.   0.   0.   0.   0.58 0.42 0.75 0.67 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.67 0.75 0.58 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.42 0.75 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.58 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  0.  1. -1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  0 19  2  0  0  0  0  3  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.7 0.6 1.1 0.9 0.4 0.7 1.  0.9 0.9]
 [0.  0.  0.7 1.1 0.5 0.8 0.6 1.  0.8 0.8]
 [0.  0.  0.  0.7 0.7 0.4 0.5 0.9 0.7 1. ]
 [0.  0.  0.  0.  0.9 0.8 0.9 0.6 0.5 1.1]
 [0.  0.  0.  0.  0.  0.9 0.8 1.1 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.5 1.2 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.46 0.23 0.62 0.54 0.46 0.62 0.62 0.62 0.31 0.62 0.62]
 [0.   0.   0.54 0.31 0.54 0.62 0.69 0.38 0.38 0.46 0.69 0.46 0.46]
 [0.   0.   0.   0.54 0.54 0.69 0.46 0.62 0.46 0.54 0.62 0.62 0.62]
 [0.   0.   0.   0.   0.54 0.54 0.62 0.54 0.38 0.54 0.46 0.38 0.38]
 [0.   0.   0.   0.   0.   0.31 0.54 0.15 0.46 0.54 0.62 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.54 0.38 0.69 0.62 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.46 0.62 0.69 0.54 0.69 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.38 0.69 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.54 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  0.  0.  1.  0.  0. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  0 19  2  0  0  0  0  3  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.8 0.6 1.2 1.  0.4 0.8 1.  1.  1. ]
 [0.  0.  0.8 1.2 0.5 0.9 0.6 1.1 0.9 0.8]
 [0.  0.  0.  0.8 0.8 0.4 0.6 0.9 0.8 1.1]
 [0.  0.  0.  0.  1.  0.9 1.  0.7 0.5 1.2]
 [0.  0.  0.  0.  0.  1.  0.8 1.2 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.6 1.2 0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.43 0.21 0.57 0.5  0.43 0.57 0.57 0.57 0.29 0.57 0.57 0.57]
 [0.   0.   0.5  0.29 0.5  0.57 0.64 0.36 0.36 0.43 0.64 0.43 0.43 0.57]
 [0.   0.   0.   0.5  0.5  0.64 0.43 0.57 0.43 0.5  0.57 0.57 0.57 0.71]
 [0.   0.   0.   0.   0.5  0.5  0.57 0.5  0.36 0.5  0.43 0.36 0.36 0.57]
 [0.   0.   0.   0.   0.   0.29 0.5  0.14 0.43 0.5  0.57 0.21 0.21 0.43]
 [0.   0.   0.   0.   0.   0.   0.5  0.36 0.64 0.57 0.29 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.57 0.64 0.5  0.64 0.64 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.36 0.64 0.29 0.29 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.5  0.36 0.36 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  19 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3  0 19  0  0  0  0  0  4  0]
 [10  0  1  0  0  0  0  5  1  0]
 [ 2  0  0  0  0  2  0  0 19  0]
 [ 1  0  0  0  0  3  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0 11  0]
 [ 3  0  0  0  0  1  0  0  9  0]]
row HD
[[0.  0.8 0.6 1.3 1.1 0.5 0.9 1.1 1.1 1. ]
 [0.  0.  0.8 1.3 0.6 1.  0.7 1.2 1.  0.8]
 [0.  0.  0.  0.9 0.9 0.5 0.7 1.  0.9 1.1]
 [0.  0.  0.  0.  1.1 0.9 1.1 0.7 0.6 1.3]
 [0.  0.  0.  0.  0.  1.1 0.8 1.3 0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.7 1.2 0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.4  0.2  0.53 0.47 0.4  0.53 0.53 0.53 0.27 0.53 0.53 0.53
  0.53]
 [0.   0.   0.47 0.27 0.47 0.53 0.6  0.33 0.33 0.4  0.6  0.4  0.4  0.53
  0.47]
 [0.   0.   0.   0.47 0.47 0.6  0.4  0.53 0.4  0.47 0.53 0.53 0.53 0.67
  0.47]
 [0.   0.   0.   0.   0.47 0.47 0.53 0.47 0.33 0.47 0.4  0.33 0.33 0.53
  0.47]
 [0.   0.   0.   0.   0.   0.27 0.47 0.13 0.4  0.47 0.53 0.2  0.2  0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.47 0.33 0.6  0.53 0.27 0.27 0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.53 0.6  0.47 0.6  0.6  0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.33 0.6  0.27 0.27 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.47 0.33 0.33 0.6
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.4  0.53
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  1.  1.  1.  1.  0. -1.  0.]
select_j_column
[ 1.  1.  0.  0.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  20 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3  0 19  0  0  0  0  0  4  0]
 [10  0  1  0  0  0  0  5  1  0]
 [ 2  0  0  0  0  2  0  0 19  0]
 [ 1  0  0  0  0  3  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0 11  0]
 [ 3  0  0  0  0  1  0  0  9  0]]
row HD
[[0.  0.8 0.6 1.3 1.1 0.6 1.  1.1 1.2 1.1]
 [0.  0.  0.8 1.3 0.6 1.1 0.8 1.2 1.1 0.9]
 [0.  0.  0.  0.9 0.9 0.6 0.8 1.  1.  1.2]
 [0.  0.  0.  0.  1.1 1.  1.2 0.7 0.7 1.4]
 [0.  0.  0.  0.  0.  1.2 0.9 1.3 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.7 1.3 1.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.38 0.19 0.5  0.44 0.38 0.5  0.5  0.5  0.25 0.5  0.5  0.5
  0.5  0.31]
 [0.   0.   0.44 0.25 0.44 0.5  0.56 0.31 0.31 0.38 0.56 0.38 0.38 0.5
  0.44 0.31]
 [0.   0.   0.   0.44 0.44 0.56 0.38 0.5  0.38 0.44 0.5  0.5  0.5  0.62
  0.44 0.31]
 [0.   0.   0.   0.   0.44 0.44 0.5  0.44 0.31 0.44 0.38 0.31 0.31 0.5
  0.44 0.25]
 [0.   0.   0.   0.   0.   0.25 0.44 0.12 0.38 0.44 0.5  0.19 0.19 0.38
  0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.44 0.31 0.56 0.5  0.25 0.25 0.25 0.12
  0.19 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.5  0.56 0.44 0.56 0.56 0.44
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.31 0.56 0.25 0.25 0.44
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.44 0.31 0.31 0.56
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.38 0.5
  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.31
  0.31 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1.  0.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  21 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  0 21  0  1  0  0  0  3  0]
 [ 0  0 11  0  1  0  0  5  0  0]
 [ 2  0  2  0 19  0  0  0  0  0]
 [ 3  0  1  0 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  3  0  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  3  0  9  0  0  0  0  0]]
row HD
[[0.  0.9 0.7 1.4 1.1 0.7 1.1 1.2 1.3 1.1]
 [0.  0.  0.8 1.4 0.7 1.1 0.8 1.3 1.1 1. ]
 [0.  0.  0.  1.  1.  0.6 0.8 1.1 1.  1.3]
 [0.  0.  0.  0.  1.2 1.1 1.3 0.7 0.8 1.5]
 [0.  0.  0.  0.  0.  1.3 1.  1.4 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.7 1.4 1.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.35 0.18 0.47 0.41 0.35 0.47 0.47 0.47 0.24 0.47 0.47 0.47
  0.47 0.29 0.53]
 [0.   0.   0.41 0.24 0.41 0.47 0.53 0.29 0.29 0.35 0.53 0.35 0.35 0.47
  0.41 0.29 0.29]
 [0.   0.   0.   0.41 0.41 0.53 0.35 0.47 0.35 0.41 0.47 0.47 0.47 0.59
  0.41 0.29 0.47]
 [0.   0.   0.   0.   0.41 0.41 0.47 0.41 0.29 0.41 0.35 0.29 0.29 0.47
  0.41 0.24 0.35]
 [0.   0.   0.   0.   0.   0.24 0.41 0.12 0.35 0.41 0.47 0.18 0.18 0.35
  0.35 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.41 0.29 0.53 0.47 0.24 0.24 0.24 0.12
  0.18 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.47 0.53 0.41 0.53 0.53 0.41
  0.41 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.29 0.53 0.24 0.24 0.41
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.41 0.29 0.29 0.53
  0.41 0.41 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.35 0.47
  0.35 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.29
  0.29 0.53 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.24 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.24 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0.  1.  0.  0. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1.  0.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  4  0  0  0  0 17  0  0]
 [ 1  0 21  0  1  0  0  0  3  0]
 [ 0  0 11  0  1  0  0  5  0  0]
 [ 2  0  2  0 19  0  0  0  0  0]
 [ 3  0  1  0 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  3  0  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  3  0  9  0  0  0  0  0]]
row HD
[[0.  1.  0.8 1.4 1.2 0.7 1.2 1.2 1.3 1.1]
 [0.  0.  0.8 1.5 0.7 1.2 0.9 1.4 1.2 1.1]
 [0.  0.  0.  1.1 1.  0.7 0.9 1.2 1.1 1.4]
 [0.  0.  0.  0.  1.3 1.1 1.4 0.7 0.8 1.5]
 [0.  0.  0.  0.  0.  1.4 1.1 1.5 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.8 1.4 1.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.39 0.33 0.17 0.44 0.39 0.33 0.44 0.44 0.44 0.22 0.44 0.44 0.44
  0.44 0.28 0.5  0.39]
 [0.   0.   0.39 0.22 0.39 0.44 0.5  0.28 0.28 0.33 0.5  0.33 0.33 0.44
  0.39 0.28 0.28 0.44]
 [0.   0.   0.   0.39 0.39 0.5  0.33 0.44 0.33 0.39 0.44 0.44 0.44 0.56
  0.39 0.28 0.44 0.17]
 [0.   0.   0.   0.   0.39 0.39 0.44 0.39 0.28 0.39 0.33 0.28 0.28 0.44
  0.39 0.22 0.33 0.39]
 [0.   0.   0.   0.   0.   0.22 0.39 0.11 0.33 0.39 0.44 0.17 0.17 0.33
  0.33 0.17 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.39 0.28 0.5  0.44 0.22 0.22 0.22 0.11
  0.17 0.33 0.22 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.44 0.5  0.39 0.5  0.5  0.39
  0.39 0.39 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.28 0.5  0.22 0.22 0.39
  0.28 0.22 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.39 0.28 0.28 0.5
  0.39 0.39 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.33 0.44
  0.33 0.44 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.28
  0.28 0.5  0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.22 0.28 0.11 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.22 0.28 0.11 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.28 0.44 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.22 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 0. -1.  1.  1. -1.  1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  23 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
18 classifiers pre label
Counter({0.0: 83, -1.0: 82, 1.0: 23})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  0 19  2  0  0  0  0  3  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  1.1 0.9 1.5 1.3 0.8 1.2 1.2 1.3 1.2]
 [0.  0.  0.9 1.5 0.7 1.3 1.  1.5 1.3 1.2]
 [0.  0.  0.  1.2 1.1 0.7 1.  1.3 1.2 1.4]
 [0.  0.  0.  0.  1.3 1.2 1.5 0.8 0.9 1.6]
 [0.  0.  0.  0.  0.  1.5 1.2 1.6 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.9 1.5 1.1 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.37 0.32 0.16 0.42 0.37 0.32 0.42 0.42 0.42 0.21 0.42 0.42 0.42
  0.42 0.26 0.47 0.37 0.21]
 [0.   0.   0.37 0.21 0.37 0.42 0.47 0.26 0.26 0.32 0.47 0.32 0.32 0.42
  0.37 0.26 0.26 0.42 0.37]
 [0.   0.   0.   0.37 0.37 0.47 0.32 0.42 0.32 0.37 0.42 0.42 0.42 0.53
  0.37 0.26 0.42 0.16 0.37]
 [0.   0.   0.   0.   0.37 0.37 0.42 0.37 0.26 0.37 0.32 0.26 0.26 0.42
  0.37 0.21 0.32 0.37 0.32]
 [0.   0.   0.   0.   0.   0.21 0.37 0.11 0.32 0.37 0.42 0.16 0.16 0.32
  0.32 0.16 0.21 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.37 0.26 0.47 0.42 0.21 0.21 0.21 0.11
  0.16 0.32 0.21 0.53 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.42 0.47 0.37 0.47 0.47 0.37
  0.37 0.37 0.37 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.26 0.47 0.21 0.21 0.37
  0.26 0.21 0.21 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.37 0.26 0.26 0.47
  0.37 0.37 0.32 0.21 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.32 0.42
  0.32 0.42 0.32 0.21 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.26
  0.26 0.47 0.32 0.42 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.21 0.26 0.11 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.21 0.26 0.11 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.42 0.32 0.47 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.32 0.21 0.47 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1.  1.  0.  1.  1.  1.  1.  0.]
select_j_column
[-1. -1. -1.  0.  1.  0.  1.  0.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]]


============== iter  24 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0. -1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  0.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.  1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1. -1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.  0.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.  1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.  0.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.  1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
18 classifiers pre label
Counter({0.0: 83, -1.0: 82, 1.0: 23})
19 classifiers pre label
Counter({1.0: 93, 0.0: 59, -1.0: 36})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.2 0.9 1.6 1.3 0.9 1.3 1.3 1.4 1.3]
 [0.  0.  1.  1.6 0.8 1.4 1.  1.6 1.3 1.3]
 [0.  0.  0.  1.3 1.1 0.8 1.1 1.4 1.3 1.5]
 [0.  0.  0.  0.  1.4 1.2 1.6 0.8 1.  1.6]
 [0.  0.  0.  0.  0.  1.6 1.3 1.7 1.4 1.5]
 [0.  0.  0.  0.  0.  0.  1.  1.5 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.3  0.15 0.4  0.35 0.3  0.4  0.4  0.4  0.2  0.4  0.4  0.4
  0.4  0.25 0.45 0.35 0.2  0.35]
 [0.   0.   0.35 0.2  0.35 0.4  0.45 0.25 0.25 0.3  0.45 0.3  0.3  0.4
  0.35 0.25 0.25 0.4  0.35 0.35]
 [0.   0.   0.   0.35 0.35 0.45 0.3  0.4  0.3  0.35 0.4  0.4  0.4  0.5
  0.35 0.25 0.4  0.15 0.35 0.35]
 [0.   0.   0.   0.   0.35 0.35 0.4  0.35 0.25 0.35 0.3  0.25 0.25 0.4
  0.35 0.2  0.3  0.35 0.3  0.35]
 [0.   0.   0.   0.   0.   0.2  0.35 0.1  0.3  0.35 0.4  0.15 0.15 0.3
  0.3  0.15 0.2  0.3  0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.25 0.45 0.4  0.2  0.2  0.2  0.1
  0.15 0.3  0.2  0.5  0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.4  0.45 0.35 0.45 0.45 0.35
  0.35 0.35 0.35 0.35 0.4  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.25 0.45 0.2  0.2  0.35
  0.25 0.2  0.2  0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.35 0.25 0.25 0.45
  0.35 0.35 0.3  0.2  0.45 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.3  0.4
  0.3  0.4  0.3  0.2  0.35 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.25
  0.25 0.45 0.3  0.4  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.2  0.25 0.1  0.35 0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.2  0.25 0.1  0.35 0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.4  0.3  0.45 0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.3  0.2  0.45 0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.3  0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.4  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  25 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0. -1. -1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  0.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.  1.  1.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1. -1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.  1. -1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.  0.  0.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.  1.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.  0. -1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
18 classifiers pre label
Counter({0.0: 83, -1.0: 82, 1.0: 23})
19 classifiers pre label
Counter({1.0: 93, 0.0: 59, -1.0: 36})
20 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.3 0.9 1.7 1.4 0.9 1.4 1.4 1.4 1.4]
 [0.  0.  1.1 1.6 0.8 1.5 1.1 1.7 1.4 1.4]
 [0.  0.  0.  1.4 1.2 0.8 1.2 1.5 1.3 1.6]
 [0.  0.  0.  0.  1.4 1.3 1.7 0.9 1.1 1.7]
 [0.  0.  0.  0.  0.  1.7 1.4 1.8 1.5 1.6]
 [0.  0.  0.  0.  0.  0.  1.1 1.6 1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.29 0.14 0.38 0.33 0.29 0.38 0.38 0.38 0.19 0.38 0.38 0.38
  0.38 0.24 0.43 0.33 0.19 0.33 0.14]
 [0.   0.   0.33 0.19 0.33 0.38 0.43 0.24 0.24 0.29 0.43 0.29 0.29 0.38
  0.33 0.24 0.24 0.38 0.33 0.33 0.38]
 [0.   0.   0.   0.33 0.33 0.43 0.29 0.38 0.29 0.33 0.38 0.38 0.38 0.48
  0.33 0.24 0.38 0.14 0.33 0.33 0.43]
 [0.   0.   0.   0.   0.33 0.33 0.38 0.33 0.24 0.33 0.29 0.24 0.24 0.38
  0.33 0.19 0.29 0.33 0.29 0.33 0.24]
 [0.   0.   0.   0.   0.   0.19 0.33 0.1  0.29 0.33 0.38 0.14 0.14 0.29
  0.29 0.14 0.19 0.29 0.29 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.33 0.24 0.43 0.38 0.19 0.19 0.19 0.1
  0.14 0.29 0.19 0.48 0.14 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.38 0.43 0.33 0.43 0.43 0.33
  0.33 0.33 0.33 0.33 0.38 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.24 0.43 0.19 0.19 0.33
  0.24 0.19 0.19 0.33 0.33 0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.33 0.24 0.24 0.43
  0.33 0.33 0.29 0.19 0.43 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29 0.38
  0.29 0.38 0.29 0.19 0.33 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.24
  0.24 0.43 0.29 0.38 0.14 0.29 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.19 0.24 0.1  0.33 0.29 0.43 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.19 0.24 0.1  0.33 0.29 0.43 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.38 0.29 0.43 0.24 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.19 0.43 0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24 0.29 0.33 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.38 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.43 0.24 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1.  1. -1.  1.  1. -1.  0.  0.  1.  0.]
select_j_column
[ 1. -1.  1.  1.  0.  1.  1.  1.  1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  26 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0. -1. -1.  1.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  0.  1. -1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.  1.  1.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1. -1.  1.  1.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.  1. -1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.  0.  0. -1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.  1.  0. -1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.  0. -1.  0.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
18 classifiers pre label
Counter({0.0: 83, -1.0: 82, 1.0: 23})
19 classifiers pre label
Counter({1.0: 93, 0.0: 59, -1.0: 36})
20 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
21 classifiers pre label
Counter({1.0: 123, -1.0: 65})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.4 0.9 1.8 1.4 0.9 1.5 1.5 1.5 1.5]
 [0.  0.  1.2 1.7 0.9 1.6 1.1 1.7 1.5 1.5]
 [0.  0.  0.  1.5 1.2 0.8 1.3 1.6 1.4 1.7]
 [0.  0.  0.  0.  1.5 1.4 1.8 1.  1.1 1.7]
 [0.  0.  0.  0.  0.  1.7 1.5 1.9 1.6 1.7]
 [0.  0.  0.  0.  0.  0.  1.2 1.7 1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.4 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.27 0.14 0.36 0.32 0.27 0.36 0.36 0.36 0.18 0.36 0.36 0.36
  0.36 0.23 0.41 0.32 0.18 0.32 0.14 0.36]
 [0.   0.   0.32 0.18 0.32 0.36 0.41 0.23 0.23 0.27 0.41 0.27 0.27 0.36
  0.32 0.23 0.23 0.36 0.32 0.32 0.36 0.27]
 [0.   0.   0.   0.32 0.32 0.41 0.27 0.36 0.27 0.32 0.36 0.36 0.36 0.45
  0.32 0.23 0.36 0.14 0.32 0.32 0.41 0.41]
 [0.   0.   0.   0.   0.32 0.32 0.36 0.32 0.23 0.32 0.27 0.23 0.23 0.36
  0.32 0.18 0.27 0.32 0.27 0.32 0.23 0.27]
 [0.   0.   0.   0.   0.   0.18 0.32 0.09 0.27 0.32 0.36 0.14 0.14 0.27
  0.27 0.14 0.18 0.27 0.27 0.36 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.32 0.23 0.41 0.36 0.18 0.18 0.18 0.09
  0.14 0.27 0.18 0.45 0.14 0.32 0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.41 0.32 0.41 0.41 0.32
  0.32 0.32 0.32 0.32 0.36 0.18 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.23 0.41 0.18 0.18 0.32
  0.23 0.18 0.18 0.32 0.32 0.32 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.32 0.23 0.23 0.41
  0.32 0.32 0.27 0.18 0.41 0.32 0.36 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27 0.36
  0.27 0.36 0.27 0.18 0.32 0.23 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.23
  0.23 0.41 0.27 0.36 0.14 0.27 0.05 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.18 0.23 0.09 0.32 0.27 0.41 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.18 0.23 0.09 0.32 0.27 0.41 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.23 0.36 0.27 0.41 0.23 0.27 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.27 0.18 0.41 0.27 0.36 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.23 0.27 0.32 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.36 0.32 0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.41 0.23 0.41 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.27 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  27 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0. -1. -1.  1.  0.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  0.  1. -1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.  1.  1.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1. -1.  1.  1.  0.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.  1. -1.  1.  1.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.  0.  0. -1. -1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.  1.  0. -1.  0.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.  0. -1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.  1.  0.  0.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
18 classifiers pre label
Counter({0.0: 83, -1.0: 82, 1.0: 23})
19 classifiers pre label
Counter({1.0: 93, 0.0: 59, -1.0: 36})
20 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
21 classifiers pre label
Counter({1.0: 123, -1.0: 65})
22 classifiers pre label
Counter({0.0: 98, 1.0: 90})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.5 1.  1.8 1.4 1.  1.6 1.5 1.6 1.5]
 [0.  0.  1.2 1.8 1.  1.6 1.2 1.8 1.5 1.6]
 [0.  0.  0.  1.6 1.3 0.8 1.4 1.7 1.4 1.8]
 [0.  0.  0.  0.  1.5 1.5 1.9 1.  1.2 1.7]
 [0.  0.  0.  0.  0.  1.8 1.6 1.9 1.7 1.7]
 [0.  0.  0.  0.  0.  0.  1.3 1.8 1.3 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.5 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.26 0.13 0.35 0.3  0.26 0.35 0.35 0.35 0.17 0.35 0.35 0.35
  0.35 0.22 0.39 0.3  0.17 0.3  0.13 0.35 0.3 ]
 [0.   0.   0.3  0.17 0.3  0.35 0.39 0.22 0.22 0.26 0.39 0.26 0.26 0.35
  0.3  0.22 0.22 0.35 0.3  0.3  0.35 0.26 0.3 ]
 [0.   0.   0.   0.3  0.3  0.39 0.26 0.35 0.26 0.3  0.35 0.35 0.35 0.43
  0.3  0.22 0.35 0.13 0.3  0.3  0.39 0.39 0.26]
 [0.   0.   0.   0.   0.3  0.3  0.35 0.3  0.22 0.3  0.26 0.22 0.22 0.35
  0.3  0.17 0.26 0.3  0.26 0.3  0.22 0.26 0.22]
 [0.   0.   0.   0.   0.   0.17 0.3  0.09 0.26 0.3  0.35 0.13 0.13 0.26
  0.26 0.13 0.17 0.26 0.26 0.35 0.35 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.3  0.22 0.39 0.35 0.17 0.17 0.17 0.09
  0.13 0.26 0.17 0.43 0.13 0.3  0.17 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.35 0.39 0.3  0.39 0.39 0.3
  0.3  0.3  0.3  0.3  0.35 0.17 0.3  0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.22 0.39 0.17 0.17 0.3
  0.22 0.17 0.17 0.3  0.3  0.3  0.39 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.3  0.22 0.22 0.39
  0.3  0.3  0.26 0.17 0.39 0.3  0.35 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.26 0.35
  0.26 0.35 0.26 0.17 0.3  0.22 0.3  0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.22
  0.22 0.39 0.26 0.35 0.13 0.26 0.04 0.35 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.17 0.22 0.09 0.3  0.26 0.39 0.3  0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.17 0.22 0.09 0.3  0.26 0.39 0.3  0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.35 0.26 0.39 0.22 0.26 0.22 0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.17 0.39 0.26 0.35 0.26 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.26 0.3  0.35 0.35 0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.35 0.3  0.3  0.3  0.3  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.39 0.22 0.39 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.26 0.13 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.26 0.35 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  1.  0.  1.  1. -1. -1.  0.  0.]
select_j_column
[ 1.  1.  1.  0.  1.  1.  1.  0.  1. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  28 ================
current matrix is 
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0. -1. -1.  1.  0.  0.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  0.  1. -1.  1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1. -1.  1.  1.  0.  0.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.  1. -1.  1.  1.  0.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.  0.  0. -1. -1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.  1.  0. -1.  0. -1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.  0. -1.  0.  1. -1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 129, -1.0: 59})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({0.0: 123, 1.0: 65})
3 classifiers pre label
Counter({0.0: 80, 1.0: 77, -1.0: 31})
4 classifiers pre label
Counter({0.0: 98, 1.0: 90})
5 classifiers pre label
Counter({-1.0: 123, 0.0: 34, 1.0: 31})
6 classifiers pre label
Counter({0.0: 90, -1.0: 64, 1.0: 34})
7 classifiers pre label
Counter({-1.0: 74, 1.0: 62, 0.0: 52})
8 classifiers pre label
Counter({1.0: 142, 0.0: 46})
9 classifiers pre label
Counter({1.0: 131, 0.0: 34, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
11 classifiers pre label
Counter({1.0: 154, 0.0: 34})
12 classifiers pre label
Counter({1.0: 154, 0.0: 34})
13 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
14 classifiers pre label
Counter({1.0: 77, -1.0: 64, 0.0: 47})
15 classifiers pre label
Counter({0.0: 144, -1.0: 31, 1.0: 13})
16 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
17 classifiers pre label
Counter({1.0: 96, 0.0: 92})
18 classifiers pre label
Counter({0.0: 83, -1.0: 82, 1.0: 23})
19 classifiers pre label
Counter({1.0: 93, 0.0: 59, -1.0: 36})
20 classifiers pre label
Counter({-1.0: 100, 0.0: 65, 1.0: 23})
21 classifiers pre label
Counter({1.0: 123, -1.0: 65})
22 classifiers pre label
Counter({0.0: 98, 1.0: 90})
23 classifiers pre label
Counter({0.0: 95, -1.0: 93})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 2  0 19  2  0  0  0  0  3  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [19  0  0  2  0  2  0  0  0  0]
 [13  0  0  1  0  3  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 4  0  0  0  0  1  0  0  9  0]
 [ 9  0  0  3  0  1  0  0  0  0]]
row HD
[[0.  1.6 1.  1.8 1.4 1.  1.7 1.6 1.7 1.6]
 [0.  0.  1.3 1.9 1.1 1.7 1.2 1.9 1.6 1.6]
 [0.  0.  0.  1.6 1.3 0.8 1.5 1.8 1.5 1.9]
 [0.  0.  0.  0.  1.5 1.5 2.  1.1 1.3 1.8]
 [0.  0.  0.  0.  0.  1.8 1.7 2.  1.8 1.8]
 [0.  0.  0.  0.  0.  0.  1.4 1.9 1.4 1.8]
 [0.  0.  0.  0.  0.  0.  0.  1.8 1.6 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.25 0.12 0.33 0.29 0.25 0.33 0.33 0.33 0.17 0.33 0.33 0.33
  0.33 0.21 0.38 0.29 0.17 0.29 0.12 0.33 0.29 0.29]
 [0.   0.   0.29 0.17 0.29 0.33 0.38 0.21 0.21 0.25 0.38 0.25 0.25 0.33
  0.29 0.21 0.21 0.33 0.29 0.29 0.33 0.25 0.29 0.25]
 [0.   0.   0.   0.29 0.29 0.38 0.25 0.33 0.25 0.29 0.33 0.33 0.33 0.42
  0.29 0.21 0.33 0.12 0.29 0.29 0.38 0.38 0.25 0.25]
 [0.   0.   0.   0.   0.29 0.29 0.33 0.29 0.21 0.29 0.25 0.21 0.21 0.33
  0.29 0.17 0.25 0.29 0.25 0.29 0.21 0.25 0.21 0.29]
 [0.   0.   0.   0.   0.   0.17 0.29 0.08 0.25 0.29 0.33 0.12 0.12 0.25
  0.25 0.12 0.17 0.25 0.25 0.33 0.33 0.25 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.29 0.21 0.38 0.33 0.17 0.17 0.17 0.08
  0.12 0.25 0.17 0.42 0.12 0.29 0.17 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.38 0.29 0.38 0.38 0.29
  0.29 0.29 0.29 0.29 0.33 0.17 0.29 0.29 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.21 0.38 0.17 0.17 0.29
  0.21 0.17 0.17 0.29 0.29 0.29 0.38 0.21 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.21 0.21 0.38
  0.29 0.29 0.25 0.17 0.38 0.29 0.33 0.21 0.21 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.33
  0.25 0.33 0.25 0.17 0.29 0.21 0.29 0.25 0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.21
  0.21 0.38 0.25 0.33 0.12 0.25 0.04 0.33 0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.17 0.21 0.08 0.29 0.25 0.38 0.29 0.21 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.17 0.21 0.08 0.29 0.25 0.38 0.29 0.21 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.21 0.33 0.25 0.38 0.21 0.25 0.21 0.25 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.17 0.38 0.25 0.33 0.25 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.25 0.29 0.33 0.33 0.33 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33 0.29 0.29 0.29 0.29 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.38 0.21 0.38 0.29 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25 0.12 0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.25 0.33 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})

**********      classifier acc  **************
[0.26, 0.635, 0.325, 0.568, 0.516, 0.614, 0.759, 0.675, 0.737, 0.544, 0.504, 0.805, 0.805, 0.669, 0.667, 0.185, 0.669, 0.462, 0.517, 0.579, 0.54, 0.868, 0.45, 0.282]
before cutting matrix
[[ 0.  0.  0.  0.  1. -1. -1.  1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  1.
   0. -1. -1.  1.  0.  0.]
 [ 0. -1.  0.  0.  1.  1.  0. -1. -1. -1.  1.  1.  1.  1. -1.  0.  1.  0.
   1.  0.  1. -1.  1.  1.]
 [ 0.  1.  0.  1.  0. -1.  0.  0.  1. -1. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  1.  1.  0.]
 [ 1.  1.  1.  1.  0.  0.  0.  0.  1.  1.  1.  0.  0.  0.  0.  0.  0.  1.
   1.  1.  1.  0.  0.  0.]
 [ 1. -1.  0.  1.  0.  1. -1. -1.  0. -1.  1.  1.  1.  1.  1.  0. -1.  0.
   1. -1.  1.  1.  0.  0.]
 [-1.  1.  0.  1.  1. -1.  0.  1.  1.  1. -1.  1.  1. -1.  0.  1.  1.  1.
  -1.  1. -1.  1.  1.  0.]
 [ 0.  1. -1.  1.  1.  1.  0.  1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.
   0.  0.  0. -1. -1.  1.]
 [ 0. -1.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  1.
   0.  1.  0. -1.  0. -1.]
 [-1. -1.  1. -1.  0.  0.  0.  0.  1.  1.  1.  1.  1.  0.  1. -1.  1.  1.
   0.  0. -1.  0.  1. -1.]
 [ 0. -1. -1.  0. -1. -1.  0. -1.  0.  1.  0. -1. -1.  1. -1. -1. -1.  1.
  -1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 182, -1.0: 95})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 182, -1.0: 95})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({1.0: 218, -1.0: 51})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 218, -1.0: 51})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 224, 1.0: 156})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 224, 1.0: 156})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 163, 1.0: 160})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 283, -1.0: 213})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 283, -1.0: 213})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 228, -1.0: 173})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 239, 1.0: 207})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 215, 1.0: 159})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({1.0: 349, -1.0: 44})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 349, -1.0: 44})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 239, -1.0: 160})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 239, -1.0: 160})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 234, 1.0: 167})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 243, -1.0: 44})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({1.0: 243, -1.0: 44})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
Counter({1.0: 153, -1.0: 127})
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
positive and negative ratio
Counter({1.0: 153, -1.0: 127})
after cutting matrix
[[ 0.  0.  0. -1.  1.  1. -1.  1.  1. -1. -1.  0. -1.  0. -1.  1.]
 [ 0. -1.  0.  0. -1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  1. -1.]
 [ 0.  1.  1.  0.  0.  1. -1.  1.  1. -1. -1.  0.  1. -1. -1.  1.]
 [ 1.  1.  1.  0.  0.  1.  1.  0.  0.  0.  0.  0.  0.  1.  1.  0.]
 [ 1. -1.  1. -1. -1.  0.  1.  1.  1.  1.  1.  0. -1.  1.  1.  1.]
 [-1.  1.  1.  0.  1.  1. -1.  1.  1. -1.  0.  1.  1. -1. -1.  1.]
 [ 0.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  0. -1.]
 [ 0. -1.  0.  1.  0.  1.  0.  0.  0. -1.  0.  0.  0.  0.  0. -1.]
 [-1. -1. -1.  0.  0.  1.  1.  1.  1.  0.  1. -1.  1.  0. -1.  0.]
 [ 0. -1.  0.  0. -1.  0.  0. -1. -1.  1. -1. -1. -1. -1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 128, 1.0: 109})
Counter({-1.0: 290, 1.0: 223})
Counter({1.0: 277, -1.0: 61})
Counter({-1.0: 103, 1.0: 66})
Counter({-1.0: 163, 1.0: 160})
Counter({1.0: 399, -1.0: 58})
Counter({1.0: 228, -1.0: 173})
Counter({1.0: 390, -1.0: 51})
Counter({1.0: 390, -1.0: 51})
Counter({-1.0: 239, 1.0: 207})
Counter({-1.0: 215, 1.0: 159})
Counter({-1.0: 112, 1.0: 111})
Counter({1.0: 287, -1.0: 154})
Counter({-1.0: 175, 1.0: 167})
Counter({-1.0: 234, 1.0: 167})
Counter({1.0: 227, -1.0: 168})
cutting matrix's confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整


SVM classifier
Time: 2019-01-09 22:23:21
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1. -1.  1.]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({1.0: 36, -1.0: 20})
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [-1.  1.  0.]
 [-1.  1.  1.]
 [-1. -1.  0.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
confusion matrix
[[29  5  0  0  0]
 [ 6  1  2  0  0]
 [ 0  5  2  0  0]
 [ 1  3  1  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [-1.  1.  0.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  0. -1.]
 [ 1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  5  0  0  0]
 [ 6  1  2  0  0]
 [ 0  5  2  0  0]
 [ 1  3  1  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.2 0.8 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   0.5 ]
 [0.   0.   0.75 0.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.]
 [-1.  1.  1.  1.  0.]
 [-1. -1.  0. -1.  0.]
 [ 1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[29  0  5  0  0]
 [ 6  0  3  0  0]
 [ 0  1  6  0  0]
 [ 1  0  4  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.4 1.  0.4]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 0.4 0.6]
 [0.  0.  0.6 0.  0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.]
 [-1.  1.  1.  1.  0.  1.]
 [-1. -1.  0. -1.  0. -1.]
 [ 1.  1. -1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  5  0  0]
 [ 6  0  3  0  0]
 [ 0  1  6  0  0]
 [ 1  0  4  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.4 1.2 0.4]
 [0.  0.  0.4 0.8 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67 0.33 0.5  0.33]
 [0.   0.   0.5  0.   0.67 0.  ]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.67 0.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  5  0  0]
 [ 6  0  3  0  0]
 [ 0  1  6  0  0]
 [ 1  0  4  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.4 1.4 0.4]
 [0.  0.  0.4 1.  0.6]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.57 0.29 0.43 0.29 0.29]
 [0.   0.   0.43 0.   0.57 0.   0.  ]
 [0.   0.   0.   0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.57 0.   0.  ]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.]
 [-1. -1.  0. -1.  0. -1. -1.  1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  1  1  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.8 0.6 1.4 0.4]
 [0.  0.  0.4 1.2 0.8]
 [0.  0.  0.  1.2 0.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.25 0.38 0.25 0.25 0.12]
 [0.   0.   0.38 0.   0.5  0.   0.   0.38]
 [0.   0.   0.   0.38 0.38 0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.5  0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.5  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  1  1  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.8 0.6 1.6 0.4]
 [0.  0.  0.4 1.4 0.8]
 [0.  0.  0.  1.4 0.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.44 0.22 0.33 0.22 0.22 0.11 0.22]
 [0.   0.   0.33 0.   0.44 0.   0.   0.33 0.  ]
 [0.   0.   0.   0.33 0.33 0.33 0.33 0.44 0.33]
 [0.   0.   0.   0.   0.44 0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.44 0.44 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 1.8 0.4]
 [0.  0.  0.6 1.6 0.8]
 [0.  0.  0.  1.4 0.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.2 0.3 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.3 0.  0.4 0.  0.  0.3 0.  0.1]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.  0.  0.3 0.  0.1]
 [0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 2.  0.4]
 [0.  0.  0.6 1.8 0.8]
 [0.  0.  0.  1.6 0.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.36 0.18 0.27 0.18 0.18 0.09 0.18 0.09 0.18]
 [0.   0.   0.27 0.   0.36 0.   0.   0.27 0.   0.09 0.  ]
 [0.   0.   0.   0.27 0.27 0.27 0.27 0.36 0.27 0.36 0.27]
 [0.   0.   0.   0.   0.36 0.   0.   0.27 0.   0.09 0.  ]
 [0.   0.   0.   0.   0.   0.36 0.36 0.27 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.   0.09 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.   0.09 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 2.2 0.4]
 [0.  0.  0.6 2.  0.8]
 [0.  0.  0.  1.8 0.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.33 0.17 0.25 0.17 0.17 0.08 0.17 0.08 0.17 0.17]
 [0.   0.   0.25 0.   0.33 0.   0.   0.25 0.   0.08 0.   0.  ]
 [0.   0.   0.   0.25 0.25 0.25 0.25 0.33 0.25 0.33 0.25 0.25]
 [0.   0.   0.   0.   0.33 0.   0.   0.25 0.   0.08 0.   0.  ]
 [0.   0.   0.   0.   0.   0.33 0.33 0.25 0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.   0.08 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.   0.08 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1. -1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 2.4 0.4]
 [0.  0.  0.6 2.2 0.8]
 [0.  0.  0.  2.  0.8]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.31 0.15 0.23 0.15 0.15 0.08 0.15 0.08 0.15 0.15 0.23]
 [0.   0.   0.23 0.   0.31 0.   0.   0.23 0.   0.08 0.   0.   0.38]
 [0.   0.   0.   0.23 0.23 0.23 0.23 0.31 0.23 0.31 0.23 0.23 0.31]
 [0.   0.   0.   0.   0.31 0.   0.   0.23 0.   0.08 0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.31 0.31 0.23 0.31 0.31 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.   0.08 0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.   0.08 0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.15 0.23 0.23 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1. -1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 2.4 0.6]
 [0.  0.  0.6 2.2 1. ]
 [0.  0.  0.  2.  1. ]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.29 0.14 0.21 0.14 0.14 0.07 0.14 0.07 0.14 0.14 0.21 0.29]
 [0.   0.   0.21 0.   0.29 0.   0.   0.21 0.   0.07 0.   0.   0.36 0.14]
 [0.   0.   0.   0.21 0.21 0.21 0.21 0.29 0.21 0.29 0.21 0.21 0.29 0.14]
 [0.   0.   0.   0.   0.29 0.   0.   0.21 0.   0.07 0.   0.   0.36 0.14]
 [0.   0.   0.   0.   0.   0.29 0.29 0.21 0.29 0.29 0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.   0.07 0.   0.   0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.   0.07 0.   0.   0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.14 0.21 0.21 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.   0.   0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 2.6 0.6]
 [0.  0.  0.6 2.4 1. ]
 [0.  0.  0.  2.2 1. ]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.27 0.13 0.2  0.13 0.13 0.07 0.13 0.07 0.13 0.13 0.2  0.27
  0.13]
 [0.   0.   0.2  0.   0.27 0.   0.   0.2  0.   0.07 0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.2  0.2  0.2  0.2  0.27 0.2  0.27 0.2  0.2  0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.27 0.   0.   0.2  0.   0.07 0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.   0.27 0.27 0.2  0.27 0.27 0.27 0.27 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.   0.07 0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.   0.07 0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.13 0.2  0.2  0.13 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.27 0.2
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.13
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 2.8 0.6]
 [0.  0.  0.6 2.6 1. ]
 [0.  0.  0.  2.4 1. ]
 [0.  0.  0.  0.  2.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.25 0.12 0.19 0.12 0.12 0.06 0.12 0.06 0.12 0.12 0.19 0.25
  0.12 0.12]
 [0.   0.   0.19 0.   0.25 0.   0.   0.19 0.   0.06 0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.19 0.19 0.19 0.19 0.25 0.19 0.25 0.19 0.19 0.25 0.12
  0.19 0.19]
 [0.   0.   0.   0.   0.25 0.   0.   0.19 0.   0.06 0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.25 0.25 0.19 0.25 0.25 0.25 0.25 0.25 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.   0.06 0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.   0.06 0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.12 0.19 0.19 0.12 0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.25 0.19
  0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.12
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 36, -1.0: 20})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 41, 0.0: 15})
3 classifiers pre label
Counter({1.0: 56})
4 classifiers pre label
Counter({1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 56})
16 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.8 3.  0.6]
 [0.  0.  0.6 2.8 1. ]
 [0.  0.  0.  2.6 1. ]
 [0.  0.  0.  0.  3. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.24 0.12 0.18 0.12 0.12 0.06 0.12 0.06 0.12 0.12 0.18 0.24
  0.12 0.12 0.12]
 [0.   0.   0.18 0.   0.24 0.   0.   0.18 0.   0.06 0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.18 0.18 0.18 0.18 0.24 0.18 0.24 0.18 0.18 0.24 0.12
  0.18 0.18 0.18]
 [0.   0.   0.   0.   0.24 0.   0.   0.18 0.   0.06 0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.24 0.24 0.18 0.24 0.24 0.24 0.24 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.06 0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.06 0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.12 0.18 0.18 0.12 0.18
  0.18 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.24 0.18
  0.06 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.12
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})

**********      classifier acc  **************
[0.768, 0.911, 0.738, 0.911, 0.791, 0.911, 0.911, 0.714, 0.911, 0.786, 0.911, 0.911, 0.911, 0.982, 0.911, 0.911, 0.911]
before cutting matrix
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  0.  1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1.  0. -1.  0. -1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  0.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 98, -1.0: 68})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 105, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 105, -1.0: 9})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 121, -1.0: 45})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 121, -1.0: 45})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 127, -1.0: 39})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
positive and negative ratio
Counter({1.0: 127, -1.0: 39})
after cutting matrix
[[ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({-1.0: 143, 1.0: 23})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
Counter({1.0: 143, -1.0: 23})
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-09 22:23:24
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0.  0.]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  2  0  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 0. -1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.]
 [-1.  1. -1.]
 [ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 0. -1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  1  1  0]
 [ 5  0  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.6]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  1. -1.]
select_j_column
[ 1. -1.  1.  0. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 0.  1.  0.  1.]
 [ 0.  1.  1.  1.]
 [ 0. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[28  0  0  6  0]
 [ 5  0  0  4  0]
 [ 0  0  1  6  0]
 [ 1  0  0  4  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.8]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.5  1.25]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1. -1.  0.]
 [-1.  1. -1.  1.  1.]
 [ 0.  1.  0.  1.  1.]
 [ 0.  1.  1.  1. -1.]
 [ 0. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  0  6  1  0]
 [ 1  0  3  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.8 0.8 0.6 1. ]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.4 1.  1. ]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[ 1.  0. -1.  0.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1.]
 [-1.  1. -1.  1.  1.  0.]
 [ 0.  1.  0.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.]
 [ 0. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.  1.  0.6 1.2]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33 0.83 0.83 0.83]
 [0.   0.   0.33 0.33 0.33 0.67]
 [0.   0.   0.   0.67 0.67 0.83]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  0.  1. -1.  1.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.]
 [-1.  1. -1.  1.  1.  0.  1.]
 [ 0.  1.  0.  1.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.]
 [ 0. -1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.2 1.2 0.8 1.4]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.29 0.71 0.71 0.71 0.71]
 [0.   0.   0.29 0.29 0.29 0.57 0.29]
 [0.   0.   0.   0.57 0.57 0.71 0.57]
 [0.   0.   0.   0.   0.43 0.29 0.  ]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.2 1.4 1.  1.6]
 [0.  0.  0.8 1.  1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 0.62 0.62 0.62 0.62 0.62]
 [0.   0.   0.25 0.25 0.25 0.5  0.25 0.38]
 [0.   0.   0.   0.5  0.5  0.62 0.5  0.38]
 [0.   0.   0.   0.   0.38 0.25 0.   0.5 ]
 [0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  0  5  2  0]
 [ 1  0  3  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.2 1.6 1.2 1.8]
 [0.  0.  1.  1.2 1.2]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.22 0.56 0.56 0.56 0.56 0.56 0.56]
 [0.   0.   0.22 0.22 0.22 0.44 0.22 0.33 0.44]
 [0.   0.   0.   0.44 0.44 0.56 0.44 0.33 0.56]
 [0.   0.   0.   0.   0.33 0.22 0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.33 0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.22 0.44 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0.  1. -1.  1.]
select_j_column
[ 0.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.2 1.8 1.4 2. ]
 [0.  0.  1.2 1.4 1.4]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.2 0.5 0.5 0.5 0.5 0.5 0.5 0.5]
 [0.  0.  0.2 0.2 0.2 0.4 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.4 0.4 0.5 0.4 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.2 0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.4 2.  1.6 2.2]
 [0.  0.  1.2 1.4 1.4]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.18 0.45 0.45 0.45 0.45 0.45 0.45 0.45 0.45]
 [0.   0.   0.18 0.18 0.18 0.36 0.18 0.27 0.36 0.27 0.18]
 [0.   0.   0.   0.36 0.36 0.45 0.36 0.27 0.45 0.36 0.36]
 [0.   0.   0.   0.   0.27 0.18 0.   0.36 0.27 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.27 0.27 0.27 0.18 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.18 0.36 0.09 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  1. -1.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 10, 0.0: 3})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.6 2.2 1.8 2.4]
 [0.  0.  1.4 1.6 1.4]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.17 0.42 0.42 0.42 0.42 0.42 0.42 0.42 0.42 0.25]
 [0.   0.   0.17 0.17 0.17 0.33 0.17 0.25 0.33 0.25 0.17 0.33]
 [0.   0.   0.   0.33 0.33 0.42 0.33 0.25 0.42 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.25 0.17 0.   0.33 0.25 0.33 0.   0.17]
 [0.   0.   0.   0.   0.   0.25 0.25 0.25 0.17 0.08 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.17 0.33 0.08 0.17 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.33 0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0. -1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 10, 0.0: 3})
12 classifiers pre label
Counter({0.0: 39, 1.0: 17})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  1  4  2  0]
 [ 1  0  3  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.8 2.4 2.  2.6]
 [0.  0.  1.4 1.8 1.6]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.15 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.23 0.38]
 [0.   0.   0.15 0.15 0.15 0.31 0.15 0.23 0.31 0.23 0.15 0.31 0.15]
 [0.   0.   0.   0.31 0.31 0.38 0.31 0.23 0.38 0.31 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.23 0.15 0.   0.31 0.23 0.31 0.   0.15 0.23]
 [0.   0.   0.   0.   0.   0.23 0.23 0.23 0.15 0.08 0.23 0.31 0.  ]
 [0.   0.   0.   0.   0.   0.   0.15 0.31 0.08 0.15 0.15 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.31 0.   0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.15 0.31 0.38 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.  0.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.  1.  1.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.  1.  0.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0. -1.  0.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 10, 0.0: 3})
12 classifiers pre label
Counter({0.0: 39, 1.0: 17})
13 classifiers pre label
Counter({0.0: 42, 1.0: 14})
confusion matrix
[[28  2  3  1  0]
 [ 5  1  1  2  0]
 [ 0  4  1  2  0]
 [ 1  2  1  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  2.  2.4 2.  2.8]
 [0.  0.  1.6 2.  1.8]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.14 0.36 0.36 0.36 0.36 0.36 0.36 0.36 0.36 0.21 0.36 0.21]
 [0.   0.   0.14 0.14 0.14 0.29 0.14 0.21 0.29 0.21 0.14 0.29 0.14 0.21]
 [0.   0.   0.   0.29 0.29 0.36 0.29 0.21 0.36 0.29 0.29 0.29 0.29 0.21]
 [0.   0.   0.   0.   0.21 0.14 0.   0.29 0.21 0.29 0.   0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.21 0.21 0.21 0.14 0.07 0.21 0.29 0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.14 0.29 0.07 0.14 0.14 0.21 0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.29 0.   0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.14 0.29 0.36 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.29 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  1. -1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.  0.  0.  1.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.  1.  1. -1.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.  1.  0.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0. -1.  0.  1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 10, 0.0: 3})
12 classifiers pre label
Counter({0.0: 39, 1.0: 17})
13 classifiers pre label
Counter({0.0: 42, 1.0: 14})
14 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  0  5  2  0]
 [ 1  0  3  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  2.2 2.4 2.  2.8]
 [0.  0.  1.8 2.2 2. ]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.13 0.33 0.33 0.33 0.33 0.33 0.33 0.33 0.33 0.2  0.33 0.2
  0.2 ]
 [0.   0.   0.13 0.13 0.13 0.27 0.13 0.2  0.27 0.2  0.13 0.27 0.13 0.2
  0.13]
 [0.   0.   0.   0.27 0.27 0.33 0.27 0.2  0.33 0.27 0.27 0.27 0.27 0.2
  0.13]
 [0.   0.   0.   0.   0.2  0.13 0.   0.27 0.2  0.27 0.   0.13 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.2  0.2  0.2  0.13 0.07 0.2  0.27 0.   0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.13 0.27 0.07 0.13 0.13 0.2  0.2  0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.27 0.   0.13 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.13 0.27 0.33 0.2  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.27 0.13 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.07 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.  0.  0.  1.  1.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.  1.  1. -1. -1.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.  1.  0.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0. -1.  0.  1.  1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 10, 0.0: 3})
12 classifiers pre label
Counter({0.0: 39, 1.0: 17})
13 classifiers pre label
Counter({0.0: 42, 1.0: 14})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  0  5  2  0]
 [ 1  0  3  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  2.4 2.4 2.  2.8]
 [0.  0.  2.  2.4 2.2]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.12 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.19 0.31 0.19
  0.19 0.19]
 [0.   0.   0.12 0.12 0.12 0.25 0.12 0.19 0.25 0.19 0.12 0.25 0.12 0.19
  0.12 0.12]
 [0.   0.   0.   0.25 0.25 0.31 0.25 0.19 0.31 0.25 0.25 0.25 0.25 0.19
  0.12 0.12]
 [0.   0.   0.   0.   0.19 0.12 0.   0.25 0.19 0.25 0.   0.12 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.19 0.19 0.19 0.12 0.06 0.19 0.25 0.   0.12
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.12 0.25 0.06 0.12 0.12 0.19 0.19 0.31
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.25 0.   0.12 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.12 0.25 0.31 0.19 0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.25 0.12 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.06 0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  0.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.  0.  0.  1.  1.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.  1.  1. -1. -1.  0.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.  1.  0.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0. -1.  0.  1.  1. -1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({0.0: 39, 1.0: 17})
5 classifiers pre label
Counter({-1.0: 42, 0.0: 14})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({0.0: 53, -1.0: 2, 1.0: 1})
8 classifiers pre label
Counter({0.0: 53, 1.0: 2, -1.0: 1})
9 classifiers pre label
Counter({0.0: 53, -1.0: 3})
10 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 10, 0.0: 3})
12 classifiers pre label
Counter({0.0: 39, 1.0: 17})
13 classifiers pre label
Counter({0.0: 42, 1.0: 14})
14 classifiers pre label
Counter({1.0: 56})
15 classifiers pre label
Counter({1.0: 56})
16 classifiers pre label
Counter({0.0: 53, -1.0: 3})
confusion matrix
[[28  0  5  1  0]
 [ 5  0  2  2  0]
 [ 0  0  5  2  0]
 [ 1  0  3  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  2.4 2.6 2.2 2.8]
 [0.  0.  2.2 2.6 2.2]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.12 0.29 0.29 0.29 0.29 0.29 0.29 0.29 0.29 0.18 0.29 0.18
  0.18 0.18 0.24]
 [0.   0.   0.12 0.12 0.12 0.24 0.12 0.18 0.24 0.18 0.12 0.24 0.12 0.18
  0.12 0.12 0.24]
 [0.   0.   0.   0.24 0.24 0.29 0.24 0.18 0.29 0.24 0.24 0.24 0.24 0.18
  0.12 0.12 0.29]
 [0.   0.   0.   0.   0.18 0.12 0.   0.24 0.18 0.24 0.   0.12 0.18 0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.18 0.18 0.18 0.12 0.06 0.18 0.24 0.   0.12
  0.24 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.12 0.24 0.06 0.12 0.12 0.18 0.18 0.29
  0.18 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.24 0.   0.12 0.18 0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.12 0.24 0.29 0.18 0.18
  0.24 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.24 0.12 0.24
  0.18 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.06 0.18
  0.24 0.24 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12
  0.24 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.24 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})

**********      classifier acc  **************
[0.791, 0.982, 0.796, 0.786, 0.364, 0.66, 0.786, 0.154, 0.154, 0.077, 0.786, 0.795, 0.364, 0.2, 0.839, 0.839, 0.0]
before cutting matrix
[[ 1.  1.  1. -1.  0. -1. -1.  0.  0.  0. -1. -1.  0.  0.  1.  1.  0.]
 [-1.  1. -1.  1.  1.  0.  1.  0.  0.  0.  1.  1.  1.  1. -1. -1.  0.]
 [ 0.  1.  0.  1.  1.  1.  1. -1.  1.  1.  1.  0.  1.  0.  1.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  0. -1.  0.  1.  1. -1.]
 [ 0. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 89, -1.0: 29})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({1.0: 112, -1.0: 38})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 112, -1.0: 38})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 45, -1.0: 32})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 112, 1.0: 25})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({-1.0: 112, 1.0: 25})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 38})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({-1.0: 89, 1.0: 38})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 45, -1.0: 32})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 45, -1.0: 32})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 29, -1.0: 9})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
positive and negative ratio
Counter({1.0: 29, -1.0: 9})
after cutting matrix
[[ 1. -1. -1.  0.  0.  0. -1.  1.  1.  0.]
 [ 1.  1.  1.  0.  0.  0.  1. -1. -1.  0.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1.  1.  1. -1.  1. -1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 157, -1.0: 9})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 25, 1.0: 23})
Counter({1.0: 25, -1.0: 23})
Counter({-1.0: 32, 1.0: 16})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 137, -1.0: 29})
Counter({-1.0: 23, 1.0: 16})
cutting matrix's confusion matrix
[[28  0  6  0  0]
 [ 5  0  4  0  0]
 [ 0  0  5  1  1]
 [ 1  0  4  0  0]
 [ 0  0  0  0  1]]


SVM classifier
Time: 2019-01-09 22:23:28
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 39, 1.0: 28})
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.17 0.   0.  ]
 [0.   0.   0.17 0.33 0.17 0.17]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
2 classifiers pre label
Counter({1.0: 44, -1.0: 23})
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.5  0.17 0.   0.17]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.33 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
2 classifiers pre label
Counter({1.0: 44, -1.0: 23})
3 classifiers pre label
Counter({1.0: 51, -1.0: 16})
confusion matrix
[[21  0  0  0  1  0]
 [ 2  7  0  0  1  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.5  0.17 0.17 0.17]
 [0.   0.   0.5  0.5  0.17 0.5 ]
 [0.   0.   0.   0.33 0.67 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5 1.  1. ]
 [0.  0.  1.  0.5]
 [0.  0.  0.  1. ]
 [0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})

**********      classifier acc  **************
[0.91, 0.955, 1.0, 0.91]
before cutting matrix
[[-1. -1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
positive and negative ratio
Counter({1.0: 135, -1.0: 66})
after cutting matrix
[[-1. -1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 154, -1.0: 47})
Counter({1.0: 135, -1.0: 66})
cutting matrix's confusion matrix
[[21  0  0  0  1  0]
 [ 2  7  0  0  1  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-09 22:23:29
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  0. -1.  1.  1.]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 40, 0.0: 18, 1.0: 9})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1.  0. -1.]
select_j_column
[-1.  0. -1. -1.  0.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  0.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 98, -1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 40, 0.0: 18, 1.0: 9})
1 classifiers pre label
Counter({1.0: 32, -1.0: 18, 0.0: 17})
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.   0.33 0.17]
 [0.   0.   0.33 0.17 0.17 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 98, -1.0: 37})

**********      classifier acc  **************
[1.0, 0.943]
before cutting matrix
[[-1.  1.]
 [-1.  0.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 98, -1.0: 37})
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 98, -1.0: 37})
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
positive and negative ratio
Counter({1.0: 98, -1.0: 37})
after cutting matrix
[[-1.  1.]
 [-1.  0.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 98, -1.0: 37})
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-09 22:23:29
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({-1.0: 101, 1.0: 87})
confusion matrix
[[13  0  7  0  0  0  0  0  0  0]
 [18  0  3  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [ 5  0 14  0  0  0  0  0  0  0]
 [21  0  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  0 13  0  0  0  0  0  0  0]
 [19  0  2  0  0  0  0  0  0  0]
 [ 2  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
confusion matrix
[[13  0  5  2  0  0  0  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 3  1 15  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.  0.2 0.  0.1 0.1 0. ]
 [0.  0.  0.1 0.2 0.1 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.1 0.2 0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.2 0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
confusion matrix
[[ 4  0  5  0  0  0  9  0  2  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 15  2  0  0  3  0  1  0]
 [ 0  5  0 13  0  0  0  0  1  0]
 [19  2  0  0  0  0  0  0  5  0]
 [ 3  0  0  0  0  0  0  0 13  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  0  1  0  0 14  0  1  0]
 [ 0  0  0  0  0  0  2  0 12  0]]
row HD
[[0.  0.2 0.3 0.1 0.  0.3 0.1 0.1 0.2 0.1]
 [0.  0.  0.1 0.3 0.2 0.1 0.1 0.3 0.2 0.1]
 [0.  0.  0.  0.2 0.3 0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1. -1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 1.  1.  1.  1.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 4  0  7  0  0  0  9  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0 14  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.2 0.3 0.1 0.  0.3 0.2 0.1 0.3 0.2]
 [0.  0.  0.1 0.3 0.2 0.1 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.2 0.3 0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.3 0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  1.25 1.  ]
 [0.   0.   0.75 1.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  0  7  0  0  0  0  0  0  9]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  0  0  0  0  2  0  3]
 [ 0  5  1  0  0  0  0 13  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0  0 13]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  0  1  0  0  0  0  1  0 14]
 [ 0  0 12  0  0  0  0  0  0  2]]
row HD
[[0.  0.2 0.3 0.2 0.  0.4 0.3 0.1 0.3 0.2]
 [0.  0.  0.1 0.4 0.2 0.2 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.3 0.3 0.1 0.4 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.1 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.  0.8 1.2]
 [0.  0.  0.6 1.2 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
confusion matrix
[[ 4  0  7  0  0  0  0  0  0  9]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  0  0  0  0  2  0  3]
 [ 0  5  1  0  0  0  0 13  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0  0 13]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  0  1  0  0  0  0  1  0 14]
 [ 0  0 12  0  0  0  0  0  0  2]]
row HD
[[0.  0.2 0.4 0.3 0.  0.5 0.3 0.2 0.4 0.2]
 [0.  0.  0.2 0.5 0.2 0.3 0.3 0.4 0.4 0.2]
 [0.  0.  0.  0.3 0.4 0.1 0.5 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.3 0.2 0.4 0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.5 0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.83 0.67 1.   0.  ]
 [0.   0.   0.5  1.   0.67 1.  ]
 [0.   0.   0.   0.5  0.83 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
confusion matrix
[[ 4  0  7  0  0  0  9  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  3  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0 14  0  0  0]
 [ 0  0 12  0  0  0  2  0  0  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.6 0.4 0.2 0.5 0.2]
 [0.  0.  0.2 0.5 0.3 0.3 0.3 0.5 0.4 0.3]
 [0.  0.  0.  0.3 0.5 0.1 0.5 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.6 0.4 0.2 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 0.71 0.57 0.86 0.   1.  ]
 [0.   0.   0.43 0.86 0.57 0.86 0.43]
 [0.   0.   0.   0.43 0.71 0.71 0.29]
 [0.   0.   0.   0.   0.57 0.57 0.71]
 [0.   0.   0.   0.   0.   0.86 0.43]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  0  7  0  0  0  0  0  0  9]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  0  3]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0  0 13]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0  0  0  0 14]
 [ 0  0 12  0  0  0  0  0  0  2]]
row HD
[[0.  0.3 0.5 0.4 0.  0.7 0.5 0.2 0.5 0.2]
 [0.  0.  0.2 0.5 0.3 0.4 0.4 0.5 0.4 0.3]
 [0.  0.  0.  0.3 0.5 0.2 0.6 0.3 0.2 0.5]
 [0.  0.  0.  0.  0.4 0.3 0.5 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.7 0.5 0.2 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.62 0.5  0.75 0.   0.88 0.62]
 [0.   0.   0.38 0.75 0.5  0.75 0.38 0.38]
 [0.   0.   0.   0.38 0.62 0.62 0.25 0.5 ]
 [0.   0.   0.   0.   0.5  0.5  0.62 0.38]
 [0.   0.   0.   0.   0.   0.75 0.38 0.12]
 [0.   0.   0.   0.   0.   0.   0.88 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  9  7  0  0  0  0  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  4 16  2  0  0  0  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1 13  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5 14  1  1  0  0  0  0  0  0]
 [ 0  2 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.7 0.6 0.2 0.5 0.3]
 [0.  0.  0.2 0.5 0.3 0.4 0.5 0.5 0.4 0.4]
 [0.  0.  0.  0.3 0.5 0.2 0.7 0.3 0.2 0.6]
 [0.  0.  0.  0.  0.4 0.3 0.6 0.2 0.3 0.7]
 [0.  0.  0.  0.  0.  0.7 0.6 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.56 0.44 0.67 0.   0.78 0.56 0.33]
 [0.   0.   0.33 0.67 0.44 0.67 0.33 0.33 0.56]
 [0.   0.   0.   0.33 0.56 0.56 0.22 0.44 0.44]
 [0.   0.   0.   0.   0.44 0.44 0.56 0.33 0.11]
 [0.   0.   0.   0.   0.   0.67 0.33 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.78 0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  9  7  0  0  0  0  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  4 16  2  0  0  0  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1 13  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5 14  1  1  0  0  0  0  0  0]
 [ 0  2 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.7 0.7 0.2 0.5 0.3]
 [0.  0.  0.2 0.5 0.3 0.4 0.6 0.5 0.4 0.4]
 [0.  0.  0.  0.3 0.5 0.2 0.8 0.3 0.2 0.6]
 [0.  0.  0.  0.  0.4 0.3 0.7 0.2 0.3 0.7]
 [0.  0.  0.  0.  0.  0.7 0.7 0.2 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.5 0.4 0.6 0.  0.7 0.5 0.3 0.4]
 [0.  0.  0.3 0.6 0.4 0.6 0.3 0.3 0.5 0.4]
 [0.  0.  0.  0.3 0.5 0.5 0.2 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.5 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.6 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  9  7  0  0  0  0  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  4 16  2  0  0  0  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1 13  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5 14  1  1  0  0  0  0  0  0]
 [ 0  2 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.7 0.7 0.2 0.5 0.4]
 [0.  0.  0.2 0.5 0.3 0.4 0.6 0.5 0.4 0.5]
 [0.  0.  0.  0.3 0.5 0.2 0.8 0.3 0.2 0.7]
 [0.  0.  0.  0.  0.4 0.3 0.7 0.2 0.3 0.8]
 [0.  0.  0.  0.  0.  0.7 0.7 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.45 0.36 0.55 0.   0.64 0.45 0.27 0.36 0.36]
 [0.   0.   0.27 0.55 0.36 0.55 0.27 0.27 0.45 0.36 0.36]
 [0.   0.   0.   0.27 0.45 0.45 0.18 0.36 0.36 0.45 0.45]
 [0.   0.   0.   0.   0.36 0.36 0.45 0.27 0.09 0.18 0.18]
 [0.   0.   0.   0.   0.   0.55 0.27 0.09 0.27 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.64 0.45 0.27 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.55 0.45 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  9  7  0  0  0  0  0  0  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  4 16  2  0  0  0  0  0  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1 13  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5 14  1  1  0  0  0  0  0  0]
 [ 0  2 12  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.7 0.8 0.2 0.5 0.4]
 [0.  0.  0.2 0.5 0.3 0.4 0.7 0.5 0.4 0.5]
 [0.  0.  0.  0.3 0.5 0.2 0.9 0.3 0.2 0.7]
 [0.  0.  0.  0.  0.4 0.3 0.8 0.2 0.3 0.8]
 [0.  0.  0.  0.  0.  0.7 0.8 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.42 0.33 0.5  0.   0.58 0.42 0.25 0.33 0.33 0.33]
 [0.   0.   0.25 0.5  0.33 0.5  0.25 0.25 0.42 0.33 0.33 0.33]
 [0.   0.   0.   0.25 0.42 0.42 0.17 0.33 0.33 0.42 0.42 0.42]
 [0.   0.   0.   0.   0.33 0.33 0.42 0.25 0.08 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.5  0.25 0.08 0.25 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.58 0.42 0.25 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.5  0.42 0.58 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.08 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  3  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.7 0.9 0.2 0.6 0.5]
 [0.  0.  0.2 0.5 0.3 0.4 0.8 0.5 0.5 0.6]
 [0.  0.  0.  0.3 0.5 0.2 1.  0.3 0.3 0.8]
 [0.  0.  0.  0.  0.4 0.3 0.9 0.2 0.4 0.9]
 [0.  0.  0.  0.  0.  0.7 0.9 0.2 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.5 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.46 0.38 0.31 0.46 0.   0.54 0.38 0.23 0.31 0.31 0.31 0.31]
 [0.   0.   0.23 0.46 0.31 0.46 0.23 0.23 0.38 0.31 0.31 0.31 0.46]
 [0.   0.   0.   0.23 0.38 0.38 0.15 0.31 0.31 0.38 0.38 0.38 0.23]
 [0.   0.   0.   0.   0.31 0.31 0.38 0.23 0.08 0.15 0.15 0.15 0.  ]
 [0.   0.   0.   0.   0.   0.46 0.23 0.08 0.23 0.15 0.31 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.54 0.38 0.23 0.31 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.46 0.38 0.54 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.08 0.23 0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  3  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.8 1.  0.2 0.6 0.5]
 [0.  0.  0.2 0.5 0.3 0.5 0.9 0.5 0.5 0.6]
 [0.  0.  0.  0.3 0.5 0.3 1.1 0.3 0.3 0.8]
 [0.  0.  0.  0.  0.4 0.4 1.  0.2 0.4 0.9]
 [0.  0.  0.  0.  0.  0.8 1.  0.2 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.6 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.36 0.29 0.43 0.   0.5  0.36 0.21 0.29 0.29 0.29 0.29 0.36]
 [0.   0.   0.21 0.43 0.29 0.43 0.21 0.21 0.36 0.29 0.29 0.29 0.43 0.21]
 [0.   0.   0.   0.21 0.36 0.36 0.14 0.29 0.29 0.36 0.36 0.36 0.21 0.29]
 [0.   0.   0.   0.   0.29 0.29 0.36 0.21 0.07 0.14 0.14 0.14 0.   0.21]
 [0.   0.   0.   0.   0.   0.43 0.21 0.07 0.21 0.14 0.29 0.14 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.5  0.36 0.21 0.29 0.29 0.29 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.43 0.36 0.5  0.36 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.07 0.21 0.07 0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  3  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.9 1.1 0.2 0.6 0.5]
 [0.  0.  0.2 0.5 0.3 0.6 1.  0.5 0.5 0.6]
 [0.  0.  0.  0.3 0.5 0.4 1.2 0.3 0.3 0.8]
 [0.  0.  0.  0.  0.4 0.5 1.1 0.2 0.4 0.9]
 [0.  0.  0.  0.  0.  0.9 1.1 0.2 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.7 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.3 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.33 0.27 0.4  0.   0.47 0.33 0.2  0.27 0.27 0.27 0.27 0.33
  0.33]
 [0.   0.   0.2  0.4  0.27 0.4  0.2  0.2  0.33 0.27 0.27 0.27 0.4  0.2
  0.2 ]
 [0.   0.   0.   0.2  0.33 0.33 0.13 0.27 0.27 0.33 0.33 0.33 0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.27 0.27 0.33 0.2  0.07 0.13 0.13 0.13 0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.4  0.2  0.07 0.2  0.13 0.27 0.13 0.27 0.07
  0.07]
 [0.   0.   0.   0.   0.   0.   0.47 0.33 0.2  0.27 0.27 0.27 0.27 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.4  0.33 0.47 0.33 0.33 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.07 0.2  0.07 0.2  0.
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.07 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.13 0.07
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.07
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  3  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.9 1.2 0.2 0.7 0.6]
 [0.  0.  0.2 0.5 0.3 0.6 1.1 0.5 0.6 0.7]
 [0.  0.  0.  0.3 0.5 0.4 1.3 0.3 0.4 0.9]
 [0.  0.  0.  0.  0.4 0.5 1.2 0.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.9 1.2 0.2 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.9 0.7 0.8 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.31 0.25 0.38 0.   0.44 0.31 0.19 0.25 0.25 0.25 0.25 0.31
  0.31 0.25]
 [0.   0.   0.19 0.38 0.25 0.38 0.19 0.19 0.31 0.25 0.25 0.25 0.38 0.19
  0.19 0.38]
 [0.   0.   0.   0.19 0.31 0.31 0.12 0.25 0.25 0.31 0.31 0.31 0.19 0.25
  0.25 0.19]
 [0.   0.   0.   0.   0.25 0.25 0.31 0.19 0.06 0.12 0.12 0.12 0.   0.19
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.38 0.19 0.06 0.19 0.12 0.25 0.12 0.25 0.06
  0.06 0.25]
 [0.   0.   0.   0.   0.   0.   0.44 0.31 0.19 0.25 0.25 0.25 0.25 0.31
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.38 0.31 0.44 0.31 0.31 0.25
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06 0.19 0.06 0.19 0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.12
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.12 0.06
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.19
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.19 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  3  0]
 [ 0  5  1 13  0  0  0  0  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 5  0  1  1  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.3 0.5 0.4 0.  0.9 1.3 0.2 0.7 0.6]
 [0.  0.  0.2 0.5 0.3 0.6 1.2 0.5 0.6 0.7]
 [0.  0.  0.  0.3 0.5 0.4 1.4 0.3 0.4 0.9]
 [0.  0.  0.  0.  0.4 0.5 1.3 0.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.9 1.3 0.2 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  1.  0.7 0.8 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.29 0.24 0.35 0.   0.41 0.29 0.18 0.24 0.24 0.24 0.24 0.29
  0.29 0.24 0.24]
 [0.   0.   0.18 0.35 0.24 0.35 0.18 0.18 0.29 0.24 0.24 0.24 0.35 0.18
  0.18 0.35 0.24]
 [0.   0.   0.   0.18 0.29 0.29 0.12 0.24 0.24 0.29 0.29 0.29 0.18 0.24
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.24 0.24 0.29 0.18 0.06 0.12 0.12 0.12 0.   0.18
  0.18 0.   0.12]
 [0.   0.   0.   0.   0.   0.35 0.18 0.06 0.18 0.12 0.24 0.12 0.24 0.06
  0.06 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.41 0.29 0.18 0.24 0.24 0.24 0.24 0.29
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.35 0.29 0.41 0.29 0.29 0.24
  0.24 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06 0.18 0.06 0.18 0.
  0.   0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.12
  0.12 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.12 0.06
  0.06 0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.18
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06
  0.06 0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.18 0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  0  0  0  0  2  3  0]
 [ 0  5  1  0  0  0  0 13  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  0  1  0  0  0  0  1 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.4 0.5 0.5 0.  1.  1.4 0.2 0.8 0.6]
 [0.  0.  0.3 0.5 0.4 0.6 1.2 0.6 0.6 0.8]
 [0.  0.  0.  0.4 0.5 0.5 1.5 0.3 0.5 0.9]
 [0.  0.  0.  0.  0.5 0.5 1.3 0.3 0.5 1.1]
 [0.  0.  0.  0.  0.  1.  1.4 0.2 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.8 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.28 0.22 0.33 0.   0.39 0.28 0.17 0.22 0.22 0.22 0.22 0.28
  0.28 0.22 0.22 0.33]
 [0.   0.   0.17 0.33 0.22 0.33 0.17 0.17 0.28 0.22 0.22 0.22 0.33 0.17
  0.17 0.33 0.22 0.22]
 [0.   0.   0.   0.17 0.28 0.28 0.11 0.22 0.22 0.28 0.28 0.28 0.17 0.22
  0.22 0.17 0.28 0.17]
 [0.   0.   0.   0.   0.22 0.22 0.28 0.17 0.06 0.11 0.11 0.11 0.   0.17
  0.17 0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.33 0.17 0.06 0.17 0.11 0.22 0.11 0.22 0.06
  0.06 0.22 0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.39 0.28 0.17 0.22 0.22 0.22 0.22 0.28
  0.28 0.22 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.33 0.28 0.39 0.28 0.28 0.22
  0.22 0.28 0.28 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.06 0.17 0.06 0.17 0.
  0.   0.17 0.06 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.06 0.11
  0.11 0.06 0.06 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.   0.11 0.06
  0.06 0.11 0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.11 0.17
  0.17 0.11 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.06
  0.06 0.11 0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.17 0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.06 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.06 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  19 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
18 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  0  0  0  0  2  3  0]
 [ 0  5  1  0  0  0  0 13  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  0  1  0  0  0  0  1 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.5 0.6 0.5 0.  1.1 1.4 0.2 0.9 0.7]
 [0.  0.  0.3 0.6 0.5 0.6 1.3 0.7 0.6 0.8]
 [0.  0.  0.  0.5 0.6 0.5 1.6 0.4 0.5 0.9]
 [0.  0.  0.  0.  0.5 0.6 1.3 0.3 0.6 1.2]
 [0.  0.  0.  0.  0.  1.1 1.4 0.2 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  1.1 0.9 0.8 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.26 0.21 0.32 0.   0.37 0.26 0.16 0.21 0.21 0.21 0.21 0.26
  0.26 0.21 0.21 0.32 0.32]
 [0.   0.   0.16 0.32 0.21 0.32 0.16 0.16 0.26 0.21 0.21 0.21 0.32 0.16
  0.16 0.32 0.21 0.21 0.11]
 [0.   0.   0.   0.16 0.26 0.26 0.11 0.21 0.21 0.26 0.26 0.26 0.16 0.21
  0.21 0.16 0.26 0.16 0.05]
 [0.   0.   0.   0.   0.21 0.21 0.26 0.16 0.05 0.11 0.11 0.11 0.   0.16
  0.16 0.   0.11 0.21 0.21]
 [0.   0.   0.   0.   0.   0.32 0.16 0.05 0.16 0.11 0.21 0.11 0.21 0.05
  0.05 0.21 0.11 0.11 0.32]
 [0.   0.   0.   0.   0.   0.   0.37 0.26 0.16 0.21 0.21 0.21 0.21 0.26
  0.26 0.21 0.21 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.32 0.26 0.37 0.26 0.26 0.21
  0.21 0.26 0.26 0.05 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.05 0.16 0.05 0.16 0.
  0.   0.16 0.05 0.16 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.05 0.05 0.05 0.11
  0.11 0.05 0.05 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.   0.11 0.05
  0.05 0.11 0.   0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.11 0.16
  0.16 0.11 0.11 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.05
  0.05 0.11 0.   0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16
  0.16 0.   0.11 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.16 0.05 0.16 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.16 0.05 0.16 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
18 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
19 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  0  7  0  0  0  0  0  9  0]
 [ 5 13  3  0  0  0  0  0  0  0]
 [ 0  1 16  0  0  0  0  2  3  0]
 [ 0  5  1  0  0  0  0 13  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  0  1  0  0  0  0  1 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.5 0.6 0.5 0.  1.1 1.4 0.2 0.9 0.8]
 [0.  0.  0.3 0.6 0.5 0.6 1.3 0.7 0.6 0.9]
 [0.  0.  0.  0.5 0.6 0.5 1.6 0.4 0.5 1. ]
 [0.  0.  0.  0.  0.5 0.6 1.3 0.3 0.6 1.3]
 [0.  0.  0.  0.  0.  1.1 1.4 0.2 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  1.1 0.9 0.8 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.25 0.2  0.3  0.   0.35 0.25 0.15 0.2  0.2  0.2  0.2  0.25
  0.25 0.2  0.2  0.3  0.3  0.2 ]
 [0.   0.   0.15 0.3  0.2  0.3  0.15 0.15 0.25 0.2  0.2  0.2  0.3  0.15
  0.15 0.3  0.2  0.2  0.1  0.2 ]
 [0.   0.   0.   0.15 0.25 0.25 0.1  0.2  0.2  0.25 0.25 0.25 0.15 0.2
  0.2  0.15 0.25 0.15 0.05 0.25]
 [0.   0.   0.   0.   0.2  0.2  0.25 0.15 0.05 0.1  0.1  0.1  0.   0.15
  0.15 0.   0.1  0.2  0.2  0.1 ]
 [0.   0.   0.   0.   0.   0.3  0.15 0.05 0.15 0.1  0.2  0.1  0.2  0.05
  0.05 0.2  0.1  0.1  0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.25 0.15 0.2  0.2  0.2  0.2  0.25
  0.25 0.2  0.2  0.3  0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.3  0.25 0.35 0.25 0.25 0.2
  0.2  0.25 0.25 0.05 0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.05 0.15 0.05 0.15 0.
  0.   0.15 0.05 0.15 0.25 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.05 0.05 0.05 0.1
  0.1  0.05 0.05 0.25 0.25 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.   0.1  0.05
  0.05 0.1  0.   0.2  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.1  0.15
  0.15 0.1  0.1  0.3  0.2  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.05
  0.05 0.1  0.   0.2  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15
  0.15 0.   0.1  0.2  0.2  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.15 0.05 0.15 0.25 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.15 0.05 0.15 0.25 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.2  0.2  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.2  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1.  1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
18 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
19 classifiers pre label
Counter({1.0: 188})
20 classifiers pre label
Counter({1.0: 124, -1.0: 64})
confusion matrix
[[ 4  3  4  0  0  0  0  0  9  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 0  5 12  0  0  0  0  2  3  0]
 [ 0  6  0  0  0  0  0 13  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  1  0  0  0  0  0  1 14  0]
 [ 0 12  0  0  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.6 0.5 0.  1.2 1.4 0.2 1.  0.9]
 [0.  0.  0.4 0.7 0.6 0.6 1.4 0.8 0.6 0.9]
 [0.  0.  0.  0.5 0.6 0.6 1.6 0.4 0.6 1.1]
 [0.  0.  0.  0.  0.5 0.7 1.3 0.3 0.7 1.4]
 [0.  0.  0.  0.  0.  1.2 1.4 0.2 1.  0.9]
 [0.  0.  0.  0.  0.  0.  1.2 1.  0.8 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.24 0.19 0.29 0.   0.33 0.24 0.14 0.19 0.19 0.19 0.19 0.24
  0.24 0.19 0.19 0.29 0.29 0.19 0.24]
 [0.   0.   0.14 0.29 0.19 0.29 0.14 0.14 0.24 0.19 0.19 0.19 0.29 0.14
  0.14 0.29 0.19 0.19 0.1  0.19 0.14]
 [0.   0.   0.   0.14 0.24 0.24 0.1  0.19 0.19 0.24 0.24 0.24 0.14 0.19
  0.19 0.14 0.24 0.14 0.05 0.24 0.1 ]
 [0.   0.   0.   0.   0.19 0.19 0.24 0.14 0.05 0.1  0.1  0.1  0.   0.14
  0.14 0.   0.1  0.19 0.19 0.1  0.14]
 [0.   0.   0.   0.   0.   0.29 0.14 0.05 0.14 0.1  0.19 0.1  0.19 0.05
  0.05 0.19 0.1  0.1  0.29 0.19 0.24]
 [0.   0.   0.   0.   0.   0.   0.33 0.24 0.14 0.19 0.19 0.19 0.19 0.24
  0.24 0.19 0.19 0.29 0.29 0.19 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.29 0.24 0.33 0.24 0.24 0.19
  0.19 0.24 0.24 0.05 0.14 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.05 0.14 0.05 0.14 0.
  0.   0.14 0.05 0.14 0.24 0.14 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.05 0.05 0.05 0.1
  0.1  0.05 0.05 0.24 0.24 0.05 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.   0.1  0.05
  0.05 0.1  0.   0.19 0.29 0.1  0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.1  0.14
  0.14 0.1  0.1  0.29 0.19 0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1  0.05
  0.05 0.1  0.   0.19 0.29 0.1  0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14
  0.14 0.   0.1  0.19 0.19 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.14 0.05 0.14 0.24 0.14 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.14 0.05 0.14 0.24 0.14 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.19 0.19 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.19 0.29 0.1  0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.19 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.19 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.  1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
18 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
19 classifiers pre label
Counter({1.0: 188})
20 classifiers pre label
Counter({1.0: 124, -1.0: 64})
21 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  3  4  0  0  0  0  0  9  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 0  5 12  0  0  0  0  2  3  0]
 [ 0  6  0  0  0  0  0 13  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  1  0  0  0  0  0  1 14  0]
 [ 0 12  0  0  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.6 0.5 0.  1.3 1.5 0.2 1.  0.9]
 [0.  0.  0.4 0.7 0.6 0.7 1.5 0.8 0.6 0.9]
 [0.  0.  0.  0.5 0.6 0.7 1.7 0.4 0.6 1.1]
 [0.  0.  0.  0.  0.5 0.8 1.4 0.3 0.7 1.4]
 [0.  0.  0.  0.  0.  1.3 1.5 0.2 1.  0.9]
 [0.  0.  0.  0.  0.  0.  1.2 1.1 0.9 1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.23 0.18 0.27 0.   0.32 0.23 0.14 0.18 0.18 0.18 0.18 0.23
  0.23 0.18 0.18 0.27 0.27 0.18 0.23 0.23]
 [0.   0.   0.14 0.27 0.18 0.27 0.14 0.14 0.23 0.18 0.18 0.18 0.27 0.14
  0.14 0.27 0.18 0.18 0.09 0.18 0.14 0.14]
 [0.   0.   0.   0.14 0.23 0.23 0.09 0.18 0.18 0.23 0.23 0.23 0.14 0.18
  0.18 0.14 0.23 0.14 0.05 0.23 0.09 0.18]
 [0.   0.   0.   0.   0.18 0.18 0.23 0.14 0.05 0.09 0.09 0.09 0.   0.14
  0.14 0.   0.09 0.18 0.18 0.09 0.14 0.14]
 [0.   0.   0.   0.   0.   0.27 0.14 0.05 0.14 0.09 0.18 0.09 0.18 0.05
  0.05 0.18 0.09 0.09 0.27 0.18 0.23 0.05]
 [0.   0.   0.   0.   0.   0.   0.32 0.23 0.14 0.18 0.18 0.18 0.18 0.23
  0.23 0.18 0.18 0.27 0.27 0.18 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.23 0.32 0.23 0.23 0.18
  0.18 0.23 0.23 0.05 0.14 0.32 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.05 0.14 0.05 0.14 0.
  0.   0.14 0.05 0.14 0.23 0.14 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.05 0.05 0.05 0.09
  0.09 0.05 0.05 0.23 0.23 0.05 0.18 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.   0.09 0.05
  0.05 0.09 0.   0.18 0.27 0.09 0.23 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.09 0.14
  0.14 0.09 0.09 0.27 0.18 0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.05
  0.05 0.09 0.   0.18 0.27 0.09 0.23 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14
  0.14 0.   0.09 0.18 0.18 0.09 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.14 0.05 0.14 0.23 0.14 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.14 0.05 0.14 0.23 0.14 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.09 0.18 0.18 0.09 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.18 0.27 0.09 0.23 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.18 0.27 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.18 0.05 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
18 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
19 classifiers pre label
Counter({1.0: 188})
20 classifiers pre label
Counter({1.0: 124, -1.0: 64})
21 classifiers pre label
Counter({1.0: 188})
22 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[ 4  3  4  0  0  0  0  0  9  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 0  5 12  0  0  0  0  2  3  0]
 [ 0  6  0  0  0  0  0 13  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  1  0  0  0  0  0  1 14  0]
 [ 0 12  0  0  0  0  0  0  2  0]]
row HD
[[0.  0.6 0.6 0.5 0.  1.4 1.6 0.2 1.  0.9]
 [0.  0.  0.4 0.7 0.6 0.8 1.6 0.8 0.6 0.9]
 [0.  0.  0.  0.5 0.6 0.8 1.8 0.4 0.6 1.1]
 [0.  0.  0.  0.  0.5 0.9 1.5 0.3 0.7 1.4]
 [0.  0.  0.  0.  0.  1.4 1.6 0.2 1.  0.9]
 [0.  0.  0.  0.  0.  0.  1.2 1.2 1.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.8 1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.22 0.17 0.26 0.   0.3  0.22 0.13 0.17 0.17 0.17 0.17 0.22
  0.22 0.17 0.17 0.26 0.26 0.17 0.22 0.22 0.22]
 [0.   0.   0.13 0.26 0.17 0.26 0.13 0.13 0.22 0.17 0.17 0.17 0.26 0.13
  0.13 0.26 0.17 0.17 0.09 0.17 0.13 0.13 0.13]
 [0.   0.   0.   0.13 0.22 0.22 0.09 0.17 0.17 0.22 0.22 0.22 0.13 0.17
  0.17 0.13 0.22 0.13 0.04 0.22 0.09 0.17 0.17]
 [0.   0.   0.   0.   0.17 0.17 0.22 0.13 0.04 0.09 0.09 0.09 0.   0.13
  0.13 0.   0.09 0.17 0.17 0.09 0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.26 0.13 0.04 0.13 0.09 0.17 0.09 0.17 0.04
  0.04 0.17 0.09 0.09 0.26 0.17 0.22 0.04 0.04]
 [0.   0.   0.   0.   0.   0.   0.3  0.22 0.13 0.17 0.17 0.17 0.17 0.22
  0.22 0.17 0.17 0.26 0.26 0.17 0.22 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.26 0.22 0.3  0.22 0.22 0.17
  0.17 0.22 0.22 0.04 0.13 0.3  0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.04 0.13 0.04 0.13 0.
  0.   0.13 0.04 0.13 0.22 0.13 0.17 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.04 0.04 0.04 0.04 0.09
  0.09 0.04 0.04 0.22 0.22 0.04 0.17 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.   0.09 0.04
  0.04 0.09 0.   0.17 0.26 0.09 0.22 0.04 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.09 0.13
  0.13 0.09 0.09 0.26 0.17 0.   0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.04
  0.04 0.09 0.   0.17 0.26 0.09 0.22 0.04 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.13 0.   0.09 0.17 0.17 0.09 0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.13 0.04 0.13 0.22 0.13 0.17 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.13 0.04 0.13 0.22 0.13 0.17 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.09 0.17 0.17 0.09 0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17 0.26 0.09 0.22 0.04 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.17 0.26 0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.04 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.  1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.  1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
1 classifiers pre label
Counter({1.0: 140, -1.0: 48})
2 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
3 classifiers pre label
Counter({1.0: 147, -1.0: 41})
4 classifiers pre label
Counter({1.0: 188})
5 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
6 classifiers pre label
Counter({-1.0: 151, 1.0: 37})
7 classifiers pre label
Counter({1.0: 188})
8 classifiers pre label
Counter({1.0: 188})
9 classifiers pre label
Counter({1.0: 188})
10 classifiers pre label
Counter({1.0: 188})
11 classifiers pre label
Counter({1.0: 188})
12 classifiers pre label
Counter({1.0: 147, -1.0: 41})
13 classifiers pre label
Counter({1.0: 188})
14 classifiers pre label
Counter({1.0: 188})
15 classifiers pre label
Counter({1.0: 147, -1.0: 41})
16 classifiers pre label
Counter({1.0: 188})
17 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
18 classifiers pre label
Counter({-1.0: 124, 1.0: 64})
19 classifiers pre label
Counter({1.0: 188})
20 classifiers pre label
Counter({1.0: 124, -1.0: 64})
21 classifiers pre label
Counter({1.0: 188})
22 classifiers pre label
Counter({1.0: 188})
23 classifiers pre label
Counter({1.0: 107, -1.0: 81})
confusion matrix
[[ 4  1  6  0  0  0  0  0  9  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 0  4 13  0  0  0  0  2  3  0]
 [ 0  5  1  0  0  0  0 13  0  0]
 [19  2  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0 13  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 5  0  1  0  0  0  0  1 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]
row HD
[[0.  0.7 0.6 0.5 0.  1.4 1.7 0.2 1.1 0.9]
 [0.  0.  0.5 0.8 0.7 0.9 1.6 0.9 0.6 1. ]
 [0.  0.  0.  0.5 0.6 0.8 1.9 0.4 0.7 1.1]
 [0.  0.  0.  0.  0.5 0.9 1.6 0.3 0.8 1.4]
 [0.  0.  0.  0.  0.  1.4 1.7 0.2 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.1 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.9 1.4 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.21 0.17 0.25 0.   0.29 0.21 0.12 0.17 0.17 0.17 0.17 0.21
  0.21 0.17 0.17 0.25 0.25 0.17 0.21 0.21 0.21 0.17]
 [0.   0.   0.12 0.25 0.17 0.25 0.12 0.12 0.21 0.17 0.17 0.17 0.25 0.12
  0.12 0.25 0.17 0.17 0.08 0.17 0.12 0.12 0.12 0.17]
 [0.   0.   0.   0.12 0.21 0.21 0.08 0.17 0.17 0.21 0.21 0.21 0.12 0.17
  0.17 0.12 0.21 0.12 0.04 0.21 0.08 0.17 0.17 0.12]
 [0.   0.   0.   0.   0.17 0.17 0.21 0.12 0.04 0.08 0.08 0.08 0.   0.12
  0.12 0.   0.08 0.17 0.17 0.08 0.12 0.12 0.12 0.08]
 [0.   0.   0.   0.   0.   0.25 0.12 0.04 0.12 0.08 0.17 0.08 0.17 0.04
  0.04 0.17 0.08 0.08 0.25 0.17 0.21 0.04 0.04 0.17]
 [0.   0.   0.   0.   0.   0.   0.29 0.21 0.12 0.17 0.17 0.17 0.17 0.21
  0.21 0.17 0.17 0.25 0.25 0.17 0.21 0.21 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.21 0.29 0.21 0.21 0.17
  0.17 0.21 0.21 0.04 0.12 0.29 0.17 0.17 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.04 0.12 0.04 0.12 0.
  0.   0.12 0.04 0.12 0.21 0.12 0.17 0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.04 0.04 0.04 0.04 0.08
  0.08 0.04 0.04 0.21 0.21 0.04 0.17 0.08 0.08 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.   0.08 0.04
  0.04 0.08 0.   0.17 0.25 0.08 0.21 0.04 0.04 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.12
  0.12 0.08 0.08 0.25 0.17 0.   0.12 0.12 0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.04
  0.04 0.08 0.   0.17 0.25 0.08 0.21 0.04 0.04 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.12 0.   0.08 0.17 0.17 0.08 0.12 0.12 0.12 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.04 0.12 0.21 0.12 0.17 0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.04 0.12 0.21 0.12 0.17 0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.08 0.17 0.17 0.08 0.12 0.12 0.12 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17 0.25 0.08 0.21 0.04 0.04 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.17 0.25 0.12 0.12 0.12 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.04 0.21 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.12 0.12 0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})

**********      classifier acc  **************
[0.681, 0.771, 0.734, 0.83, 0.739, 0.681, 0.649, 0.84, 0.851, 0.926, 0.926, 0.926, 0.83, 0.84, 0.84, 0.83, 0.926, 0.617, 0.67, 0.926, 0.713, 0.84, 0.84, 0.793]
before cutting matrix
[[-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
  -1.  1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
  -1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1. -1.
  -1.  1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.
   1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1. -1.
  -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.
  -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 383, -1.0: 179})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 383, -1.0: 179})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({-1.0: 343, 1.0: 219})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 396, -1.0: 166})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 396, -1.0: 166})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 350, 1.0: 212})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({-1.0: 350, 1.0: 212})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 290, 1.0: 272})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({-1.0: 290, 1.0: 272})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({-1.0: 298, 1.0: 264})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({-1.0: 298, 1.0: 264})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 324, -1.0: 238})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 324, -1.0: 238})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
positive and negative ratio
Counter({1.0: 393, -1.0: 169})
after cutting matrix
[[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1.  1.  1. -1. -1.  1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1.  1. -1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 310, -1.0: 252})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 463, -1.0: 99})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 398, -1.0: 164})
Counter({1.0: 517, -1.0: 45})
Counter({1.0: 508, -1.0: 54})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 457, -1.0: 105})
Counter({1.0: 393, -1.0: 169})
cutting matrix's confusion matrix
[[ 2  2  7  0  0  0  0  0  9  0]
 [ 4 14  3  0  0  0  0  0  0  0]
 [ 0  1 18  0  0  0  0  0  3  0]
 [ 0  5 14  0  0  0  0  0  0  0]
 [17  4  5  0  0  0  0  0  0  0]
 [ 3  0 13  0  0  0  0  0  0  0]
 [ 0  1  0  0  0  0  0  0 13  0]
 [ 0  2 13  0  0  0  0  0  0  0]
 [ 0  5  2  0  0  0  0  0 14  0]
 [ 0  0 12  0  0  0  0  0  2  0]]


SVM classifier
Time: 2019-01-09 22:24:07
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
confusion matrix
[[ 2  1  0  0 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 3  4  0  0 15  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [11  2  0  0  2  0  0  0  0  0]
 [ 2  0  0  0 19  0  0  0  0  0]
 [12  0  0  0  2  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 0.  1.]
 [ 0.  0.]
 [ 1.  1.]
 [-1.  0.]
 [ 1.  1.]
 [ 0. -1.]
 [-1.  1.]
 [-1.  0.]
 [ 0.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
confusion matrix
[[ 2  1  0  0  2  0  0 15  0  0]
 [ 0 15  0  0  4  0  0  2  0  0]
 [ 3  4  0  0  0  0  0 15  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 5  2  0  0 17  0  0  2  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 14  0  0]
 [11  2  0  0  0  0  0  2  0  0]
 [ 2  0  0  0  0  0  0 19  0  0]
 [12  0  0  0  0  0  0  2  0  0]]
row HD
[[0.  0.1 0.2 0.  0.2 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.1 0.1 0.2 0.1 0.1 0.1 0.2 0. ]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 0.  1.  1.]
 [ 0.  0. -1.]
 [ 1.  1.  0.]
 [-1.  0.  0.]
 [ 1.  1. -1.]
 [ 0. -1. -1.]
 [-1.  1. -1.]
 [-1.  0.  1.]
 [ 0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
confusion matrix
[[ 2  1  0  0 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 3  4  0  0 15  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [11  2  0  0  2  0  0  0  0  0]
 [ 2  0  0  0 19  0  0  0  0  0]
 [12  0  0  0  2  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.  0.2 0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.2 0.2 0.3 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.3 0.2 0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   3.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  1.]
 [ 0.  1.  1.  1.]
 [ 0.  0. -1. -1.]
 [ 1.  1.  0. -1.]
 [-1.  0.  0. -1.]
 [ 1.  1. -1. -1.]
 [ 0. -1. -1. -1.]
 [-1.  1. -1.  1.]
 [-1.  0.  1. -1.]
 [ 0.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
confusion matrix
[[ 0  1  0  2 17  0  0  0  0  0]
 [ 0 15  0  0  6  0  0  0  0  0]
 [ 0  4  0  3 15  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  0 11  2  0  0  0  0  0]
 [ 0  0  0  2 19  0  0  0  0  0]
 [ 0  0  0 12  2  0  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.1 0.3 0.2 0.4 0.2 0.4 0.2]
 [0.  0.  0.3 0.3 0.4 0.3 0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.3 0.2 0.2 0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.5  2.25 1.75]
 [0.   0.   1.75 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  1.  1.]
 [ 0.  1.  1.  1. -1.]
 [ 0.  0. -1. -1. -1.]
 [ 1.  1.  0. -1.  0.]
 [-1.  0.  0. -1.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 0. -1. -1. -1.  1.]
 [-1.  1. -1.  1. -1.]
 [-1.  0.  1. -1.  0.]
 [ 0.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
confusion matrix
[[ 0  1  4  2 13  0  0  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  3  3  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 19  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2 19  0  0  0  0  0]
 [ 0  0  0 12  2  0  0  0  0  0]]
row HD
[[0.  0.3 0.5 0.2 0.3 0.3 0.4 0.3 0.5 0.2]
 [0.  0.  0.3 0.4 0.5 0.3 0.4 0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.3 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.2 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.2 1.8 1.4 1.6]
 [0.  0.  1.4 1.  1.4]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  1.  0.  1. -1.  1.  0.  1.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.]
 [ 1.  1.  0. -1.  0.  1.]
 [-1.  0.  0. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  0.]
 [ 0. -1. -1. -1.  1.  1.]
 [-1.  1. -1.  1. -1.  0.]
 [-1.  0.  1. -1.  0. -1.]
 [ 0.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
confusion matrix
[[ 0  1  4  0 13  2  0  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  2  3  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1 19  1  0  0  0  0]
 [ 0  0  0  0  2 12  0  0  0  0]]
row HD
[[0.  0.4 0.6 0.3 0.4 0.3 0.5 0.3 0.6 0.3]
 [0.  0.  0.4 0.4 0.5 0.4 0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.5 0.4 0.3 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.3 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.5  1.17 1.33 1.33]
 [0.   0.   1.17 0.83 1.17 1.33]
 [0.   0.   0.   1.   1.   1.  ]
 [0.   0.   0.   0.   1.   1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  0.  0. -1.  0. -1.  0.  1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
0
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1.]
 [ 0.  1.  1.  1. -1.  1.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.]
 [-1.  0.  0. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.]
 [ 0. -1. -1. -1.  1.  1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.]
 [-1.  0.  1. -1.  0. -1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
confusion matrix
[[ 0  1  4  0  4  2  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  2  0  1  0  0  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.5 0.7 0.3 0.4 0.3 0.6 0.4 0.7 0.3]
 [0.  0.  0.5 0.5 0.6 0.5 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.6 0.5 0.4 0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.5 0.4 0.6 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.86 1.29 1.   1.14 1.14 1.  ]
 [0.   0.   1.   0.71 1.   1.14 1.29]
 [0.   0.   0.   0.86 0.86 0.86 1.  ]
 [0.   0.   0.   0.   0.86 1.   0.86]
 [0.   0.   0.   0.   0.   1.   1.29]
 [0.   0.   0.   0.   0.   0.   1.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  0.  1. -1. -1. -1.  0.  1.  1. -1.]
select_j_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
most_cplx_inx
0
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
confusion matrix
[[ 0  1  4  0  4  2  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  2  0  1  0  0  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.5 0.8 0.4 0.5 0.4 0.6 0.5 0.7 0.3]
 [0.  0.  0.6 0.6 0.7 0.6 0.4 0.5 0.6 0.4]
 [0.  0.  0.  0.6 0.6 0.5 0.5 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.6 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.7 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.12 0.88 1.   1.   0.88 1.  ]
 [0.   0.   0.88 0.62 0.88 1.   1.12 0.75]
 [0.   0.   0.   0.75 0.75 0.75 0.88 0.88]
 [0.   0.   0.   0.   0.75 0.88 0.75 0.88]
 [0.   0.   0.   0.   0.   0.88 1.12 1.12]
 [0.   0.   0.   0.   0.   0.   1.12 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
7
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
confusion matrix
[[ 0  1  4  0  4  2  0  0  9  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  2  0  1  0  0  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.5 0.9 0.4 0.6 0.4 0.7 0.5 0.8 0.4]
 [0.  0.  0.7 0.6 0.8 0.6 0.5 0.5 0.7 0.5]
 [0.  0.  0.  0.7 0.7 0.6 0.5 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.7 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.6 0.6 0.8 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.   0.78 0.89 0.89 0.78 0.89 0.33]
 [0.   0.   0.78 0.56 0.78 0.89 1.   0.67 0.33]
 [0.   0.   0.   0.67 0.67 0.67 0.78 0.78 1.  ]
 [0.   0.   0.   0.   0.67 0.78 0.67 0.78 0.67]
 [0.   0.   0.   0.   0.   0.78 1.   1.   0.89]
 [0.   0.   0.   0.   0.   0.   1.   0.67 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
0
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
confusion matrix
[[ 0  1  4  0  4  2  9  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.6 0.9 0.4 0.7 0.4 0.7 0.5 0.9 0.5]
 [0.  0.  0.8 0.7 0.9 0.7 0.6 0.6 0.8 0.5]
 [0.  0.  0.  0.7 0.8 0.6 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.6 0.4 0.7 0.6 0.8 0.8]
 [0.  0.  0.  0.  0.  0.7 0.7 0.9 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.7 0.4 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.9 0.7 0.8 0.8 0.7 0.8 0.3 0.3]
 [0.  0.  0.7 0.5 0.7 0.8 0.9 0.6 0.3 0.6]
 [0.  0.  0.  0.6 0.6 0.6 0.7 0.7 0.9 1. ]
 [0.  0.  0.  0.  0.6 0.7 0.6 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.7 0.9 0.9 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.9 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  1.  0.  1. -1.  1.  0.  1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
confusion matrix
[[ 0  1  0  0  4  2  0  4  9  0]
 [ 0 15  0  0  5  0  0  1  0  0]
 [ 0  4  0  2  0  1  0 12  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.7 1.  0.4 0.7 0.4 0.8 0.5 0.9 0.6]
 [0.  0.  0.8 0.8 1.  0.8 0.7 0.7 0.9 0.5]
 [0.  0.  0.  0.8 0.9 0.7 0.6 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.6 0.4 0.8 0.6 0.8 0.9]
 [0.  0.  0.  0.  0.  0.7 0.8 0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.55 0.82 0.64 0.73 0.73 0.64 0.73 0.27 0.27 0.36]
 [0.   0.   0.64 0.45 0.64 0.73 0.82 0.55 0.27 0.55 0.36]
 [0.   0.   0.   0.55 0.55 0.55 0.64 0.64 0.82 0.91 0.73]
 [0.   0.   0.   0.   0.55 0.64 0.55 0.64 0.55 0.55 0.64]
 [0.   0.   0.   0.   0.   0.64 0.82 0.82 0.73 0.73 0.73]
 [0.   0.   0.   0.   0.   0.   0.82 0.55 0.73 0.64 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.55 0.64 0.55 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.55 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
confusion matrix
[[ 0  1  0  0  4  2  0  4  9  0]
 [ 0 15  0  0  5  0  0  1  0  0]
 [ 0  4  0  2  0  1  0 12  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.8 1.1 0.5 0.8 0.5 0.8 0.6 1.  0.6]
 [0.  0.  0.9 0.9 1.1 0.8 0.8 0.7 0.9 0.6]
 [0.  0.  0.  0.8 0.9 0.8 0.7 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.6 0.5 0.9 0.7 0.9 1. ]
 [0.  0.  0.  0.  0.  0.8 0.9 1.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.9 0.4 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.58 0.67 0.67 0.58 0.67 0.25 0.25 0.33 0.5 ]
 [0.   0.   0.58 0.42 0.58 0.67 0.75 0.5  0.25 0.5  0.33 0.58]
 [0.   0.   0.   0.5  0.5  0.5  0.58 0.58 0.75 0.83 0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.58 0.5  0.58 0.5  0.5  0.58 0.42]
 [0.   0.   0.   0.   0.   0.58 0.75 0.75 0.67 0.67 0.67 0.75]
 [0.   0.   0.   0.   0.   0.   0.75 0.5  0.67 0.58 0.67 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.58 0.5  0.58 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.5  0.58 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
confusion matrix
[[ 0  1  0  0  4  2  0  4  9  0]
 [ 0 15  0  0  5  0  0  1  0  0]
 [ 0  4  0  2  0  1  0 12  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.9 1.2 0.5 0.9 0.6 0.8 0.7 1.1 0.7]
 [0.  0.  1.  1.  1.2 0.8 0.9 0.7 1.  0.6]
 [0.  0.  0.  0.9 0.9 0.9 0.8 0.8 0.7 0.8]
 [0.  0.  0.  0.  0.7 0.6 0.9 0.8 1.  1.1]
 [0.  0.  0.  0.  0.  0.9 1.  1.1 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  1.  0.4 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.46 0.69 0.54 0.62 0.62 0.54 0.62 0.23 0.23 0.31 0.46 0.62]
 [0.   0.   0.54 0.38 0.54 0.62 0.69 0.46 0.23 0.46 0.31 0.54 0.77]
 [0.   0.   0.   0.46 0.46 0.46 0.54 0.54 0.69 0.77 0.62 0.46 0.31]
 [0.   0.   0.   0.   0.46 0.54 0.46 0.54 0.46 0.46 0.54 0.38 0.69]
 [0.   0.   0.   0.   0.   0.54 0.69 0.69 0.62 0.62 0.62 0.69 0.38]
 [0.   0.   0.   0.   0.   0.   0.69 0.46 0.62 0.54 0.62 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.46 0.54 0.46 0.54 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.46 0.54 0.69 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.31 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.46 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 0. -1.  1.  0.  1. -1.  0. -1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
confusion matrix
[[ 0  1  0  0  4  2  0  4  9  0]
 [ 0 15  0  0  5  0  0  1  0  0]
 [ 0  4  0  2  0  1  0 12  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [ 0  0  0  1  5  1  0  0 14  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
row HD
[[0.  0.9 1.2 0.6 0.9 0.7 0.8 0.7 1.1 0.7]
 [0.  0.  1.  1.1 1.2 0.9 0.9 0.7 1.  0.6]
 [0.  0.  0.  1.  0.9 1.  0.8 0.8 0.7 0.8]
 [0.  0.  0.  0.  0.8 0.7 1.  0.9 1.1 1.2]
 [0.  0.  0.  0.  0.  1.  1.  1.1 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  1.1 0.5 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.64 0.5  0.57 0.57 0.5  0.57 0.21 0.21 0.29 0.43 0.57 0.64]
 [0.   0.   0.5  0.36 0.5  0.57 0.64 0.43 0.21 0.43 0.29 0.5  0.71 0.43]
 [0.   0.   0.   0.43 0.43 0.43 0.5  0.5  0.64 0.71 0.57 0.43 0.29 0.43]
 [0.   0.   0.   0.   0.43 0.5  0.43 0.5  0.43 0.43 0.5  0.36 0.64 0.36]
 [0.   0.   0.   0.   0.   0.5  0.64 0.64 0.57 0.57 0.57 0.64 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.64 0.43 0.57 0.5  0.57 0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.5  0.43 0.5  0.36 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.5  0.64 0.5  0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29 0.64 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43 0.64 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
confusion matrix
[[ 2  1  0  0  4  0  0  4  9  0]
 [ 0 15  0  0  5  0  0  1  0  0]
 [ 1  4  0  2  0  0  0 12  3  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 5  2  0  0 19  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [ 0  0  0  0  1  0  0  0 13  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [ 1  0  0  1  5  0  0  0 14  0]
 [12  0  0  0  0  0  0  0  2  0]]
row HD
[[0.  1.  1.3 0.7 0.9 0.8 0.9 0.7 1.1 0.8]
 [0.  0.  1.1 1.1 1.3 1.  0.9 0.8 1.1 0.6]
 [0.  0.  0.  1.1 1.  1.  0.9 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.9 0.8 1.  1.  1.2 1.2]
 [0.  0.  0.  0.  0.  1.1 1.1 1.1 0.7 1.2]
 [0.  0.  0.  0.  0.  0.  1.2 0.6 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.1 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.6  0.47 0.53 0.53 0.47 0.53 0.2  0.2  0.27 0.4  0.53 0.6
  0.6 ]
 [0.   0.   0.47 0.33 0.47 0.53 0.6  0.4  0.2  0.4  0.27 0.47 0.67 0.4
  0.4 ]
 [0.   0.   0.   0.4  0.4  0.4  0.47 0.47 0.6  0.67 0.53 0.4  0.27 0.4
  0.4 ]
 [0.   0.   0.   0.   0.4  0.47 0.4  0.47 0.4  0.4  0.47 0.33 0.6  0.33
  0.53]
 [0.   0.   0.   0.   0.   0.47 0.6  0.6  0.53 0.53 0.53 0.6  0.33 0.27
  0.53]
 [0.   0.   0.   0.   0.   0.   0.6  0.4  0.53 0.47 0.53 0.47 0.47 0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.47 0.4  0.47 0.33 0.33 0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4  0.47 0.6  0.47 0.53
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27 0.6  0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.4  0.6  0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.53 0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: True, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[-1. -1.  1.  1.  0.  0. -1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
confusion matrix
[[13  1  0  0  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 4  4  0  2  0  0  0 12  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  1.  1.4 0.8 1.  0.9 0.9 0.8 1.2 0.8]
 [0.  0.  1.2 1.2 1.4 1.1 0.9 0.9 1.2 0.6]
 [0.  0.  0.  1.1 1.1 1.1 1.  1.  0.9 1. ]
 [0.  0.  0.  0.  1.  0.9 1.1 1.1 1.3 1.3]
 [0.  0.  0.  0.  0.  1.1 1.2 1.1 0.7 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 0.6 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.56 0.44 0.5  0.5  0.44 0.5  0.19 0.19 0.25 0.38 0.5  0.56
  0.56 0.31]
 [0.   0.   0.44 0.31 0.44 0.5  0.56 0.38 0.19 0.38 0.25 0.44 0.62 0.38
  0.38 0.38]
 [0.   0.   0.   0.38 0.38 0.38 0.44 0.44 0.56 0.62 0.5  0.38 0.25 0.38
  0.38 0.38]
 [0.   0.   0.   0.   0.38 0.44 0.38 0.44 0.38 0.38 0.44 0.31 0.56 0.31
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.44 0.56 0.56 0.5  0.5  0.5  0.56 0.31 0.25
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.56 0.38 0.5  0.44 0.5  0.44 0.44 0.44
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.44 0.38 0.44 0.31 0.31 0.38
  0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38 0.44 0.56 0.44 0.5
  0.31 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.56 0.44
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.38 0.56 0.38
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.5  0.38
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44
  0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.38 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.56 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0. -1. -1.  1. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  0.  0. -1. -1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
confusion matrix
[[13  1  0  0  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 4  4  0  2  0  0  0 12  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  1.  1.5 0.9 1.1 1.  0.9 0.9 1.2 0.8]
 [0.  0.  1.3 1.3 1.5 1.2 0.9 1.  1.2 0.6]
 [0.  0.  0.  1.1 1.1 1.2 1.1 1.1 1.  1.1]
 [0.  0.  0.  0.  1.  1.  1.2 1.2 1.4 1.4]
 [0.  0.  0.  0.  0.  1.2 1.3 1.2 0.8 1.4]
 [0.  0.  0.  0.  0.  0.  1.4 0.6 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.53 0.41 0.47 0.47 0.41 0.47 0.18 0.18 0.24 0.35 0.47 0.53
  0.53 0.29 0.41]
 [0.   0.   0.41 0.29 0.41 0.47 0.53 0.35 0.18 0.35 0.24 0.41 0.59 0.35
  0.35 0.35 0.29]
 [0.   0.   0.   0.35 0.35 0.35 0.41 0.41 0.53 0.59 0.47 0.35 0.24 0.35
  0.35 0.35 0.24]
 [0.   0.   0.   0.   0.35 0.41 0.35 0.41 0.35 0.35 0.41 0.29 0.53 0.29
  0.47 0.24 0.35]
 [0.   0.   0.   0.   0.   0.41 0.53 0.53 0.47 0.47 0.47 0.53 0.29 0.24
  0.47 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.53 0.35 0.47 0.41 0.47 0.41 0.41 0.41
  0.41 0.41 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.41 0.35 0.41 0.29 0.29 0.35
  0.41 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35 0.41 0.53 0.41 0.47
  0.29 0.53 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.24 0.53 0.41
  0.47 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.35 0.53 0.35
  0.47 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.47 0.35
  0.47 0.47 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.41
  0.41 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.35 0.41 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.53 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.59 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
confusion matrix
[[13  1  0  0  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 4  4  0  2  0  0  0 12  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  1.1 1.6 1.  1.1 1.1 0.9 1.  1.2 0.9]
 [0.  0.  1.3 1.3 1.6 1.2 1.  1.1 1.3 0.6]
 [0.  0.  0.  1.1 1.2 1.2 1.2 1.2 1.1 1.1]
 [0.  0.  0.  0.  1.1 1.  1.3 1.3 1.5 1.4]
 [0.  0.  0.  0.  0.  1.3 1.3 1.3 0.8 1.5]
 [0.  0.  0.  0.  0.  0.  1.5 0.7 1.4 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.5  0.39 0.44 0.44 0.39 0.44 0.17 0.17 0.22 0.33 0.44 0.5
  0.5  0.28 0.39 0.33]
 [0.   0.   0.39 0.28 0.39 0.44 0.5  0.33 0.17 0.33 0.22 0.39 0.56 0.33
  0.33 0.33 0.28 0.22]
 [0.   0.   0.   0.33 0.33 0.33 0.39 0.39 0.5  0.56 0.44 0.33 0.22 0.33
  0.33 0.33 0.22 0.33]
 [0.   0.   0.   0.   0.33 0.39 0.33 0.39 0.33 0.33 0.39 0.28 0.5  0.28
  0.44 0.22 0.33 0.44]
 [0.   0.   0.   0.   0.   0.39 0.5  0.5  0.44 0.44 0.44 0.5  0.28 0.22
  0.44 0.22 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.5  0.33 0.44 0.39 0.44 0.39 0.39 0.39
  0.39 0.39 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.39 0.33 0.39 0.28 0.28 0.33
  0.39 0.44 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33 0.39 0.5  0.39 0.44
  0.28 0.5  0.5  0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.22 0.22 0.5  0.39
  0.44 0.33 0.39 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.33 0.5  0.33
  0.44 0.33 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.44 0.33
  0.44 0.44 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.39
  0.39 0.44 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28
  0.33 0.39 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.5  0.22 0.17 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.56 0.5  0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  1.  1. -1.  1.  1.  1. -1.  0.]
select_j_column
[ 1. -1. -1.  0.  1. -1.  1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
confusion matrix
[[11  1  0  2  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 3  4  0  3  0  0  0 12  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.1 1.7 1.1 1.2 1.2 0.9 1.1 1.2 1. ]
 [0.  0.  1.4 1.4 1.7 1.3 1.  1.2 1.3 0.7]
 [0.  0.  0.  1.2 1.2 1.2 1.3 1.2 1.2 1.2]
 [0.  0.  0.  0.  1.2 1.1 1.4 1.4 1.6 1.4]
 [0.  0.  0.  0.  0.  1.3 1.4 1.3 0.9 1.6]
 [0.  0.  0.  0.  0.  0.  1.6 0.7 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.47 0.37 0.42 0.42 0.37 0.42 0.16 0.16 0.21 0.32 0.42 0.47
  0.47 0.26 0.37 0.32 0.37]
 [0.   0.   0.37 0.26 0.37 0.42 0.47 0.32 0.16 0.32 0.21 0.37 0.53 0.32
  0.32 0.32 0.26 0.21 0.26]
 [0.   0.   0.   0.32 0.32 0.32 0.37 0.37 0.47 0.53 0.42 0.32 0.21 0.32
  0.32 0.32 0.21 0.32 0.42]
 [0.   0.   0.   0.   0.32 0.37 0.32 0.37 0.32 0.32 0.37 0.26 0.47 0.26
  0.42 0.21 0.32 0.42 0.37]
 [0.   0.   0.   0.   0.   0.37 0.47 0.47 0.42 0.42 0.42 0.47 0.26 0.21
  0.42 0.21 0.21 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.47 0.32 0.42 0.37 0.42 0.37 0.37 0.37
  0.37 0.37 0.42 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.37 0.32 0.37 0.26 0.26 0.32
  0.37 0.42 0.42 0.42 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32 0.37 0.47 0.37 0.42
  0.26 0.47 0.47 0.37 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.47 0.37
  0.42 0.32 0.37 0.26 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.32 0.47 0.32
  0.42 0.32 0.42 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.42 0.32
  0.42 0.42 0.37 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.37
  0.37 0.42 0.42 0.32 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.32 0.37 0.32 0.32 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47 0.21 0.16 0.37 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.53 0.47 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  20 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
19 classifiers pre label
Counter({1.0: 133, 0.0: 29, -1.0: 26})
confusion matrix
[[11  1  0  2  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 3  4  0  3  0  0  0 12  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.2 1.7 1.1 1.3 1.2 0.9 1.1 1.2 1.1]
 [0.  0.  1.5 1.5 1.8 1.4 1.1 1.3 1.4 0.7]
 [0.  0.  0.  1.2 1.3 1.2 1.3 1.2 1.2 1.3]
 [0.  0.  0.  0.  1.3 1.1 1.4 1.4 1.6 1.5]
 [0.  0.  0.  0.  0.  1.4 1.5 1.4 1.  1.7]
 [0.  0.  0.  0.  0.  0.  1.6 0.7 1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.45 0.35 0.4  0.4  0.35 0.4  0.15 0.15 0.2  0.3  0.4  0.45
  0.45 0.25 0.35 0.3  0.35 0.2 ]
 [0.   0.   0.35 0.25 0.35 0.4  0.45 0.3  0.15 0.3  0.2  0.35 0.5  0.3
  0.3  0.3  0.25 0.2  0.25 0.3 ]
 [0.   0.   0.   0.3  0.3  0.3  0.35 0.35 0.45 0.5  0.4  0.3  0.2  0.3
  0.3  0.3  0.2  0.3  0.4  0.45]
 [0.   0.   0.   0.   0.3  0.35 0.3  0.35 0.3  0.3  0.35 0.25 0.45 0.25
  0.4  0.2  0.3  0.4  0.35 0.35]
 [0.   0.   0.   0.   0.   0.35 0.45 0.45 0.4  0.4  0.4  0.45 0.25 0.2
  0.4  0.2  0.2  0.35 0.4  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.45 0.3  0.4  0.35 0.4  0.35 0.35 0.35
  0.35 0.35 0.4  0.35 0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.3  0.35 0.25 0.25 0.3
  0.35 0.4  0.4  0.4  0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3  0.35 0.45 0.35 0.4
  0.25 0.45 0.45 0.35 0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.2  0.45 0.35
  0.4  0.3  0.35 0.25 0.4  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.3  0.45 0.3
  0.4  0.3  0.4  0.35 0.4  0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.4  0.3
  0.4  0.4  0.35 0.4  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35
  0.35 0.4  0.4  0.3  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.3  0.35 0.3  0.3  0.45 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.45 0.2  0.15 0.35 0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.5  0.45 0.25 0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
select_j_column
[ 0. -1.  1.  0.  1. -1.  0. -1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
19 classifiers pre label
Counter({1.0: 133, 0.0: 29, -1.0: 26})
20 classifiers pre label
Counter({1.0: 117, 0.0: 71})
confusion matrix
[[11  1  0  2  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 3  4  0  3  0  0  0 12  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.3 1.8 1.2 1.4 1.3 0.9 1.2 1.3 1.2]
 [0.  0.  1.5 1.5 1.8 1.4 1.2 1.4 1.4 0.7]
 [0.  0.  0.  1.2 1.3 1.2 1.4 1.3 1.2 1.3]
 [0.  0.  0.  0.  1.3 1.1 1.5 1.5 1.6 1.5]
 [0.  0.  0.  0.  0.  1.4 1.6 1.5 1.  1.7]
 [0.  0.  0.  0.  0.  0.  1.7 0.8 1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.43 0.33 0.38 0.38 0.33 0.38 0.14 0.14 0.19 0.29 0.38 0.43
  0.43 0.24 0.33 0.29 0.33 0.19 0.29]
 [0.   0.   0.33 0.24 0.33 0.38 0.43 0.29 0.14 0.29 0.19 0.33 0.48 0.29
  0.29 0.29 0.24 0.19 0.24 0.29 0.29]
 [0.   0.   0.   0.29 0.29 0.29 0.33 0.33 0.43 0.48 0.38 0.29 0.19 0.29
  0.29 0.29 0.19 0.29 0.38 0.43 0.29]
 [0.   0.   0.   0.   0.29 0.33 0.29 0.33 0.29 0.29 0.33 0.24 0.43 0.24
  0.38 0.19 0.29 0.38 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.33 0.43 0.43 0.38 0.38 0.38 0.43 0.24 0.19
  0.38 0.19 0.19 0.33 0.38 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.43 0.29 0.38 0.33 0.38 0.33 0.33 0.33
  0.33 0.33 0.38 0.33 0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.29 0.33 0.24 0.24 0.29
  0.33 0.38 0.38 0.38 0.43 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.33 0.43 0.33 0.38
  0.24 0.43 0.43 0.33 0.14 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19 0.43 0.33
  0.38 0.29 0.33 0.24 0.38 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.29 0.43 0.29
  0.38 0.29 0.38 0.33 0.38 0.05 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.38 0.29
  0.38 0.38 0.33 0.38 0.33 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33
  0.33 0.38 0.38 0.29 0.48 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.29 0.33 0.29 0.29 0.43 0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.43 0.19 0.14 0.33 0.43 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.48 0.43 0.24 0.29 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.33 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
select_j_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
most_cplx_inx
2
new_column
None


============== iter  22 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
19 classifiers pre label
Counter({1.0: 133, 0.0: 29, -1.0: 26})
20 classifiers pre label
Counter({1.0: 117, 0.0: 71})
confusion matrix
[[11  1  0  2  2  0  0  4  0  0]
 [ 1 15  0  0  4  0  0  1  0  0]
 [ 3  4  0  3  0  0  0 12  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  0 11  0  0  0  2  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.3 1.8 1.2 1.4 1.3 0.9 1.2 1.3 1.2]
 [0.  0.  1.5 1.5 1.8 1.4 1.2 1.4 1.4 0.7]
 [0.  0.  0.  1.2 1.3 1.2 1.4 1.3 1.2 1.3]
 [0.  0.  0.  0.  1.3 1.1 1.5 1.5 1.6 1.5]
 [0.  0.  0.  0.  0.  1.4 1.6 1.5 1.  1.7]
 [0.  0.  0.  0.  0.  0.  1.7 0.8 1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.43 0.33 0.38 0.38 0.33 0.38 0.14 0.14 0.19 0.29 0.38 0.43
  0.43 0.24 0.33 0.29 0.33 0.19 0.29]
 [0.   0.   0.33 0.24 0.33 0.38 0.43 0.29 0.14 0.29 0.19 0.33 0.48 0.29
  0.29 0.29 0.24 0.19 0.24 0.29 0.29]
 [0.   0.   0.   0.29 0.29 0.29 0.33 0.33 0.43 0.48 0.38 0.29 0.19 0.29
  0.29 0.29 0.19 0.29 0.38 0.43 0.29]
 [0.   0.   0.   0.   0.29 0.33 0.29 0.33 0.29 0.29 0.33 0.24 0.43 0.24
  0.38 0.19 0.29 0.38 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.33 0.43 0.43 0.38 0.38 0.38 0.43 0.24 0.19
  0.38 0.19 0.19 0.33 0.38 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.43 0.29 0.38 0.33 0.38 0.33 0.33 0.33
  0.33 0.33 0.38 0.33 0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.29 0.33 0.24 0.24 0.29
  0.33 0.38 0.38 0.38 0.43 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.33 0.43 0.33 0.38
  0.24 0.43 0.43 0.33 0.14 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19 0.43 0.33
  0.38 0.29 0.33 0.24 0.38 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.29 0.43 0.29
  0.38 0.29 0.38 0.33 0.38 0.05 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.38 0.29
  0.38 0.38 0.33 0.38 0.33 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33
  0.33 0.38 0.38 0.29 0.48 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.29 0.33 0.29 0.29 0.43 0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.43 0.19 0.14 0.33 0.43 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.48 0.43 0.24 0.29 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.1  0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.33 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0.  0. -1.  1. -1.  1.  1.]
select_j_column
[ 0.  1.  1.  1.  1.  1.  0. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.  0.  1.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.  1.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.  0.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1. -1. -1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.  1.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
19 classifiers pre label
Counter({1.0: 133, 0.0: 29, -1.0: 26})
20 classifiers pre label
Counter({1.0: 117, 0.0: 71})
21 classifiers pre label
Counter({1.0: 188})
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.3 1.8 1.2 1.4 1.3 0.9 1.3 1.3 1.2]
 [0.  0.  1.5 1.5 1.8 1.4 1.2 1.5 1.4 0.7]
 [0.  0.  0.  1.2 1.3 1.2 1.4 1.4 1.2 1.3]
 [0.  0.  0.  0.  1.3 1.1 1.5 1.6 1.6 1.5]
 [0.  0.  0.  0.  0.  1.4 1.6 1.6 1.  1.7]
 [0.  0.  0.  0.  0.  0.  1.7 0.9 1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.8 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.41 0.32 0.36 0.36 0.32 0.36 0.14 0.14 0.18 0.27 0.36 0.41
  0.41 0.23 0.32 0.27 0.32 0.18 0.27 0.27]
 [0.   0.   0.32 0.23 0.32 0.36 0.41 0.27 0.14 0.27 0.18 0.32 0.45 0.27
  0.27 0.27 0.23 0.18 0.23 0.27 0.27 0.23]
 [0.   0.   0.   0.27 0.27 0.27 0.32 0.32 0.41 0.45 0.36 0.27 0.18 0.27
  0.27 0.27 0.18 0.27 0.36 0.41 0.27 0.32]
 [0.   0.   0.   0.   0.27 0.32 0.27 0.32 0.27 0.27 0.32 0.23 0.41 0.23
  0.36 0.18 0.27 0.36 0.32 0.32 0.36 0.32]
 [0.   0.   0.   0.   0.   0.32 0.41 0.41 0.36 0.36 0.36 0.41 0.23 0.18
  0.36 0.18 0.18 0.32 0.36 0.36 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.41 0.27 0.36 0.32 0.36 0.32 0.32 0.32
  0.32 0.32 0.36 0.32 0.27 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.32 0.27 0.32 0.23 0.23 0.27
  0.32 0.36 0.36 0.36 0.41 0.23 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.32 0.41 0.32 0.36
  0.23 0.41 0.41 0.32 0.14 0.32 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.18 0.41 0.32
  0.36 0.27 0.32 0.23 0.36 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.41 0.27
  0.36 0.27 0.36 0.32 0.36 0.05 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.27
  0.36 0.36 0.32 0.36 0.32 0.14 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32
  0.32 0.36 0.36 0.27 0.45 0.23 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23
  0.27 0.32 0.27 0.27 0.41 0.36 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.41 0.18 0.14 0.32 0.41 0.23 0.23 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.45 0.41 0.23 0.27 0.36 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.09 0.32 0.32 0.32 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.27 0.32 0.32 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32 0.32 0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.41 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.  0.  1.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.  1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.  1.  1.  0.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.  0.  1.  0.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1. -1. -1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.  1.  1. -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
19 classifiers pre label
Counter({1.0: 133, 0.0: 29, -1.0: 26})
20 classifiers pre label
Counter({1.0: 117, 0.0: 71})
21 classifiers pre label
Counter({1.0: 188})
22 classifiers pre label
Counter({0.0: 133, 1.0: 29, -1.0: 26})
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.4 1.9 1.2 1.5 1.4 0.9 1.4 1.4 1.3]
 [0.  0.  1.5 1.6 1.9 1.4 1.3 1.5 1.5 0.7]
 [0.  0.  0.  1.3 1.4 1.2 1.5 1.4 1.3 1.3]
 [0.  0.  0.  0.  1.4 1.2 1.5 1.7 1.7 1.6]
 [0.  0.  0.  0.  0.  1.5 1.7 1.7 1.  1.8]
 [0.  0.  0.  0.  0.  0.  1.8 0.9 1.6 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.9 1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.39 0.3  0.35 0.35 0.3  0.35 0.13 0.13 0.17 0.26 0.35 0.39
  0.39 0.22 0.3  0.26 0.3  0.17 0.26 0.26 0.26]
 [0.   0.   0.3  0.22 0.3  0.35 0.39 0.26 0.13 0.26 0.17 0.3  0.43 0.26
  0.26 0.26 0.22 0.17 0.22 0.26 0.26 0.22 0.26]
 [0.   0.   0.   0.26 0.26 0.26 0.3  0.3  0.39 0.43 0.35 0.26 0.17 0.26
  0.26 0.26 0.17 0.26 0.35 0.39 0.26 0.3  0.3 ]
 [0.   0.   0.   0.   0.26 0.3  0.26 0.3  0.26 0.26 0.3  0.22 0.39 0.22
  0.35 0.17 0.26 0.35 0.3  0.3  0.35 0.3  0.22]
 [0.   0.   0.   0.   0.   0.3  0.39 0.39 0.35 0.35 0.35 0.39 0.22 0.17
  0.35 0.17 0.17 0.3  0.35 0.35 0.3  0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.39 0.26 0.35 0.3  0.35 0.3  0.3  0.3
  0.3  0.3  0.35 0.3  0.26 0.35 0.26 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.3  0.26 0.3  0.22 0.22 0.26
  0.3  0.35 0.35 0.35 0.39 0.22 0.3  0.35 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26 0.3  0.39 0.3  0.35
  0.22 0.39 0.39 0.3  0.13 0.3  0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.17 0.39 0.3
  0.35 0.26 0.3  0.22 0.35 0.17 0.26 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.26 0.39 0.26
  0.35 0.26 0.35 0.3  0.35 0.04 0.3  0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.35 0.26
  0.35 0.35 0.3  0.35 0.3  0.13 0.26 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3
  0.3  0.35 0.35 0.26 0.43 0.22 0.22 0.3  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.26 0.3  0.26 0.26 0.39 0.35 0.17 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.39 0.17 0.13 0.3  0.39 0.22 0.22 0.13 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.43 0.39 0.22 0.26 0.35 0.3  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.09 0.3  0.3  0.3  0.3  0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.3  0.3  0.26 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.3  0.09 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.39 0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.26 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.09 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  1.  1.  0. -1.  1.  0.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  25 ================
current matrix is 
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.  0.  1.  0.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.  1.  1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.  1.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.  1.  1.  0.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.  1.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.  0.  1.  0.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1. -1. -1.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.  1.  1. -1. -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 97, 1.0: 62, 0.0: 29})
1 classifiers pre label
Counter({1.0: 162, 0.0: 26})
2 classifiers pre label
Counter({0.0: 159, 1.0: 29})
3 classifiers pre label
Counter({-1.0: 159, 1.0: 29})
4 classifiers pre label
Counter({1.0: 78, 0.0: 62, -1.0: 48})
5 classifiers pre label
Counter({1.0: 82, 0.0: 71, -1.0: 35})
6 classifiers pre label
Counter({-1.0: 99, 1.0: 60, 0.0: 29})
7 classifiers pre label
Counter({-1.0: 116, 1.0: 46, 0.0: 26})
8 classifiers pre label
Counter({1.0: 162, -1.0: 26})
9 classifiers pre label
Counter({1.0: 122, -1.0: 37, 0.0: 29})
10 classifiers pre label
Counter({1.0: 159, 0.0: 29})
11 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
12 classifiers pre label
Counter({0.0: 133, -1.0: 29, 1.0: 26})
13 classifiers pre label
Counter({1.0: 126, 0.0: 62})
14 classifiers pre label
Counter({0.0: 97, -1.0: 91})
15 classifiers pre label
Counter({1.0: 81, 0.0: 62, -1.0: 45})
16 classifiers pre label
Counter({0.0: 88, 1.0: 81, -1.0: 19})
17 classifiers pre label
Counter({0.0: 97, 1.0: 91})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 62, 0.0: 26})
19 classifiers pre label
Counter({1.0: 133, 0.0: 29, -1.0: 26})
20 classifiers pre label
Counter({1.0: 117, 0.0: 71})
21 classifiers pre label
Counter({1.0: 188})
22 classifiers pre label
Counter({0.0: 133, 1.0: 29, -1.0: 26})
23 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
confusion matrix
[[11  1  4  2  2  0  0  0  0  0]
 [ 1 15  1  0  4  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 2  2  0  5 17  0  0  0  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  1.5 2.  1.3 1.6 1.5 1.  1.5 1.5 1.4]
 [0.  0.  1.5 1.6 2.  1.4 1.3 1.5 1.6 0.7]
 [0.  0.  0.  1.3 1.5 1.2 1.5 1.4 1.4 1.3]
 [0.  0.  0.  0.  1.5 1.2 1.5 1.7 1.8 1.6]
 [0.  0.  0.  0.  0.  1.6 1.8 1.8 1.  1.9]
 [0.  0.  0.  0.  0.  0.  1.8 0.9 1.7 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.9 1.5 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.38 0.29 0.33 0.33 0.29 0.33 0.12 0.12 0.17 0.25 0.33 0.38
  0.38 0.21 0.29 0.25 0.29 0.17 0.25 0.25 0.25 0.25]
 [0.   0.   0.29 0.21 0.29 0.33 0.38 0.25 0.12 0.25 0.17 0.29 0.42 0.25
  0.25 0.25 0.21 0.17 0.21 0.25 0.25 0.21 0.25 0.21]
 [0.   0.   0.   0.25 0.25 0.25 0.29 0.29 0.38 0.42 0.33 0.25 0.17 0.25
  0.25 0.25 0.17 0.25 0.33 0.38 0.25 0.29 0.29 0.33]
 [0.   0.   0.   0.   0.25 0.29 0.25 0.29 0.25 0.25 0.29 0.21 0.38 0.21
  0.33 0.17 0.25 0.33 0.29 0.29 0.33 0.29 0.21 0.21]
 [0.   0.   0.   0.   0.   0.29 0.38 0.38 0.33 0.33 0.33 0.38 0.21 0.17
  0.33 0.17 0.17 0.29 0.33 0.33 0.29 0.21 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.38 0.25 0.33 0.29 0.33 0.29 0.29 0.29
  0.29 0.29 0.33 0.29 0.25 0.33 0.25 0.25 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.29 0.25 0.29 0.21 0.21 0.25
  0.29 0.33 0.33 0.33 0.38 0.21 0.29 0.33 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.29 0.38 0.29 0.33
  0.21 0.38 0.38 0.29 0.12 0.29 0.33 0.33 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.17 0.38 0.29
  0.33 0.25 0.29 0.21 0.33 0.17 0.25 0.25 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.38 0.25
  0.33 0.25 0.33 0.29 0.33 0.04 0.29 0.21 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.25
  0.33 0.33 0.29 0.33 0.29 0.12 0.25 0.21 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29
  0.29 0.33 0.33 0.25 0.42 0.21 0.21 0.29 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21
  0.25 0.29 0.25 0.25 0.38 0.33 0.17 0.25 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.17 0.12 0.29 0.38 0.21 0.21 0.12 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.42 0.38 0.21 0.25 0.33 0.29 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.08 0.29 0.29 0.29 0.29 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.29 0.29 0.25 0.17 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.29 0.08 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.38 0.33 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.25 0.17 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})

**********      classifier acc  **************
[0.59, 0.807, 0.122, 0.665, 0.568, 0.511, 0.673, 0.808, 0.846, 0.719, 0.817, 0.429, 0.252, 0.698, 0.434, 0.449, 0.537, 0.617, 0.844, 0.83, 0.643, 0.92, 0.281, 0.571]
before cutting matrix
[[ 1.  1.  0.  1.  1.  0. -1. -1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.
  -1.  1.  0.  1.  0.  0.]
 [ 0.  1.  1.  1. -1.  1.  0. -1.  1.  0.  0.  1. -1.  1. -1.  1.  1.  1.
  -1.  0.  1.  1.  1.  1.]
 [ 0.  0. -1. -1. -1. -1.  1.  1.  0.  1.  0. -1.  1.  1.  1.  0.  0.  1.
   0.  1.  1.  1.  1.  1.]
 [ 1.  1.  0. -1.  0.  1. -1.  1.  1.  1.  1. -1.  0.  0. -1.  0.  0.  1.
   1.  1.  1.  1.  0.  1.]
 [-1.  0.  0. -1.  1.  1. -1.  0. -1. -1.  1. -1.  1.  1.  0. -1.  0.  0.
   0. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  0. -1.  0.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.
   0.  1.  1.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1.  0. -1.  0.  1. -1.  0.  0.  1. -1.  1.  1.  0.
  -1.  1.  0.  1.  0.  1.]
 [-1.  1. -1.  1. -1.  0.  1.  1.  1.  1.  1.  1. -1.  1.  0. -1. -1. -1.
   0.  1. -1. -1.  1.  1.]
 [-1.  0.  1. -1.  0. -1.  1. -1.  0. -1.  1.  1.  1.  1.  0. -1.  1.  0.
  -1.  1.  1.  1. -1. -1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.  0.  0.  0.  0. -1.  1. -1.  1.  1.  1.
   1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 180, 1.0: 164})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 283, 1.0: 124})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 283, 1.0: 124})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 243, 1.0: 193})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 243, 1.0: 193})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 216, -1.0: 179})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 216, -1.0: 179})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 287, -1.0: 51})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 287, -1.0: 51})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 248, -1.0: 172})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 248, -1.0: 172})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({-1.0: 237, 1.0: 176})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 237, 1.0: 176})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 219, 1.0: 120})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 219, 1.0: 120})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({-1.0: 240, 1.0: 201})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({-1.0: 240, 1.0: 201})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 266, -1.0: 124})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 266, -1.0: 124})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 297, -1.0: 116})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 297, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
Counter({1.0: 403, -1.0: 116})
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
positive and negative ratio
Counter({1.0: 403, -1.0: 116})
after cutting matrix
[[ 1.  1. -1. -1.  1.  1.  1.  0. -1.  1.  0.  1.]
 [ 1.  1.  0. -1.  0.  0.  1.  1. -1.  0.  1.  1.]
 [ 0. -1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]
 [ 0. -1. -1.  0. -1.  1.  1.  0.  0. -1.  1.  1.]
 [ 1. -1. -1.  0.  1.  1. -1.  1.  0.  1.  1.  1.]
 [-1. -1.  0. -1.  1. -1.  1.  0. -1.  1.  0.  1.]
 [ 1.  1.  1.  1.  1.  1.  1. -1.  0.  1. -1. -1.]
 [ 0. -1.  1. -1. -1.  1.  1.  0. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  0.  0.  1.  1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 341, -1.0: 45})
Counter({-1.0: 342, 1.0: 220})
Counter({-1.0: 269, 1.0: 189})
Counter({-1.0: 266, 1.0: 185})
Counter({1.0: 333, -1.0: 116})
Counter({1.0: 344, -1.0: 45})
Counter({1.0: 441, -1.0: 60})
Counter({1.0: 294, -1.0: 64})
Counter({-1.0: 212, 1.0: 115})
Counter({1.0: 398, -1.0: 51})
Counter({1.0: 410, -1.0: 64})
Counter({1.0: 498, -1.0: 64})
cutting matrix's confusion matrix
[[ 0  1  4  0  2  2  0  0 11  0]
 [ 0 15  1  0  4  0  0  0  1  0]
 [ 0  4 12  2  0  1  0  0  3  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  0  2  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 14  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  1  0  0 19  0]
 [ 0  0  0  0  0 12  0  0  2  0]]
