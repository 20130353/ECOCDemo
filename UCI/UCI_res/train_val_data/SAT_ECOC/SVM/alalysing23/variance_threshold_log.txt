算法备注：
算法没有改变，输出的log增加了每个res matrix的结果输出label的统计，这样可以清楚看出来每个分类器预测的偏重




SVM classifier
Time: 2019-01-06 15:10:52
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1. -1. -1.]
positive and negative ratio
这里缺失了

*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 145, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0. ]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.2 0. ]
 [0.  0.  0.2 0.6 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  0.]
 [-1.  1. -1.  1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
比例接近4-10倍
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 120, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.2 0. ]
 [0.  0.  0.4 0.8 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 1.25]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 120, -1.0: 31})

**********      classifier acc  **************
[0.839, 0.875, 0.714, 0.776]
before cutting matrix
[[-1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  0.]
 [-1.  1. -1.  1.]
 [-1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 145, 1.0: 21})
Counter({-1.0: 120, 1.0: 46})
Counter({1.0: 120, -1.0: 31})
after cutting matrix
[[-1. -1.  1.]
 [ 1. -1. -1.]
 [-1. -1.  0.]
 [-1.  1.  1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 145, 1.0: 21})
Counter({1.0: 120, -1.0: 31})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]


SVM classifier
Time: 2019-01-06 15:10:53
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  1. -1.]
positive and negative ratio
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({0.0: 42, 1.0: 14})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1. -1.]
 [ 0.  1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 38, 1.0: 12, -1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 5  0  1  3  0]
 [ 3  1  1  2  0]
 [ 4  1  1  1  0]
 [ 0  0  1  2  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0. -1.]
 [ 1. -1.  1.]
 [ 0.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 38, 1.0: 12, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 5  0  1  3  0]
 [ 4  0  1  2  0]
 [ 5  0  1  1  0]
 [ 0  0  1  2  0]]
row HD
[[0.  0.6 0.2 0.4 0.6]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0. -1.  1.]
 [ 1. -1.  1.  1.]
 [ 0.  1. -1.  0.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 130, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 38, 1.0: 12, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   0.75]
 [0.   0.   1.   1.  ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  1.  1.]
select_j_column
[ 0. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  0. -1.  1.]
 [ 1. -1.  1.  1.]
 [ 0.  1. -1.  0.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 130, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 38, 1.0: 12, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
confusion matrix
[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   0.75]
 [0.   0.   1.   1.  ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0. -1.  1.  0.]
 [ 1. -1.  1.  1. -1.]
 [ 0.  1. -1.  0.  1.]
 [ 1.  1. -1. -1.  0.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 130, -1.0: 21})
Counter({-1.0: 31, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({0.0: 38, 1.0: 12, -1.0: 6})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 52, 0.0: 4})
4 classifiers pre label
Counter({0.0: 40, -1.0: 15, 1.0: 1})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 6  0  1  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.8 0.6 0.6 0.8]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.6 0.8]
 [0.  0.  0.8 0.8 0.2]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 130, -1.0: 21})
Counter({-1.0: 31, 1.0: 21})

**********      classifier acc  **************
[0.263, 0.308, 0.786, 0.816, 0.211]
before cutting matrix
[[ 0.  0. -1.  1.  0.]
 [ 1. -1.  1.  1. -1.]
 [ 0.  1. -1.  0.  1.]
 [ 1.  1. -1. -1.  0.]
 [-1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 42, -1.0: 31})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 130, -1.0: 21})
Counter({-1.0: 31, 1.0: 21})

after cutting matrix
[[-1.  1.]
 [ 1.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 130, -1.0: 21})
cutting matrix's confusion matrix



[[30  0  0  0  0]
 [ 8  0  1  0  0]
 [ 6  0  1  0  0]
 [ 6  0  1  0  0]
 [ 2  0  1  0  0]]


SVM classifier
Time: 2019-01-06 15:10:54
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
ERROR-F1: the denominator of the 19 dimension of F1 is zero!
ERROR-F1: the denominator of the 21 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.33 0.   0.  ]
 [0.   0.   0.17 0.33 0.   0.  ]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
2 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1. -1.  1.  1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.5  0.17 0.17]
 [0.   0.   0.17 0.5  0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 0.5  1.25]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 6  0  0  0  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.67 0.33 0.33]
 [0.   0.   0.17 0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.  0.4 1.  0.8]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
5 classifiers pre label
Counter({1.0: 36, -1.0: 31})
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  0  1  0]
 [ 0  0 15  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.   0.33 0.83 0.5  0.5 ]
 [0.   0.   0.33 0.83 0.5  0.5 ]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.83 0.33 0.83 0.67 0.5 ]
 [0.   0.   0.5  0.33 0.5  0.33]
 [0.   0.   0.   0.5  0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 52, 1.0: 15})
2 classifiers pre label
Counter({1.0: 67})
3 classifiers pre label
Counter({-1.0: 56, 1.0: 11})
4 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
5 classifiers pre label
Counter({1.0: 36, -1.0: 31})
6 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  0  1  0]
 [ 0  0 15  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.   0.5  0.83 0.5  0.5 ]
 [0.   0.   0.5  0.83 0.5  0.5 ]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.71 0.29 0.71 0.57 0.43 0.57]
 [0.   0.   0.43 0.29 0.43 0.29 0.14]
 [0.   0.   0.   0.43 0.57 0.43 0.57]
 [0.   0.   0.   0.   0.14 0.29 0.43]
 [0.   0.   0.   0.   0.   0.14 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})

**********      classifier acc  **************
[0.896, 0.896, 0.94, 0.91, 0.955, 0.97, 0.985]
before cutting matrix
[[ 1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 146, 1.0: 55})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
positive and negative ratio
after cutting matrix
[[-1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.]
 [-1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 191, -1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 103, -1.0: 98})
Counter({-1.0: 163, 1.0: 38})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  0  1  0]
 [ 0  0 15  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]


SVM classifier
Time: 2019-01-06 15:10:56
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  0. -1.  0.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 40, 1.0: 15, -1.0: 12})
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [14  1  0  0  0  0]
 [ 6  1  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  1  0  0  1  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 0.  0. -1.  0.  0.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1.  0.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  0.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 40, 1.0: 15, -1.0: 12})
1 classifiers pre label
Counter({0.0: 44, -1.0: 14, 1.0: 9})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  0  2  1  0]]
row HD
[[0.   0.17 0.17 0.17 0.17 0.17]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.17 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 0.  1. -1.  1.  0. -1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 1.  0.  0.]
 [ 0. -1. -1.]
 [ 0.  1.  1.]
 [-1.  0.  1.]
 [ 0.  1. -1.]]
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 55, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 40, 1.0: 15, -1.0: 12})
1 classifiers pre label
Counter({0.0: 44, -1.0: 14, 1.0: 9})
2 classifiers pre label
Counter({0.0: 33, 1.0: 19, -1.0: 15})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 1  1  0  1  0  1]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.33 0.5  0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 55, -1.0: 48})

**********      classifier acc  **************
[0.957, 0.846, 0.861]
before cutting matrix
[[ 0.  0.  0.]
 [ 1.  0.  0.]
 [ 0. -1. -1.]
 [ 0.  1.  1.]
 [-1.  0.  1.]
 [ 0.  1. -1.]]
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 55, -1.0: 48})
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 55, -1.0: 48})
positive and negative ratio
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 55, -1.0: 48})
positive and negative ratio
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
Counter({1.0: 55, -1.0: 48})
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
positive and negative ratio
after cutting matrix
[[ 0.  0.]
 [ 1.  0.]
 [ 0. -1.]
 [ 0.  1.]
 [-1.  0.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 38, -1.0: 26})
Counter({1.0: 39, -1.0: 38})
cutting matrix's confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  0  2  1  0]]


SVM classifier
Time: 2019-01-06 15:10:57
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({-1.0: 125, 1.0: 63})
confusion matrix
[[13  4  0  0  0  0  0  0  0  0]
 [ 2 24  0  0  0  0  0  0  0  0]
 [16  6  0  0  0  0  0  0  0  0]
 [ 1 15  0  0  0  0  0  0  0  0]
 [11  6  0  0  0  0  0  0  0  0]
 [ 1 19  0  0  0  0  0  0  0  0]
 [10  5  0  0  0  0  0  0  0  0]
 [ 2 18  0  0  0  0  0  0  0  0]
 [ 7 15  0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
confusion matrix
[[11  3  0  0  0  0  2  0  0  1]
 [ 1 24  0  0  0  0  1  0  0  0]
 [16  3  0  0  0  0  0  0  0  3]
 [ 1 14  0  0  0  0  0  0  0  1]
 [11  1  0  0  0  0  0  0  0  5]
 [ 0 17  0  0  0  0  1  0  0  2]
 [ 4  5  0  0  0  0  6  0  0  0]
 [ 0 18  0  0  0  0  2  0  0  0]
 [ 5 15  0  0  0  0  2  0  0  0]
 [ 0  8  0  0  0  0  0  0  0  5]]
row HD
[[0.  0.2 0.  0.2 0.  0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.2 0.  0.2 0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.2 0.  0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: None, 7: True, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
confusion matrix
[[11  3  0  0  0  0  2  0  0  1]
 [ 1 19  0  5  0  0  1  0  0  0]
 [ 1  2 17  1  0  0  0  0  0  1]
 [ 0  2  2 12  0  0  0  0  0  0]
 [ 1  0 10  1  0  0  0  0  0  5]
 [ 0 17  0  0  0  0  1  0  0  2]
 [ 4  5  0  0  0  0  6  0  0  0]
 [ 0 17  0  1  0  0  2  0  0  0]
 [ 4 14  1  1  0  0  2  0  0  0]
 [ 0  6  1  2  0  0  0  0  0  4]]
row HD
[[0.  0.2 0.1 0.3 0.1 0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.3 0.1 0.3 0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.2 0.  0.3 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 1.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1. -1.  1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
confusion matrix
[[11  2  0  0  0  1  2  0  0  1]
 [ 1 23  0  1  0  0  1  0  0  0]
 [ 1  1 17  1  0  2  0  0  0  0]
 [ 0  3  2 10  0  1  0  0  0  0]
 [ 1  1  0  0 10  0  0  0  0  5]
 [ 0  2  0  0  0 17  1  0  0  0]
 [ 4  3  0  0  0  2  6  0  0  0]
 [ 0 15  0  1  0  2  2  0  0  0]
 [ 4 13  1  1  0  1  2  0  0  0]
 [ 0  6  0  2  1  0  0  0  0  4]]
row HD
[[0.  0.2 0.2 0.4 0.1 0.3 0.1 0.2 0.2 0.1]
 [0.  0.  0.4 0.2 0.3 0.1 0.1 0.  0.  0.1]
 [0.  0.  0.  0.2 0.1 0.3 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   0.75 1.25]
 [0.   0.   1.75 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
confusion matrix
[[12  2  0  0  0  1  2  0  0  0]
 [ 1 20  0  5  0  0  0  0  0  0]
 [ 1  1 17  1  0  1  0  0  0  1]
 [ 0  3  2 10  0  1  0  0  0  0]
 [ 2  0  2  1  8  0  0  0  0  4]
 [ 0  2  0  0  0 16  1  0  0  1]
 [ 4  3  0  0  0  2  6  0  0  0]
 [ 0 16  0  1  0  2  1  0  0  0]
 [ 4 13  1  1  0  1  2  0  0  0]
 [ 1  6  0  2  1  0  0  0  0  3]]
row HD
[[0.  0.3 0.3 0.4 0.1 0.3 0.1 0.3 0.3 0.2]
 [0.  0.  0.4 0.3 0.4 0.2 0.2 0.  0.  0.1]
 [0.  0.  0.  0.3 0.2 0.4 0.4 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.4 0.2 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 0.6 1.  1.4]
 [0.  0.  1.4 1.  1. ]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
confusion matrix
[[14  2  0  0  0  1  0  0  0  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 1  2 17  1  0  0  0  0  0  1]
 [ 0  3  2 11  0  0  0  0  0  0]
 [ 2  5  2  0  8  0  0  0  0  0]
 [ 0  3  0  0  0 16  1  0  0  0]
 [ 4  3  0  0  0  2  6  0  0  0]
 [ 1 16  0  2  0  1  0  0  0  0]
 [ 4 14  1  0  0  1  2  0  0  0]
 [ 1  9  0  2  1  0  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2 0.4 0.2 0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.4 0.2 0.2 0.  0.  0.2]
 [0.  0.  0.  0.4 0.2 0.4 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.2 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.5  0.83 1.17 0.83]
 [0.   0.   1.17 0.83 0.83 1.17]
 [0.   0.   0.   0.33 1.   0.67]
 [0.   0.   0.   0.   1.   0.67]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[14  2  0  0  0  1  0  0  0  0]
 [ 1 24  0  1  0  0  0  0  0  0]
 [ 0  3 17  1  0  0  0  0  0  1]
 [ 0  3  2 11  0  0  0  0  0  0]
 [ 2  1  2  0  8  0  0  0  0  4]
 [ 0  2  1  0  0 16  1  0  0  0]
 [ 4  3  0  0  0  2  6  0  0  0]
 [ 1 16  0  2  0  1  0  0  0  0]
 [ 4 14  1  0  0  1  2  0  0  0]
 [ 1  6  0  2  1  0  0  0  0  3]]
row HD
[[0.  0.5 0.4 0.5 0.2 0.5 0.2 0.5 0.5 0.2]
 [0.  0.  0.5 0.4 0.5 0.2 0.3 0.  0.  0.3]
 [0.  0.  0.  0.5 0.2 0.5 0.4 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.5 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.2 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 0.43 0.71 1.   0.71 1.29]
 [0.   0.   1.   0.71 0.71 1.   0.14]
 [0.   0.   0.   0.29 0.86 0.57 0.86]
 [0.   0.   0.   0.   0.86 0.57 0.57]
 [0.   0.   0.   0.   0.   0.86 0.57]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[14  2  0  0  0  1  0  0  0  0]
 [ 1 23  0  1  0  0  0  1  0  0]
 [ 0  2 17  0  0  1  0  1  0  1]
 [ 0  2  2 10  0  1  0  1  0  0]
 [ 2  1  2  0  8  0  0  0  0  4]
 [ 0  0  1  0  0 16  1  2  0  0]
 [ 3  3  0  0  0  2  7  0  0  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 4 11  1  0  0  1  2  3  0  0]
 [ 1  0  0  2  1  0  0  6  0  3]]
row HD
[[0.  0.6 0.4 0.6 0.2 0.5 0.3 0.5 0.6 0.2]
 [0.  0.  0.6 0.4 0.6 0.3 0.3 0.1 0.  0.4]
 [0.  0.  0.  0.6 0.2 0.5 0.5 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.6 0.3 0.5 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.5 0.3 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.38 0.62 0.88 0.62 1.12 0.5 ]
 [0.   0.   0.88 0.62 0.62 0.88 0.12 1.  ]
 [0.   0.   0.   0.25 0.75 0.5  0.75 0.62]
 [0.   0.   0.   0.   0.75 0.5  0.5  0.62]
 [0.   0.   0.   0.   0.   0.75 0.5  0.62]
 [0.   0.   0.   0.   0.   0.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
None


============== iter  9 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[14  2  0  0  0  1  0  0  0  0]
 [ 1 23  0  1  0  0  0  1  0  0]
 [ 0  2 17  0  0  1  0  1  0  1]
 [ 0  2  2 10  0  1  0  1  0  0]
 [ 2  1  2  0  8  0  0  0  0  4]
 [ 0  0  1  0  0 16  1  2  0  0]
 [ 3  3  0  0  0  2  7  0  0  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 4 11  1  0  0  1  2  3  0  0]
 [ 1  0  0  2  1  0  0  6  0  3]]
row HD
[[0.  0.6 0.4 0.6 0.2 0.5 0.3 0.5 0.6 0.2]
 [0.  0.  0.6 0.4 0.6 0.3 0.3 0.1 0.  0.4]
 [0.  0.  0.  0.6 0.2 0.5 0.5 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.6 0.3 0.5 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.5 0.3 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.38 0.62 0.88 0.62 1.12 0.5 ]
 [0.   0.   0.88 0.62 0.62 0.88 0.12 1.  ]
 [0.   0.   0.   0.25 0.75 0.5  0.75 0.62]
 [0.   0.   0.   0.   0.75 0.5  0.5  0.62]
 [0.   0.   0.   0.   0.   0.75 0.5  0.62]
 [0.   0.   0.   0.   0.   0.   0.75 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 116, -1.0: 72})
8 classifiers pre label
Counter({1.0: 98, -1.0: 90})
confusion matrix
[[13  2  1  0  0  1  0  0  0  0]
 [ 1 19  0  5  0  0  0  1  0  0]
 [ 0  2 16  0  0  1  0  1  0  2]
 [ 0  2  2 10  0  1  0  1  0  0]
 [ 2  0  1  1  9  0  0  0  0  4]
 [ 0  0  0  0  0 16  1  2  0  1]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2 11  3  0  0  1  2  3  0  0]
 [ 1  0  0  2  1  0  0  6  0  3]]
row HD
[[0.  0.7 0.5 0.6 0.2 0.5 0.4 0.6 0.7 0.2]
 [0.  0.  0.6 0.5 0.7 0.4 0.3 0.1 0.  0.5]
 [0.  0.  0.  0.7 0.3 0.6 0.5 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.3 0.6 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.4 0.6 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.33 0.56 0.78 0.56 1.   0.44 0.56]
 [0.   0.   0.78 0.56 0.56 0.78 0.11 0.89 0.78]
 [0.   0.   0.   0.22 0.67 0.44 0.67 0.56 0.44]
 [0.   0.   0.   0.   0.67 0.44 0.44 0.56 0.44]
 [0.   0.   0.   0.   0.   0.67 0.44 0.56 0.89]
 [0.   0.   0.   0.   0.   0.   0.67 0.56 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.78 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1. -1. -1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
1 classifiers pre label
Counter({1.0: 122, -1.0: 66})
2 classifiers pre label
Counter({-1.0: 134, 1.0: 54})
3 classifiers pre label
Counter({-1.0: 126, 1.0: 62})
4 classifiers pre label
Counter({1.0: 107, -1.0: 81})
5 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
6 classifiers pre label
Counter({1.0: 100, -1.0: 88})
7 classifiers pre label
Counter({1.0: 116, -1.0: 72})
8 classifiers pre label
Counter({1.0: 98, -1.0: 90})
9 classifiers pre label
Counter({1.0: 178, -1.0: 10})
confusion matrix
[[13  2  1  0  0  1  0  0  0  0]
 [ 1 19  0  5  0  0  0  1  0  0]
 [ 0  2 16  0  0  1  0  1  0  2]
 [ 0  2  2 10  0  1  0  1  0  0]
 [ 2  0  1  1  9  0  0  0  0  4]
 [ 0  0  0  0  0 16  1  2  0  1]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  3  0  1  0  2  0 13  0  0]
 [ 2 11  3  0  0  1  2  3  0  0]
 [ 1  0  0  2  1  0  0  6  0  3]]
row HD
[[0.  0.7 0.5 0.6 0.2 0.5 0.5 0.6 0.7 0.2]
 [0.  0.  0.6 0.5 0.7 0.4 0.4 0.1 0.  0.5]
 [0.  0.  0.  0.7 0.3 0.6 0.6 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.6 0.3 0.7 0.6 0.5 0.6]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.3 0.5 0.7 0.5 0.9 0.4 0.5 0.7]
 [0.  0.  0.7 0.5 0.5 0.7 0.1 0.8 0.7 0.5]
 [0.  0.  0.  0.2 0.6 0.4 0.6 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.6 0.4 0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.6 0.4 0.5 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})

**********      classifier acc  **************
[0.819, 0.835, 0.878, 0.894, 0.777, 0.824, 0.787, 0.824, 0.835, 0.931]
before cutting matrix
[[ 1. -1. -1. -1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
positive and negative ratio
Counter({1.0: 338, -1.0: 224})
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 292, -1.0: 270})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 516, -1.0: 46})
positive and negative ratio
after cutting matrix
[[-1. -1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1. -1.  1. -1. -1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 377, 1.0: 185})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 393, 1.0: 169})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 286, -1.0: 276})
Counter({1.0: 516, -1.0: 46})
cutting matrix's confusion matrix
[[13  2  0  0  0  1  0  1  0  0]
 [ 0 19  0  1  4  0  0  2  0  0]
 [ 1  1 18  0  0  0  0  1  0  1]
 [ 1  2  2 10  0  0  0  0  0  1]
 [ 2  1  0  0 10  0  0  4  0  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  3  0  0  0  2  6  3  0  0]
 [ 2  3  0  1  0  1  0 13  0  0]
 [ 2 10  2  0  0  1  2  2  0  3]
 [ 1  0  0  2  1  0  0  3  0  6]]


SVM classifier
Time: 2019-01-06 15:11:08
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
confusion matrix
[[14  3  0  0  0  0  0  0  0  0]
 [ 0 25  0  0  1  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 5  3  0  0  9  0  0  0  0  0]
 [ 4 16  0  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [17  5  0  0  0  0  0  0  0  0]
 [ 4  9  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [-1.  0.]
 [ 0.  1.]
 [-1.  1.]
 [ 1.  0.]
 [-1. -1.]
 [-1. -1.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0.  0.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
confusion matrix
[[13  3  0  0  0  0  0  0  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 2  1 18  1  0  0  0  0  0  0]
 [ 3  0  1 11  0  1  0  0  0  0]
 [ 3  3  0  0  9  0  0  0  0  2]
 [ 4  0  0  0  0 16  0  0  0  0]
 [11  0  0  0  0  4  0  0  0  0]
 [15  3  0  1  0  1  0  0  0  0]
 [15  0  2  0  0  5  0  0  0  0]
 [ 0  1  0  2  0  6  0  0  0  4]]
row HD
[[0.  0.2 0.1 0.2 0.2 0.1 0.1 0.  0.  0.1]
 [0.  0.  0.2 0.1 0.1 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1. -1.]
 [-1.  0.  0.]
 [ 0.  1. -1.]
 [-1.  1.  0.]
 [ 1.  0.  0.]
 [-1. -1.  0.]
 [-1. -1.  0.]
 [ 0. -1.  1.]
 [ 0. -1.  1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
confusion matrix
[[10  3  0  0  0  0  0  3  0  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  2  0  1]
 [ 0  0  1 11  0  1  0  3  0  0]
 [ 0  3  0  0  9  0  0  3  0  2]
 [ 1  0  0  0  0 16  0  3  0  0]
 [ 2  0  0  0  0  4  0  9  0  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 3  0  1  0  0  5  0 12  0  1]
 [ 0  1  0  2  0  6  0  0  0  4]]
row HD
[[0.  0.3 0.1 0.3 0.3 0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.3 0.1 0.1 0.1 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.2 0.3 0.3 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 3.33]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0. -1. -1. -1.]
 [-1.  0.  0.  0.]
 [ 0.  1. -1.  1.]
 [-1.  1.  0.  0.]
 [ 1.  0.  0.  0.]
 [-1. -1.  0. -1.]
 [-1. -1.  0.  1.]
 [ 0. -1.  1.  0.]
 [ 0. -1.  1.  1.]
 [ 0.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
3 classifiers pre label
Counter({0.0: 74, 1.0: 73, -1.0: 41})
confusion matrix
[[10  3  0  0  0  0  0  2  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  1  0  0  0  1  1  1]
 [ 0  0  1 11  0  0  1  3  0  0]
 [ 0  3  0  0  9  0  0  1  2  2]
 [ 1  0  0  0  0 14  2  1  2  0]
 [ 1  0  0  0  0  2  3  0  9  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  1  0  0  1  5  0 12  1]
 [ 0  1  0  2  0  0  6  1  0  3]]
row HD
[[0.  0.4 0.2 0.4 0.4 0.2 0.3 0.2 0.2 0.3]
 [0.  0.  0.4 0.1 0.1 0.2 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.4 0.4 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.5  2.  ]
 [0.   0.   1.75 1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0.  0.  1.  1.  1.]
select_j_column
[-1.  0.  1.  1.  0. -1. -1. -1. -1.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1. -1. -1.  0.]
 [-1.  0.  0.  0.  0.]
 [ 0.  1. -1.  1.  1.]
 [-1.  1.  0.  0. -1.]
 [ 1.  0.  0.  0.  0.]
 [-1. -1.  0. -1.  1.]
 [-1. -1.  0.  1.  1.]
 [ 0. -1.  1.  0. -1.]
 [ 0. -1.  1.  1. -1.]
 [ 0.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
3 classifiers pre label
Counter({0.0: 74, 1.0: 73, -1.0: 41})
4 classifiers pre label
Counter({1.0: 77, 0.0: 64, -1.0: 47})
confusion matrix
[[10  3  0  0  0  1  0  1  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  1  1  0]
 [ 0  2  2  8  0  0  1  3  0  0]
 [ 0  3  0  0  9  0  0  1  0  4]
 [ 1  0  0  0  0 14  2  1  0  2]
 [ 1  0  0  0  0  2  3  0  3  6]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  1  1  0  1  5  0 10  2]
 [ 0  1  0  2  0  1  6  0  0  3]]
row HD
[[0.  0.4 0.3 0.5 0.4 0.3 0.4 0.3 0.3 0.4]
 [0.  0.  0.5 0.2 0.1 0.3 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.4 0.5 0.4 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 2.  1.6 1.6]
 [0.  0.  1.4 1.  1. ]
 [0.  0.  0.  0.8 1.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[-1.  0.  1.  1.  0. -1. -1. -1. -1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0. -1. -1. -1.  0.  1.]
 [-1.  0.  0.  0.  0. -1.]
 [ 0.  1. -1.  1.  1. -1.]
 [-1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0.  0.  0.  1.]
 [-1. -1.  0. -1.  1.  1.]
 [-1. -1.  0.  1.  1. -1.]
 [ 0. -1.  1.  0. -1.  1.]
 [ 0. -1.  1.  1. -1.  1.]
 [ 0.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
3 classifiers pre label
Counter({0.0: 74, 1.0: 73, -1.0: 41})
4 classifiers pre label
Counter({1.0: 77, 0.0: 64, -1.0: 47})
5 classifiers pre label
Counter({1.0: 115, -1.0: 61, 0.0: 12})
confusion matrix
[[10  0  0  3  0  1  0  1  2  0]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  1  1  0]
 [ 0  0  2  8  0  2  0  3  0  1]
 [ 0  0  0  3  9  0  0  1  0  4]
 [ 1  0  0  0  0 14  1  1  0  3]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 3  0  1  1  0  1  3  0 10  3]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.5 0.4 0.6 0.4 0.3 0.5 0.3 0.3 0.4]
 [0.  0.  0.5 0.3 0.2 0.4 0.3 0.5 0.6 0.5]
 [0.  0.  0.  0.5 0.6 0.5 0.3 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.67 1.33 1.33 1.17]
 [0.   0.   1.17 0.83 0.83 1.5 ]
 [0.   0.   0.   0.67 1.17 0.83]
 [0.   0.   0.   0.   0.83 1.17]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: None}
select_i_column
[-1.  0. -1.  0.  0.  0.  0.  1.  1.  1.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 0. -1. -1. -1.  0.  1.  0.]
 [-1.  0.  0.  0.  0. -1.  0.]
 [ 0.  1. -1.  1.  1. -1. -1.]
 [-1.  1.  0.  0. -1.  0.  0.]
 [ 1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  1.  1.  1.]
 [-1. -1.  0.  1.  1. -1. -1.]
 [ 0. -1.  1.  0. -1.  1.  0.]
 [ 0. -1.  1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
3 classifiers pre label
Counter({0.0: 74, 1.0: 73, -1.0: 41})
4 classifiers pre label
Counter({1.0: 77, 0.0: 64, -1.0: 47})
5 classifiers pre label
Counter({1.0: 115, -1.0: 61, 0.0: 12})
6 classifiers pre label
Counter({0.0: 83, 1.0: 68, -1.0: 37})
confusion matrix
[[10  0  0  3  0  1  0  1  2  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  1 18  0  0  0  0  1  2  0]
 [ 0  0  2  8  0  3  0  3  0  0]
 [ 0  0  0  0  9  3  0  1  0  4]
 [ 1  0  0  0  0 16  1  1  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 3  0  1  0  0  4  3  0 11  0]
 [ 0  0  0  2  0  8  0  0  0  3]]
row HD
[[0.  0.5 0.5 0.6 0.5 0.4 0.6 0.3 0.4 0.4]
 [0.  0.  0.6 0.3 0.3 0.5 0.4 0.5 0.7 0.5]
 [0.  0.  0.  0.6 0.7 0.6 0.3 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.43 1.14 1.14 1.   0.71]
 [0.   0.   1.   0.71 0.71 1.29 1.  ]
 [0.   0.   0.   0.57 1.   0.71 0.86]
 [0.   0.   0.   0.   0.71 1.   0.86]
 [0.   0.   0.   0.   0.   1.14 1.  ]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
3
new_column
None


============== iter  8 ================
current matrix is 
[[ 0. -1. -1. -1.  0.  1.  0.]
 [-1.  0.  0.  0.  0. -1.  0.]
 [ 0.  1. -1.  1.  1. -1. -1.]
 [-1.  1.  0.  0. -1.  0.  0.]
 [ 1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  1.  1.  1.]
 [-1. -1.  0.  1.  1. -1. -1.]
 [ 0. -1.  1.  0. -1.  1.  0.]
 [ 0. -1.  1.  1. -1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
3 classifiers pre label
Counter({0.0: 74, 1.0: 73, -1.0: 41})
4 classifiers pre label
Counter({1.0: 77, 0.0: 64, -1.0: 47})
5 classifiers pre label
Counter({1.0: 115, -1.0: 61, 0.0: 12})
6 classifiers pre label
Counter({0.0: 83, 1.0: 68, -1.0: 37})
confusion matrix
[[10  0  0  3  0  1  0  1  2  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  1 18  0  0  0  0  1  2  0]
 [ 0  0  2  8  0  3  0  3  0  0]
 [ 0  0  0  0  9  3  0  1  0  4]
 [ 1  0  0  0  0 16  1  1  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 3  0  1  0  0  4  3  0 11  0]
 [ 0  0  0  2  0  8  0  0  0  3]]
row HD
[[0.  0.5 0.5 0.6 0.5 0.4 0.6 0.3 0.4 0.4]
 [0.  0.  0.6 0.3 0.3 0.5 0.4 0.5 0.7 0.5]
 [0.  0.  0.  0.6 0.7 0.6 0.3 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.43 1.14 1.14 1.   0.71]
 [0.   0.   1.   0.71 0.71 1.29 1.  ]
 [0.   0.   0.   0.57 1.   0.71 0.86]
 [0.   0.   0.   0.   0.71 1.   0.86]
 [0.   0.   0.   0.   0.   1.14 1.  ]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  1.  1.  0. -1. -1. -1. -1.  0.]
select_j_column
[ 1. -1. -1.  0.  1.  1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 0. -1. -1. -1.  0.  1.  0.  1.]
 [-1.  0.  0.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  0.  0. -1.  0.  0.  1.]
 [ 1.  0.  0.  0.  0.  1.  1. -1.]
 [-1. -1.  0. -1.  1.  1.  1.  1.]
 [-1. -1.  0.  1.  1. -1. -1.  0.]
 [ 0. -1.  1.  0. -1.  1.  0.  1.]
 [ 0. -1.  1.  1. -1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 94, -1.0: 84, 1.0: 10})
1 classifiers pre label
Counter({-1.0: 99, 0.0: 52, 1.0: 37})
2 classifiers pre label
Counter({0.0: 94, 1.0: 56, -1.0: 38})
3 classifiers pre label
Counter({0.0: 74, 1.0: 73, -1.0: 41})
4 classifiers pre label
Counter({1.0: 77, 0.0: 64, -1.0: 47})
5 classifiers pre label
Counter({1.0: 115, -1.0: 61, 0.0: 12})
6 classifiers pre label
Counter({0.0: 83, 1.0: 68, -1.0: 37})
7 classifiers pre label
Counter({1.0: 143, -1.0: 42, 0.0: 3})
confusion matrix
[[10  0  0  3  0  1  0  1  2  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  1 18  0  0  0  0  1  2  0]
 [ 0  0  2  8  0  3  0  3  0  0]
 [ 0  0  0  0 10  2  0  1  0  4]
 [ 1  0  0  0  0 16  1  1  0  1]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  1  0  0  4  3  0 11  1]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.5 0.6 0.6 0.6 0.4 0.7 0.3 0.4 0.5]
 [0.  0.  0.7 0.3 0.4 0.5 0.5 0.5 0.7 0.6]
 [0.  0.  0.  0.7 0.7 0.7 0.4 0.7 0.6 0.4]
 [0.  0.  0.  0.  0.6 0.5 0.6 0.4 0.6 0.7]
 [0.  0.  0.  0.  0.  0.5 0.7 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 1.25 1.   1.   0.88 0.62 1.25]
 [0.   0.   0.88 0.62 0.62 1.12 0.88 1.12]
 [0.   0.   0.   0.5  0.88 0.62 0.75 0.75]
 [0.   0.   0.   0.   0.62 0.88 0.75 1.12]
 [0.   0.   0.   0.   0.   1.   0.88 1.12]
 [0.   0.   0.   0.   0.   0.   0.5  0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})

**********      classifier acc  **************
[0.702, 0.871, 0.596, 0.807, 0.719, 0.843, 0.74, 0.861]
before cutting matrix
[[ 0. -1. -1. -1.  0.  1.  0.  1.]
 [-1.  0.  0.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  0.  0. -1.  0.  0.  1.]
 [ 1.  0.  0.  0.  0.  1.  1. -1.]
 [-1. -1.  0. -1.  1.  1.  1.  1.]
 [-1. -1.  0.  1.  1. -1. -1.  0.]
 [ 0. -1.  1.  0. -1.  1.  0.  1.]
 [ 0. -1.  1.  1. -1.  1.  1.  1.]
 [ 0.  0.  1.  1.  1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
Counter({-1.0: 224, 1.0: 63})
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 167, -1.0: 108})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 210, -1.0: 179})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 343, -1.0: 173})
positive and negative ratio
after cutting matrix
[[-1. -1.  1.  0.  1.]
 [ 0.  0. -1.  0.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 1.  0.  0.  0.  1.]
 [ 0.  0.  1.  1. -1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  0.]
 [-1.  0.  1.  0.  1.]
 [-1.  1.  1.  1.  1.]
 [ 0.  1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 265, 1.0: 122})
Counter({1.0: 208, -1.0: 105})
Counter({1.0: 335, -1.0: 162})
Counter({1.0: 169, -1.0: 103})
Counter({1.0: 343, -1.0: 173})
cutting matrix's confusion matrix
[[11  1  0  0  0  0  0  3  2  0]
 [ 0 21  0  1  1  3  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  2 10  0  0  0  3  1  0]
 [ 0  0  0  0 11  2  0  1  0  3]
 [ 2  0  0  0  0 14  1  0  2  1]
 [ 0  1  0  0  0  2  9  0  3  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 2  0  1  1  0  1  3  0 13  1]
 [ 1  0  0  2  1  0  0  0  6  3]]
算法备注：
算法没有改变，输出的log增加了每个res matrix的结果输出label的统计，这样可以清楚看出来每个分类器预测的偏重


SVM classifier
Time: 2019-01-06 15:11:14
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.2 0.  0.2 0.4]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.6]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  0.]
 [ 1.  1.  1.  0.]
 [ 1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.2 0.4 0.6 0.8]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  0.75]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
None


============== iter  5 ================
current matrix is 
[[-1.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  0.]
 [ 1.  1.  1.  0.]
 [ 1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.2 0.4 0.6 0.8]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  0.75]
 [0.   0.   0.75 1.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  0.]
 [-1.  1.  1.  0.  1.]
 [ 1.  1.  1.  0.  1.]
 [ 1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 129, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
3 classifiers pre label
Counter({-1.0: 51, 0.0: 5})
4 classifiers pre label
Counter({1.0: 48, 0.0: 8})
confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.4 0.6 1. ]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.6 0.8]
 [0.  0.  0.6 1.  0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 129, -1.0: 8})

**********      classifier acc  **************
[0.625, 0.946, 0.839, 0.929, 0.81]
before cutting matrix
[[-1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  0.]
 [-1.  1.  1.  0.  1.]
 [ 1.  1.  1.  0.  1.]
 [ 1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 129, -1.0: 8})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 129, -1.0: 8})
positive and negative ratio
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 129, -1.0: 8})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
Counter({1.0: 129, -1.0: 8})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
positive and negative ratio
after cutting matrix
[[-1.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  0.]
 [ 1.  1.  1.  0.]
 [ 1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 158, -1.0: 8})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 116, 1.0: 8})
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 6  7  1  0  0]
 [ 2  3  1  3  0]
 [ 0  2  2  1  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-06 15:11:15
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  0.]
positive and negative ratio
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
confusion matrix
[[21  3  0  1  0]
 [11  2  0  1  0]
 [ 3  3  0  3  0]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[-1.  1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1.  0.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[21  0  4  0  0]
 [11  0  3  0  0]
 [ 3  0  5  1  0]
 [ 2  0  2  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [ 0.  1. -1.]
 [ 0. -1.  0.]
 [-1.  0. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
confusion matrix
[[24  0  0  1  0]
 [13  0  0  1  0]
 [ 4  0  2  3  0]
 [ 3  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  1.]
 [ 0.  1. -1.  0.]
 [ 0. -1.  0. -1.]
 [-1.  0. -1. -1.]
 [ 0.  0.  1.  0.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
confusion matrix
[[25  0  0  0  0]
 [12  0  1  1  0]
 [ 3  1  2  3  0]
 [ 3  0  0  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 0.25]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  1.  0.]
 [ 0.  1. -1.  0.  1.]
 [ 0. -1.  0. -1. -1.]
 [-1.  0. -1. -1.  1.]
 [ 0.  0.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
4 classifiers pre label
Counter({0.0: 43, 1.0: 13})
confusion matrix
[[25  0  0  0  0]
 [12  0  1  1  0]
 [ 3  1  0  5  0]
 [ 3  0  0  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.8 0.8 0.8 1. ]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.2 1. ]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 0.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  1.  0.  1.]
 [ 0.  1. -1.  0.  1. -1.]
 [ 0. -1.  0. -1. -1.  1.]
 [-1.  0. -1. -1.  1.  1.]
 [ 0.  0.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
4 classifiers pre label
Counter({0.0: 43, 1.0: 13})
5 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [12  0  1  1  0]
 [ 3  0  0  6  0]
 [ 3  0  0  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  1.  0.8 0.8 1. ]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.17 0.83 0.67]
 [0.   0.   0.67 0.5  0.5  0.83]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[-1. -1.  0. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  1.  0.  1.  1.]
 [ 0.  1. -1.  0.  1. -1.  1.]
 [ 0. -1.  0. -1. -1.  1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.]
 [ 0.  0.  1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
3 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
4 classifiers pre label
Counter({0.0: 43, 1.0: 13})
5 classifiers pre label
Counter({1.0: 56})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 4  0  0  4  1]
 [ 2  0  0  3  0]
 [ 1  0  1  1  0]]
row HD
[[0.  1.  1.  1.  1.2]
 [0.  0.  1.2 1.  0.8]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.43 0.14 0.71 0.57 0.29]
 [0.   0.   0.57 0.43 0.43 0.71 0.29]
 [0.   0.   0.   0.57 0.57 0.43 0.57]
 [0.   0.   0.   0.   0.57 0.57 0.14]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})

**********      classifier acc  **************
[0.767, 0.667, 0.936, 0.769, 0.161, 0.75, 0.849]
before cutting matrix
[[ 1. -1. -1.  1.  0.  1.  1.]
 [ 0.  1. -1.  0.  1. -1.  1.]
 [ 0. -1.  0. -1. -1.  1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.]
 [ 0.  0.  1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 105, 1.0: 29})
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 61, -1.0: 18})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
positive and negative ratio
after cutting matrix
[[-1.  1.  1.]
 [-1. -1.  1.]
 [ 0.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 140, 1.0: 8})
Counter({1.0: 137, -1.0: 29})
Counter({1.0: 116, -1.0: 42})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  1  3  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]


SVM classifier
Time: 2019-01-06 15:11:17
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1.  1.  1. -1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({1.0: 49, -1.0: 18})
confusion matrix
[[17  0  0  0  0  0]
 [ 2 10  0  0  0  0]
 [11  0  0  0  0  0]
 [ 7  1  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({-1.0: 139, 1.0: 62})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [11  0  0  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0 11  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.17 0.   0.17 0.17 0.33]
 [0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: None}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  1  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  1  6  0  0]
 [ 0  0  0 11  0  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.33 0.17 0.17 0.17 0.5 ]
 [0.   0.   0.17 0.5  0.5  0.17]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  1.]
 [-1. -1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({1.0: 49, -1.0: 18})
1 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
2 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
3 classifiers pre label
Counter({1.0: 38, -1.0: 29})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 10  0  2  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.33 0.33 0.17 0.33 0.67]
 [0.   0.   0.33 0.5  0.67 0.33]
 [0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.25 0.75]
 [0.   0.   1.   1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})

**********      classifier acc  **************
[0.94, 0.94, 0.94, 0.985]
before cutting matrix
[[ 1. -1. -1.  1.]
 [-1. -1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
Counter({1.0: 161, -1.0: 40})
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
Counter({-1.0: 139, 1.0: 62})
Counter({1.0: 124, -1.0: 77})
positive and negative ratio
after cutting matrix
[[-1. -1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 139, 1.0: 62})
Counter({-1.0: 118, 1.0: 83})
Counter({1.0: 124, -1.0: 77})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]


SVM classifier
Time: 2019-01-06 15:11:18
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[-1.  0.  0. -1.  0.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({0.0: 36, -1.0: 25, 1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[-1.  0.  0. -1.  0.  1.]
select_j_column
[ 0. -1. -1.  1.  0.  1.]
most_cplx_inx
4
new_column
None


============== iter  2 ================
current matrix is 
[-1.  0.  0. -1.  0.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({0.0: 36, -1.0: 25, 1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0. -1. -1.  1.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[-1.  0.  0. -1.  0.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({0.0: 36, -1.0: 25, 1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 0.  0.  1.  0.  1. -1.]
select_j_column
[ 0. -1. -1.  1.  0.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [-1. -1.]
 [ 0.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 9})
Counter({-1.0: 71, 1.0: 65})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({0.0: 36, -1.0: 25, 1.0: 6})
1 classifiers pre label
Counter({1.0: 32, -1.0: 18, 0.0: 17})
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.33 0.17 0.33 0.33]
 [0.   0.   0.17 0.33 0.   0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 0.  0.  1.  0.  1. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0. -1.]
 [ 0.  1.  0.]
 [ 0. -1. -1.]
 [-1. -1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 9})
Counter({-1.0: 71, 1.0: 65})
Counter({-1.0: 117, 1.0: 25})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({0.0: 36, -1.0: 25, 1.0: 6})
1 classifiers pre label
Counter({1.0: 32, -1.0: 18, 0.0: 17})
2 classifiers pre label
Counter({-1.0: 34, 0.0: 22, 1.0: 11})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.5  0.33 0.33 0.5  0.33]
 [0.   0.   0.33 0.33 0.17 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 93, 1.0: 9})
Counter({-1.0: 71, 1.0: 65})
Counter({-1.0: 117, 1.0: 25})

**********      classifier acc  **************
[0.909, 0.98, 0.957]
before cutting matrix
[[-1.  0. -1.]
 [ 0.  1.  0.]
 [ 0. -1. -1.]
 [-1. -1.  0.]
 [ 0.  1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 9})
Counter({-1.0: 71, 1.0: 65})
Counter({-1.0: 117, 1.0: 25})
positive and negative ratio
Counter({-1.0: 93, 1.0: 9})
Counter({-1.0: 71, 1.0: 65})
Counter({-1.0: 117, 1.0: 25})
positive and negative ratio
Counter({-1.0: 71, 1.0: 65})
Counter({-1.0: 117, 1.0: 25})
positive and negative ratio
after cutting matrix
[[ 0. -1.]
 [ 1.  0.]
 [-1. -1.]
 [-1.  0.]
 [ 1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 71, 1.0: 65})
Counter({-1.0: 117, 1.0: 25})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-06 15:11:19
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[14  4  0  0  0  0  0  0  0  0]
 [ 0 22  0  0  0  0  0  0  0  0]
 [20  6  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [ 0 23  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 2 15  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[13  4  1  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  4 19  2  0  0  0  0  0  0]
 [ 0  6  1 10  0  0  0  0  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 18  0  1  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 0 14  2  1  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.2 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.1 0.1 0.  0.1 0.1 0.  0.  0. ]
 [0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1.  0.]
 [-1.  1. -1.]
 [ 1. -1.  0.]
 [ 1.  1.  1.]
 [ 1. -1.  1.]
 [ 1. -1.  0.]
 [ 1.  1.  0.]
 [ 1.  1.  1.]
 [ 1.  1.  0.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({0.0: 93, 1.0: 59, -1.0: 36})
confusion matrix
[[13  1  1  0  3  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  3 19  2  1  0  0  0  0  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  2  0  1 16  0  0  0  0  0]
 [ 2 16  0  0  1  0  0  0  0  0]
 [ 0 12  2  1  2  0  0  0  0  0]
 [ 2  9  0  0  3  0  0  0  0  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.3 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.2 0.1 0.1 0.2 0.1 0.  0.1 0. ]
 [0.  0.  0.  0.3 0.2 0.3 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.1 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1.  1.  0. -1.]
 [-1.  1. -1.  1.]
 [ 1. -1.  0.  1.]
 [ 1.  1.  1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1.  0.  1.]
 [ 1.  1.  0. -1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({0.0: 93, 1.0: 59, -1.0: 36})
3 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
confusion matrix
[[13  2  0  0  3  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  5 17  2  0  0  0  0  0  1]
 [ 0  5  1 10  0  0  0  0  0  1]
 [ 0  0  0  2  2  0  0  0  0 19]
 [ 0  2  0  1  3  0  0  0  0 13]
 [ 2 16  0  0  0  0  0  0  0  1]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  9  0  0  1  0  0  0  0  2]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.3 0.2 0.3 0.3 0.3 0.3 0.3 0.3 0.4]
 [0.  0.  0.3 0.2 0.1 0.3 0.2 0.  0.1 0.1]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.1 0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.2 0.3 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.25]
 [0.   0.   1.75 1.75]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1. -1.]
 [ 1.  1.  0. -1.  1.]
 [-1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.]
 [ 1. -1.  0.  1.  1.]
 [ 1.  1.  0. -1.  1.]
 [ 1.  1.  1. -1. -1.]
 [ 1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({0.0: 93, 1.0: 59, -1.0: 36})
3 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[14  0  0  0  4  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 3  0 17  2  4  0  0  0  0  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 18  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 2 12  0  1  2  0  0  0  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.3 0.3 0.4 0.4 0.3 0.5]
 [0.  0.  0.4 0.2 0.2 0.4 0.2 0.  0.2 0.1]
 [0.  0.  0.  0.4 0.3 0.3 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.2 0.  0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.2 0.4 0.2 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  1.  0.6]
 [0.  0.  1.4 1.4 1. ]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1. -1. -1.]
 [ 1.  1.  0. -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1.]
 [ 1. -1.  0.  1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [ 1. -1.  0.  1.  1.  1.]
 [ 1.  1.  0. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 147, -1.0: 41})
2 classifiers pre label
Counter({0.0: 93, 1.0: 59, -1.0: 36})
3 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[14  0  0  0  4  0  0  0  0  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 3  0 17  2  4  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 18  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 2  0  0  1  2  0  0 12  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.5 0.4 0.4 0.5 0.5 0.4 0.6]
 [0.  0.  0.4 0.3 0.3 0.5 0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.5 0.4 0.4 0.5 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.4 0.2 0.  0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.2 0.4 0.2 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.83 0.5  0.17]
 [0.   0.   1.17 1.17 0.83 0.83]
 [0.   0.   0.   1.33 1.33 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})

**********      classifier acc  **************
[0.91, 0.67, 0.71, 0.665, 0.782, 0.793]
before cutting matrix
[[-1. -1. -1. -1. -1. -1.]
 [ 1.  1.  0. -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1.]
 [ 1. -1.  0.  1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [ 1. -1.  0.  1.  1.  1.]
 [ 1.  1.  0. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.]
 [ 1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 182, -1.0: 106})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({-1.0: 288, 1.0: 274})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
after cutting matrix
[[-1. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1. -1.  1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 456, -1.0: 106})
Counter({1.0: 347, -1.0: 215})
Counter({-1.0: 288, 1.0: 274})
Counter({1.0: 398, -1.0: 164})
cutting matrix's confusion matrix
[[13  0  1  0  4  0  0  0  0  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 19  2  4  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 18  0  0  0  0  0]
 [ 2  0  0  0 17  0  0  0  0  0]
 [ 0  0  2  1  2  0  0 12  0  0]
 [ 2  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  3 10  0  0  0  0  0]]


SVM classifier
Time: 2019-01-06 15:11:23
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 17  0  0  0]
 [ 6  0 20  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  5  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  2  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 12  0  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
3
new_column
None


============== iter  2 ================
current matrix is 
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 17  0  0  0]
 [ 6  0 20  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  5  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  2  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 12  0  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
confusion matrix
[[13  4  0  0  0  0  0  0  0  1]
 [ 4  1  0  0  0  0 17  0  0  0]
 [ 3  3 17  0  0  0  0  0  0  3]
 [10  1  1  0  0  0  5  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  2]
 [ 2  1  0  0  0  0  0  0  0 16]
 [ 1  4  0  0  0  0 12  0  0  0]
 [ 2  3  0  0  0  0  0  0  0  9]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.  0.1 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.2 0.1 0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  1.]
 [ 0. -1.  0.]
 [ 1.  0. -1.]
 [ 0.  1.  1.]
 [ 0. -1. -1.]
 [ 0.  1. -1.]
 [-1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  0. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
confusion matrix
[[13  1  0  0  3  0  0  0  0  1]
 [ 4  0  0  0  1  0  0 17  0  0]
 [ 3  2 17  0  1  0  0  0  0  3]
 [10  0  1  0  1  0  0  5  0  0]
 [ 2  0  0  0 21  0  0  0  0  0]
 [ 1  0  0  0 16  0  0  0  0  2]
 [ 2  0  0  0  1  0  0  0  0 16]
 [ 1  2  0  0  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  0  9]
 [ 3  0  0  0 10  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.  0.2 0.1 0.3 0.2 0.3 0.3]
 [0.  0.  0.3 0.2 0.1 0.2 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.3 0.2 0.2 0.2 0.3 0.  0.1]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  1.  1.]
 [ 0. -1.  0.  1.]
 [ 1.  0. -1.  1.]
 [ 0.  1.  1.  1.]
 [ 0. -1. -1.  1.]
 [ 0.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 1.  0. -1.  0.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
3 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[13  1  1  0  0  0  0  0  0  3]
 [ 4  0  0  0  0  0  0 17  0  1]
 [ 3  2 20  0  0  0  0  0  0  1]
 [10  0  1  0  0  0  0  5  0  1]
 [ 2  0  0  0  0  0  0  0  0 21]
 [ 1  0  2  0  0  0  0  0  0 16]
 [ 2  0 16  0  0  0  0  0  0  1]
 [ 1  2  0  0  0  0  0 12  0  2]
 [ 2  0  9  0  0  0  0  0  0  3]
 [ 3  0  0  0  0  0  0  0  0 10]]
row HD
[[0.  0.2 0.3 0.  0.2 0.2 0.3 0.3 0.4 0.4]
 [0.  0.  0.3 0.2 0.1 0.3 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.3 0.2 0.3 0.2 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.   2.  ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  1.  1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  1.  1.  1.]
 [ 0. -1.  0.  1.  0.]
 [ 1.  0. -1.  1.  1.]
 [ 0.  1.  1.  1.  0.]
 [ 0. -1. -1.  1.  1.]
 [ 0.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  0. -1.  0.  0.]
 [ 1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
3 classifiers pre label
Counter({1.0: 95, -1.0: 93})
4 classifiers pre label
Counter({1.0: 129, -1.0: 31, 0.0: 28})
confusion matrix
[[13  2  0  0  0  0  0  0  0  3]
 [ 0  0  0  4  0  0  0 17  0  1]
 [ 1  5 17  2  0  0  0  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  0  0 21]
 [ 0  2  0  1  0  0  0  0  0 16]
 [ 2 16  0  0  0  0  0  0  0  1]
 [ 0  2  0  1  0  0  0 12  0  2]
 [ 2  9  0  0  0  0  0  0  0  3]
 [ 0  0  0  3  0  0  0  0  0 10]]
row HD
[[0.  0.3 0.3 0.1 0.2 0.3 0.4 0.3 0.5 0.4]
 [0.  0.  0.4 0.2 0.2 0.4 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.2 0.4 0.3 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.6 1.6 1. ]
 [0.  0.  1.  1.  1.4]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  0. -1.  1. -1. -1. -1.  1. -1. -1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  1.  1.  1.  1.]
 [ 0. -1.  0.  1.  0.  0.]
 [ 1.  0. -1.  1.  1. -1.]
 [ 0.  1.  1.  1.  0.  0.]
 [ 0. -1. -1.  1.  1. -1.]
 [ 0.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1.  0. -1.  0.  0.  1.]
 [ 1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
3 classifiers pre label
Counter({1.0: 95, -1.0: 93})
4 classifiers pre label
Counter({1.0: 129, -1.0: 31, 0.0: 28})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  0  1  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.3 0.4 0.4 0.4 0.5 0.4]
 [0.  0.  0.5 0.2 0.3 0.5 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.5 0.2 0.4 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.4 0.4 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33 1.33 0.83 0.83]
 [0.   0.   0.83 0.83 1.17 1.17]
 [0.   0.   0.   1.   0.83 0.83]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  1.  1.  1.  1. -1.]
 [ 0. -1.  0.  1.  0.  0.  1.]
 [ 1.  0. -1.  1.  1. -1.  1.]
 [ 0.  1.  1.  1.  0.  0. -1.]
 [ 0. -1. -1.  1.  1. -1.  0.]
 [ 0.  1. -1. -1. -1. -1.  0.]
 [-1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.]
 [ 1.  0. -1.  0.  0.  1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
3 classifiers pre label
Counter({1.0: 95, -1.0: 93})
4 classifiers pre label
Counter({1.0: 129, -1.0: 31, 0.0: 28})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({-1.0: 75, 0.0: 59, 1.0: 54})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  0  1  2  0  0 12  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.2 0.4 0.5 0.4 0.4 0.6 0.5]
 [0.  0.  0.5 0.3 0.4 0.6 0.5 0.6 0.5 0.5]
 [0.  0.  0.  0.6 0.3 0.5 0.5 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.5 0.5 0.5 0.5 0.6 0.7]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.14 1.14 0.71 0.71 0.43]
 [0.   0.   0.71 0.71 1.   1.   1.14]
 [0.   0.   0.   0.86 0.71 0.71 1.29]
 [0.   0.   0.   0.   0.71 0.86 1.  ]
 [0.   0.   0.   0.   0.   0.71 1.  ]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  1. -1. -1. -1.  1. -1. -1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  1.  1.  1.  1. -1.  1.]
 [ 0. -1.  0.  1.  0.  0.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1.]
 [ 0.  1.  1.  1.  0.  0. -1. -1.]
 [ 0. -1. -1.  1.  1. -1.  0. -1.]
 [ 0.  1. -1. -1. -1. -1.  0.  1.]
 [-1. -1. -1.  1. -1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  0. -1.  0.  0.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
3 classifiers pre label
Counter({1.0: 95, -1.0: 93})
4 classifiers pre label
Counter({1.0: 129, -1.0: 31, 0.0: 28})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({-1.0: 75, 0.0: 59, 1.0: 54})
7 classifiers pre label
Counter({1.0: 111, -1.0: 77})
confusion matrix
[[13  1  0  0  0  0  0  3  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  0  1 10  0  0  0  6  0  0]
 [ 0  0  0  2  0  0  0 21  0  0]
 [ 0  0  0  1  0  0  0 16  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2  0  0  0  0  0  0  3  9  0]
 [ 0  0  0  3  0  0  0 10  0  0]]
row HD
[[0.  0.6 0.6 0.3 0.5 0.5 0.4 0.4 0.7 0.6]
 [0.  0.  0.5 0.3 0.4 0.7 0.6 0.7 0.5 0.6]
 [0.  0.  0.  0.6 0.3 0.6 0.6 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.5 0.6 0.6 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.4 0.5 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   1.   0.62 0.62 0.38 1.25]
 [0.   0.   0.62 0.62 0.88 0.88 1.   0.75]
 [0.   0.   0.   0.75 0.62 0.62 1.12 0.62]
 [0.   0.   0.   0.   0.62 0.75 0.88 1.  ]
 [0.   0.   0.   0.   0.   0.62 0.88 1.  ]
 [0.   0.   0.   0.   0.   0.   0.88 0.75]
 [0.   0.   0.   0.   0.   0.   0.   1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  1. -1. -1. -1.  1. -1. -1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  1.  1.  1.  1. -1.  1.  0.]
 [ 0. -1.  0.  1.  0.  0.  1. -1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1.  0.]
 [ 0.  1.  1.  1.  0.  0. -1. -1. -1.]
 [ 0. -1. -1.  1.  1. -1.  0. -1.  0.]
 [ 0.  1. -1. -1. -1. -1.  0.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.  1.  0.]
 [ 1.  0. -1.  0.  0.  1.  1. -1.  0.]
 [ 1. -1. -1. -1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '3': 17, '7': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
3 classifiers pre label
Counter({1.0: 95, -1.0: 93})
4 classifiers pre label
Counter({1.0: 129, -1.0: 31, 0.0: 28})
5 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
6 classifiers pre label
Counter({-1.0: 75, 0.0: 59, 1.0: 54})
7 classifiers pre label
Counter({1.0: 111, -1.0: 77})
8 classifiers pre label
Counter({0.0: 144, -1.0: 44})
confusion matrix
[[13  1  0  0  0  0  0  3  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  2 17  2  0  0  0  1  3  0]
 [ 0  0  1 10  0  0  0  6  0  0]
 [ 0  0  0  2  0  0  0 21  0  0]
 [ 0  0  0  1  0  0  0 16  2  0]
 [ 2  0  0  0  0  0  0  1 16  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2  0  0  0  0  0  0  3  9  0]
 [ 0  0  0  3  0  0  0 10  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.5 0.6 0.5 0.4 0.7 0.7]
 [0.  0.  0.5 0.4 0.4 0.8 0.7 0.7 0.5 0.7]
 [0.  0.  0.  0.7 0.3 0.7 0.7 0.6 0.3 0.5]
 [0.  0.  0.  0.  0.6 0.6 0.6 0.7 0.7 0.9]
 [0.  0.  0.  0.  0.  0.5 0.6 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.89 0.89 0.56 0.56 0.33 1.11 0.56]
 [0.   0.   0.56 0.56 0.78 0.78 0.89 0.67 0.78]
 [0.   0.   0.   0.67 0.56 0.56 1.   0.56 0.78]
 [0.   0.   0.   0.   0.56 0.67 0.78 0.89 0.89]
 [0.   0.   0.   0.   0.   0.56 0.78 0.89 0.56]
 [0.   0.   0.   0.   0.   0.   0.78 0.67 0.78]
 [0.   0.   0.   0.   0.   0.   0.   1.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})

**********      classifier acc  **************
[0.461, 0.716, 0.777, 0.661, 0.726, 0.752, 0.507, 0.566, 0.309]
before cutting matrix
[[ 0.  1.  1.  1.  1.  1. -1.  1.  0.]
 [ 0. -1.  0.  1.  0.  0.  1. -1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1.  0.]
 [ 0.  1.  1.  1.  0.  0. -1. -1. -1.]
 [ 0. -1. -1.  1.  1. -1.  0. -1.  0.]
 [ 0.  1. -1. -1. -1. -1.  0.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1.  1. -1. -1.  1.  0.]
 [ 1.  0. -1.  0.  0.  1.  1. -1.  0.]
 [ 1. -1. -1. -1.  1.  1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 317, -1.0: 184})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({1.0: 277, -1.0: 111})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({-1.0: 244, 1.0: 205})
Counter({1.0: 227, -1.0: 214})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({-1.0: 244, 1.0: 205})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({-1.0: 244, 1.0: 205})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({-1.0: 244, 1.0: 205})
Counter({-1.0: 166, 1.0: 51})
positive and negative ratio
after cutting matrix
[[ 0.  1.  1.  1.  1.  0.]
 [ 0. -1.  0.  0. -1.  0.]
 [ 1.  0. -1. -1. -1.  0.]
 [ 0.  1.  1.  0. -1. -1.]
 [ 0. -1. -1. -1. -1.  0.]
 [ 0.  1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.  0.]
 [ 1.  0. -1.  1. -1.  0.]
 [ 1. -1. -1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 334, 1.0: 170})
Counter({-1.0: 244, 1.0: 205})
Counter({-1.0: 285, 1.0: 226})
Counter({-1.0: 166, 1.0: 51})
cutting matrix's confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
算法备注：
算法没有改变，输出的log增加了每个res matrix的结果输出label的统计，这样可以清楚看出来每个分类器预测的偏重


SVM classifier
Time: 2019-01-06 15:11:31
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
confusion matrix
[[34  0  0  0  0]
 [ 6  0  0  3  0]
 [ 2  0  0  5  0]
 [ 4  0  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.  0.4 0.2 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[28  6  0  0  0]
 [ 5  1  0  3  0]
 [ 0  2  0  5  0]
 [ 1  3  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.2 0.6 0.4 0.6]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1.  1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[28  6  0  0  0]
 [ 5  4  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.2 0.6 0.6 0.8]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.5 ]
 [0.   0.   0.25 0.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
confusion matrix
[[33  1  0  0  0]
 [ 6  2  1  0  0]
 [ 2  4  1  0  0]
 [ 4  1  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.6 0.8 0.8]
 [0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
None


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
confusion matrix
[[33  1  0  0  0]
 [ 6  2  1  0  0]
 [ 2  4  1  0  0]
 [ 4  1  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.6 0.8 0.8]
 [0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1. -1.  1.  0.]
 [-1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({0.0: 39, 1.0: 17})
confusion matrix
[[29  5  0  0  0]
 [ 5  3  1  0  0]
 [ 1  6  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.6 0.8 1.  1. ]
 [0.  0.  0.8 0.4 1. ]
 [0.  0.  0.  0.8 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.33 0.33 0.17 0.83]
 [0.   0.   0.17 0.17 0.33 0.67]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1. -1.  1.  0.  0.]
 [-1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({0.0: 39, 1.0: 17})
6 classifiers pre label
Counter({0.0: 39, 1.0: 15, -1.0: 2})
confusion matrix
[[32  2  0  0  0]
 [ 5  2  1  1  0]
 [ 2  0  1  4  0]
 [ 4  0  0  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.8 1.  1.2 1. ]
 [0.  0.  1.  0.6 1.2]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.29 0.29 0.14 0.71 0.43]
 [0.   0.   0.14 0.14 0.29 0.57 0.29]
 [0.   0.   0.   0.29 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.71 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1.  1.  0.]
select_j_column
[-1. -1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1. -1. -1.  1.  0.  0. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1.  0.]
 [-1.  1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({0.0: 39, 1.0: 17})
6 classifiers pre label
Counter({0.0: 39, 1.0: 15, -1.0: 2})
7 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
confusion matrix
[[33  1  0  0  0]
 [ 6  0  1  2  0]
 [ 2  0  1  4  0]
 [ 4  0  0  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.  1.2 1.2 1.2]
 [0.  0.  1.2 0.8 1.2]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.25 0.25 0.12 0.62 0.38 0.25]
 [0.   0.   0.12 0.12 0.25 0.5  0.25 0.38]
 [0.   0.   0.   0.25 0.38 0.38 0.38 0.25]
 [0.   0.   0.   0.   0.38 0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.62 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 0. -1.  1.  1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1. -1. -1.  1.  0.  0. -1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1.  0. -1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({0.0: 39, 1.0: 17})
6 classifiers pre label
Counter({0.0: 39, 1.0: 15, -1.0: 2})
7 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
8 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
confusion matrix
[[33  0  0  1  0]
 [ 6  0  1  2  0]
 [ 2  0  1  4  0]
 [ 4  0  0  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.2 1.2 1.4 1.4]
 [0.  0.  1.4 1.  1.2]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.22 0.22 0.11 0.56 0.33 0.22 0.33]
 [0.   0.   0.11 0.11 0.22 0.44 0.22 0.33 0.33]
 [0.   0.   0.   0.22 0.33 0.33 0.33 0.22 0.22]
 [0.   0.   0.   0.   0.33 0.33 0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.56 0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
None


============== iter  11 ================
current matrix is 
[[-1. -1. -1. -1.  1.  0.  0. -1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1.  0. -1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
3 classifiers pre label
Counter({-1.0: 56})
4 classifiers pre label
Counter({1.0: 48, -1.0: 8})
5 classifiers pre label
Counter({0.0: 39, 1.0: 17})
6 classifiers pre label
Counter({0.0: 39, 1.0: 15, -1.0: 2})
7 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
8 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
confusion matrix
[[33  0  0  1  0]
 [ 6  0  1  2  0]
 [ 2  0  1  4  0]
 [ 4  0  0  1  0]
 [ 0  0  1  0  0]]
row HD
[[0.  1.2 1.2 1.4 1.4]
 [0.  0.  1.4 1.  1.2]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.11 0.22 0.22 0.11 0.56 0.33 0.22 0.33]
 [0.   0.   0.11 0.11 0.22 0.44 0.22 0.33 0.33]
 [0.   0.   0.   0.22 0.33 0.33 0.33 0.22 0.22]
 [0.   0.   0.   0.   0.33 0.33 0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.56 0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})

**********      classifier acc  **************
[0.857, 0.839, 0.786, 0.893, 0.714, 0.227, 0.476, 0.796, 0.784]
before cutting matrix
[[-1. -1. -1. -1.  1.  0.  0. -1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1.  1.  0. -1.]
 [-1.  1.  1.  1. -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 52, -1.0: 25})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({1.0: 39, -1.0: 29})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 112, 1.0: 38})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 105, 1.0: 38})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
positive and negative ratio
after cutting matrix
[[-1. -1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  0.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({-1.0: 134, 1.0: 32})
Counter({-1.0: 105, 1.0: 38})
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 6  0  3  0  0]
 [ 2  0  4  1  0]
 [ 4  0  1  0  0]
 [ 0  0  1  0  0]]


SVM classifier
Time: 2019-01-06 15:11:33
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({-1.0: 39, 1.0: 15, 0.0: 2})
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 2  4  1  0  0]
 [ 2  3  0  0  0]
 [ 0  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1.  0.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 89, 1.0: 61})
Counter({-1.0: 105, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 15, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 41, 0.0: 15})
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 2  4  1  0  0]
 [ 2  3  0  0  0]
 [ 0  0  1  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.4 0.  0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0. -1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  0.  0.]
 [ 0. -1.  1.]
 [ 1.  0.  0.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 89, 1.0: 61})
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 15, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 41, 0.0: 15})
2 classifiers pre label
Counter({-1.0: 38, 0.0: 15, 1.0: 3})
confusion matrix
[[29  5  0  0  0]
 [ 6  1  2  0  0]
 [ 2  4  1  0  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.6 0.  0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1.  0.  0.  0.]
 [ 0. -1.  1.  0.]
 [ 1.  0.  0. -1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 89, 1.0: 61})
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 15, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 41, 0.0: 15})
2 classifiers pre label
Counter({-1.0: 38, 0.0: 15, 1.0: 3})
3 classifiers pre label
Counter({-1.0: 40, 0.0: 16})
confusion matrix
[[29  5  0  0  0]
 [ 6  1  2  0  0]
 [ 2  3  1  1  0]
 [ 2  2  0  1  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.8 0.6 0.6 0.8]
 [0.  0.  0.6 0.2 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.5 ]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 89, 1.0: 61})
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})

**********      classifier acc  **************
[0.714, 0.738, 0.714, 0.775]
before cutting matrix
[[-1. -1. -1. -1.]
 [ 1.  0.  0.  0.]
 [ 0. -1.  1.  0.]
 [ 1.  0.  0. -1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 89, 1.0: 61})
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
Counter({-1.0: 89, 1.0: 61})
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 105, 1.0: 9})
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
positive and negative ratio
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
Counter({-1.0: 112, 1.0: 9})
positive and negative ratio
after cutting matrix
[[-1. -1.]
 [ 0.  0.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 89, 1.0: 25})
Counter({-1.0: 112, 1.0: 9})
cutting matrix's confusion matrix
[[29  5  0  0  0]
 [ 5  2  2  0  0]
 [ 1  4  1  1  0]
 [ 2  3  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-06 15:11:34
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1. -1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 39, 1.0: 28})
confusion matrix
[[22  0  0  0  0  0]
 [ 3  7  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
confusion matrix
[[21  0  0  0  1  0]
 [ 3  7  0  0  0  0]
 [ 0 18  0  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.   0.17 0.  ]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
confusion matrix
[[21  0  0  0  1  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.5  0.33 0.   0.33 0.  ]
 [0.   0.   0.17 0.5  0.17 0.5 ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1.  1. -1.  1.]
 [-1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
3 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
confusion matrix
[[21  0  0  0  1  0]
 [ 0  7  0  3  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.67 0.5  0.17 0.33 0.  ]
 [0.   0.   0.17 0.5  0.33 0.67]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 1.   1.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.]
 [-1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
3 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
4 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
confusion matrix
[[21  0  0  0  1  0]
 [ 3  7  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.67 0.67 0.33 0.33 0.  ]
 [0.   0.   0.33 0.67 0.33 0.67]
 [0.   0.   0.   0.33 0.67 0.67]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.8 1.  0.4]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 5 dimension of F1 is zero!
ERROR-F1: the denominator of the 6 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
3 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
4 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
5 classifiers pre label
Counter({1.0: 41, -1.0: 26})
confusion matrix
[[21  0  0  0  1  0]
 [ 0  8  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.83 0.83 0.5  0.5  0.  ]
 [0.   0.   0.33 0.67 0.33 0.83]
 [0.   0.   0.   0.33 0.67 0.83]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.67 0.83 0.33 0.33]
 [0.   0.   0.83 0.67 0.5  0.17]
 [0.   0.   0.   0.5  0.33 0.67]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
3 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
4 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
5 classifiers pre label
Counter({1.0: 41, -1.0: 26})
6 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
confusion matrix
[[21  0  0  0  1  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.83 0.83 0.67 0.67 0.  ]
 [0.   0.   0.33 0.83 0.5  0.83]
 [0.   0.   0.   0.5  0.83 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.14 0.57 0.71 0.29 0.29 0.57]
 [0.   0.   0.71 0.57 0.43 0.14 0.43]
 [0.   0.   0.   0.43 0.29 0.57 0.57]
 [0.   0.   0.   0.   0.71 0.71 0.43]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 7 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1. -1.  1.  1.  1. -1.]
 [-1.  1. -1.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
3 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
4 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
5 classifiers pre label
Counter({1.0: 41, -1.0: 26})
6 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
7 classifiers pre label
Counter({1.0: 40, -1.0: 27})
confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.83 1.   0.83 0.83 0.  ]
 [0.   0.   0.5  1.   0.67 0.83]
 [0.   0.   0.   0.5  0.83 1.  ]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.12 0.5  0.62 0.25 0.25 0.5  0.38]
 [0.   0.   0.62 0.5  0.38 0.12 0.38 0.5 ]
 [0.   0.   0.   0.38 0.25 0.5  0.5  0.38]
 [0.   0.   0.   0.   0.62 0.62 0.38 0.25]
 [0.   0.   0.   0.   0.   0.25 0.25 0.62]
 [0.   0.   0.   0.   0.   0.   0.25 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 39, 1.0: 28})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
2 classifiers pre label
Counter({1.0: 51, -1.0: 16})
3 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
4 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
5 classifiers pre label
Counter({1.0: 41, -1.0: 26})
6 classifiers pre label
Counter({-1.0: 58, 1.0: 9})
7 classifiers pre label
Counter({1.0: 40, -1.0: 27})
8 classifiers pre label
Counter({1.0: 63, -1.0: 4})
confusion matrix
[[21  1  0  0  0  0]
 [ 2  8  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.83 1.   0.83 1.   0.  ]
 [0.   0.   0.5  1.   0.83 0.83]
 [0.   0.   0.   0.5  1.   1.  ]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.11 0.44 0.56 0.22 0.22 0.44 0.33 0.33]
 [0.   0.   0.56 0.44 0.33 0.11 0.33 0.44 0.44]
 [0.   0.   0.   0.33 0.22 0.44 0.44 0.33 0.11]
 [0.   0.   0.   0.   0.56 0.56 0.33 0.22 0.44]
 [0.   0.   0.   0.   0.   0.22 0.22 0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.22 0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})

**********      classifier acc  **************
[0.91, 0.896, 0.91, 1.0, 0.955, 0.985, 0.955, 0.955, 1.0]
before cutting matrix
[[-1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1. -1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
Counter({-1.0: 126, 1.0: 75})
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
positive and negative ratio
Counter({1.0: 103, -1.0: 98})
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
positive and negative ratio
Counter({1.0: 135, -1.0: 66})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
positive and negative ratio
after cutting matrix
[[ 1. -1. -1. -1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.]
 [ 1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 134, 1.0: 67})
Counter({1.0: 133, -1.0: 68})
Counter({-1.0: 143, 1.0: 58})
Counter({1.0: 106, -1.0: 95})
Counter({1.0: 173, -1.0: 28})
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 5  0  0  0  0  0]]


SVM classifier
Time: 2019-01-06 15:11:36
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  0. -1.  1.  1.]
positive and negative ratio
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 40, 0.0: 18, 1.0: 9})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1.  0. -1.]
select_j_column
[ 1. -1. -1.  1.  0. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 88, -1.0: 85})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 40, 0.0: 18, 1.0: 9})
1 classifiers pre label
Counter({-1.0: 36, 1.0: 27, 0.0: 4})
confusion matrix
[[21  1  0  0  0  0]
 [ 1  9  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.   0.33 0.33]
 [0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 88, -1.0: 85})

**********      classifier acc  **************
[1.0, 0.921]
before cutting matrix
[[-1.  1.]
 [-1. -1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 88, -1.0: 85})
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 88, -1.0: 85})
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
positive and negative ratio
after cutting matrix
[[-1.  1.]
 [-1. -1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 126, 1.0: 38})
Counter({1.0: 88, -1.0: 85})
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 1  9  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-06 15:11:36
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
positive and negative ratio
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({1.0: 97, -1.0: 91})
confusion matrix
[[17  3  0  0  0  0  0  0  0  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({1.0: 127, -1.0: 61})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  6  0  0  0  1  0  0  0  0]
 [ 0 18  0  0  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  1  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.1 0.2 0.  0.1 0.2 0.1]
 [0.  0.  0.1 0.  0.2 0.1 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.1 0.1 0.2 0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.1 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [-1. -1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({1.0: 127, -1.0: 61})
2 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
confusion matrix
[[ 9  1  6  0  2  2  0  0  0  0]
 [ 0 15  2  0  4  0  0  0  0  0]
 [ 3  6 12  0  0  1  0  0  0  0]
 [ 0 18  0  0  0  1  0  0  0  0]
 [ 0  2  2  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [13  0  1  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [14  1  5  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.2 0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.1 0.  0.2 0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.1 0.1 0.3 0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.33]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  1. -1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({1.0: 127, -1.0: 61})
2 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
3 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
confusion matrix
[[ 9  1  4  0  2  2  2  0  0  0]
 [ 0 15  1  0  4  0  1  0  0  0]
 [ 3  4 12  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  2  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [13  0  0  0  0  0  1  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  1  0  1  5  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.3 0.3 0.2 0.2 0.3 0.3 0.1]
 [0.  0.  0.1 0.1 0.3 0.2 0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.2 0.2 0.3 0.1 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.75 1.5 ]
 [0.   0.   1.5  0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({1.0: 127, -1.0: 61})
2 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
3 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
4 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
confusion matrix
[[ 9  1  6  0  2  2  0  0  0  0]
 [ 0 15  2  0  4  0  0  0  0  0]
 [ 3  4 12  2  0  1  0  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  2  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [13  0  1  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  5  1  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.4 0.2 0.2 0.4 0.4 0.2]
 [0.  0.  0.2 0.2 0.4 0.2 0.2 0.4 0.4 0.2]
 [0.  0.  0.  0.2 0.2 0.4 0.2 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.2 0.4 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.4 0.2 0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.4 1.2 1. ]
 [0.  0.  1.2 0.6 0.8]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.  1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({1.0: 127, -1.0: 61})
2 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
3 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
4 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
5 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
confusion matrix
[[ 9  1  4  2  2  0  0  0  2  0]
 [ 0 15  1  1  4  0  0  0  0  0]
 [ 3  4 12  2  0  0  0  0  1  0]
 [ 0  5  0 13  0  0  0  0  1  0]
 [ 0  2  0  2 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [13  0  0  1  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  6  0  0  0  0  1  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.3 0.4 0.5 0.3 0.3 0.4 0.4 0.2]
 [0.  0.  0.3 0.2 0.5 0.3 0.3 0.4 0.4 0.2]
 [0.  0.  0.  0.3 0.2 0.4 0.2 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.5 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.4 0.2 0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.17 1.   0.83 0.5 ]
 [0.   0.   1.   0.5  0.67 1.  ]
 [0.   0.   0.   0.5  0.67 1.  ]
 [0.   0.   0.   0.   0.5  0.83]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1.]
 [-1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 346, 1.0: 216})
*======label=======*
true label
Counter({'4': 26, '2': 22, '8': 21, '1': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({1.0: 127, -1.0: 61})
2 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
3 classifiers pre label
Counter({-1.0: 105, 1.0: 83})
4 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
5 classifiers pre label
Counter({-1.0: 143, 1.0: 45})
6 classifiers pre label
Counter({-1.0: 140, 1.0: 48})
confusion matrix
[[ 9  1  4  2  2  0  0  0  2  0]
 [ 0 15  1  1  4  0  0  0  0  0]
 [ 3  4 12  2  0  0  0  0  1  0]
 [ 0  5  0 13  0  0  0  0  1  0]
 [ 0  2  0  2 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [13  0  0  1  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [14  0  0  6  0  0  0  0  1  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.3 0.5 0.6 0.4 0.4 0.5 0.5 0.2]
 [0.  0.  0.3 0.3 0.6 0.4 0.4 0.5 0.5 0.2]
 [0.  0.  0.  0.4 0.3 0.5 0.3 0.4 0.6 0.3]
 [0.  0.  0.  0.  0.3 0.5 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.1 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 1.   0.86 0.71 0.43 0.71]
 [0.   0.   0.86 0.43 0.57 0.86 0.29]
 [0.   0.   0.   0.43 0.57 0.86 0.57]
 [0.   0.   0.   0.   0.43 0.71 0.14]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 346, 1.0: 216})

**********      classifier acc  **************
[0.681, 0.676, 0.782, 0.755, 0.654, 0.686, 0.729]
before cutting matrix
[[ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1.]
 [-1. -1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
positive and negative ratio
Counter({1.0: 322, -1.0: 240})
Counter({-1.0: 340, 1.0: 222})
Counter({-1.0: 286, 1.0: 276})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 346, 1.0: 216})
