算法备注：
因为使用提前根据confusion matrix停止的条件，所以可能大多数的矩阵规模很小，所以就不适合剪枝


SVM classifier
Time: 2019-01-05 22:37:49
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]]
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1.  1.  0.]
 [ 1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]]
confusion matrix
[[29  0  1  0  0]
 [ 3  4  2  0  0]
 [ 2  3  2  0  0]
 [ 0  3  4  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2]
 [0.  0.  0.2 0.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  0.]
 [ 1.  1.  0.  1.]
 [ 1.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1. -1.  1.  0.]]
confusion matrix
[[29  0  1  0  0]
 [ 3  2  4  0  0]
 [ 2  2  3  0  0]
 [ 0  2  5  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.2]
 [0.  0.  0.4 0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 1.   1.  ]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  0.  1.]
 [ 1.  1.  0.  1. -1.]
 [ 1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.]
 [-1. -1.  1.  0.  1.]]
confusion matrix
[[29  0  1  0  0]
 [ 4  1  4  0  0]
 [ 3  1  3  0  0]
 [ 1  1  5  0  0]
 [ 0  0  3  0  0]]
row HD
[[0.  0.8 0.6 0.6 0.2]
 [0.  0.  0.6 0.6 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.8 0.8 0.4]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[ 0.  1. -1. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.]
 [ 1.  1.  0.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1.  1.  0.  1. -1.]]
confusion matrix
[[29  0  1  0  0]
 [ 4  1  4  0  0]
 [ 3  1  3  0  0]
 [ 1  1  5  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.8 0.8 0.8 0.2]
 [0.  0.  0.8 0.8 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.67 0.67 0.33 0.33]
 [0.   0.   0.83 0.67 0.5  0.17]
 [0.   0.   0.   0.5  0.5  0.83]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.946, 0.839, 0.66, 0.261, 0.839, 0.768]
cutting matrix
[[ 1. -1.  0.  1. -1.]
 [ 1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.]
 [-1. -1.  0.  1. -1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 5  1  3  0  0]
 [ 3  1  3  0  0]
 [ 4  1  2  0  0]
 [ 0  1  2  0  0]]


SVM classifier
Time: 2019-01-05 22:37:50
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1.  0.  0.]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 1. -1.]
 [-1. -1.]
 [ 0. -1.]
 [ 0.  1.]]
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  3  0  1  0]
 [ 4  3  0  0  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0. -1.]
 [ 1. -1.  1.]
 [-1. -1.  0.]
 [ 0. -1. -1.]
 [ 0.  1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 5  1  0  3  0]
 [ 3  1  0  3  0]
 [ 4  1  0  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.6 0.2 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0. -1.  0.]
 [ 1. -1.  1.  1.]
 [-1. -1.  0. -1.]
 [ 0. -1. -1.  1.]
 [ 0.  1.  1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 5  1  0  3  0]
 [ 3  1  0  3  0]
 [ 4  1  0  2  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 0.8 0.4 0.6]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   0.5 ]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.25, 0.423, 0.735, 0.385]
cutting matrix
[[ 0. -1.]
 [-1.  1.]
 [-1.  0.]
 [-1. -1.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[26  0  0  4  0]
 [ 5  0  1  3  0]
 [ 3  0  1  3  0]
 [ 4  0  1  2  0]
 [ 0  0  1  2  0]]


SVM classifier
Time: 2019-01-05 22:37:50
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1.  1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [15  0  0  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.   0.17 0.17 0.17]
 [0.   0.   0.17 0.   0.   0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [ 1. -1.  0.]
 [ 1. -1.  0.]
 [-1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [15  0  0  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.   0.33 0.33 0.33]
 [0.   0.   0.17 0.17 0.17 0.5 ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 2.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1.  1. -1. -1.]
 [ 1. -1.  0.  1.]
 [ 1. -1.  0.  1.]
 [-1.  1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.5 ]
 [0.   0.   0.33 0.17 0.17 0.67]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.5  0.25]
 [0.   0.   1.   1.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.]
 [ 1. -1.  0.  1. -1.]
 [ 1. -1.  0.  1. -1.]
 [-1.  1.  1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.5  0.5  0.5 ]
 [0.   0.   0.33 0.33 0.33 0.67]
 [0.   0.   0.   0.67 0.67 0.33]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 1.2 0.2 0.6]
 [0.  0.  0.8 1.  0.2]
 [0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1.]
 [ 1. -1.  0.  1. -1. -1.]
 [-1.  1.  1. -1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.17 0.67 0.67 0.67]
 [0.   0.   0.5  0.33 0.33 0.67]
 [0.   0.   0.   0.83 0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.   0.17 0.5  0.5 ]
 [0.   0.   0.67 0.83 0.17 0.17]
 [0.   0.   0.   0.83 0.83 0.83]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.83 0.83 0.83]
 [0.   0.   0.67 0.5  0.5  0.83]
 [0.   0.   0.   0.83 0.83 0.5 ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.86 0.14 0.43 0.43 0.43]
 [0.   0.   0.57 0.71 0.14 0.14 0.43]
 [0.   0.   0.   0.71 0.71 0.71 0.71]
 [0.   0.   0.   0.   0.57 0.57 0.29]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.   0.83 0.83]
 [0.   0.   0.67 0.67 0.5  0.83]
 [0.   0.   0.   1.   0.83 0.5 ]
 [0.   0.   0.   0.   0.17 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.75 0.12 0.38 0.38 0.38 0.25]
 [0.   0.   0.5  0.62 0.12 0.12 0.38 0.25]
 [0.   0.   0.   0.62 0.62 0.62 0.62 0.62]
 [0.   0.   0.   0.   0.5  0.5  0.25 0.38]
 [0.   0.   0.   0.   0.   0.25 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
None


============== iter  9 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 1.   0.83 0.83]
 [0.   0.   0.67 0.67 0.5  0.83]
 [0.   0.   0.   1.   0.83 0.5 ]
 [0.   0.   0.   0.   0.17 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.75 0.12 0.38 0.38 0.38 0.25]
 [0.   0.   0.5  0.62 0.12 0.12 0.38 0.25]
 [0.   0.   0.   0.62 0.62 0.62 0.62 0.62]
 [0.   0.   0.   0.   0.5  0.5  0.25 0.38]
 [0.   0.   0.   0.   0.   0.25 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  0.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.  0.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 3  0  1  0  0  0]]
row HD
[[0.   0.33 0.5  1.17 1.   1.  ]
 [0.   0.   0.83 0.83 0.67 1.  ]
 [0.   0.   0.   1.17 1.   0.5 ]
 [0.   0.   0.   0.   0.17 1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.44 0.67 0.11 0.33 0.33 0.33 0.22 0.56]
 [0.   0.   0.44 0.56 0.11 0.11 0.33 0.22 0.22]
 [0.   0.   0.   0.56 0.56 0.56 0.56 0.56 0.56]
 [0.   0.   0.   0.   0.44 0.44 0.22 0.33 0.67]
 [0.   0.   0.   0.   0.   0.22 0.22 0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.22 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 3  0  1  0  0  0]]
row HD
[[0.   0.33 0.5  1.17 1.17 1.  ]
 [0.   0.   0.83 0.83 0.83 1.  ]
 [0.   0.   0.   1.17 1.17 0.5 ]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.6 0.1 0.3 0.3 0.3 0.2 0.5 0.2]
 [0.  0.  0.4 0.5 0.1 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.5 0.5 0.5 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
None


============== iter  12 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  0.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.  0.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  6  0  1  0  0]
 [ 0  0  0  1  9  0]
 [ 3  0  1  0  0  0]]
row HD
[[0.   0.33 0.5  1.17 1.17 1.  ]
 [0.   0.   0.83 0.83 0.83 1.  ]
 [0.   0.   0.   1.17 1.17 0.5 ]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.6 0.1 0.3 0.3 0.3 0.2 0.5 0.2]
 [0.  0.  0.4 0.5 0.1 0.1 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.5 0.5 0.5 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  0.  1.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.  0.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1. -1. -1.  1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.  1.  1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  1  9  0]
 [ 3  1  0  0  0  0]]
row HD
[[0.   0.5  0.5  1.17 1.17 1.17]
 [0.   0.   1.   1.   1.   1.  ]
 [0.   0.   0.   1.17 1.17 0.67]
 [0.   0.   0.   0.   0.33 1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.36 0.55 0.09 0.27 0.27 0.27 0.18 0.45 0.18 0.09]
 [0.   0.   0.36 0.45 0.09 0.09 0.27 0.18 0.18 0.18 0.27]
 [0.   0.   0.   0.45 0.45 0.45 0.45 0.45 0.45 0.45 0.45]
 [0.   0.   0.   0.   0.36 0.36 0.18 0.27 0.55 0.27 0.18]
 [0.   0.   0.   0.   0.   0.18 0.18 0.09 0.18 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.18 0.27 0.27 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1.  1. -1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1.  1.  1.  0.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1.  1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1. -1. -1.  1.  1.  1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  1  9  0]
 [ 3  0  0  0  0  1]]
row HD
[[0.   0.5  0.5  1.33 1.33 1.33]
 [0.   0.   1.   1.17 1.17 1.17]
 [0.   0.   0.   1.33 1.33 0.83]
 [0.   0.   0.   0.   0.33 1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.5  0.08 0.25 0.25 0.25 0.17 0.42 0.17 0.08 0.17]
 [0.   0.   0.33 0.42 0.08 0.08 0.25 0.17 0.17 0.17 0.25 0.17]
 [0.   0.   0.   0.42 0.42 0.42 0.42 0.42 0.42 0.42 0.42 0.5 ]
 [0.   0.   0.   0.   0.33 0.33 0.17 0.25 0.5  0.25 0.17 0.25]
 [0.   0.   0.   0.   0.   0.17 0.17 0.08 0.17 0.08 0.33 0.08]
 [0.   0.   0.   0.   0.   0.   0.17 0.25 0.25 0.25 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.25 0.33 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.94, 1.0, 0.88, 0.925, 0.91, 1.0, 0.97, 0.896, 0.861, 0.985, 0.925, 0.955]
算法备注：
因为使用提前根据confusion matrix停止的条件，所以可能大多数的矩阵规模很小，所以就不适合剪枝


SVM classifier
Time: 2019-01-05 22:37:57
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.4 0.2 0. ]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.6 0.2 0. ]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
None


============== iter  4 ================
current matrix is 
[[-1. -1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.2 0.6 0.2 0. ]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1.  0.]
 [ 1. -1. -1.  0.]
 [-1. -1. -1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.8 0.4 0. ]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 0.75]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.768, 0.714, 0.875, 0.738]
cutting matrix
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]]
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  2  0]
 [ 2  0  0  1  0]]


SVM classifier
Time: 2019-01-05 22:37:59
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  1.  0.  0.  1.]
confusion matrix
[[30  0  0  0  0]
 [ 6  2  1  0  0]
 [ 4  1  2  0  0]
 [ 0  6  1  0  0]
 [ 0  1  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [ 1. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [ 1. -1.]]
confusion matrix
[[30  0  0  0  0]
 [ 6  2  0  1  0]
 [ 4  1  0  2  0]
 [ 0  6  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.4 0.4 0.4 0.4]
 [0.  0.  0.4 0.2 0. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  1. -1. -1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  0.]
 [ 1. -1. -1.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 4  2  0  3  0]
 [ 3  1  0  3  0]
 [ 0  6  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1. -1.  1.]
select_j_column
[ 0. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
None


============== iter  4 ================
current matrix is 
[[-1.  0.  0.]
 [ 1. -1. -1.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 1. -1.  1.]]
confusion matrix
[[26  0  0  4  0]
 [ 4  2  0  3  0]
 [ 3  1  0  3  0]
 [ 0  6  0  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.786, 0.385, 0.423]
cutting matrix
[[ 0.]
 [-1.]
 [-1.]
 [-1.]
 [ 1.]]
cutting matrix's confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 3  4  0  0  0]
 [ 4  3  0  0  0]
 [ 0  3  0  0  0]]


SVM classifier
Time: 2019-01-05 22:37:59
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1.  1. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.17 0.17 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  0  0  1]
 [ 1  0 14  0  0  0]
 [ 1  0  0  1  0  5]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1. -1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.33 0.33 0.33]
 [0.   0.   0.17 0.33 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.25 0.75]
 [0.   0.   0.5  1.  ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.]
 [-1. -1. -1. -1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 6  7  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 6  0  0  1  0  0]
 [ 0  0  0 10  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.33]
 [0.   0.   0.33 0.5  0.5  0.5 ]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 1.  0.6 0.6]
 [0.  0.  0.4 0.8 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1. -1.  0.]
 [-1. -1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  0.]
 [ 1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 5  7  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.33 0.17 0.5  0.5  0.5 ]
 [0.   0.   0.5  0.5  0.5  0.67]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.83 0.5  0.5  0.83]
 [0.   0.   0.33 0.67 0.33 0.5 ]
 [0.   0.   0.   0.33 0.33 0.67]
 [0.   0.   0.   0.   0.67 1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1. -1.  0.  1.]
 [-1. -1.  1.  1.  1. -1.  0.]
 [-1.  1.  1.  1. -1.  0.  1.]
 [ 1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 5  7  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 3  0  0  1  0  0]]
row HD
[[0.   0.5  0.17 0.67 0.67 0.5 ]
 [0.   0.   0.67 0.67 0.67 0.83]
 [0.   0.   0.   0.83 0.83 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.71 0.43 0.43 0.71 0.86]
 [0.   0.   0.29 0.57 0.29 0.43 0.43]
 [0.   0.   0.   0.29 0.29 0.57 0.29]
 [0.   0.   0.   0.   0.57 0.86 0.57]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1. -1.  0.  1. -1.]
 [-1. -1.  1.  1.  1. -1.  0. -1.]
 [-1.  1.  1.  1. -1.  0.  1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 5  7  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 3  0  0  1  0  0]]
row HD
[[0.   0.5  0.33 0.67 0.67 0.67]
 [0.   0.   0.83 0.67 0.67 1.  ]
 [0.   0.   0.   1.   1.   0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.62 0.38 0.38 0.62 0.75 0.5 ]
 [0.   0.   0.25 0.5  0.25 0.38 0.38 0.12]
 [0.   0.   0.   0.25 0.25 0.5  0.25 0.38]
 [0.   0.   0.   0.   0.5  0.75 0.5  0.62]
 [0.   0.   0.   0.   0.   0.5  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1. -1.  0.  1. -1.  0.]
 [-1. -1.  1.  1.  1. -1.  0. -1.  0.]
 [-1.  1.  1.  1. -1.  0.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  0.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  0.]
 [-1. -1. -1. -1. -1.  1.  1.  1.  1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 5  7  0  1  0  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 3  0  0  1  0  0]]
row HD
[[0.   0.5  0.5  0.67 0.67 0.83]
 [0.   0.   1.   0.67 0.67 1.17]
 [0.   0.   0.   1.17 1.17 0.83]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.56 0.33 0.33 0.56 0.67 0.44 0.56]
 [0.   0.   0.22 0.44 0.22 0.33 0.33 0.11 0.67]
 [0.   0.   0.   0.22 0.22 0.44 0.22 0.33 0.67]
 [0.   0.   0.   0.   0.44 0.67 0.44 0.56 0.67]
 [0.   0.   0.   0.   0.   0.44 0.44 0.33 0.56]
 [0.   0.   0.   0.   0.   0.   0.33 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 0.985, 0.955, 0.94, 0.91, 0.882, 0.926, 0.925, 0.842]
cutting matrix
[[-1.  1.  1.  1.  0.]
 [-1.  1.  1.  0.  0.]
 [ 1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  0.]
 [-1. -1.  1. -1.  0.]
 [-1. -1. -1.  1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 0  1  0  1  0  2]]


SVM classifier
Time: 2019-01-05 22:38:02
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1.  1.  0. -1.]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  2  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0.  0. -1.  0. -1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 1. -1.]
 [-1.  0.]
 [ 1. -1.]
 [ 0.  1.]
 [-1. -1.]]
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  0  1]
 [ 0  7  0  0  0  0]
 [10  0  0  0  0  0]
 [ 1  1  0  0  0  2]]
row HD
[[0.   0.33 0.33 0.33 0.   0.33]
 [0.   0.   0.33 0.   0.33 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.  0.]
 [ 1. -1.  1.]
 [-1.  0.  1.]
 [ 1. -1.  1.]
 [ 0.  1.  1.]
 [-1. -1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  2  0  1  0]]
row HD
[[0.   0.5  0.5  0.5  0.17 0.5 ]
 [0.   0.   0.33 0.   0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.67 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[ 0. -1.  1.  1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 40 dimension of F1 is zero!
ERROR-F1: the denominator of the 41 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.  0.]
 [ 1. -1.  1.  0.]
 [-1.  0.  1. -1.]
 [ 1. -1.  1.  0.]
 [ 0.  1.  1.  0.]
 [-1. -1. -1.  1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  1  0  0  1  2]]
row HD
[[0.   0.5  0.67 0.5  0.17 0.67]
 [0.   0.   0.5  0.   0.33 0.5 ]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.25 0.5  0.75]
 [0.   0.   1.   1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1.  1.]
select_j_column
[ 1. -1.  0. -1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0.  0. -1.]
 [ 1. -1.  1.  0.  1.]
 [-1.  0.  1. -1.  0.]
 [ 1. -1.  1.  0.  0.]
 [ 0.  1.  1.  0.  0.]
 [-1. -1. -1.  1. -1.]]
confusion matrix
[[17  0  0  0  1  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  1  0  2]]
row HD
[[0.   0.67 0.83 0.67 0.33 0.67]
 [0.   0.   0.67 0.17 0.5  0.67]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.  0.4 0.6 0.6]
 [0.  0.  0.8 1.2 0.8]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.949, 0.981, 0.918, 0.842, 0.943]
cutting matrix
[[ 0.  1.  0.]
 [ 1. -1.  0.]
 [-1.  0. -1.]
 [ 1. -1.  0.]
 [ 0.  1.  0.]
 [-1. -1.  1.]]
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  0  1]
 [ 0  7  0  0  0  0]
 [10  0  0  0  0  0]
 [ 1  1  0  0  0  2]]


SVM classifier
Time: 2019-01-05 22:38:03
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
confusion matrix
[[15  0  2  0  0  0  0  0  0  0]
 [23  0  3  0  0  0  0  0  0  0]
 [ 4  0 18  0  0  0  0  0  0  0]
 [10  0  6  0  0  0  0  0  0  0]
 [ 2  0 15  0  0  0  0  0  0  0]
 [ 3  0 17  0  0  0  0  0  0  0]
 [10  0  5  0  0  0  0  0  0  0]
 [ 6  0 14  0  0  0  0  0  0  0]
 [19  0  3  0  0  0  0  0  0  0]
 [ 9  0  4  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[15  0  2  0  0  0  0  0  0  0]
 [ 0 23  1  0  0  0  0  2  0  0]
 [ 2  2 17  0  0  0  0  1  0  0]
 [ 1  9  2  0  0  0  0  4  0  0]
 [ 1  1 15  0  0  0  0  0  0  0]
 [ 3  0 17  0  0  0  0  0  0  0]
 [10  0  5  0  0  0  0  0  0  0]
 [ 1  5  0  0  0  0  0 14  0  0]
 [19  0  3  0  0  0  0  0  0  0]
 [ 7  2  4  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.1 0.1 0.1 0.1 0.  0.2 0.  0. ]
 [0.  0.  0.2 0.  0.2 0.2 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  0.]
 [ 1. -1. -1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [-1.  1.  0.]
 [-1.  1.  0.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  0.]
 [ 1.  1.  1.]]
confusion matrix
[[11  0  0  0  2  0  4  0  0  0]
 [ 0 23  0  0  1  0  0  2  0  0]
 [ 2  2 16  0  1  0  0  1  0  0]
 [ 1  9  1  0  1  0  0  4  0  0]
 [ 1  1  4  0 11  0  0  0  0  0]
 [ 3  0  1  0 16  0  0  0  0  0]
 [10  0  3  0  2  0  0  0  0  0]
 [ 1  5  0  0  0  0  0 14  0  0]
 [18  0  2  0  1  0  1  0  0  0]
 [ 6  2  3  0  1  0  1  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.1 0.1 0.1 0.3 0.  0.1]
 [0.  0.  0.3 0.  0.3 0.3 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.3 0.1 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.  1.]
 [ 1. -1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1.  0. -1.]
 [-1.  1.  0.  1.]
 [ 1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  1.  0. -1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[ 7  0  0  0  0  2  4  0  4  0]
 [ 0 20  0  4  0  1  0  1  0  0]
 [ 0  1 16  1  1  0  0  1  2  0]
 [ 0  0  1  9  1  0  0  4  1  0]
 [ 0  0  4  1 10  1  0  0  1  0]
 [ 1  0  0  0  0 17  0  0  2  0]
 [ 7  0  1  0  0  4  0  0  3  0]
 [ 0  3  0  2  0  2  0 12  1  0]
 [ 4  0  1  0  0  2  0  0 14  1]
 [ 0  0  3  2  1  0  1  0  6  0]]
row HD
[[0.  0.2 0.3 0.3 0.2 0.1 0.1 0.4 0.1 0.2]
 [0.  0.  0.4 0.1 0.4 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.3 0.1 0.2 0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.75 1.  ]
 [0.   0.   1.   1.25]
 [0.   0.   0.   1.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  1.  1.]
 [ 1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1.  0. -1. -1.]
 [-1.  1.  0.  1.  1.]
 [ 1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.]
 [ 1.  1.  0. -1.  1.]
 [ 1.  1.  1. -1. -1.]]
confusion matrix
[[11  0  0  0  0  2  0  0  4  0]
 [ 0 20  0  5  0  1  0  0  0  0]
 [ 0  2 16  1  1  0  0  1  1  0]
 [ 0  1  1 10  3  0  0  0  0  1]
 [ 0  0  4  1  9  1  0  1  0  1]
 [ 0  0  1  0 14  2  1  0  0  2]
 [ 1  0  3  0  2  0  6  0  3  0]
 [ 0  4  0  1  0  2  0 12  1  0]
 [ 2  0  2  1  1  0  2  0  8  6]
 [ 1  0  3  2  1  0  0  0  0  6]]
row HD
[[0.  0.2 0.4 0.4 0.3 0.1 0.2 0.4 0.1 0.3]
 [0.  0.  0.5 0.2 0.5 0.3 0.3 0.2 0.3 0.4]
 [0.  0.  0.  0.3 0.1 0.3 0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.3 0.5 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.4 0.8 1. ]
 [0.  0.  0.8 1.  1.2]
 [0.  0.  0.  1.4 1.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1.  1.  0.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  0. -1. -1.  1.]
 [-1.  1.  0.  1.  1.  1.]
 [ 1.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  1. -1.]
 [ 1.  1.  0. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]]
confusion matrix
[[12  0  0  0  0  1  0  0  4  0]
 [ 0 20  0  4  1  1  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  2 11  2  0  0  0  0  1]
 [ 0  0  3  1 10  1  0  1  0  1]
 [ 1  0  0  0 15  1  1  0  0  2]
 [ 1  0  3  0  2  0  6  0  3  0]
 [ 0  3  0  2  0  1  0 13  1  0]
 [ 2  0  2  1  1  0  2  0  8  6]
 [ 1  0  3  2  1  0  0  0  0  6]]
row HD
[[0.  0.3 0.4 0.4 0.4 0.2 0.2 0.4 0.1 0.3]
 [0.  0.  0.6 0.3 0.5 0.3 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.3 0.2 0.4 0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.4 0.6 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.2 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.17 0.67 0.83 1.17]
 [0.   0.   0.67 0.83 1.   1.  ]
 [0.   0.   0.   1.17 1.5  1.33]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1.  0.  1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [-1.  1.  0. -1. -1.  1.  1.]
 [-1.  1.  0.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1. -1.]
 [-1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  0. -1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1.]]
confusion matrix
[[14  0  0  0  0  1  0  0  2  0]
 [ 0 20  0  1  4  1  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  2 11  2  0  0  0  0  1]
 [ 0  0  3  0 11  1  0  1  0  1]
 [ 1  0  0  0  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  1  0  1  2  0  8  6]
 [ 1  0  3  2  1  0  0  0  0  6]]
row HD
[[0.  0.4 0.4 0.4 0.5 0.2 0.2 0.4 0.2 0.4]
 [0.  0.  0.7 0.4 0.5 0.4 0.5 0.4 0.4 0.5]
 [0.  0.  0.  0.3 0.3 0.4 0.2 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.5 0.6 0.3 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.5 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 1.   0.57 0.71 1.   0.57]
 [0.   0.   0.57 0.71 0.86 0.86 0.71]
 [0.   0.   0.   1.   1.29 1.14 1.  ]
 [0.   0.   0.   0.   0.43 0.43 0.86]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1.  1.  0.  1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1.  0. -1. -1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1. -1.  1.]
 [-1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  0. -1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.  1.  1.]]
confusion matrix
[[12  0  0  0  0  2  1  0  2  0]
 [ 0 20  0  1  4  1  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  2 11  2  0  0  0  0  1]
 [ 0  0  4  0 11  1  0  0  0  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  1  0  1  2  0 10  4]
 [ 0  0  3  2  1  0  1  0  0  6]]
row HD
[[0.  0.5 0.5 0.4 0.6 0.3 0.3 0.4 0.2 0.5]
 [0.  0.  0.7 0.5 0.5 0.4 0.5 0.5 0.5 0.5]
 [0.  0.  0.  0.4 0.3 0.4 0.2 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.6 0.7 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.5 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.88 0.5  0.62 0.88 0.5  0.75]
 [0.   0.   0.5  0.62 0.75 0.75 0.62 0.38]
 [0.   0.   0.   0.88 1.12 1.   0.88 0.62]
 [0.   0.   0.   0.   0.38 0.38 0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.62 0.88]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1.  1.  0.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1.  0. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  0.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  0. -1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1.  1. -1.]]
confusion matrix
[[12  0  0  0  0  2  1  0  2  0]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  4 11  0  0  0  0  0  1]
 [ 0  0  5  0 11  0  0  0  0  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  1  0  1  2  0  8  6]
 [ 0  0  3  2  1  0  1  0  0  6]]
row HD
[[0.  0.6 0.5 0.4 0.7 0.3 0.3 0.4 0.3 0.5]
 [0.  0.  0.8 0.6 0.5 0.5 0.6 0.6 0.5 0.6]
 [0.  0.  0.  0.4 0.4 0.4 0.2 0.4 0.6 0.2]
 [0.  0.  0.  0.  0.7 0.7 0.4 0.2 0.5 0.4]
 [0.  0.  0.  0.  0.  0.4 0.6 0.7 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.78 0.44 0.56 0.78 0.44 0.67 0.56]
 [0.   0.   0.44 0.56 0.67 0.67 0.56 0.33 0.67]
 [0.   0.   0.   0.78 1.   0.89 0.78 0.56 0.89]
 [0.   0.   0.   0.   0.33 0.33 0.67 0.44 0.56]
 [0.   0.   0.   0.   0.   0.44 0.56 0.78 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1. -1. -1.  1. -1.]
select_j_column
[ 0. -1.  1. -1.  0.  0.  1. -1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  0.  1.  1. -1. -1. -1. -1.  0.]
 [ 1. -1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1.  1.  0. -1. -1.  1.  1.  1.  1.  0.]
 [-1.  1.  0.  1.  1.  1. -1.  1. -1.  0.]
 [ 1.  1.  1.  1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1.  0. -1.  1. -1.  1. -1.  1.  0.]
 [ 1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]]
confusion matrix
[[12  0  0  0  0  2  1  0  2  0]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  4 11  0  0  0  0  0  1]
 [ 0  0  5  0 11  0  0  0  0  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  1  0  1  2  0  8  6]
 [ 0  0  3  2  1  0  1  0  0  6]]
row HD
[[0.  0.7 0.6 0.5 0.7 0.3 0.4 0.5 0.3 0.6]
 [0.  0.  0.8 0.7 0.6 0.6 0.6 0.7 0.6 0.6]
 [0.  0.  0.  0.5 0.5 0.5 0.2 0.5 0.7 0.2]
 [0.  0.  0.  0.  0.8 0.8 0.5 0.2 0.6 0.5]
 [0.  0.  0.  0.  0.  0.4 0.7 0.8 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.7 0.4 0.5 0.7 0.4 0.6 0.5 0.8]
 [0.  0.  0.4 0.5 0.6 0.6 0.5 0.3 0.6 0.9]
 [0.  0.  0.  0.7 0.9 0.8 0.7 0.5 0.8 0.5]
 [0.  0.  0.  0.  0.3 0.3 0.6 0.4 0.5 0.8]
 [0.  0.  0.  0.  0.  0.4 0.5 0.7 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1.  1.  0.  1.  1. -1. -1. -1. -1.  0.  1.]
 [ 1. -1. -1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  0. -1. -1.  1.  1.  1.  1.  0. -1.]
 [-1.  1.  0.  1.  1.  1. -1.  1. -1.  0.  1.]
 [ 1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1. -1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  0. -1.  1. -1.  1. -1.  1.  0.  1.]
 [ 1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]]
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  2  9  0  2  0  2  0  1]
 [ 0  0  5  0 11  0  0  0  0  1]
 [ 0  0  1  0  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  1  0  1  2  0  8  6]
 [ 1  0  3  2  1  0  0  0  0  6]]
row HD
[[0.  0.8 0.7 0.5 0.8 0.3 0.5 0.6 0.3 0.7]
 [0.  0.  0.8 0.8 0.6 0.7 0.6 0.7 0.7 0.6]
 [0.  0.  0.  0.6 0.5 0.6 0.2 0.5 0.8 0.2]
 [0.  0.  0.  0.  0.9 0.8 0.6 0.3 0.6 0.6]
 [0.  0.  0.  0.  0.  0.5 0.7 0.8 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.64 0.36 0.45 0.64 0.36 0.55 0.45 0.73 0.36]
 [0.   0.   0.36 0.45 0.55 0.55 0.45 0.27 0.55 0.82 0.45]
 [0.   0.   0.   0.64 0.82 0.73 0.64 0.45 0.73 0.45 0.73]
 [0.   0.   0.   0.   0.27 0.27 0.55 0.36 0.45 0.73 0.36]
 [0.   0.   0.   0.   0.   0.36 0.45 0.64 0.36 0.55 0.27]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.18 0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.09 0.73 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.91 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.798, 0.941, 0.643, 0.846, 0.723, 0.872, 0.856, 0.83, 0.809, 0.607, 0.793]
cutting matrix
[[ 1.  0.  1.  1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  0. -1. -1.  1.  1.  1.  1. -1.]
 [ 1.  0.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  0. -1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1.  1.  1. -1. -1.]]
cutting matrix's confusion matrix
[[13  0  0  0  0  1  1  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  2 13  0  0  0  0  0  1]
 [ 0  1  2  0 11  0  0  0  0  3]
 [ 0  0  0  0  0 15  3  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 2  3  0  2  0  0  0 13  0  0]
 [ 2  0  1  1  0  1  3  0  8  6]
 [ 1  0  0  2  1  0  0  0  0  9]]


SVM classifier
Time: 2019-01-05 22:38:12
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
confusion matrix
[[16  0  1  0  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [ 3  0 18  1  0  0  0  0  0  0]
 [ 3  0  3 10  0  0  0  0  0  0]
 [13  0  4  0  0  0  0  0  0  0]
 [ 3  0 17  0  0  0  0  0  0  0]
 [12  0  3  0  0  0  0  0  0  0]
 [18  0  1  1  0  0  0  0  0  0]
 [15  0  6  1  0  0  0  0  0  0]
 [ 1  0 10  2  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  0.]
 [ 1. -1.]
 [-1.  1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1. -1.]]
confusion matrix
[[14  0  0  0  2  1  0  0  0  0]
 [21  0  0  1  4  0  0  0  0  0]
 [ 1  0 18  1  2  0  0  0  0  0]
 [ 0  0  2 10  3  1  0  0  0  0]
 [ 1  0  1  0 12  3  0  0  0  0]
 [ 2  0  1  0  1 16  0  0  0  0]
 [ 3  0  1  0  9  2  0  0  0  0]
 [ 6  0  0  1 12  1  0  0  0  0]
 [ 3  0  2  1 12  4  0  0  0  0]
 [ 0  0  2  2  1  8  0  0  0  0]]
row HD
[[0.  0.  0.2 0.2 0.1 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.2 0.2 0.1 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.2 0.2 0.1 0.2 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[ 0. -1. -1.  0. -1.  0.  0.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0.  0. -1.]
 [ 1. -1. -1.]
 [-1.  1.  0.]
 [ 0.  1. -1.]
 [ 1.  1.  0.]
 [ 0.  1. -1.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 1. -1. -1.]]
confusion matrix
[[11  3  0  0  1  0  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  1  1  0  0  0  1  0]
 [ 0  0  2 10  1  1  0  2  0  0]
 [ 0  1  1  0 14  0  0  1  0  0]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  2  1  0  0  2  0  0  9  0]
 [ 3  3  0  1  1  1  0 11  0  0]
 [ 2  1  2  1  0  4  0  0 12  0]
 [ 0  0  2  2  3  6  0  0  0  0]]
row HD
[[0.  0.1 0.3 0.2 0.2 0.2 0.2 0.2 0.1 0.3]
 [0.  0.  0.2 0.3 0.1 0.3 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.3 0.2 0.2 0.2 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  1.]
 [ 0.  0. -1.  0.]
 [ 1. -1. -1.  0.]
 [-1.  1.  0.  0.]
 [ 0.  1. -1.  0.]
 [ 1.  1.  0.  0.]
 [ 0.  1. -1. -1.]
 [ 0.  1.  1. -1.]
 [ 0.  1.  0.  0.]
 [ 1. -1. -1.  1.]]
confusion matrix
[[ 9  5  0  0  1  0  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  1  1  0  0  0  1  0]
 [ 0  0  2 10  1  1  0  2  0  0]
 [ 0  1  1  0 12  0  2  1  0  0]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  2  1  0  0  2  0  0  9  0]
 [ 1  5  0  1  1  1  0 11  0  0]
 [ 2  1  2  1  0  4  0  0 12  0]
 [ 0  0  0  2  2  6  1  0  0  2]]
row HD
[[0.  0.2 0.4 0.3 0.3 0.3 0.3 0.3 0.2 0.3]
 [0.  0.  0.2 0.3 0.1 0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.3 0.2 0.2 0.3 0.4 0.3 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 2.   1.5 ]
 [0.   0.   1.5  2.25]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  1. -1.]
 [ 0.  0. -1.  0.  0.]
 [ 1. -1. -1.  0. -1.]
 [-1.  1.  0.  0.  0.]
 [ 0.  1. -1.  0. -1.]
 [ 1.  1.  0.  0. -1.]
 [ 0.  1. -1. -1. -1.]
 [ 0.  1.  1. -1. -1.]
 [ 0.  1.  0.  0. -1.]
 [ 1. -1. -1.  1.  1.]]
confusion matrix
[[ 9  3  0  0  1  0  2  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  0  2  0  0  0  1  0]
 [ 0  0  2 10  1  1  0  2  0  0]
 [ 0  0  2  0 12  0  2  1  0  0]
 [ 2  0  1  0  0 16  0  0  1  0]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 1  3  0  1  1  1  2 11  0  0]
 [ 2  0  3  0  1  4  0  0 12  0]
 [ 0  0  2  2  2  6  1  0  0  0]]
row HD
[[0.  0.3 0.4 0.4 0.3 0.3 0.3 0.3 0.2 0.4]
 [0.  0.  0.3 0.3 0.2 0.4 0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.4 0.2 0.2 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.2 0.4 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.6 1.2 1.6]
 [0.  0.  1.2 1.8 1.6]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[ 1.  0.  0.  0.  0.  0. -1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.]
 [ 1. -1. -1.  0. -1.  0.]
 [-1.  1.  0.  0.  0. -1.]
 [ 0.  1. -1.  0. -1.  0.]
 [ 1.  1.  0.  0. -1.  0.]
 [ 0.  1. -1. -1. -1. -1.]
 [ 0.  1.  1. -1. -1. -1.]
 [ 0.  1.  0.  0. -1.  0.]
 [ 1. -1. -1.  1.  1.  0.]]
confusion matrix
[[ 6  3  0  0  1  0  0  0  7  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  0  2  0  0  0  1  0]
 [ 0  0  2  8  1  1  0  2  2  0]
 [ 0  0  2  0 14  0  0  1  0  0]
 [ 1  0  1  0  0 16  0  0  2  0]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 0  3  0  1  1  1  2 11  1  0]
 [ 2  0  3  0  1  4  0  0 12  0]
 [ 0  0  2  2  3  6  0  0  0  0]]
row HD
[[0.  0.4 0.5 0.5 0.4 0.4 0.4 0.4 0.3 0.5]
 [0.  0.  0.3 0.4 0.2 0.4 0.4 0.5 0.3 0.4]
 [0.  0.  0.  0.5 0.2 0.2 0.4 0.5 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.4 0.3 0.6]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.33 1.   1.33 1.  ]
 [0.   0.   1.   1.5  1.33 1.5 ]
 [0.   0.   0.   1.   1.   1.17]
 [0.   0.   0.   0.   0.83 0.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.775, 0.745, 0.708, 0.431, 0.856, 0.544]
cutting matrix
[[ 0.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0.]
 [ 1. -1. -1. -1.  0.]
 [-1.  1.  0.  0. -1.]
 [ 0.  1. -1. -1.  0.]
 [ 1.  1.  0. -1.  0.]
 [ 0.  1. -1. -1. -1.]
 [ 0.  1.  1. -1. -1.]
 [ 0.  1.  0. -1.  0.]
 [ 1. -1. -1.  1.  0.]]
cutting matrix's confusion matrix
[[ 8  3  0  0  1  0  3  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 18  0  1  0  1  0  1  0]
 [ 0  0  2  8  0  1  1  2  2  0]
 [ 0  0  2  0 14  0  0  1  0  0]
 [ 1  0  1  0  0 16  1  0  1  0]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 0  3  0  1  0  1  4 11  0  0]
 [ 2  0  3  0  1  4  0  0 12  0]
 [ 0  0  2  2  3  6  0  0  0  0]]
算法备注：
因为使用提前根据confusion matrix停止的条件，所以可能大多数的矩阵规模很小，所以就不适合剪枝


SVM classifier
Time: 2019-01-05 22:38:17
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1. -1.  1.  1.]
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.4]
 [0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 5  7  2  0  0]
 [ 2  6  1  0  0]
 [ 0  3  2  0  0]
 [ 0  1  2  0  0]]
row HD
[[0.  0.4 0.2 0.6 0.6]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.8]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.25 0.75]
 [0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.]]
confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.2 0.6 0.4]
 [0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.625, 0.804, 0.857, 0.786, 0.589]
cutting matrix
[[-1. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[21  4  0  0  0]
 [ 7  7  0  0  0]
 [ 3  6  0  0  0]
 [ 2  3  0  0  0]
 [ 2  1  0  0  0]]


SVM classifier
Time: 2019-01-05 22:38:18
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  0. -1.  1.  1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  0.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
4
new_column
None


============== iter  2 ================
current matrix is 
[ 0.  0. -1.  1.  1.]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  0.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  2  2]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.4 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  0.]
select_j_column
[ 1. -1.  1.  0.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.]
 [ 0. -1.  1.]
 [-1.  1.  1.]
 [ 1.  0. -1.]
 [ 1.  1. -1.]]
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 6  1  0  1  1]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.6 0.4]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.059, 0.686, 0.194]
cutting matrix
[[ 0.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1.  0.]
 [ 1.  1.]]
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  2  2]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:38:18
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1.]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  8  0  0  0  0]
 [11  0  0  0  0  0]
 [ 1  7  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  7  0  0  0]]
row HD
[[0.   0.17 0.33 0.17 0.17 0.33]
 [0.   0.   0.17 0.   0.33 0.17]
 [0.   0.   0.   0.17 0.17 0.  ]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  7  0  0  0]]
row HD
[[0.   0.33 0.5  0.17 0.33 0.5 ]
 [0.   0.   0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1. -1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  7  0  0  0]]
row HD
[[0.   0.5  0.5  0.17 0.5  0.5 ]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.  ]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.5  0.67 0.17 0.5  0.5 ]
 [0.   0.   0.5  0.33 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.17]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.8 0.8 0.6]
 [0.  0.  0.2 0.6 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.985, 0.985, 0.94, 0.97, 1.0]
cutting matrix
[[-1.  1. -1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  8  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]


SVM classifier
Time: 2019-01-05 22:38:19
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  1. -1.]
confusion matrix
[[17  0  0  0  0  0]
 [12  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 2  0  0  0  0  6]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None}
select_i_column
[ 0. -1. -1.  1.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [ 0.  0.]
 [ 1.  1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.   0.33 0.17]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0. -1. -1.  1.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  1. -1.]
most_cplx_inx
3
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  0.]
 [ 0. -1.]
 [ 1. -1.]
 [ 0.  0.]
 [ 1.  1.]
 [-1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.   0.33 0.17]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1.  0.  0. -1.  0.  1.]
select_j_column
[-1.  1.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0. -1.]
 [ 0. -1.  0.]
 [ 1. -1.  0.]
 [ 0.  0. -1.]
 [ 1.  1.  0.]
 [-1.  0.  1.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 1 11  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.5  0.   0.5  0.33]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 0.  0. -1.  1. -1.  0.]
select_j_column
[ 0.  0. -1.  1. -1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 8 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 0.  0. -1.  0.]
 [ 0. -1.  0.  0.]
 [ 1. -1.  0. -1.]
 [ 0.  0. -1.  1.]
 [ 1.  1.  0. -1.]
 [-1.  0.  1.  0.]]
confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.67 0.17 0.67 0.33]
 [0.   0.   0.33 0.5  0.5  0.5 ]
 [0.   0.   0.   0.67 0.17 0.67]
 [0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.25 1.  ]
 [0.   0.   1.5  0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.933, 0.971, 0.909, 0.967]
cutting matrix
[[ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 1. -1. -1.]
 [ 0.  0.  1.]
 [ 1.  1. -1.]
 [-1.  0.  0.]]
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 11  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-05 22:38:20
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 3  0 23  0  0  0  0  0  0  0]
 [ 5  0 12  0  0  0  0  0  0  0]
 [ 2  0 21  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [ 3  0 11  0  0  0  0  0  0  0]
 [ 1  0 12  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 3  0 22  0  1  0  0  0  0  0]
 [ 5  0 11  0  1  0  0  0  0  0]
 [ 2  0  2  0 19  0  0  0  0  0]
 [ 3  0  3  0 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [16  0  1  0  0  0  0  0  0  0]
 [ 3  0  9  0  2  0  0  0  0  0]
 [ 1  0  3  0  9  0  0  0  0  0]]
row HD
[[0.  0.  0.1 0.1 0.2 0.  0.2 0.  0.1 0.2]
 [0.  0.  0.1 0.1 0.2 0.  0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.2 0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [ 1.  1. -1.]]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [18  0  4  0  0  0  0  0  0  0]
 [ 3  0 22  0  0  0  0  0  0  1]
 [ 5  0 11  0  0  0  0  0  0  1]
 [ 2  0  2  0  0  0  0  0  0 19]
 [ 3  0  3  0  0  0  0  0  0 13]
 [ 2  0 16  0  0  0  0  0  0  1]
 [16  0  1  0  0  0  0  0  0  0]
 [ 3  0  9  0  0  0  0  0  0  2]
 [ 1  0  3  0  0  0  0  0  0  9]]
row HD
[[0.  0.  0.2 0.2 0.3 0.  0.3 0.  0.2 0.2]
 [0.  0.  0.2 0.2 0.3 0.  0.3 0.  0.2 0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.3 0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  1. -1. -1.]]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [18  0  0  4  0  0  0  0  0  0]
 [ 3  0 20  2  1  0  0  0  0  0]
 [ 5  0  1 10  1  0  0  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  2  1 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  0  0]
 [ 3  0  9  0  2  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.  0.3 0.2 0.4 0.1 0.3 0.  0.3 0.2]
 [0.  0.  0.3 0.2 0.4 0.1 0.3 0.  0.3 0.2]
 [0.  0.  0.  0.1 0.1 0.2 0.2 0.3 0.  0.3]
 [0.  0.  0.  0.  0.2 0.3 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.3 0.1 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.25 1.  ]
 [0.   0.   1.   1.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.]]
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.1 0.4 0.3 0.4 0.2 0.4 0.  0.3 0.2]
 [0.  0.  0.3 0.2 0.5 0.1 0.3 0.1 0.4 0.3]
 [0.  0.  0.  0.1 0.2 0.2 0.2 0.4 0.1 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.2 0.8 1. ]
 [0.  0.  0.8 1.  0.8]
 [0.  0.  0.  0.6 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1.  1. -1.]
 [-1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [-1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1.]]
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.5 0.3 0.4 0.2 0.4 0.1 0.3 0.3]
 [0.  0.  0.3 0.3 0.6 0.2 0.4 0.1 0.5 0.3]
 [0.  0.  0.  0.2 0.3 0.3 0.3 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.1 0.4 0.2 0.4]
 [0.  0.  0.  0.  0.  0.4 0.2 0.5 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.17 0.67 0.83 1.  ]
 [0.   0.   0.67 0.83 0.67 0.83]
 [0.   0.   0.   0.5  1.   1.17]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1. -1.  1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.  1.]]
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.4 0.4 0.2 0.4 0.1 0.4 0.3]
 [0.  0.  0.4 0.4 0.6 0.2 0.4 0.1 0.6 0.3]
 [0.  0.  0.  0.2 0.4 0.4 0.4 0.5 0.2 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.2 0.5 0.2 0.5]
 [0.  0.  0.  0.  0.  0.4 0.2 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.14 0.57 0.71 0.86 1.  ]
 [0.   0.   0.57 0.71 0.57 0.71 0.57]
 [0.   0.   0.   0.43 0.86 1.   1.14]
 [0.   0.   0.   0.   0.71 0.86 1.  ]
 [0.   0.   0.   0.   0.   0.71 0.57]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1. -1. -1.  1. -1.  1. -1.]
 [-1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.  1.  1.]
 [-1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.  1.  1.]]
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.2 0.6 0.4 0.4 0.2 0.5 0.1 0.5 0.4]
 [0.  0.  0.4 0.4 0.6 0.2 0.5 0.1 0.7 0.4]
 [0.  0.  0.  0.2 0.4 0.4 0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.4 0.4 0.3 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.4 0.3 0.5 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.12 0.5  0.62 0.75 0.88 0.38]
 [0.   0.   0.5  0.62 0.5  0.62 0.5  0.25]
 [0.   0.   0.   0.38 0.75 0.88 1.   0.5 ]
 [0.   0.   0.   0.   0.62 0.75 0.88 0.62]
 [0.   0.   0.   0.   0.   0.62 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.798, 0.771, 0.729, 0.761, 0.654, 0.814, 0.761, 0.856]
cutting matrix
[[-1. -1. -1. -1.]
 [-1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [ 1. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [-1. -1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1.  1. -1.]
 [ 1. -1. -1.  1.]
 [ 1.  1.  1.  1.]]
cutting matrix's confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  5  1 10  1  0  0  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:38:27
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 17  0  0  0]
 [ 6  0 20  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  5  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  2  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 12  0  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[-1. -1.  1.  1.  0.  0.  0.  0.  0.  0.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [-1.  0.]
 [-1.  0.]
 [ 1. -1.]
 [ 1.  0.]]
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0 17  0  0  0]
 [ 3  0 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  5  0  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  2  1 13  0  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 4  0  0  1  0  0 12  0  0  0]
 [ 3  0  9  0  2  0  0  0  0  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.  0.2 0.1 0.1 0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.2 0.1 0.1 0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  4.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  0.]
 [ 0. -1.  0.]
 [ 1.  0.  0.]
 [ 0.  1. -1.]
 [ 0.  0.  0.]
 [ 0. -1. -1.]
 [-1.  0.  0.]
 [-1.  0. -1.]
 [ 1. -1. -1.]
 [ 1.  0.  1.]]
confusion matrix
[[14  0  1  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 3  0 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  2  1 13  3  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 2  0  0  1  0  2  0 12  0  0]
 [ 2  0  9  0  2  1  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.  0.2 0.2 0.1 0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.2 0.2 0.1 0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.3 0.1 0.3 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   3.   1.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0. -1.  0. -1. -1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0. -1.  0. -1.]
 [ 0. -1.  0. -1.]
 [ 1.  0.  0.  0.]
 [ 0.  1. -1.  0.]
 [ 0.  0.  0.  1.]
 [ 0. -1. -1. -1.]
 [-1.  0.  0. -1.]
 [-1.  0. -1. -1.]
 [ 1. -1. -1. -1.]
 [ 1.  0.  1.  1.]]
confusion matrix
[[14  0  1  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 3  0 20  2  1  0  0  0  0  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  2  1 13  3  0  0  0  0]
 [ 2  0 16  0  1  0  0  0  0  0]
 [ 2  0  0  1  0  2  0 12  0  0]
 [ 2  0  9  0  2  1  0  0  0  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.  0.3 0.3 0.2 0.1 0.2 0.3 0.2 0.4]
 [0.  0.  0.3 0.3 0.2 0.1 0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.3 0.2 0.4 0.2 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.3 0.2 0.4 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.25 1.25 1.5 ]
 [0.   0.   1.25 1.25]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  0.  1.  0. -1.  0.  0. -1.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1.  0. -1.  1.]
 [ 0. -1.  0. -1. -1.]
 [ 1.  0.  0.  0. -1.]
 [ 0.  1. -1.  0.  1.]
 [ 0.  0.  0.  1. -1.]
 [ 0. -1. -1. -1.  1.]
 [-1.  0.  0. -1.  1.]
 [-1.  0. -1. -1.  1.]
 [ 1. -1. -1. -1.  0.]
 [ 1.  0.  1.  1.  1.]]
confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 4  2 17  2  0  0  0  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 2  0  0  1  0  3  0  0  0 13]
 [18  0  0  0  0  0  0  0  0  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [11  0  0  0  0  1  0  0  0  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.1 0.4 0.3 0.3 0.1 0.2 0.3 0.3 0.4]
 [0.  0.  0.3 0.4 0.2 0.2 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.4 0.2 0.5 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.8 1.  1.2 1.8]
 [0.  0.  1.  1.  1.6]
 [0.  0.  0.  1.  1.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
None


============== iter  6 ================
current matrix is 
[[ 0. -1.  0. -1.  1.]
 [ 0. -1.  0. -1. -1.]
 [ 1.  0.  0.  0. -1.]
 [ 0.  1. -1.  0.  1.]
 [ 0.  0.  0.  1. -1.]
 [ 0. -1. -1. -1.  1.]
 [-1.  0.  0. -1.  1.]
 [-1.  0. -1. -1.  1.]
 [ 1. -1. -1. -1.  0.]
 [ 1.  0.  1.  1.  1.]]
confusion matrix
[[14  1  0  0  0  3  0  0  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 4  2 17  2  0  0  0  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 2  0  0  1  0  3  0  0  0 13]
 [18  0  0  0  0  0  0  0  0  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [11  0  0  0  0  1  0  0  0  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.1 0.4 0.3 0.3 0.1 0.2 0.3 0.3 0.4]
 [0.  0.  0.3 0.4 0.2 0.2 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.4 0.2 0.5 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.8 1.  1.2 1.8]
 [0.  0.  1.  1.  1.6]
 [0.  0.  0.  1.  1.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
efficient_count == 3

**********      classifier acc  **************
[0.461, 0.378, 0.288, 0.834, 0.678]
cutting matrix
[[-1.  0. -1.]
 [-1.  0. -1.]
 [ 0.  0.  0.]
 [ 1. -1.  0.]
 [ 0.  0.  1.]
 [-1. -1. -1.]
 [ 0.  0. -1.]
 [ 0. -1. -1.]
 [-1. -1. -1.]
 [ 0.  1.  1.]]
cutting matrix's confusion matrix
[[14  0  0  0  0  3  1  0  0  0]
 [ 0  0  0  0  0  1  4 17  0  0]
 [ 3  0 17  0  1  0  5  0  0  0]
 [ 0  0  1  0  1  0 10  5  0  0]
 [ 0  0  0  0 19  2  2  0  0  0]
 [ 0  0  0  0 13  3  3  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 2  0  0  0  0  2  1 12  0  0]
 [ 2  0  0  0  2  1  9  0  0  0]
 [ 0  0  0  0  9  1  3  0  0  0]]
算法备注：
因为使用提前根据confusion matrix停止的条件，所以可能大多数的矩阵规模很小，所以就不适合剪枝


SVM classifier
Time: 2019-01-05 22:38:32
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1. -1.  1.]
confusion matrix
[[29  5  0  0  0]
 [ 6  3  0  0  0]
 [ 0  7  0  0  0]
 [ 1  4  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1. -1.]
 [-1. -1.]
 [-1.  1.]
 [ 1.  1.]]
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.4 0.4 0.2 0. ]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0. ]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.2]
 [0.  0.  0.2 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.75]
 [0.   0.   0.75 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1. -1.]
 [-1. -1.  1. -1. -1.]
 [-1. -1.  1.  1.  1.]
 [-1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.2]
 [0.  0.  0.4 0.6 0.4]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.6 0.6]
 [0.  0.  0.6 0.4 0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.768, 0.714, 0.911, 0.821, 0.875]
cutting matrix
[[ 1.  1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]]
cutting matrix's confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-05 22:38:32
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  1.  0.  0.]
confusion matrix
[[29  5  0  0  0]
 [ 7  2  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [-1.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [ 0.  0.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.  0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1.  0.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]
 [ 0. -1. -1.]
 [ 0.  0. -1.]]
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.  0.2]
 [0.  0.  0.4 0.6 0.6]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0. -1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1. -1. -1.]
 [ 0. -1. -1.  0.]
 [ 0.  0. -1.  0.]]
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 0.6 0.2 0.4]
 [0.  0.  0.4 0.8 0.8]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.25 0.5 ]
 [0.   0.   0.5  1.  ]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0. -1. -1.  1.  0.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.]
 [ 0. -1. -1.  0.  1.]
 [ 0.  0. -1.  0.  1.]]
confusion matrix
[[34  0  0  0  0]
 [ 7  0  0  2  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  1.  0.8 0.4 0.6]
 [0.  0.  0.4 1.  1. ]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 1.  0.4 0.6]
 [0.  0.  0.4 0.8 1. ]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  0. -1.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0. -1. -1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1.  0.]
 [ 0. -1. -1.  0.  1.  0.]
 [ 0.  0. -1.  0.  1. -1.]]
confusion matrix
[[32  0  0  2  0]
 [ 6  0  0  3  0]
 [ 2  0  0  5  0]
 [ 3  0  0  2  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.  0.6 0.8]
 [0.  0.  0.6 1.2 1. ]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.83 0.33 0.5  0.5 ]
 [0.   0.   0.33 0.67 0.83 0.83]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
1
new_column
None


============== iter  7 ================
current matrix is 
[[ 0. -1. -1.  1.  0.  1.]
 [-1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1.  0.]
 [ 0. -1. -1.  0.  1.  0.]
 [ 0.  0. -1.  0.  1. -1.]]
confusion matrix
[[32  0  0  2  0]
 [ 6  0  0  3  0]
 [ 2  0  0  5  0]
 [ 3  0  0  2  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.  0.6 0.8]
 [0.  0.  0.6 1.2 1. ]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.83 0.33 0.5  0.5 ]
 [0.   0.   0.33 0.67 0.83 0.83]
 [0.   0.   0.   0.67 0.67 0.67]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
efficient_count == 3

**********      classifier acc  **************
[0.125, 0.709, 0.839, 0.8, 0.364, 0.795]
cutting matrix
[[-1. -1.  1.  0.]
 [ 1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1. -1.  0.  1.]
 [ 0. -1.  0.  1.]]
cutting matrix's confusion matrix
[[31  0  3  0  0]
 [ 6  0  1  2  0]
 [ 1  0  5  1  0]
 [ 2  0  3  0  0]
 [ 0  0  1  0  0]]


SVM classifier
Time: 2019-01-05 22:38:34
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1. -1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [-1. -1.]
 [-1. -1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 4  0  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.33 0.17 0.   0.  ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1.  1.]
 [ 1.  1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [-1. -1.  1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 0  5  0  0  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.17 0.17]
 [0.   0.   0.5  0.17 0.   0.  ]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 1.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1. -1.  1.  1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 1  9  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 0  5  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.33 0.33 0.33]
 [0.   0.   0.67 0.33 0.   0.  ]
 [0.   0.   0.   0.33 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 1.   1.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
None


============== iter  5 ================
current matrix is 
[[-1. -1. -1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1. -1. -1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [-1. -1.  1.  1.]]
confusion matrix
[[21  1  0  0  0  0]
 [ 1  9  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 0  5  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.33 0.33 0.33]
 [0.   0.   0.67 0.33 0.   0.  ]
 [0.   0.   0.   0.33 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 1.   1.25]
 [0.   0.   1.25 1.  ]
 [0.   0.   0.   0.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 18 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1.  1.  1. -1.]
 [-1. -1.  1.  1. -1.]]
confusion matrix
[[21  0  0  0  1  0]
 [ 1  7  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
[[0.   0.5  0.33 0.33 0.33 0.33]
 [0.   0.   0.83 0.5  0.17 0.17]
 [0.   0.   0.   0.33 0.67 0.67]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.8 1.  0.6]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1.  1.]]
confusion matrix
[[21  0  0  0  1  0]
 [ 1  7  0  0  2  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.5  0.33 0.5  0.33 0.5 ]
 [0.   0.   0.83 0.67 0.17 0.33]
 [0.   0.   0.   0.5  0.67 0.83]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.67 0.83 0.5  0.33]
 [0.   0.   0.83 0.67 0.33 0.5 ]
 [0.   0.   0.   0.17 0.5  0.33]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[0.955, 1.0, 0.985, 0.925, 0.91, 0.955]
cutting matrix
[[-1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.]
 [-1. -1.  1. -1.  1.]]
cutting matrix's confusion matrix
[[21  0  0  0  1  0]
 [ 0  7  0  0  3  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 22:38:35
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  0. -1.  1.  1.]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  5  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0. -1.  1.  1.]
select_j_column
[-1.  0. -1. -1.  0.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1. -1.]
 [ 0. -1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1.  1.]]
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 8  0  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.17 0.   0.33 0.33]
 [0.   0.   0.17 0.   0.33 0.33]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 1.  0.  1. -1. -1.  0.]
select_j_column
[-1.  0.  1.  0.  1.  0.]
most_cplx_inx
3
ERROR-F1: the denominator of the 2 dimension of F1 is zero!
ERROR-F1: the denominator of the 4 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1. -1.  0.]
 [ 0. -1.  1.]
 [-1. -1. -1.]
 [ 1.  0. -1.]
 [ 1.  1.  0.]]
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 0.33 0.   0.33 0.5 ]
 [0.   0.   0.33 0.17 0.5  0.33]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8

**********      classifier acc  **************
[1.0, 1.0, 0.942]
cutting matrix
[[-1. -1. -1.]
 [-1. -1.  0.]
 [ 0. -1.  1.]
 [-1. -1. -1.]
 [ 1.  0. -1.]
 [ 1.  1.  0.]]
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-05 22:38:35
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
confusion matrix
[[16  0  4  0  0  0  0  0  0  0]
 [20  0  1  0  0  0  0  0  0  0]
 [10  0 12  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [26  0  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  2  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [-1. -1.]
 [-1.  1.]
 [-1.  1.]]
confusion matrix
[[13  3  4  0  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  7 12  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.1 0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.1 0.2 0.1 0.2 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [-1.  1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [-1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]]
confusion matrix
[[13  1  4  0  0  0  0  0  2  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  6 12  0  0  0  0  0  1  0]
 [ 0 18  0  0  0  0  0  0  1  0]
 [19  2  0  0  0  0  0  0  5  0]
 [ 3  0  0  0  0  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [19  1  0  0  0  0  0  0  1  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.3 0.2 0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.1 0.  0.2 0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.1 0.3 0.1 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [-1.  1.  1. -1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1.  1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1. -1.]]
confusion matrix
[[15  1  4  0  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 4  4 12  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [24  2  0  0  0  0  0  0  0  0]
 [16  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.  0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.2 0.1 0.3 0.1 0.1 0.3 0.1 0.1]
 [0.  0.  0.  0.1 0.3 0.1 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   1.25]
 [0.   0.   0.75 1.5 ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.]
 [-1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.]]
confusion matrix
[[13  1  4  2  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.3 0.  0.3 0.2 0.  0.3 0.3]
 [0.  0.  0.3 0.1 0.4 0.1 0.2 0.4 0.1 0.1]
 [0.  0.  0.  0.2 0.3 0.2 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.3 0.2 0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 1.  0.8]
 [0.  0.  0.6 1.2 1.8]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1.]
 [-1. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.]]
confusion matrix
[[13  1  4  2  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.4 0.  0.4 0.2 0.1 0.4 0.3]
 [0.  0.  0.3 0.2 0.4 0.2 0.2 0.5 0.2 0.1]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.  0.4 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.2 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 0.83 0.67 0.83]
 [0.   0.   0.5  1.   1.5  1.  ]
 [0.   0.   0.   0.83 1.   0.83]
 [0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1. -1. -1.]
 [-1. -1.  1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]]
confusion matrix
[[13  1  4  2  0  0  0  0  0  0]
 [ 5 15  1  0  0  0  0  0  0  0]
 [ 3  4 12  3  0  0  0  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [19  2  0  5  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [19  0  0  2  0  0  0  0  0  0]
 [ 2  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.5 0.  0.5 0.2 0.1 0.4 0.4]
 [0.  0.  0.3 0.2 0.5 0.2 0.3 0.6 0.3 0.1]
 [0.  0.  0.  0.3 0.4 0.3 0.4 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.5 0.  0.5 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.5 0.2 0.1 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.57 0.71 0.57 0.71 0.86]
 [0.   0.   0.43 0.86 1.29 0.86 1.29]
 [0.   0.   0.   0.71 0.86 0.71 1.14]
 [0.   0.   0.   0.   0.43 0.86 0.71]
 [0.   0.   0.   0.   0.   0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.91, 0.676, 0.665, 0.739, 0.681, 0.718, 0.766]
cutting matrix
[[-1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [-1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]]
cutting matrix's confusion matrix
[[ 2  1  4  2  0  0 11  0  0  0]
 [ 4 15  1  0  0  0  1  0  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [17  2  0  5  0  0  2  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 19  0  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]


SVM classifier
Time: 2019-01-05 22:38:41
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
confusion matrix
[[15  3  2  0  0  0  0  0  0  0]
 [ 2 15  4  0  0  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2  7 17  0  0  0  0  0  0  0]
 [ 0 13  3  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  0.]
 [ 1. -1.]
 [-1.  0.]
 [ 0. -1.]
 [-1. -1.]
 [-1. -1.]
 [ 0.  1.]]
confusion matrix
[[15  1  2  0  0  2  0  0  0  0]
 [ 2 15  4  0  0  0  0  0  0  0]
 [15  4  0  0  0  3  0  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 2  2 17  0  0  5  0  0  0  0]
 [ 0  0  3  0  0 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0 11  0  0  0  0]
 [19  0  0  0  0  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.1 0.2 0.1 0.1 0.2 0.2 0.1]
 [0.  0.  0.2 0.2 0.2 0.1 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.1 0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [-1.  1. -1.]
 [ 1. -1.  1.]
 [ 1.  0.  0.]
 [ 1. -1. -1.]
 [-1.  0. -1.]
 [ 0. -1.  0.]
 [-1. -1. -1.]
 [-1. -1. -1.]
 [ 0.  1. -1.]]
confusion matrix
[[17  1  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [14  5  0  0  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [21  0  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.1 0.3 0.2 0.1 0.3 0.3 0.2]
 [0.  0.  0.3 0.3 0.2 0.1 0.3 0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.1 0.3 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 1.  ]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  0.  0. -1.]
 [ 1. -1. -1.  1.]
 [-1.  0. -1.  1.]
 [ 0. -1.  0. -1.]
 [-1. -1. -1. -1.]
 [-1. -1. -1.  0.]
 [ 0.  1. -1.  1.]]
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [17  4  0  0  0  1  0  0  0  0]
 [13  5  0  0  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [20  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.4 0.3 0.2 0.4 0.3 0.3]
 [0.  0.  0.4 0.3 0.3 0.2 0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.3 0.1 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 0.75 1.25]
 [0.   0.   1.25 1.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
most_cplx_inx
9
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1.  1.]
 [ 1.  0.  0. -1.]
 [ 1. -1. -1.  1.]
 [-1.  0. -1.  1.]
 [ 0. -1.  0. -1.]
 [-1. -1. -1. -1.]
 [-1. -1. -1.  0.]
 [ 0.  1. -1.  1.]]
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [17  4  0  0  0  1  0  0  0  0]
 [13  5  0  0  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [20  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.4 0.3 0.2 0.4 0.3 0.3]
 [0.  0.  0.4 0.3 0.3 0.2 0.3 0.1 0.2 0.2]
 [0.  0.  0.  0.3 0.1 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 0.75 1.25]
 [0.   0.   1.25 1.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1. -1.  1.  1. -1. -1.  0.  1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  0.  0.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1.]
 [ 1.  0.  0. -1.  0.]
 [ 1. -1. -1.  1.  1.]
 [-1.  0. -1.  1.  0.]
 [ 0. -1.  0. -1. -1.]
 [-1. -1. -1. -1.  0.]
 [-1. -1. -1.  0. -1.]
 [ 0.  1. -1.  1.  1.]]
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [17  4  0  0  0  1  0  0  0  0]
 [13  5  0  0  0  1  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [20  0  0  0  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.2 0.5 0.3 0.3 0.4 0.4 0.4]
 [0.  0.  0.5 0.4 0.4 0.3 0.3 0.2 0.2 0.3]
 [0.  0.  0.  0.4 0.1 0.4 0.4 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 0.6 1.  1. ]
 [0.  0.  1.  1.2 0.8]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[-1. -1.  0.  0. -1.  1. -1.  1.  0.  0.]
most_cplx_inx
7
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.]
 [-1.  1. -1. -1. -1.  0.]
 [ 1. -1.  1.  1.  1.  0.]
 [ 1.  0.  0. -1.  0.  0.]
 [ 1. -1. -1.  1.  1.  1.]
 [-1.  0. -1.  1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.]
 [-1. -1. -1. -1.  0. -1.]
 [-1. -1. -1.  0. -1.  0.]
 [ 0.  1. -1.  1.  1.  0.]]
confusion matrix
[[13  1  0  2  2  2  0  0  0  0]
 [ 1 15  0  1  4  0  0  0  0  0]
 [17  4  0  0  0  1  0  0  0  0]
 [13  5  0  0  0  1  0  0  0  0]
 [ 0  2  0  2 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [13  0  0  1  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [15  0  0  5  0  1  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.3 0.6 0.4 0.4 0.4 0.5 0.5]
 [0.  0.  0.5 0.4 0.5 0.4 0.3 0.3 0.2 0.3]
 [0.  0.  0.  0.4 0.2 0.5 0.4 0.5 0.4 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 0.5  0.83 0.83 1.  ]
 [0.   0.   0.83 1.   0.67 1.33]
 [0.   0.   0.   1.   0.83 1.17]
 [0.   0.   0.   0.   0.67 1.  ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
efficient_count == 3

**********      classifier acc  **************
[0.429, 0.241, 0.319, 0.66, 0.271, 0.481]
cutting matrix
[[ 0.  0.  0.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [ 0. -1.  0.]
 [-1.  1.  1.]
 [-1.  1.  0.]
 [ 0. -1. -1.]
 [-1. -1.  0.]
 [-1.  0. -1.]
 [-1.  1.  1.]]
cutting matrix's confusion matrix
[[17  1  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [16  4  0  2  0  0  0  0  0  0]
 [ 1  5  0 13  0  0  0  0  0  0]
 [ 7  2  0  0 17  0  0  0  0  0]
 [13  0  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0 11  0  0  0  0  0  0]
 [20  0  0  1  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]]
