算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 使用AP算法作为聚类算法


SVM classifier
Time: 2019-01-09 23:12:32
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1.]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 43, -1.0: 13})
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 6  1  0  0  0]
 [ 2  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
confusion matrix
[[26  1  3  0  0]
 [ 3  3  3  0  0]
 [ 2  1  4  0  0]
 [ 0  5  2  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.2 0.  0.2]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [-1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  0  3  1  0]
 [ 3  0  3  3  0]
 [ 2  0  4  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.6 0.2 0.4 0.4]
 [0.  0.  0.4 0.2 0.2]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [-1.  1. -1.  1.]
 [ 1.  1.  1. -1.]
 [-1.  1.  1. -1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 4  0  2  1  0]
 [ 0  2  2  3  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.5  0.75]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 6  0  0  3  0]
 [ 4  0  2  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.8 0.4 0.6 0.8]
 [0.  0.  0.8 0.6 0.4]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.6 0.8 0.4]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 4  0  2  1  0]
 [ 2  0  2  3  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.8 0.6 0.8 0.8]
 [0.  0.  1.  0.8 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.33 0.5  0.5  0.5 ]
 [0.   0.   0.5  0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.83 0.17]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 4  0  2  1  0]
 [ 0  2  2  3  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.  0.8 1.  0.8]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.29 0.43 0.43 0.43 0.57]
 [0.   0.   0.43 0.57 0.29 0.29 0.14]
 [0.   0.   0.   0.43 0.71 0.14 0.29]
 [0.   0.   0.   0.   0.29 0.57 0.43]
 [0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:6,large_class sample len:160
cluster len:23
cluster contain small sample len:[0.2, 1.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.08333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 4  0  2  1  0]
 [ 0  2  2  3  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.  0.8 1.  1. ]
 [0.  0.  1.  0.8 0.8]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.25 0.38 0.38 0.38 0.5  0.38]
 [0.   0.   0.38 0.5  0.25 0.25 0.12 0.25]
 [0.   0.   0.   0.38 0.62 0.12 0.25 0.12]
 [0.   0.   0.   0.   0.25 0.5  0.38 0.25]
 [0.   0.   0.   0.   0.   0.5  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:15,large_class sample len:151
cluster len:23
cluster contain small sample len:[0.5, 0.18181818181818182, 0.0, 0.0, 0.0, 0.0, 0.08333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.125, 0.2, 0.0, 0.16666666666666666, 0.3333333333333333, 0.0, 0.1111111111111111, 0.2, 0.0, 0.2]
no one train sample is selected


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 6  3  0  0  0]
 [ 4  0  2  1  0]
 [ 0  2  2  3  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.  1.  1.  1. ]
 [0.  0.  1.2 0.8 0.8]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.22 0.33 0.33 0.33 0.44 0.33 0.22]
 [0.   0.   0.33 0.44 0.22 0.22 0.11 0.22 0.33]
 [0.   0.   0.   0.33 0.56 0.11 0.22 0.11 0.22]
 [0.   0.   0.   0.   0.22 0.44 0.33 0.22 0.33]
 [0.   0.   0.   0.   0.   0.44 0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.11 0.22 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 6  0  0  3  0]
 [ 4  0  2  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.2 1.  1.  1.2]
 [0.  0.  1.4 1.  0.8]
 [0.  0.  0.  0.4 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.3 0.2 0.3 0.3 0.3 0.4 0.3 0.2 0.2]
 [0.  0.  0.3 0.4 0.2 0.2 0.1 0.2 0.3 0.3]
 [0.  0.  0.  0.3 0.5 0.1 0.2 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.2 0.4 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:6,large_class sample len:160
cluster len:23
cluster contain small sample len:[0.2, 1.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.08333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 6  0  0  3  0]
 [ 4  0  2  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.2 1.  1.  1.4]
 [0.  0.  1.4 1.  1. ]
 [0.  0.  0.  0.4 1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.18 0.27 0.27 0.27 0.36 0.27 0.18 0.18 0.27]
 [0.   0.   0.27 0.36 0.18 0.18 0.09 0.18 0.27 0.27 0.18]
 [0.   0.   0.   0.27 0.45 0.09 0.18 0.09 0.18 0.   0.09]
 [0.   0.   0.   0.   0.18 0.36 0.27 0.18 0.27 0.27 0.18]
 [0.   0.   0.   0.   0.   0.36 0.27 0.36 0.27 0.45 0.36]
 [0.   0.   0.   0.   0.   0.   0.09 0.18 0.09 0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.18 0.18 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.09 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 3  0  1  3  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.2 1.2 1.2 1.4]
 [0.  0.  1.6 1.2 1. ]
 [0.  0.  0.  0.4 1.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.17 0.25 0.25 0.25 0.33 0.25 0.17 0.17 0.25 0.25]
 [0.   0.   0.25 0.33 0.17 0.17 0.08 0.17 0.25 0.25 0.17 0.17]
 [0.   0.   0.   0.25 0.42 0.08 0.17 0.08 0.17 0.   0.08 0.08]
 [0.   0.   0.   0.   0.17 0.33 0.25 0.17 0.25 0.25 0.17 0.33]
 [0.   0.   0.   0.   0.   0.33 0.25 0.33 0.25 0.42 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.08 0.17 0.08 0.08 0.17 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.17 0.17 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.08 0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:6,large_class sample len:160
cluster len:23
cluster contain small sample len:[0.2, 1.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.08333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
12 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 3  0  1  3  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.2 1.2 1.2 1.6]
 [0.  0.  1.6 1.2 1.2]
 [0.  0.  0.  0.4 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.15 0.23 0.23 0.23 0.31 0.23 0.15 0.15 0.23 0.23 0.23]
 [0.   0.   0.23 0.31 0.15 0.15 0.08 0.15 0.23 0.23 0.15 0.15 0.15]
 [0.   0.   0.   0.23 0.38 0.08 0.15 0.08 0.15 0.   0.08 0.08 0.08]
 [0.   0.   0.   0.   0.15 0.31 0.23 0.15 0.23 0.23 0.15 0.31 0.15]
 [0.   0.   0.   0.   0.   0.31 0.23 0.31 0.23 0.38 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.08 0.15 0.08 0.08 0.15 0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.15 0.15 0.08 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.08 0.   0.15 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 4  0  2  1  0]
 [ 2  0  2  3  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.2 1.4 1.4 1.8]
 [0.  0.  1.8 1.4 1.4]
 [0.  0.  0.  0.4 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.14 0.21 0.21 0.21 0.29 0.21 0.14 0.14 0.21 0.21 0.21 0.14]
 [0.   0.   0.21 0.29 0.14 0.14 0.07 0.14 0.21 0.21 0.14 0.14 0.14 0.07]
 [0.   0.   0.   0.21 0.36 0.07 0.14 0.07 0.14 0.   0.07 0.07 0.07 0.14]
 [0.   0.   0.   0.   0.14 0.29 0.21 0.14 0.21 0.21 0.14 0.29 0.14 0.36]
 [0.   0.   0.   0.   0.   0.29 0.21 0.29 0.21 0.36 0.29 0.29 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.07 0.14 0.07 0.07 0.14 0.   0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.14 0.14 0.07 0.07 0.07 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.07 0.   0.14 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.07 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
14 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 4  0  2  1  0]
 [ 2  0  2  3  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.2 1.6 1.6 2. ]
 [0.  0.  2.  1.6 1.6]
 [0.  0.  0.  0.4 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.13 0.2  0.2  0.2  0.27 0.2  0.13 0.13 0.2  0.2  0.2  0.13
  0.13]
 [0.   0.   0.2  0.27 0.13 0.13 0.07 0.13 0.2  0.2  0.13 0.13 0.13 0.07
  0.07]
 [0.   0.   0.   0.2  0.33 0.07 0.13 0.07 0.13 0.   0.07 0.07 0.07 0.13
  0.13]
 [0.   0.   0.   0.   0.13 0.27 0.2  0.13 0.2  0.2  0.13 0.27 0.13 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.27 0.2  0.27 0.2  0.33 0.27 0.27 0.27 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.07 0.13 0.07 0.07 0.13 0.   0.13 0.07
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.13 0.13 0.07 0.07 0.07 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.07 0.   0.13 0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.07 0.2  0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.07 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.07
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
14 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
15 classifiers pre label
Counter({-1.0: 54, 1.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 4  0  0  3  0]
 [ 2  0  0  5  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.4 1.8 1.6 2.2]
 [0.  0.  2.  1.8 1.6]
 [0.  0.  0.  0.6 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.12 0.19 0.19 0.19 0.25 0.19 0.12 0.12 0.19 0.19 0.19 0.12
  0.12 0.12]
 [0.   0.   0.19 0.25 0.12 0.12 0.06 0.12 0.19 0.19 0.12 0.12 0.12 0.06
  0.06 0.06]
 [0.   0.   0.   0.19 0.31 0.06 0.12 0.06 0.12 0.   0.06 0.06 0.06 0.12
  0.12 0.25]
 [0.   0.   0.   0.   0.12 0.25 0.19 0.12 0.19 0.19 0.12 0.25 0.12 0.31
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.25 0.19 0.25 0.19 0.31 0.25 0.25 0.25 0.19
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.06 0.12 0.06 0.06 0.12 0.   0.12 0.06
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.12 0.06 0.06 0.06 0.12
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.06 0.   0.12 0.   0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.06 0.19 0.12
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.12
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 43, -1.0: 13})
1 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({1.0: 47, -1.0: 9})
4 classifiers pre label
Counter({-1.0: 56})
5 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
6 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({1.0: 56})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
12 classifiers pre label
Counter({1.0: 56})
13 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
14 classifiers pre label
Counter({-1.0: 47, 1.0: 9})
15 classifiers pre label
Counter({-1.0: 54, 1.0: 2})
16 classifiers pre label
Counter({-1.0: 31, 1.0: 25})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 4  0  0  3  0]
 [ 2  0  0  5  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.6 2.  1.8 2.4]
 [0.  0.  2.  1.8 1.6]
 [0.  0.  0.  0.6 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.12 0.18 0.18 0.18 0.24 0.18 0.12 0.12 0.18 0.18 0.18 0.12
  0.12 0.12 0.18]
 [0.   0.   0.18 0.24 0.12 0.12 0.06 0.12 0.18 0.18 0.12 0.12 0.12 0.06
  0.06 0.06 0.  ]
 [0.   0.   0.   0.18 0.29 0.06 0.12 0.06 0.12 0.   0.06 0.06 0.06 0.12
  0.12 0.24 0.18]
 [0.   0.   0.   0.   0.12 0.24 0.18 0.12 0.18 0.18 0.12 0.24 0.12 0.29
  0.29 0.18 0.24]
 [0.   0.   0.   0.   0.   0.24 0.18 0.24 0.18 0.29 0.24 0.24 0.24 0.18
  0.18 0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.06 0.12 0.06 0.06 0.12 0.   0.12 0.06
  0.06 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.12 0.12 0.06 0.06 0.06 0.12
  0.12 0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.06 0.   0.12 0.   0.18
  0.18 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.06 0.18 0.12
  0.12 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.06 0.12
  0.12 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.18
  0.18 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.06
  0.06 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.18 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})

**********      classifier acc  **************
[0.768, 0.839, 0.786, 0.857, 0.786, 0.768, 0.839, 0.946, 0.875, 0.786, 0.946, 0.768, 0.946, 0.857, 0.857, 0.661, 0.839]
before cutting matrix
[[ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({1.0: 114, -1.0: 52})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({1.0: 129, -1.0: 37})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 129, 1.0: 37})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 129, 1.0: 37})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 130, 1.0: 36})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 129, -1.0: 37})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({1.0: 129, -1.0: 37})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 93, 1.0: 73})
positive and negative ratio
Counter({-1.0: 114, 1.0: 52})
after cutting matrix
[[-1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 93, 1.0: 73})
Counter({1.0: 124, -1.0: 42})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 151, 1.0: 15})
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 124, 1.0: 42})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 93, 1.0: 73})
cutting matrix's confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  2  0  3  0]
 [ 0  2  1  4  0]
 [ 0  2  0  1  0]]


SVM classifier
Time: 2019-01-09 23:12:36
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  1.  0.  1. -1.]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({0.0: 42, 1.0: 14})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]
small_class len :2,large_class len:2, small_class sample:21,large_class sample len:124
extra_class: 1,extra_sample len: 21
cluster len:9
cluster contain small sample len:[0.375, 0.6666666666666666, 0.6666666666666666, 1.0, 0.4, 0.5, 0.375, 0.6666666666666666, 0.5]
before change column[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 1.  1.]
 [ 0. -1.]
 [ 1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.4 0.  0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:15,large_class sample len:151
cluster len:23
cluster contain small sample len:[0.5, 0.18181818181818182, 0.0, 0.0, 0.0, 0.0, 0.08333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.125, 0.2, 0.0, 0.16666666666666666, 0.3333333333333333, 0.0, 0.1111111111111111, 0.2, 0.0, 0.2]
no one train sample is selected


============== iter  3 ================
current matrix is 
[[ 0.  1.  1.]
 [ 1.  1.  1.]
 [ 0. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 4  3  0  0  0]
 [ 5  2  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.2 0.4 0.2 0.4]
 [0.  0.  0.6 0.  0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  1.  0.]
 [ 1.  1.  1.  1.]
 [ 0. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 6  0  0  3  0]
 [ 4  1  0  2  0]
 [ 5  1  0  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.8 0.2 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.5 ]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 1.  0.  1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  5 ================
current matrix is 
[[ 0.  1.  1.  0.]
 [ 1.  1.  1.  1.]
 [ 0. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 6  0  0  3  0]
 [ 4  1  0  2  0]
 [ 5  1  0  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.8 0.2 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.75 0.5 ]
 [0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 0.  1.  1.  0.  0.]
 [ 1.  1.  1.  1.  0.]
 [ 0. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  0.]
 [-1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
confusion matrix
[[26  4  0  0  0]
 [ 6  0  0  3  0]
 [ 4  1  0  2  0]
 [ 5  1  0  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.4 0.8 0.4 0.8]
 [0.  0.  1.  0.2 0.8]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.2 0.4 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
2
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.]
 [ 1.  1.  1.  1.  0.  1.]
 [ 0. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  0. -1.]
 [-1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 9  0  0  0  0]
 [ 6  1  0  0  0]
 [ 6  1  0  0  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 1.  0.6 1. ]
 [0.  0.  1.  0.4 1. ]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.5  0.33 0.5  0.33]
 [0.   0.   0.17 0.33 0.67 0.5 ]
 [0.   0.   0.   0.5  0.83 0.67]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.]
 [ 1.  1.  1.  1.  0.  1.  0.]
 [ 0. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.]
 [-1. -1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
confusion matrix
[[25  4  0  1  0]
 [ 6  0  0  3  0]
 [ 4  1  0  2  0]
 [ 1  1  0  5  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.8 1.2 0.8 1.2]
 [0.  0.  1.2 0.6 1.2]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.43 0.29 0.43 0.29 0.57]
 [0.   0.   0.14 0.29 0.57 0.43 0.29]
 [0.   0.   0.   0.43 0.71 0.57 0.43]
 [0.   0.   0.   0.   0.43 0.14 0.29]
 [0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[25  4  0  1  0]
 [ 3  4  0  2  0]
 [ 3  3  0  1  0]
 [ 0  3  0  4  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.  1.4 0.8 1.4]
 [0.  0.  1.4 0.8 1.2]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.38 0.25 0.38 0.25 0.5  0.38]
 [0.   0.   0.12 0.25 0.5  0.38 0.25 0.38]
 [0.   0.   0.   0.38 0.62 0.5  0.38 0.25]
 [0.   0.   0.   0.   0.38 0.12 0.25 0.25]
 [0.   0.   0.   0.   0.   0.25 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 6  1  0  2  0]
 [ 3  2  0  2  0]
 [ 0  2  0  5  0]
 [ 0  1  0  2  0]]
row HD
[[0.  1.2 1.6 1.  1.6]
 [0.  0.  1.6 1.  1.2]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.33 0.22 0.33 0.22 0.44 0.33 0.33]
 [0.   0.   0.11 0.22 0.44 0.33 0.22 0.33 0.44]
 [0.   0.   0.   0.33 0.56 0.44 0.33 0.22 0.33]
 [0.   0.   0.   0.   0.33 0.11 0.22 0.22 0.44]
 [0.   0.   0.   0.   0.   0.22 0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
confusion matrix
[[26  4  0  0  0]
 [ 6  1  0  2  0]
 [ 3  2  0  2  0]
 [ 0  1  0  6  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.4 1.6 1.2 1.8]
 [0.  0.  1.8 1.2 1.4]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.3 0.2 0.3 0.2 0.4 0.3 0.3 0.2]
 [0.  0.  0.1 0.2 0.4 0.3 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.3 0.5 0.4 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.2 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1. -1. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]
small_class len :1,large_class len:3, small_class sample:15,large_class sample len:145
extra_class: 1,extra_sample len: 6
cluster len:4
cluster contain small sample len:[0.8333333333333334, 0.7, 0.75, 0.0]
before change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[26  4  0  0  0]
 [ 6  1  0  2  0]
 [ 3  2  0  2  0]
 [ 0  1  0  6  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.4 1.8 1.2 1.8]
 [0.  0.  2.  1.2 1.4]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.27 0.18 0.27 0.18 0.36 0.27 0.27 0.18 0.27]
 [0.   0.   0.09 0.18 0.36 0.27 0.18 0.27 0.36 0.36 0.09]
 [0.   0.   0.   0.27 0.45 0.36 0.27 0.18 0.27 0.27 0.  ]
 [0.   0.   0.   0.   0.27 0.09 0.18 0.18 0.36 0.36 0.27]
 [0.   0.   0.   0.   0.   0.18 0.27 0.27 0.36 0.36 0.45]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.45 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 1  1  0  5  0]
 [ 1  2  0  0  0]]
row HD
[[0.  1.6 1.8 1.4 2. ]
 [0.  0.  2.2 1.4 1.4]
 [0.  0.  0.  1.8 1.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.25 0.17 0.25 0.17 0.33 0.25 0.25 0.17 0.25 0.33]
 [0.   0.   0.08 0.17 0.33 0.25 0.17 0.25 0.33 0.33 0.08 0.25]
 [0.   0.   0.   0.25 0.42 0.33 0.25 0.17 0.25 0.25 0.   0.17]
 [0.   0.   0.   0.   0.25 0.08 0.17 0.17 0.33 0.33 0.25 0.25]
 [0.   0.   0.   0.   0.   0.17 0.25 0.25 0.33 0.33 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.42 0.42 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  1.  0.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
12 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 6  1  0  2  0]
 [ 4  1  0  2  0]
 [ 0  1  0  6  0]
 [ 0  2  0  1  0]]
row HD
[[0.  1.8 2.  1.6 2.2]
 [0.  0.  2.4 1.4 1.6]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.23 0.15 0.23 0.15 0.31 0.23 0.23 0.15 0.23 0.31 0.08]
 [0.   0.   0.08 0.15 0.31 0.23 0.15 0.23 0.31 0.31 0.08 0.23 0.08]
 [0.   0.   0.   0.23 0.38 0.31 0.23 0.15 0.23 0.23 0.   0.15 0.15]
 [0.   0.   0.   0.   0.23 0.08 0.15 0.15 0.31 0.31 0.23 0.23 0.08]
 [0.   0.   0.   0.   0.   0.15 0.23 0.23 0.31 0.31 0.38 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.31 0.31 0.31 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.38 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.15 0.08 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.  0. -1.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.  1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
12 classifiers pre label
Counter({0.0: 38, 1.0: 18})
13 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  1  0  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  2.  2.  1.8 2.4]
 [0.  0.  2.6 1.6 1.6]
 [0.  0.  0.  2.2 2. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.21 0.14 0.21 0.14 0.29 0.21 0.21 0.14 0.21 0.29 0.07 0.29]
 [0.   0.   0.07 0.14 0.29 0.21 0.14 0.21 0.29 0.29 0.07 0.21 0.07 0.21]
 [0.   0.   0.   0.21 0.36 0.29 0.21 0.14 0.21 0.21 0.   0.14 0.14 0.14]
 [0.   0.   0.   0.   0.21 0.07 0.14 0.14 0.29 0.29 0.21 0.21 0.07 0.21]
 [0.   0.   0.   0.   0.   0.14 0.21 0.21 0.29 0.29 0.36 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.29 0.29 0.29 0.29 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.36 0.21 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.14 0.07 0.14 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.07 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[-1.  1.  0.  0.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 0]]
small_class len :1,large_class len:3, small_class sample:21,large_class sample len:139
extra_class: 1,extra_sample len: 6
cluster len:8
cluster contain small sample len:[0.8333333333333334, 1.0, 0.8888888888888888, 1.0, 0.5, 0.0, 0.75, 0.6666666666666666]
before change column[[-1]
 [-1]
 [-1]
 [ 1]
 [ 0]]
after change column[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.  0. -1. -1.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.  1.  1. -1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.  1.  0.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
12 classifiers pre label
Counter({0.0: 38, 1.0: 18})
13 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
14 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 6  1  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  2.  2.  2.  2.6]
 [0.  0.  2.6 1.8 1.8]
 [0.  0.  0.  2.4 2.2]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.2  0.13 0.2  0.13 0.27 0.2  0.2  0.13 0.2  0.27 0.07 0.27
  0.27]
 [0.   0.   0.07 0.13 0.27 0.2  0.13 0.2  0.27 0.27 0.07 0.2  0.07 0.2
  0.2 ]
 [0.   0.   0.   0.2  0.33 0.27 0.2  0.13 0.2  0.2  0.   0.13 0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.2  0.07 0.13 0.13 0.27 0.27 0.2  0.2  0.07 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.13 0.2  0.2  0.27 0.27 0.33 0.27 0.2  0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.27 0.27 0.27 0.27 0.13 0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.33 0.2  0.27 0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.13 0.07 0.13 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.07 0.27 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  0.  1.]
select_j_column
[ 0.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.  0. -1. -1.  0.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.  1.  0.  1.  0.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
12 classifiers pre label
Counter({0.0: 38, 1.0: 18})
13 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
14 classifiers pre label
Counter({-1.0: 56})
15 classifiers pre label
Counter({0.0: 40, 1.0: 15, -1.0: 1})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 6  1  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  2.2 2.2 2.  2.8]
 [0.  0.  2.8 2.  2. ]
 [0.  0.  0.  2.6 2.2]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.19 0.12 0.19 0.12 0.25 0.19 0.19 0.12 0.19 0.25 0.06 0.25
  0.25 0.12]
 [0.   0.   0.06 0.12 0.25 0.19 0.12 0.19 0.25 0.25 0.06 0.19 0.06 0.19
  0.19 0.12]
 [0.   0.   0.   0.19 0.31 0.25 0.19 0.12 0.19 0.19 0.   0.12 0.12 0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.19 0.06 0.12 0.12 0.25 0.25 0.19 0.19 0.06 0.19
  0.25 0.06]
 [0.   0.   0.   0.   0.   0.12 0.19 0.19 0.25 0.25 0.31 0.25 0.19 0.25
  0.31 0.12]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.25 0.25 0.25 0.25 0.12 0.25
  0.31 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.31 0.19 0.25 0.19 0.25
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.12 0.06 0.12 0.06
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.06 0.25 0.06
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.19 0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1.  1.]
select_j_column
[ 0.  1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.  0. -1. -1.  0.  0.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.  1.  0.  1.  0.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({0.0: 42, 1.0: 14})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 56})
3 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
4 classifiers pre label
Counter({0.0: 52, 1.0: 4})
5 classifiers pre label
Counter({0.0: 38, 1.0: 18})
6 classifiers pre label
Counter({1.0: 31, -1.0: 13, 0.0: 12})
7 classifiers pre label
Counter({0.0: 40, 1.0: 16})
8 classifiers pre label
Counter({-1.0: 40, 1.0: 10, 0.0: 6})
9 classifiers pre label
Counter({0.0: 42, -1.0: 12, 1.0: 2})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
12 classifiers pre label
Counter({0.0: 38, 1.0: 18})
13 classifiers pre label
Counter({-1.0: 54, 0.0: 2})
14 classifiers pre label
Counter({-1.0: 56})
15 classifiers pre label
Counter({0.0: 40, 1.0: 15, -1.0: 1})
16 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 5  1  0  1  0]
 [ 6  1  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  2.4 2.4 2.2 3. ]
 [0.  0.  2.8 2.2 2. ]
 [0.  0.  0.  2.8 2.2]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.18 0.12 0.18 0.12 0.24 0.18 0.18 0.12 0.18 0.24 0.06 0.24
  0.24 0.12 0.12]
 [0.   0.   0.06 0.12 0.24 0.18 0.12 0.18 0.24 0.24 0.06 0.18 0.06 0.18
  0.18 0.12 0.12]
 [0.   0.   0.   0.18 0.29 0.24 0.18 0.12 0.18 0.18 0.   0.12 0.12 0.12
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.18 0.06 0.12 0.12 0.24 0.24 0.18 0.18 0.06 0.18
  0.24 0.06 0.12]
 [0.   0.   0.   0.   0.   0.12 0.18 0.18 0.24 0.24 0.29 0.24 0.18 0.24
  0.29 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.24 0.24 0.24 0.24 0.12 0.24
  0.29 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.29 0.18 0.24 0.18 0.24
  0.24 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.12 0.06 0.12 0.06
  0.18 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.06 0.24 0.06
  0.18 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.18 0.24
  0.12 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.18 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})

**********      classifier acc  **************
[0.263, 0.821, 0.875, 0.308, 0.1, 0.308, 0.723, 0.316, 0.786, 0.211, 0.875, 0.735, 0.269, 0.735, 0.821, 0.211, 0.423]
before cutting matrix
[[ 0.  1.  1.  0.  0.  0.  1.  0. -1.  0.  1. -1.  0. -1. -1.  0.  0.]
 [ 1.  1.  1.  1.  0.  1.  0.  1.  1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 0. -1. -1. -1.  1.  1. -1. -1.  0.  0. -1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0. -1. -1.  0.  0.  1.  1.  0.  1.  0.  1.  0.  1.]
 [-1. -1.  1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({-1.0: 42, 1.0: 31})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 46, -1.0: 27})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 46, -1.0: 27})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 93, -1.0: 42})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 93, -1.0: 42})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({1.0: 37, -1.0: 15})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 37, -1.0: 15})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({-1.0: 93, 1.0: 37})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({-1.0: 31, 1.0: 27})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({-1.0: 108, 1.0: 37})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 108, 1.0: 37})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({-1.0: 108, 1.0: 37})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 139, 1.0: 27})
Counter({1.0: 31, -1.0: 21})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 139, 1.0: 27})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 31, -1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 139, 1.0: 27})
Counter({-1.0: 52, 1.0: 21})
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 139, 1.0: 27})
positive and negative ratio
Counter({-1.0: 52, 1.0: 21})
after cutting matrix
[[ 0.  1.  1.  0. -1.  0.  1. -1.]
 [ 1.  1.  1.  0.  1. -1.  1. -1.]
 [ 0. -1. -1.  1.  0.  0. -1. -1.]
 [ 1.  1.  1.  0.  0.  1.  1.  1.]
 [-1. -1.  1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 52, -1.0: 6})
Counter({1.0: 145, -1.0: 21})
Counter({1.0: 151, -1.0: 15})
Counter({1.0: 15, -1.0: 6})
Counter({-1.0: 93, 1.0: 37})
Counter({-1.0: 31, 1.0: 27})
Counter({1.0: 151, -1.0: 15})
Counter({-1.0: 139, 1.0: 27})
cutting matrix's confusion matrix
[[30  0  0  0  0]
 [ 7  2  0  0  0]
 [ 6  1  0  0  0]
 [ 1  6  0  0  0]
 [ 1  2  0  0  0]]


SVM classifier
Time: 2019-01-09 23:12:41
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1. -1. -1.]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({1.0: 47, -1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  1  0  0]
 [15  0  0  0  0  0]
 [ 1  0  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0 15  0  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 0  1  0  3  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 13 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 34 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 50 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
ERROR-F1: the denominator of the 65 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1.  1. -1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 11  1  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 0  0  1  2  0  1]]
row HD
[[0.   0.33 0.17 0.33 0.33 0.5 ]
 [0.   0.   0.17 0.33 0.33 0.17]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 11  1  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  2  0  1]]
row HD
[[0.   0.5  0.33 0.5  0.5  0.5 ]
 [0.   0.   0.17 0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.75 0.75]
 [0.   0.   0.75 0.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 11  1  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   0.67 0.5  0.67 0.67 0.5 ]
 [0.   0.   0.17 0.33 0.33 0.5 ]
 [0.   0.   0.   0.17 0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.6 0.6 0.6]
 [0.  0.  0.6 0.2 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   0.83 0.5  0.83 0.83 0.67]
 [0.   0.   0.33 0.33 0.33 0.5 ]
 [0.   0.   0.   0.33 0.33 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.5  0.5  0.5  0.17]
 [0.   0.   0.5  0.17 0.17 0.83]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.   0.67 1.   1.   0.67]
 [0.   0.   0.33 0.33 0.33 0.67]
 [0.   0.   0.   0.33 0.33 1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.43 0.43 0.43 0.14 0.43]
 [0.   0.   0.43 0.14 0.14 0.71 0.14]
 [0.   0.   0.   0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.57 0.  ]
 [0.   0.   0.   0.   0.   0.57 0.  ]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1. -1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.17 0.67 1.17 1.17 0.67]
 [0.   0.   0.5  0.33 0.33 0.83]
 [0.   0.   0.   0.5  0.5  1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.38 0.38 0.38 0.12 0.38 0.25]
 [0.   0.   0.38 0.12 0.12 0.62 0.12 0.5 ]
 [0.   0.   0.   0.25 0.25 0.25 0.25 0.38]
 [0.   0.   0.   0.   0.   0.5  0.   0.62]
 [0.   0.   0.   0.   0.   0.5  0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.5  0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.17 0.83 1.17 1.17 0.83]
 [0.   0.   0.67 0.33 0.33 1.  ]
 [0.   0.   0.   0.67 0.67 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.44 0.33 0.33 0.33 0.11 0.33 0.22 0.33]
 [0.   0.   0.33 0.11 0.11 0.56 0.11 0.44 0.33]
 [0.   0.   0.   0.22 0.22 0.22 0.22 0.33 0.44]
 [0.   0.   0.   0.   0.   0.44 0.   0.56 0.44]
 [0.   0.   0.   0.   0.   0.44 0.   0.56 0.44]
 [0.   0.   0.   0.   0.   0.   0.44 0.11 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.33 0.83 1.33 1.33 0.83]
 [0.   0.   0.83 0.33 0.33 1.17]
 [0.   0.   0.   0.83 0.83 1.  ]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.3 0.3 0.3 0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.3 0.1 0.1 0.5 0.1 0.4 0.3 0.4]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.4 0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.4 0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.5  0.83 1.5  1.5  0.83]
 [0.   0.   1.   0.33 0.33 1.33]
 [0.   0.   0.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.36 0.27 0.27 0.27 0.09 0.27 0.18 0.27 0.18 0.18]
 [0.   0.   0.27 0.09 0.09 0.45 0.09 0.36 0.27 0.36 0.36]
 [0.   0.   0.   0.18 0.18 0.18 0.18 0.27 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.   0.36 0.   0.45 0.36 0.45 0.45]
 [0.   0.   0.   0.   0.   0.36 0.   0.45 0.36 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.36 0.09 0.18 0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.36 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.67 1.   1.67 1.67 1.  ]
 [0.   0.   1.   0.33 0.33 1.33]
 [0.   0.   0.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.25 0.25 0.25 0.08 0.25 0.17 0.25 0.17 0.17 0.33]
 [0.   0.   0.25 0.08 0.08 0.42 0.08 0.33 0.25 0.33 0.33 0.  ]
 [0.   0.   0.   0.17 0.17 0.17 0.17 0.25 0.33 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.33 0.   0.42 0.33 0.42 0.42 0.08]
 [0.   0.   0.   0.   0.   0.33 0.   0.42 0.33 0.42 0.42 0.08]
 [0.   0.   0.   0.   0.   0.   0.33 0.08 0.17 0.08 0.08 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.33 0.42 0.42 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
12 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.83 1.17 1.83 1.83 1.  ]
 [0.   0.   1.   0.33 0.33 1.5 ]
 [0.   0.   0.   1.   1.   1.17]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.31 0.23 0.23 0.23 0.08 0.23 0.15 0.23 0.15 0.15 0.31 0.23]
 [0.   0.   0.23 0.08 0.08 0.38 0.08 0.31 0.23 0.31 0.31 0.   0.08]
 [0.   0.   0.   0.15 0.15 0.15 0.15 0.23 0.31 0.23 0.23 0.23 0.15]
 [0.   0.   0.   0.   0.   0.31 0.   0.38 0.31 0.38 0.38 0.08 0.  ]
 [0.   0.   0.   0.   0.   0.31 0.   0.38 0.31 0.38 0.38 0.08 0.  ]
 [0.   0.   0.   0.   0.   0.   0.31 0.08 0.15 0.08 0.08 0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.31 0.38 0.38 0.08 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.   0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.08 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
12 classifiers pre label
Counter({1.0: 45, -1.0: 22})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   1.83 1.33 1.83 1.83 1.17]
 [0.   0.   1.17 0.33 0.33 1.67]
 [0.   0.   0.   1.17 1.17 1.17]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.21 0.21 0.21 0.07 0.21 0.14 0.21 0.14 0.14 0.29 0.21 0.21]
 [0.   0.   0.21 0.07 0.07 0.36 0.07 0.29 0.21 0.29 0.29 0.   0.07 0.21]
 [0.   0.   0.   0.14 0.14 0.14 0.14 0.21 0.29 0.21 0.21 0.21 0.14 0.29]
 [0.   0.   0.   0.   0.   0.29 0.   0.36 0.29 0.36 0.36 0.07 0.   0.29]
 [0.   0.   0.   0.   0.   0.29 0.   0.36 0.29 0.36 0.36 0.07 0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.07 0.14 0.07 0.07 0.36 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.29 0.36 0.36 0.07 0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.   0.   0.29 0.36 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.21 0.29 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
12 classifiers pre label
Counter({1.0: 45, -1.0: 22})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
14 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   2.   1.5  2.   2.   1.17]
 [0.   0.   1.17 0.33 0.33 1.83]
 [0.   0.   0.   1.17 1.17 1.33]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   1.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.27 0.2  0.2  0.2  0.07 0.2  0.13 0.2  0.13 0.13 0.27 0.2  0.2
  0.2 ]
 [0.   0.   0.2  0.07 0.07 0.33 0.07 0.27 0.2  0.27 0.27 0.   0.07 0.2
  0.07]
 [0.   0.   0.   0.13 0.13 0.13 0.13 0.2  0.27 0.2  0.2  0.2  0.13 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.27 0.   0.33 0.27 0.33 0.33 0.07 0.   0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.27 0.   0.33 0.27 0.33 0.33 0.07 0.   0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.27 0.07 0.13 0.07 0.07 0.33 0.27 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.27 0.33 0.33 0.07 0.   0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.   0.   0.27 0.33 0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.07 0.2  0.27 0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1.  1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:10,large_class sample len:191
cluster len:22
cluster contain small sample len:[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
12 classifiers pre label
Counter({1.0: 45, -1.0: 22})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
14 classifiers pre label
Counter({1.0: 45, -1.0: 22})
15 classifiers pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 3  0  0  0  0  1]]
row HD
[[0.   2.   1.5  2.   2.   1.33]
 [0.   0.   1.17 0.33 0.33 2.  ]
 [0.   0.   0.   1.17 1.17 1.5 ]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.19 0.19 0.19 0.06 0.19 0.12 0.19 0.12 0.12 0.25 0.19 0.19
  0.19 0.12]
 [0.   0.   0.19 0.06 0.06 0.31 0.06 0.25 0.19 0.25 0.25 0.   0.06 0.19
  0.06 0.12]
 [0.   0.   0.   0.12 0.12 0.12 0.12 0.19 0.25 0.19 0.19 0.19 0.12 0.25
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.25 0.   0.31 0.25 0.31 0.31 0.06 0.   0.25
  0.   0.06]
 [0.   0.   0.   0.   0.   0.25 0.   0.31 0.25 0.31 0.31 0.06 0.   0.25
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.25 0.06 0.12 0.06 0.06 0.31 0.25 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.25 0.31 0.31 0.06 0.   0.25
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.   0.   0.25 0.31 0.06
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.19 0.25 0.
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.06
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.06
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
12 classifiers pre label
Counter({1.0: 45, -1.0: 22})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
14 classifiers pre label
Counter({1.0: 45, -1.0: 22})
15 classifiers pre label
Counter({1.0: 67})
16 classifiers pre label
Counter({1.0: 49, -1.0: 18})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   2.17 1.67 2.17 2.17 1.5 ]
 [0.   0.   1.17 0.33 0.33 2.  ]
 [0.   0.   0.   1.17 1.17 1.5 ]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.24 0.18 0.18 0.18 0.06 0.18 0.12 0.18 0.12 0.12 0.24 0.18 0.18
  0.18 0.12 0.24]
 [0.   0.   0.18 0.06 0.06 0.29 0.06 0.24 0.18 0.24 0.24 0.   0.06 0.18
  0.06 0.12 0.  ]
 [0.   0.   0.   0.12 0.12 0.12 0.12 0.18 0.24 0.18 0.18 0.18 0.12 0.24
  0.12 0.06 0.18]
 [0.   0.   0.   0.   0.   0.24 0.   0.29 0.24 0.29 0.29 0.06 0.   0.24
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.24 0.   0.29 0.24 0.29 0.29 0.06 0.   0.24
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.24 0.06 0.12 0.06 0.06 0.29 0.24 0.12
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.24 0.29 0.29 0.06 0.   0.24
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.   0.   0.24 0.29 0.06
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.18 0.24 0.
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.06
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.06
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18
  0.06 0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 47, -1.0: 20})
1 classifiers pre label
Counter({1.0: 49, -1.0: 18})
2 classifiers pre label
Counter({1.0: 55, -1.0: 12})
3 classifiers pre label
Counter({1.0: 45, -1.0: 22})
4 classifiers pre label
Counter({1.0: 45, -1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 45, -1.0: 22})
7 classifiers pre label
Counter({1.0: 37, -1.0: 30})
8 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
9 classifiers pre label
Counter({1.0: 37, -1.0: 30})
10 classifiers pre label
Counter({1.0: 37, -1.0: 30})
11 classifiers pre label
Counter({1.0: 49, -1.0: 18})
12 classifiers pre label
Counter({1.0: 45, -1.0: 22})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
14 classifiers pre label
Counter({1.0: 45, -1.0: 22})
15 classifiers pre label
Counter({1.0: 67})
16 classifiers pre label
Counter({1.0: 49, -1.0: 18})
17 classifiers pre label
Counter({1.0: 36, -1.0: 31})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  1  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  0  0  3]]
row HD
[[0.   2.17 1.83 2.33 2.33 1.67]
 [0.   0.   1.33 0.5  0.5  2.17]
 [0.   0.   0.   1.17 1.17 1.5 ]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   2.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.22 0.17 0.17 0.17 0.06 0.17 0.11 0.17 0.11 0.11 0.22 0.17 0.17
  0.17 0.11 0.22 0.28]
 [0.   0.   0.17 0.06 0.06 0.28 0.06 0.22 0.17 0.22 0.22 0.   0.06 0.17
  0.06 0.11 0.   0.06]
 [0.   0.   0.   0.11 0.11 0.11 0.11 0.17 0.22 0.17 0.17 0.17 0.11 0.22
  0.11 0.06 0.17 0.11]
 [0.   0.   0.   0.   0.   0.22 0.   0.28 0.22 0.28 0.28 0.06 0.   0.22
  0.   0.06 0.06 0.11]
 [0.   0.   0.   0.   0.   0.22 0.   0.28 0.22 0.28 0.28 0.06 0.   0.22
  0.   0.06 0.06 0.11]
 [0.   0.   0.   0.   0.   0.   0.22 0.06 0.11 0.06 0.06 0.28 0.22 0.11
  0.22 0.17 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.22 0.28 0.28 0.06 0.   0.22
  0.   0.06 0.06 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.   0.   0.22 0.28 0.06
  0.28 0.22 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.06 0.17 0.22 0.
  0.22 0.28 0.17 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.28 0.06
  0.28 0.22 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.28 0.06
  0.28 0.22 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.17
  0.06 0.11 0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.   0.06 0.06 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.28 0.17 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.06 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.11 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})

**********      classifier acc  **************
[0.955, 1.0, 0.925, 1.0, 1.0, 1.0, 1.0, 1.0, 0.925, 1.0, 1.0, 1.0, 1.0, 0.925, 1.0, 0.94, 1.0, 0.97]
before cutting matrix
[[ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 136, -1.0: 65})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 153, 1.0: 48})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 191, -1.0: 10})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 191, -1.0: 10})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 103, -1.0: 98})
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 141, -1.0: 60})
positive and negative ratio
Counter({1.0: 103, -1.0: 98})
after cutting matrix
[[-1. -1. -1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({-1.0: 103, 1.0: 98})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 108, -1.0: 93})
Counter({1.0: 141, -1.0: 60})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 131, -1.0: 70})
Counter({1.0: 141, -1.0: 60})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0  0  0  0  4]]


SVM classifier
Time: 2019-01-09 23:12:46
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1. -1.  0.]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({-1.0: 65, 0.0: 2})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: None}
select_i_column
[ 1. -1.  0.  0.  0.  0.]
select_j_column
[-1. -1. -1.  1. -1.  0.]
most_cplx_inx
2
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1.  0.]
 [-1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 0.  0.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
confusion matrix
[[17  0  1  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0 10  0  0  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.17 0.17 0.33 0.17 0.17]
 [0.   0.   0.17 0.17 0.17 0.33]
 [0.   0.   0.   0.33 0.   0.33]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 0.  1. -1.  1. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0. -1.]
most_cplx_inx
4
ERROR-F1: the denominator of the 9 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 24 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 27 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 47 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 50 dimension of F1 is zero!
ERROR-F1: the denominator of the 51 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 53 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  0.  0.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 0.  0. -1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
confusion matrix
[[17  0  1  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0 10  0  0  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.33 0.33 0.5  0.33 0.33]
 [0.   0.   0.33 0.17 0.33 0.5 ]
 [0.   0.   0.   0.5  0.   0.33]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 1.  ]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0.  0. -1.  0. -1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1.  0.  0.  1.]
 [-1.  1.  1.  0.]
 [-1. -1. -1.  0.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 0.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 2  0  0  0  0  2]]
row HD
[[0.   0.5  0.5  0.67 0.33 0.33]
 [0.   0.   0.33 0.33 0.5  0.67]
 [0.   0.   0.   0.67 0.17 0.5 ]
 [0.   0.   0.   0.   0.67 0.67]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.75 1.5 ]
 [0.   0.   0.25 1.5 ]
 [0.   0.   0.   1.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1. -1.  0.]
select_j_column
[ 0.  1. -1.  1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 57 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:29,large_class sample len:172
cluster len:22
cluster contain small sample len:[0.5, 0.8333333333333334, 0.6428571428571429, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.36363636363636365, 0.0, 0.0, 0.21428571428571427, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1.]
 [-1. -1. -1.  0. -1.]
 [ 1.  1.  1. -1.  1.]
 [-1. -1. -1.  1.  1.]
 [ 0.  0. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
confusion matrix
[[17  0  0  0  1  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  0.67 0.67 0.33 0.5 ]
 [0.   0.   0.5  0.33 0.5  0.83]
 [0.   0.   0.   0.83 0.33 0.5 ]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.4 0.6 1.2 0.8]
 [0.  0.  0.2 1.2 0.6]
 [0.  0.  0.  1.2 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  0.  0. -1.  1.  1.]
select_j_column
[ 1.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.]
 [-1.  1.  1.  0.  1.  0.]
 [-1. -1. -1.  0. -1.  0.]
 [ 1.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1.]
 [ 0.  0. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
5 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 0.83 0.83 0.33 0.5 ]
 [0.   0.   0.5  0.5  0.67 1.  ]
 [0.   0.   0.   1.   0.5  0.67]
 [0.   0.   0.   0.   0.83 1.  ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.5  1.   0.67 1.  ]
 [0.   0.   0.17 1.   0.5  1.  ]
 [0.   0.   0.   1.   0.33 1.  ]
 [0.   0.   0.   0.   0.67 0.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1.  1.  1. -1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.]
 [-1.  1.  1.  0.  1.  0.  0.]
 [-1. -1. -1.  0. -1.  0.  1.]
 [ 1.  1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [ 0.  0. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
5 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
6 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   1.   0.5  0.67]
 [0.   0.   0.67 0.67 0.83 1.17]
 [0.   0.   0.   1.17 0.5  0.83]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.43 0.86 0.57 0.86 0.86]
 [0.   0.   0.14 0.86 0.43 0.86 0.71]
 [0.   0.   0.   0.86 0.29 0.86 0.57]
 [0.   0.   0.   0.   0.57 0.   0.43]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0.  1.  0.  0.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
3
new_column
None


============== iter  8 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.]
 [-1.  1.  1.  0.  1.  0.  0.]
 [-1. -1. -1.  0. -1.  0.  1.]
 [ 1.  1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.]
 [ 0.  0. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
5 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
6 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.   1.   0.5  0.67]
 [0.   0.   0.67 0.67 0.83 1.17]
 [0.   0.   0.   1.17 0.5  0.83]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.29 0.43 0.86 0.57 0.86 0.86]
 [0.   0.   0.14 0.86 0.43 0.86 0.71]
 [0.   0.   0.   0.86 0.29 0.86 0.57]
 [0.   0.   0.   0.   0.57 0.   0.43]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1.  1.  1. -1.]
select_j_column
[ 0.  0. -1. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.]
 [-1.  1.  1.  0.  1.  0.  0.  0.]
 [-1. -1. -1.  0. -1.  0.  1.  1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1.]
 [ 0.  0. -1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
5 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
6 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
7 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
confusion matrix
[[17  0  0  0  1  0]
 [ 1 12  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.67 1.17 1.17 0.67 0.83]
 [0.   0.   0.83 0.83 1.   1.33]
 [0.   0.   0.   1.33 0.5  1.  ]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.38 0.75 0.5  0.75 0.75 0.75]
 [0.   0.   0.12 0.75 0.38 0.75 0.62 0.62]
 [0.   0.   0.   0.75 0.25 0.75 0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0.  1.  0.  0.]
select_j_column
[ 1.  0.  0. -1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.]
 [-1.  1.  1.  0.  1.  0.  0.  0. -1.]
 [-1. -1. -1.  0. -1.  0.  1.  1.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.]
 [ 0.  0. -1.  1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
5 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
6 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
7 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 18, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 0  7  0  0  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   0.83 1.33 1.33 0.83 1.  ]
 [0.   0.   1.   0.83 1.   1.33]
 [0.   0.   0.   1.5  0.67 1.17]
 [0.   0.   0.   0.   1.17 1.  ]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.22 0.33 0.67 0.44 0.67 0.67 0.67 0.44]
 [0.   0.   0.11 0.67 0.33 0.67 0.56 0.56 0.56]
 [0.   0.   0.   0.67 0.22 0.67 0.44 0.44 0.44]
 [0.   0.   0.   0.   0.44 0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.44 0.44 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 0.  0.  0. -1.  1.  1.]
select_j_column
[ 1. -1.  0. -1. -1. -1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 58 dimension of F1 is zero!
ERROR-F1: the denominator of the 59 dimension of F1 is zero!
ERROR-F1: the denominator of the 60 dimension of F1 is zero!
ERROR-F1: the denominator of the 61 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1.  0.  0.  0. -1.  0.]
 [-1. -1. -1.  0. -1.  0.  1.  1.  0.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 0.  0. -1.  1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({-1.0: 65, 0.0: 2})
1 classifiers pre label
Counter({-1.0: 26, 1.0: 22, 0.0: 19})
2 classifiers pre label
Counter({-1.0: 30, 1.0: 20, 0.0: 17})
3 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
4 classifiers pre label
Counter({1.0: 53, -1.0: 14})
5 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
6 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
7 classifiers pre label
Counter({0.0: 33, 1.0: 25, -1.0: 9})
8 classifiers pre label
Counter({-1.0: 35, 1.0: 18, 0.0: 14})
9 classifiers pre label
Counter({1.0: 31, 0.0: 30, -1.0: 6})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]
row HD
[[0.   1.   1.5  1.5  0.83 1.  ]
 [0.   0.   1.   1.   1.17 1.5 ]
 [0.   0.   0.   1.67 0.83 1.33]
 [0.   0.   0.   0.   1.33 1.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.2 0.3 0.6 0.4 0.6 0.6 0.6 0.4 0.6]
 [0.  0.  0.1 0.6 0.3 0.6 0.5 0.5 0.5 0.6]
 [0.  0.  0.  0.6 0.2 0.6 0.4 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.4 0.  0.3 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})

**********      classifier acc  **************
[0.889, 1.0, 1.0, 0.923, 0.925, 0.923, 0.889, 0.889, 1.0, 0.923]
before cutting matrix
[[-1.  0.  0.  1.  1.  1.  0.  0.  1.  1.]
 [-1.  1.  1.  0.  1.  0.  0.  0. -1.  0.]
 [-1. -1. -1.  0. -1.  0.  1.  1.  0.  0.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [ 0.  0. -1.  1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({-1.0: 162, 1.0: 29})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 153, -1.0: 48})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 153, -1.0: 48})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 64, -1.0: 39})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 64, -1.0: 39})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 96, -1.0: 29})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
positive and negative ratio
Counter({1.0: 64, -1.0: 39})
after cutting matrix
[[ 0.  0.  1.  1.  1.  1.]
 [ 1.  1.  0.  0. -1.  0.]
 [-1. -1.  0.  0.  0.  0.]
 [ 1.  1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1.  1.]
 [ 0. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 67, -1.0: 64})
Counter({-1.0: 74, 1.0: 67})
Counter({1.0: 96, -1.0: 29})
Counter({1.0: 96, -1.0: 29})
Counter({-1.0: 103, 1.0: 60})
Counter({1.0: 96, -1.0: 29})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  1  0  6  0  0]
 [ 0  0  0  0 10  0]
 [ 0  2  0  0  0  2]]


SVM classifier
Time: 2019-01-09 23:12:49
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({-1.0: 117, 1.0: 71})
confusion matrix
[[14  0  0  3  0  0  0  0  0  0]
 [25  0  0  1  0  0  0  0  0  0]
 [20  0  0  2  0  0  0  0  0  0]
 [ 3  0  0 13  0  0  0  0  0  0]
 [14  0  0  3  0  0  0  0  0  0]
 [ 0  0  0 20  0  0  0  0  0  0]
 [ 7  0  0  8  0  0  0  0  0  0]
 [17  0  0  3  0  0  0  0  0  0]
 [16  0  0  6  0  0  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
confusion matrix
[[12  2  0  1  0  2  0  0  0  0]
 [ 4 21  0  1  0  0  0  0  0  0]
 [17  3  0  2  0  0  0  0  0  0]
 [ 1  2  0 11  0  2  0  0  0  0]
 [13  1  0  3  0  0  0  0  0  0]
 [ 0  0  0  4  0 16  0  0  0  0]
 [ 0  7  0  0  0  8  0  0  0  0]
 [ 1 16  0  2  0  1  0  0  0  0]
 [ 4 12  0  3  0  3  0  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.  0.1 0.  0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.1 0.2 0.1 0.1 0.1 0.  0.  0.2]
 [0.  0.  0.  0.1 0.  0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.2 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1.  1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
confusion matrix
[[11  2  1  1  0  2  0  0  0  0]
 [ 5 20  0  1  0  0  0  0  0  0]
 [ 2  3 15  2  0  0  0  0  0  0]
 [ 0  2  1 11  0  2  0  0  0  0]
 [13  1  0  3  0  0  0  0  0  0]
 [ 0  0  0  4  0 15  1  0  0  0]
 [ 1  6  0  0  0  2  6  0  0  0]
 [ 1 16  0  2  0  1  0  0  0  0]
 [ 2 12  2  3  0  1  2  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.  0.2 0.3 0.2 0.2 0.1]
 [0.  0.  0.1 0.3 0.2 0.2 0.1 0.  0.  0.3]
 [0.  0.  0.  0.2 0.1 0.3 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.  ]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1.  1.  1.]
 [ 1.  1.  1. -1.]
 [ 1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
confusion matrix
[[11  2  1  1  0  2  0  0  0  0]
 [ 4 21  0  1  0  0  0  0  0  0]
 [ 2  3 15  2  0  0  0  0  0  0]
 [ 0  2  1 11  0  2  0  0  0  0]
 [13  1  0  3  0  0  0  0  0  0]
 [ 0  0  0  4  0 15  1  0  0  0]
 [ 1  6  0  0  0  2  6  0  0  0]
 [ 1 16  0  2  0  1  0  0  0  0]
 [ 2 12  2  3  0  1  2  0  0  0]
 [ 1  0  0 12  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.2 0.  0.3 0.3 0.3 0.3 0.2]
 [0.  0.  0.2 0.3 0.3 0.2 0.2 0.  0.  0.3]
 [0.  0.  0.  0.3 0.1 0.4 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.75 1.5 ]
 [0.   0.   2.   1.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[12  2  1  1  0  1  0  0  0  0]
 [ 0 20  0  4  1  1  0  0  0  0]
 [ 0  2 15  4  0  0  0  1  0  0]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  1  0  6  9  0  0  0  0  0]
 [ 0  0  0  4  0 15  1  0  0  0]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  3  1  2  0  1  0 12  0  0]
 [ 3  8  2  3  0  1  2  3  0  0]
 [ 0  0  0 13  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.1 0.4 0.4 0.4 0.3 0.3]
 [0.  0.  0.3 0.4 0.4 0.3 0.3 0.1 0.  0.4]
 [0.  0.  0.  0.3 0.1 0.4 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.4 0. ]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.6 1.2 1.4]
 [0.  0.  1.6 1.4 0.8]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
confusion matrix
[[12  2  1  0  0  1  0  0  0  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  3 15  2  0  0  0  0  0  2]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  0  6  8  0  0  0  0  0]
 [ 0  0  0  2  0 15  1  0  0  2]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  4  1  2  0  1  0 11  0  0]
 [ 3 11  2  0  0  1  2  0  0  3]
 [ 0  0  0  4  0  0  0  0  0  9]]
row HD
[[0.  0.3 0.2 0.4 0.2 0.5 0.4 0.5 0.3 0.3]
 [0.  0.  0.3 0.5 0.5 0.4 0.3 0.2 0.  0.4]
 [0.  0.  0.  0.4 0.2 0.5 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.4 0.3 0.5 0.1]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.5  1.   1.17 1.  ]
 [0.   0.   1.33 1.17 0.67 0.83]
 [0.   0.   0.   0.83 1.   1.17]
 [0.   0.   0.   0.   0.83 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
confusion matrix
[[12  2  1  0  0  1  0  0  0  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  3 15  2  0  0  0  0  0  2]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  0  6  8  0  0  0  0  0]
 [ 0  0  0  2  0 15  1  0  0  2]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  4  0  2  0  1  1 11  0  0]
 [ 3 11  2  0  0  1  2  0  0  3]
 [ 0  0  0  4  0  0  0  0  0  9]]
row HD
[[0.  0.4 0.2 0.4 0.2 0.5 0.5 0.6 0.4 0.3]
 [0.  0.  0.4 0.6 0.6 0.5 0.3 0.2 0.  0.5]
 [0.  0.  0.  0.4 0.2 0.5 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.5 0.4 0.6 0.1]
 [0.  0.  0.  0.  0.  0.3 0.5 0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.43 0.86 1.   0.86 0.86]
 [0.   0.   1.14 1.   0.57 0.71 0.14]
 [0.   0.   0.   0.71 0.86 1.   1.29]
 [0.   0.   0.   0.   0.71 0.57 0.86]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
confusion matrix
[[12  2  1  1  0  1  0  0  0  0]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  3 15  2  0  0  0  0  0  2]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 2  1  0  6  8  0  0  0  0  0]
 [ 0  0  0  4  0 15  1  0  0  0]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2 11  3  3  0  1  2  0  0  0]
 [ 0  0  0 11  0  0  0  0  0  2]]
row HD
[[0.  0.4 0.3 0.4 0.2 0.5 0.6 0.6 0.4 0.4]
 [0.  0.  0.5 0.6 0.6 0.5 0.4 0.2 0.  0.6]
 [0.  0.  0.  0.5 0.3 0.6 0.3 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.2 0.1 0.6 0.4 0.6 0.2]
 [0.  0.  0.  0.  0.  0.3 0.6 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.38 0.75 0.88 0.75 0.75 0.88]
 [0.   0.   1.   0.88 0.5  0.62 0.12 0.5 ]
 [0.   0.   0.   0.62 0.75 0.88 1.12 0.5 ]
 [0.   0.   0.   0.   0.62 0.5  0.75 0.88]
 [0.   0.   0.   0.   0.   0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.5  0.88]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
confusion matrix
[[12  2  1  0  0  1  0  0  0  1]
 [ 1 20  0  1  4  0  0  0  0  0]
 [ 0  3 15  2  0  0  0  0  0  2]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  0  3 11  0  0  0  0  0]
 [ 0  0  0  2  0 15  1  0  0  2]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  5  0  2  0  1  0 11  0  0]
 [ 2 11  3  0  0  1  2  0  0  3]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.4 0.3 0.5 0.2 0.6 0.6 0.7 0.4 0.4]
 [0.  0.  0.5 0.7 0.6 0.6 0.4 0.3 0.  0.6]
 [0.  0.  0.  0.6 0.3 0.7 0.3 0.6 0.5 0.3]
 [0.  0.  0.  0.  0.3 0.1 0.7 0.4 0.7 0.3]
 [0.  0.  0.  0.  0.  0.4 0.6 0.5 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.33 0.67 0.78 0.67 0.67 0.78 0.33]
 [0.   0.   0.89 0.78 0.44 0.56 0.11 0.44 0.44]
 [0.   0.   0.   0.56 0.67 0.78 1.   0.44 0.44]
 [0.   0.   0.   0.   0.56 0.44 0.67 0.78 0.78]
 [0.   0.   0.   0.   0.   0.33 0.33 0.44 0.67]
 [0.   0.   0.   0.   0.   0.   0.44 0.78 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
confusion matrix
[[12  2  1  0  0  1  0  0  0  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  3 15  2  0  0  0  0  0  2]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  0  5  8  0  0  0  0  1]
 [ 0  0  0  2  0 15  1  0  0  2]
 [ 1  3  3  0  0  2  6  0  0  0]
 [ 1  4  0  2  0  1  1 11  0  0]
 [ 2 11  3  0  0  1  2  0  0  3]
 [ 0  0  0  4  0  0  0  0  0  9]]
row HD
[[0.  0.5 0.3 0.6 0.2 0.7 0.6 0.8 0.5 0.5]
 [0.  0.  0.6 0.7 0.7 0.6 0.5 0.3 0.  0.6]
 [0.  0.  0.  0.7 0.3 0.8 0.3 0.7 0.6 0.4]
 [0.  0.  0.  0.  0.4 0.1 0.8 0.4 0.7 0.3]
 [0.  0.  0.  0.  0.  0.5 0.6 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.3 0.6 0.7 0.6 0.6 0.7 0.3 0.6]
 [0.  0.  0.8 0.7 0.4 0.5 0.1 0.4 0.4 0.7]
 [0.  0.  0.  0.5 0.6 0.7 0.9 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.6 0.7 0.7 0. ]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.7 0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:57,large_class sample len:505
cluster len:280
cluster contain small sample len:[1.0, 1.0, 0.14285714285714285, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.16666666666666666, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2222222222222222, 1.0, 1.0, 1.0, 1.0, 1.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14285714285714285, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1111111111111111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5555555555555556, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2222222222222222, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
after change column[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  1 15  2  0  0  0  0  2  2]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  0  5  8  0  0  0  0  1]
 [ 0  0  0  2  0 15  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  4  0  2  0  1  1 11  0  0]
 [ 2  2  3  0  0  1  2  0  9  3]
 [ 0  0  0  4  0  0  0  0  0  9]]
row HD
[[0.  0.5 0.4 0.6 0.2 0.7 0.6 0.8 0.6 0.5]
 [0.  0.  0.7 0.7 0.7 0.6 0.5 0.3 0.1 0.6]
 [0.  0.  0.  0.8 0.4 0.9 0.4 0.8 0.6 0.5]
 [0.  0.  0.  0.  0.4 0.1 0.8 0.4 0.8 0.3]
 [0.  0.  0.  0.  0.  0.5 0.6 0.6 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.27 0.55 0.64 0.55 0.55 0.64 0.27 0.55 0.55]
 [0.   0.   0.73 0.64 0.36 0.45 0.09 0.36 0.36 0.64 0.45]
 [0.   0.   0.   0.45 0.55 0.64 0.82 0.36 0.36 0.45 0.64]
 [0.   0.   0.   0.   0.45 0.36 0.55 0.64 0.64 0.   0.36]
 [0.   0.   0.   0.   0.   0.27 0.27 0.36 0.55 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.36 0.64 0.82 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.45 0.55 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  1 16  2  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 1  1  0  5 10  0  0  0  0  0]
 [ 0  0  0  3  0 14  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  2  3  0  0  1  2  0  9  3]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.5 0.5 0.6 0.3 0.8 0.7 0.8 0.7 0.5]
 [0.  0.  0.8 0.7 0.8 0.7 0.6 0.3 0.2 0.6]
 [0.  0.  0.  0.9 0.4 0.9 0.4 0.9 0.6 0.6]
 [0.  0.  0.  0.  0.5 0.2 0.9 0.4 0.9 0.3]
 [0.  0.  0.  0.  0.  0.5 0.6 0.7 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.25 0.5  0.58 0.5  0.5  0.58 0.25 0.5  0.5  0.42]
 [0.   0.   0.67 0.58 0.33 0.42 0.08 0.33 0.33 0.58 0.42 0.5 ]
 [0.   0.   0.   0.42 0.5  0.58 0.75 0.33 0.33 0.42 0.58 0.33]
 [0.   0.   0.   0.   0.42 0.33 0.5  0.58 0.58 0.   0.33 0.58]
 [0.   0.   0.   0.   0.   0.25 0.25 0.33 0.5  0.42 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.33 0.58 0.75 0.33 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.5  0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.58 0.58 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
confusion matrix
[[13  0  0  1  0  0  0  0  2  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 1  0 16  2  0  0  0  0  2  1]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 1  0  0  5 10  0  0  0  1  0]
 [ 0  0  0  3  0 14  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 2  4  0  3  0  0  0 11  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  4  0  0  0  0  0  9]]
row HD
[[0.  0.6 0.5 0.7 0.3 0.9 0.8 0.8 0.7 0.6]
 [0.  0.  0.9 0.7 0.9 0.7 0.6 0.4 0.3 0.6]
 [0.  0.  0.  1.  0.4 1.  0.5 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.6 0.2 0.9 0.5 1.  0.3]
 [0.  0.  0.  0.  0.  0.6 0.7 0.7 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.23 0.46 0.54 0.46 0.46 0.54 0.23 0.46 0.46 0.38 0.69]
 [0.   0.   0.62 0.54 0.31 0.38 0.08 0.31 0.31 0.54 0.38 0.46 0.46]
 [0.   0.   0.   0.38 0.46 0.54 0.69 0.31 0.31 0.38 0.54 0.31 0.46]
 [0.   0.   0.   0.   0.38 0.31 0.46 0.54 0.54 0.   0.31 0.54 0.23]
 [0.   0.   0.   0.   0.   0.23 0.23 0.31 0.46 0.38 0.23 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.31 0.54 0.69 0.31 0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.46 0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.54 0.54 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.38 0.31 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.54 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 1  0 16  1  0  1  0  0  2  1]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 1  0  0  1 14  0  0  0  1  0]
 [ 0  0  0  1  0 18  1  0  0  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 2  4  0  2  0  1  0 11  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  2  2  6  0  0  0  3]]
row HD
[[0.  0.6 0.5 0.8 0.3 0.9 0.9 0.8 0.7 0.7]
 [0.  0.  0.9 0.8 0.9 0.7 0.7 0.4 0.3 0.7]
 [0.  0.  0.  1.1 0.4 1.  0.6 0.9 0.6 0.8]
 [0.  0.  0.  0.  0.7 0.3 0.9 0.6 1.1 0.3]
 [0.  0.  0.  0.  0.  0.6 0.8 0.7 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.8 0.5 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.21 0.43 0.5  0.43 0.43 0.5  0.21 0.43 0.43 0.36 0.64 0.64]
 [0.   0.   0.57 0.5  0.29 0.36 0.07 0.29 0.29 0.5  0.36 0.43 0.43 0.29]
 [0.   0.   0.   0.36 0.43 0.5  0.64 0.29 0.29 0.36 0.5  0.29 0.43 0.43]
 [0.   0.   0.   0.   0.36 0.29 0.43 0.5  0.5  0.   0.29 0.5  0.21 0.36]
 [0.   0.   0.   0.   0.   0.21 0.21 0.29 0.43 0.36 0.21 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.5  0.64 0.29 0.29 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.43 0.29 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.5  0.5  0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.36 0.29 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.5  0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
select_j_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :2,large_class len:8, small_class sample:104,large_class sample len:458
cluster len:272
cluster contain small sample len:[1.0, 0.5714285714285714, 1.0, 0.75, 1.0, 1.0, 0.8571428571428571, 1.0, 1.0, 1.0, 1.0, 0.36363636363636365, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 0.5, 0.5, 0.2, 0.5, 1.0, 1.0, 0.3333333333333333, 1.0, 0.75, 1.0, 0.2857142857142857, 1.0, 1.0, 0.8, 0.5, 1.0, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.2222222222222222, 0.0, 0.2, 0.0, 0.0, 0.0, 0.25, 0.0, 0.25, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14285714285714285, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.14285714285714285, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0]
before change column[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
after change column[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 1 20  0  4  0  1  0  0  0  0]
 [ 0  1 16  3  0  0  0  0  2  0]
 [ 0  0  1 12  0  1  0  2  0  0]
 [ 2  0  0  1 10  3  0  0  1  0]
 [ 0  0  0  1  0 18  1  0  0  0]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  2  1  7  0  0  0  3]]
row HD
[[0.  0.7 0.6 0.9 0.4 0.9 1.  0.9 0.8 0.7]
 [0.  0.  0.9 0.8 0.9 0.8 0.7 0.4 0.3 0.8]
 [0.  0.  0.  1.1 0.4 1.1 0.6 0.9 0.6 0.9]
 [0.  0.  0.  0.  0.7 0.4 0.9 0.6 1.1 0.4]
 [0.  0.  0.  0.  0.  0.7 0.8 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.9 0.6 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.2  0.4  0.47 0.4  0.4  0.47 0.2  0.4  0.4  0.33 0.6  0.6
  0.2 ]
 [0.   0.   0.53 0.47 0.27 0.33 0.07 0.27 0.27 0.47 0.33 0.4  0.4  0.27
  0.4 ]
 [0.   0.   0.   0.33 0.4  0.47 0.6  0.27 0.27 0.33 0.47 0.27 0.4  0.4
  0.13]
 [0.   0.   0.   0.   0.33 0.27 0.4  0.47 0.47 0.   0.27 0.47 0.2  0.33
  0.33]
 [0.   0.   0.   0.   0.   0.2  0.2  0.27 0.4  0.33 0.2  0.27 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.27 0.47 0.6  0.27 0.27 0.33 0.33 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.4  0.27 0.33 0.33 0.33
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.47 0.47 0.27 0.27 0.13
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.33 0.27 0.4  0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.47 0.2  0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.2  0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 1 20  0  4  1  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 12  0  0  0  2  0  1]
 [ 2  1  0  1 12  1  0  0  0  0]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.7 0.7 1.  0.4 1.  1.1 0.9 0.9 0.7]
 [0.  0.  1.  0.9 0.9 0.9 0.8 0.4 0.4 0.8]
 [0.  0.  0.  1.1 0.5 1.1 0.6 1.  0.6 1. ]
 [0.  0.  0.  0.  0.8 0.4 0.9 0.7 1.1 0.5]
 [0.  0.  0.  0.  0.  0.8 0.9 0.7 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.9 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.19 0.38 0.44 0.38 0.38 0.44 0.19 0.38 0.38 0.31 0.56 0.56
  0.19 0.44]
 [0.   0.   0.5  0.44 0.25 0.31 0.06 0.25 0.25 0.44 0.31 0.38 0.38 0.25
  0.38 0.38]
 [0.   0.   0.   0.31 0.38 0.44 0.56 0.25 0.25 0.31 0.44 0.25 0.38 0.38
  0.12 0.25]
 [0.   0.   0.   0.   0.31 0.25 0.38 0.44 0.44 0.   0.25 0.44 0.19 0.31
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.19 0.19 0.25 0.38 0.31 0.19 0.25 0.25 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.44 0.56 0.25 0.25 0.31 0.31 0.31
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.38 0.25 0.31 0.31 0.31
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.44 0.44 0.25 0.25 0.12
  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.31 0.25 0.38 0.38
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.44 0.19 0.31
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.19 0.31
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 12  0  0  0  2  0  1]
 [ 2  1  0  0 11  3  0  0  0  0]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  1  0  0  0  9]]
row HD
[[0.  0.8 0.7 1.  0.5 1.  1.2 0.9 1.  0.7]
 [0.  0.  1.1 1.  0.9 1.  0.8 0.5 0.4 0.9]
 [0.  0.  0.  1.1 0.6 1.1 0.7 1.  0.7 1. ]
 [0.  0.  0.  0.  0.9 0.4 1.  0.7 1.2 0.5]
 [0.  0.  0.  0.  0.  0.9 0.9 0.8 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  1.  0.7 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.18 0.35 0.41 0.35 0.35 0.41 0.18 0.35 0.35 0.29 0.53 0.53
  0.18 0.41 0.35]
 [0.   0.   0.47 0.41 0.24 0.29 0.06 0.24 0.24 0.41 0.29 0.35 0.35 0.24
  0.35 0.35 0.18]
 [0.   0.   0.   0.29 0.35 0.41 0.53 0.24 0.24 0.29 0.41 0.24 0.35 0.35
  0.12 0.24 0.41]
 [0.   0.   0.   0.   0.29 0.24 0.35 0.41 0.41 0.   0.24 0.41 0.18 0.29
  0.29 0.29 0.24]
 [0.   0.   0.   0.   0.   0.18 0.18 0.24 0.35 0.29 0.18 0.24 0.24 0.24
  0.24 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.24 0.41 0.53 0.24 0.24 0.29 0.29 0.29
  0.29 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.35 0.24 0.29 0.29 0.29
  0.41 0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.41 0.41 0.24 0.24 0.12
  0.35 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.29 0.24 0.35 0.35
  0.24 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.41 0.18 0.29
  0.29 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.18 0.29
  0.29 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35
  0.24 0.12 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.35 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  1  2  0]
 [ 0  0  1  9  0  3  0  2  0  1]
 [ 2  0  0  0 13  1  0  0  1  0]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 0  1  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  2  0  0  0  0  9]]
row HD
[[0.  0.9 0.8 1.  0.5 1.1 1.3 1.  1.  0.7]
 [0.  0.  1.1 1.1 1.  1.  0.8 0.5 0.5 1. ]
 [0.  0.  0.  1.2 0.7 1.1 0.7 1.  0.8 1.1]
 [0.  0.  0.  0.  0.9 0.5 1.1 0.8 1.2 0.5]
 [0.  0.  0.  0.  0.  1.  1.  0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  1.  0.7 1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.28 0.17 0.33 0.39 0.33 0.33 0.39 0.17 0.33 0.33 0.28 0.5  0.5
  0.17 0.39 0.33 0.28]
 [0.   0.   0.44 0.39 0.22 0.28 0.06 0.22 0.22 0.39 0.28 0.33 0.33 0.22
  0.33 0.33 0.17 0.44]
 [0.   0.   0.   0.28 0.33 0.39 0.5  0.22 0.22 0.28 0.39 0.22 0.33 0.33
  0.11 0.22 0.39 0.11]
 [0.   0.   0.   0.   0.28 0.22 0.33 0.39 0.39 0.   0.22 0.39 0.17 0.28
  0.28 0.28 0.22 0.28]
 [0.   0.   0.   0.   0.   0.17 0.17 0.22 0.33 0.28 0.17 0.22 0.22 0.22
  0.22 0.22 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.22 0.39 0.5  0.22 0.22 0.28 0.28 0.28
  0.28 0.28 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.28 0.33 0.22 0.28 0.28 0.28
  0.39 0.28 0.11 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.39 0.39 0.22 0.22 0.11
  0.33 0.22 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.28 0.22 0.33 0.33
  0.22 0.33 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.39 0.17 0.28
  0.28 0.28 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.17 0.28
  0.28 0.39 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33
  0.22 0.11 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11
  0.33 0.22 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.22 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
18 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 16  1  0  1  0  1  2  0]
 [ 0  0  1  9  0  3  0  2  0  1]
 [ 2  0  0  1 10  3  0  0  0  1]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  1  0  0  0  9]]
row HD
[[0.  1.  0.9 1.1 0.5 1.2 1.3 1.1 1.1 0.8]
 [0.  0.  1.1 1.1 1.1 1.  0.9 0.5 0.5 1. ]
 [0.  0.  0.  1.2 0.8 1.1 0.8 1.  0.8 1.1]
 [0.  0.  0.  0.  1.  0.5 1.2 0.8 1.2 0.5]
 [0.  0.  0.  0.  0.  1.1 1.  1.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  1.1 0.7 1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.16 0.32 0.37 0.32 0.32 0.37 0.16 0.32 0.32 0.26 0.47 0.47
  0.16 0.37 0.32 0.26 0.26]
 [0.   0.   0.42 0.37 0.21 0.26 0.05 0.21 0.21 0.37 0.26 0.32 0.32 0.21
  0.32 0.32 0.16 0.42 0.21]
 [0.   0.   0.   0.26 0.32 0.37 0.47 0.21 0.21 0.26 0.37 0.21 0.32 0.32
  0.11 0.21 0.37 0.11 0.32]
 [0.   0.   0.   0.   0.26 0.21 0.32 0.37 0.37 0.   0.21 0.37 0.16 0.26
  0.26 0.26 0.21 0.26 0.47]
 [0.   0.   0.   0.   0.   0.16 0.16 0.21 0.32 0.26 0.16 0.21 0.21 0.21
  0.21 0.21 0.16 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.21 0.37 0.47 0.21 0.21 0.26 0.26 0.26
  0.26 0.26 0.21 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.32 0.21 0.26 0.26 0.26
  0.37 0.26 0.11 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.37 0.37 0.21 0.21 0.11
  0.32 0.21 0.26 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.26 0.21 0.32 0.32
  0.21 0.32 0.37 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.37 0.16 0.26
  0.26 0.26 0.21 0.26 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.16 0.26
  0.26 0.37 0.21 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32
  0.21 0.11 0.37 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11
  0.32 0.21 0.26 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.32 0.21 0.26 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.37 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  20 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
18 classifiers pre label
Counter({1.0: 149, -1.0: 39})
19 classifiers pre label
Counter({1.0: 139, -1.0: 49})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  0  0  1 10  1  0  0  0  3]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  0.9 1.1 0.5 1.3 1.4 1.1 1.2 0.8]
 [0.  0.  1.1 1.1 1.1 1.1 1.  0.5 0.6 1. ]
 [0.  0.  0.  1.2 0.8 1.2 0.9 1.  0.9 1.1]
 [0.  0.  0.  0.  1.  0.6 1.3 0.8 1.3 0.5]
 [0.  0.  0.  0.  0.  1.2 1.1 1.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.1 0.8 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.15 0.3  0.35 0.3  0.3  0.35 0.15 0.3  0.3  0.25 0.45 0.45
  0.15 0.35 0.3  0.25 0.25 0.35]
 [0.   0.   0.4  0.35 0.2  0.25 0.05 0.2  0.2  0.35 0.25 0.3  0.3  0.2
  0.3  0.3  0.15 0.4  0.2  0.4 ]
 [0.   0.   0.   0.25 0.3  0.35 0.45 0.2  0.2  0.25 0.35 0.2  0.3  0.3
  0.1  0.2  0.35 0.1  0.3  0.2 ]
 [0.   0.   0.   0.   0.25 0.2  0.3  0.35 0.35 0.   0.2  0.35 0.15 0.25
  0.25 0.25 0.2  0.25 0.45 0.25]
 [0.   0.   0.   0.   0.   0.15 0.15 0.2  0.3  0.25 0.15 0.2  0.2  0.2
  0.2  0.2  0.15 0.2  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.2  0.35 0.45 0.2  0.2  0.25 0.25 0.25
  0.25 0.25 0.2  0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.3  0.2  0.25 0.25 0.25
  0.35 0.25 0.1  0.35 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.35 0.35 0.2  0.2  0.1
  0.3  0.2  0.25 0.2  0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.25 0.2  0.3  0.3
  0.2  0.3  0.35 0.3  0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.35 0.15 0.25
  0.25 0.25 0.2  0.25 0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.15 0.25
  0.25 0.35 0.2  0.25 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3
  0.2  0.1  0.35 0.2  0.2  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1
  0.3  0.2  0.25 0.2  0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.2  0.25 0.3  0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.2  0.35 0.2  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.2  0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1. -1.  1. -1.  1. -1.  1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.  1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
18 classifiers pre label
Counter({1.0: 149, -1.0: 39})
19 classifiers pre label
Counter({1.0: 139, -1.0: 49})
20 classifiers pre label
Counter({1.0: 135, -1.0: 53})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  0  0  1 10  1  0  0  0  3]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.  1.  1.1 0.6 1.3 1.5 1.1 1.2 0.9]
 [0.  0.  1.2 1.1 1.2 1.1 1.1 0.5 0.6 1.1]
 [0.  0.  0.  1.3 0.8 1.3 0.9 1.1 1.  1.1]
 [0.  0.  0.  0.  1.1 0.6 1.4 0.8 1.3 0.6]
 [0.  0.  0.  0.  0.  1.3 1.1 1.1 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  1.2 0.8 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.14 0.29 0.33 0.29 0.29 0.33 0.14 0.29 0.29 0.24 0.43 0.43
  0.14 0.33 0.29 0.24 0.24 0.33 0.29]
 [0.   0.   0.38 0.33 0.19 0.24 0.05 0.19 0.19 0.33 0.24 0.29 0.29 0.19
  0.29 0.29 0.14 0.38 0.19 0.38 0.14]
 [0.   0.   0.   0.24 0.29 0.33 0.43 0.19 0.19 0.24 0.33 0.19 0.29 0.29
  0.1  0.19 0.33 0.1  0.29 0.19 0.24]
 [0.   0.   0.   0.   0.24 0.19 0.29 0.33 0.33 0.   0.19 0.33 0.14 0.24
  0.24 0.24 0.19 0.24 0.43 0.24 0.38]
 [0.   0.   0.   0.   0.   0.14 0.14 0.19 0.29 0.24 0.14 0.19 0.19 0.19
  0.19 0.19 0.14 0.19 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.19 0.33 0.43 0.19 0.19 0.24 0.24 0.24
  0.24 0.24 0.19 0.24 0.24 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.29 0.19 0.24 0.24 0.24
  0.33 0.24 0.1  0.33 0.24 0.33 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.33 0.33 0.19 0.19 0.1
  0.29 0.19 0.24 0.19 0.19 0.19 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.24 0.19 0.29 0.29
  0.19 0.29 0.33 0.29 0.19 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.33 0.14 0.24
  0.24 0.24 0.19 0.24 0.43 0.24 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.14 0.24
  0.24 0.33 0.19 0.24 0.24 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29
  0.19 0.1  0.33 0.19 0.19 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.1
  0.29 0.19 0.24 0.19 0.29 0.19 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.19 0.24 0.29 0.19 0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19 0.33 0.19 0.29 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24 0.19 0.29 0.1  0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.24 0.33 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.19 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.  1. -1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
18 classifiers pre label
Counter({1.0: 149, -1.0: 39})
19 classifiers pre label
Counter({1.0: 139, -1.0: 49})
20 classifiers pre label
Counter({1.0: 135, -1.0: 53})
21 classifiers pre label
Counter({1.0: 107, -1.0: 81})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  0  0  1 10  1  0  0  0  3]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.1 1.1 1.1 0.6 1.3 1.5 1.2 1.3 1. ]
 [0.  0.  1.2 1.2 1.3 1.2 1.2 0.5 0.6 1.1]
 [0.  0.  0.  1.4 0.9 1.4 1.  1.1 1.  1.1]
 [0.  0.  0.  0.  1.1 0.6 1.4 0.9 1.4 0.7]
 [0.  0.  0.  0.  0.  1.3 1.1 1.2 1.3 1.2]
 [0.  0.  0.  0.  0.  0.  1.2 0.9 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.14 0.27 0.32 0.27 0.27 0.32 0.14 0.27 0.27 0.23 0.41 0.41
  0.14 0.32 0.27 0.23 0.23 0.32 0.27 0.32]
 [0.   0.   0.36 0.32 0.18 0.23 0.05 0.18 0.18 0.32 0.23 0.27 0.27 0.18
  0.27 0.27 0.14 0.36 0.18 0.36 0.14 0.18]
 [0.   0.   0.   0.23 0.27 0.32 0.41 0.18 0.18 0.23 0.32 0.18 0.27 0.27
  0.09 0.18 0.32 0.09 0.27 0.18 0.23 0.36]
 [0.   0.   0.   0.   0.23 0.18 0.27 0.32 0.32 0.   0.18 0.32 0.14 0.23
  0.23 0.23 0.18 0.23 0.41 0.23 0.36 0.32]
 [0.   0.   0.   0.   0.   0.14 0.14 0.18 0.27 0.23 0.14 0.18 0.18 0.18
  0.18 0.18 0.14 0.18 0.27 0.27 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.32 0.41 0.18 0.18 0.23 0.23 0.23
  0.23 0.23 0.18 0.23 0.23 0.23 0.27 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.27 0.18 0.23 0.23 0.23
  0.32 0.23 0.09 0.32 0.23 0.32 0.18 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.32 0.32 0.18 0.18 0.09
  0.27 0.18 0.23 0.18 0.18 0.18 0.05 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.23 0.18 0.27 0.27
  0.18 0.27 0.32 0.27 0.18 0.27 0.14 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.32 0.14 0.23
  0.23 0.23 0.18 0.23 0.41 0.23 0.36 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.14 0.23
  0.23 0.32 0.18 0.23 0.23 0.32 0.27 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27
  0.18 0.09 0.32 0.18 0.18 0.09 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09
  0.27 0.18 0.23 0.18 0.27 0.18 0.23 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27 0.18 0.23 0.27 0.18 0.18 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.32 0.18 0.27 0.27 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.23 0.18 0.27 0.09 0.23 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.23 0.32 0.32 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.27 0.18 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.18 0.14 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.23 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.  1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
18 classifiers pre label
Counter({1.0: 149, -1.0: 39})
19 classifiers pre label
Counter({1.0: 139, -1.0: 49})
20 classifiers pre label
Counter({1.0: 135, -1.0: 53})
21 classifiers pre label
Counter({1.0: 107, -1.0: 81})
22 classifiers pre label
Counter({1.0: 132, -1.0: 56})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 1  0  1  1  9  1  0  1  0  3]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.2 1.2 1.2 0.6 1.4 1.5 1.3 1.3 1.1]
 [0.  0.  1.2 1.2 1.4 1.2 1.3 0.5 0.7 1.1]
 [0.  0.  0.  1.4 1.  1.4 1.1 1.1 1.1 1.1]
 [0.  0.  0.  0.  1.2 0.6 1.5 0.9 1.5 0.7]
 [0.  0.  0.  0.  0.  1.4 1.1 1.3 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 0.9 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.13 0.26 0.3  0.26 0.26 0.3  0.13 0.26 0.26 0.22 0.39 0.39
  0.13 0.3  0.26 0.22 0.22 0.3  0.26 0.3  0.17]
 [0.   0.   0.35 0.3  0.17 0.22 0.04 0.17 0.17 0.3  0.22 0.26 0.26 0.17
  0.26 0.26 0.13 0.35 0.17 0.35 0.13 0.17 0.22]
 [0.   0.   0.   0.22 0.26 0.3  0.39 0.17 0.17 0.22 0.3  0.17 0.26 0.26
  0.09 0.17 0.3  0.09 0.26 0.17 0.22 0.35 0.22]
 [0.   0.   0.   0.   0.22 0.17 0.26 0.3  0.3  0.   0.17 0.3  0.13 0.22
  0.22 0.22 0.17 0.22 0.39 0.22 0.35 0.3  0.35]
 [0.   0.   0.   0.   0.   0.13 0.13 0.17 0.26 0.22 0.13 0.17 0.17 0.17
  0.17 0.17 0.13 0.17 0.26 0.26 0.13 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.17 0.3  0.39 0.17 0.17 0.22 0.22 0.22
  0.22 0.22 0.17 0.22 0.22 0.22 0.26 0.13 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.22 0.26 0.17 0.22 0.22 0.22
  0.3  0.22 0.09 0.3  0.22 0.3  0.17 0.13 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.3  0.3  0.17 0.17 0.09
  0.26 0.17 0.22 0.17 0.17 0.17 0.04 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.22 0.17 0.26 0.26
  0.17 0.26 0.3  0.26 0.17 0.26 0.13 0.26 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.3  0.13 0.22
  0.22 0.22 0.17 0.22 0.39 0.22 0.35 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.13 0.22
  0.22 0.3  0.17 0.22 0.22 0.3  0.26 0.13 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.26
  0.17 0.09 0.3  0.17 0.17 0.09 0.13 0.17 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09
  0.26 0.17 0.22 0.17 0.26 0.17 0.22 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.17 0.22 0.26 0.17 0.17 0.13 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.3  0.17 0.26 0.26 0.22 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.17 0.26 0.09 0.22 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22 0.3  0.3  0.26 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.26 0.17 0.22 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.13 0.09 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.22 0.17 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1. -1.  1.  1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({-1.0: 117, 1.0: 71})
1 classifiers pre label
Counter({1.0: 96, -1.0: 92})
2 classifiers pre label
Counter({1.0: 98, -1.0: 90})
3 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
4 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
5 classifiers pre label
Counter({1.0: 114, -1.0: 74})
6 classifiers pre label
Counter({-1.0: 121, 1.0: 67})
7 classifiers pre label
Counter({1.0: 148, -1.0: 40})
8 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
9 classifiers pre label
Counter({-1.0: 125, 1.0: 63})
10 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
11 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
12 classifiers pre label
Counter({-1.0: 97, 1.0: 91})
13 classifiers pre label
Counter({1.0: 162, -1.0: 26})
14 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
15 classifiers pre label
Counter({1.0: 102, -1.0: 86})
16 classifiers pre label
Counter({-1.0: 112, 1.0: 76})
17 classifiers pre label
Counter({-1.0: 102, 1.0: 86})
18 classifiers pre label
Counter({1.0: 149, -1.0: 39})
19 classifiers pre label
Counter({1.0: 139, -1.0: 49})
20 classifiers pre label
Counter({1.0: 135, -1.0: 53})
21 classifiers pre label
Counter({1.0: 107, -1.0: 81})
22 classifiers pre label
Counter({1.0: 132, -1.0: 56})
23 classifiers pre label
Counter({1.0: 139, -1.0: 49})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 16  2  0  0  0  1  2  0]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 1  0  1  1  9  1  0  1  0  3]
 [ 0  0  0  1  0 16  1  0  0  2]
 [ 1  0  3  0  0  2  6  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.2 1.2 1.2 0.6 1.5 1.6 1.3 1.4 1.1]
 [0.  0.  1.2 1.2 1.4 1.3 1.4 0.5 0.8 1.1]
 [0.  0.  0.  1.4 1.  1.5 1.2 1.1 1.2 1.1]
 [0.  0.  0.  0.  1.2 0.7 1.6 0.9 1.6 0.7]
 [0.  0.  0.  0.  0.  1.5 1.2 1.3 1.4 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.  1.3 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.12 0.25 0.29 0.25 0.25 0.29 0.12 0.25 0.25 0.21 0.38 0.38
  0.12 0.29 0.25 0.21 0.21 0.29 0.25 0.29 0.17 0.29]
 [0.   0.   0.33 0.29 0.17 0.21 0.04 0.17 0.17 0.29 0.21 0.25 0.25 0.17
  0.25 0.25 0.12 0.33 0.17 0.33 0.12 0.17 0.21 0.33]
 [0.   0.   0.   0.21 0.25 0.29 0.38 0.17 0.17 0.21 0.29 0.17 0.25 0.25
  0.08 0.17 0.29 0.08 0.25 0.17 0.21 0.33 0.21 0.17]
 [0.   0.   0.   0.   0.21 0.17 0.25 0.29 0.29 0.   0.17 0.29 0.12 0.21
  0.21 0.21 0.17 0.21 0.38 0.21 0.33 0.29 0.33 0.21]
 [0.   0.   0.   0.   0.   0.12 0.12 0.17 0.25 0.21 0.12 0.17 0.17 0.17
  0.17 0.17 0.12 0.17 0.25 0.25 0.12 0.17 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.17 0.29 0.38 0.17 0.17 0.21 0.21 0.21
  0.21 0.21 0.17 0.21 0.21 0.21 0.25 0.12 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.25 0.17 0.21 0.21 0.21
  0.29 0.21 0.08 0.29 0.21 0.29 0.17 0.12 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.29 0.29 0.17 0.17 0.08
  0.25 0.17 0.21 0.17 0.17 0.17 0.04 0.25 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.17 0.25 0.25
  0.17 0.25 0.29 0.25 0.17 0.25 0.12 0.25 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.29 0.12 0.21
  0.21 0.21 0.17 0.21 0.38 0.21 0.33 0.29 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.12 0.21
  0.21 0.29 0.17 0.21 0.21 0.29 0.25 0.12 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25
  0.17 0.08 0.29 0.17 0.17 0.08 0.12 0.17 0.12 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08
  0.25 0.17 0.21 0.17 0.25 0.17 0.21 0.17 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.17 0.21 0.25 0.17 0.17 0.12 0.17 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.29 0.17 0.25 0.25 0.21 0.25 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.17 0.25 0.08 0.21 0.17 0.21 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.29 0.29 0.25 0.21 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.25 0.17 0.21 0.25 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.12 0.08 0.04 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.21 0.17 0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.21 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: None}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})

**********      classifier acc  **************
[0.846, 0.835, 0.835, 0.819, 0.83, 0.846, 0.819, 0.83, 0.872, 0.819, 0.883, 0.824, 0.846, 0.83, 0.872, 0.867, 0.851, 0.835, 0.872, 0.894, 0.819, 0.777, 0.878, 0.894]
before cutting matrix
[[-1. -1.  1.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1.  1.
  -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.  1. -1.
   1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1. -1. -1. -1. -1.
   1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.
   1.  1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1.
  -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1. -1. -1.
   1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.  1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.
   1.  1.  1.  1.  1.  1.]
 [-1.  1. -1. -1.  1.  1.  1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.  1.
   1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.  1.
   1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 289, 1.0: 273})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 286, -1.0: 276})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 286, -1.0: 276})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 400, 1.0: 162})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 400, 1.0: 162})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 343, 1.0: 219})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 343, 1.0: 219})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({1.0: 406, -1.0: 156})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 406, -1.0: 156})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 345, 1.0: 217})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 345, 1.0: 217})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 290, -1.0: 272})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 398, -1.0: 164})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 284, -1.0: 278})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 343, -1.0: 219})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 283, -1.0: 279})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
after cutting matrix
[[-1. -1.  1. -1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1.  1. -1.  1.]
 [-1.  1.  1. -1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1.  1.  1. -1.  1. -1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 289, 1.0: 273})
Counter({1.0: 318, -1.0: 244})
Counter({-1.0: 381, 1.0: 181})
Counter({-1.0: 453, 1.0: 109})
Counter({1.0: 290, -1.0: 272})
Counter({1.0: 285, -1.0: 277})
Counter({1.0: 398, -1.0: 164})
Counter({-1.0: 404, 1.0: 158})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 342, 1.0: 220})
Counter({1.0: 284, -1.0: 278})
Counter({1.0: 402, -1.0: 160})
Counter({1.0: 410, -1.0: 152})
Counter({1.0: 343, -1.0: 219})
Counter({1.0: 350, -1.0: 212})
Counter({1.0: 410, -1.0: 152})
cutting matrix's confusion matrix
[[13  0  0  0  0  0  0  1  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 17  2  0  0  0  1  1  0]
 [ 0  0  1 10  0  2  0  2  0  1]
 [ 2  1  2  0 10  0  0  0  0  2]
 [ 0  0  0  1  0 15  1  1  0  2]
 [ 0  1  0  0  1  2  6  0  5  0]
 [ 1  5  0  3  0  0  0 11  0  0]
 [ 2  0  3  0  0  1  2  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]


SVM classifier
Time: 2019-01-09 23:13:20
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
confusion matrix
[[13  3  0  0  0  0  0  0  0  1]
 [ 0 26  0  0  0  0  0  0  0  0]
 [20  2  0  0  0  0  0  0  0  0]
 [ 4 12  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  3]
 [ 4 16  0  0  0  0  0  0  0  0]
 [13  2  0  0  0  0  0  0  0  0]
 [15  5  0  0  0  0  0  0  0  0]
 [18  4  0  0  0  0  0  0  0  0]
 [ 0  9  0  0  0  0  0  0  0  4]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 0.  0.]
 [-1.  1.]
 [ 0.  0.]
 [ 0.  0.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [-1.  0.]
 [ 1.  0.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
confusion matrix
[[11  3  0  0  0  0  0  2  0  1]
 [ 0 26  0  0  0  0  0  0  0  0]
 [ 5  2 13  0  0  0  0  2  0  0]
 [ 0 12  1  0  0  0  0  3  0  0]
 [ 0 12  1  0  0  0  0  1  0  3]
 [ 2 16  1  0  0  0  0  1  0  0]
 [ 1  2  3  0  0  0  0  9  0  0]
 [ 3  5  0  0  0  0  0 12  0  0]
 [ 2  4  4  0  0  0  0 12  0  0]
 [ 0  9  0  0  0  0  0  0  0  4]]
row HD
[[0.  0.2 0.1 0.2 0.2 0.2 0.1 0.1 0.1 0.2]
 [0.  0.  0.2 0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 0.  0.  0.]
 [-1.  1.  0.]
 [ 0.  0.  1.]
 [ 0.  0. -1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]
 [-1.  0.  1.]
 [-1.  0.  0.]
 [ 1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 5  2 13  0  0  0  0  1  1  0]
 [ 0  4  1  8  0  0  0  3  0  0]
 [ 0  1  1  1 12  0  0  0  0  2]
 [ 2 16  1  0  0  0  0  0  1  0]
 [ 1  2  1  0  0  0  2  0  9  0]
 [ 3  4  0  1  0  0  0 12  0  0]
 [ 2  4  3  0  0  0  1  0 12  0]
 [ 0  6  0  2  1  0  0  0  0  4]]
row HD
[[0.  0.3 0.2 0.2 0.3 0.3 0.1 0.1 0.2 0.3]
 [0.  0.  0.2 0.1 0.1 0.  0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.3 0.3 0.2 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.3 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.67]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 0.  0.  0.  0.]
 [-1.  1.  0.  1.]
 [ 0.  0.  1.  0.]
 [ 0.  0. -1.  0.]
 [ 0.  0.  0.  1.]
 [-1.  1.  1.  0.]
 [-1.  0.  1.  0.]
 [-1.  0.  0.  0.]
 [ 1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
confusion matrix
[[10  3  0  0  0  0  0  1  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 13  0  0  6  0  1  1  0]
 [ 0  0  1  8  0  4  0  3  0  0]
 [ 0  0  1  1 12  1  0  0  0  2]
 [ 0  0  1  0  0 16  0  2  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  3  0  0  4  1  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.4 0.3 0.3 0.4 0.4 0.2 0.2 0.3 0.4]
 [0.  0.  0.3 0.1 0.1 0.1 0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.4 0.4 0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 2.   1.25]
 [0.   0.   1.5  0.75]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [ 0.  0.  0.  0.  1.]
 [-1.  1.  0.  1.  1.]
 [ 0.  0.  1.  0.  1.]
 [ 0.  0. -1.  0.  0.]
 [ 0.  0.  0.  1.  0.]
 [-1.  1.  1.  0.  0.]
 [-1.  0.  1.  0. -1.]
 [-1.  0.  0.  0. -1.]
 [ 1.  0. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
confusion matrix
[[10  3  0  1  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  6 12  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  1  1 13  0  0  0  1  1]
 [ 0  0  1  2  0 16  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  2  0  0  4  1  0 13  0]
 [ 0  0  0  2  2  6  0  0  0  3]]
row HD
[[0.  0.4 0.3 0.3 0.5 0.5 0.3 0.3 0.4 0.4]
 [0.  0.  0.3 0.1 0.2 0.2 0.4 0.3 0.2 0.3]
 [0.  0.  0.  0.4 0.5 0.3 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.6 1.  1. ]
 [0.  0.  1.2 0.6 1.4]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:51,large_class sample len:225
extra_class: 5,extra_sample len: 286
cluster len:138
cluster contain small sample len:[0.6, 0.9545454545454546, 0.6666666666666666, 1.0, 0.16666666666666666, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2727272727272727, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714285714285714, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0]
before change column[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]]
after change column[[ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.]
 [-1.  1.  0.  1.  1. -1.]
 [ 0.  0.  1.  0.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.]
 [ 0.  0.  0.  1.  0.  0.]
 [-1.  1.  1.  0.  0.  1.]
 [-1.  0.  1.  0. -1.  0.]
 [-1.  0.  0.  0. -1. -1.]
 [ 1.  0. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  6 12  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  1  1 13  0  0  0  1  1]
 [ 2  0  1  0  0 16  0  1  0  0]
 [ 1  0  3  0  0  2  0  6  3  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 2  0  3  0  0  4  0  2 11  0]
 [ 0  0  0  2  2  6  0  0  0  3]]
row HD
[[0.  0.5 0.4 0.4 0.6 0.6 0.3 0.4 0.5 0.5]
 [0.  0.  0.4 0.1 0.3 0.2 0.5 0.3 0.3 0.4]
 [0.  0.  0.  0.5 0.5 0.4 0.4 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.33 0.83 0.83 0.83]
 [0.   0.   1.   0.5  1.17 0.83]
 [0.   0.   0.   1.33 1.17 0.67]
 [0.   0.   0.   0.   1.   1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.]
 [-1.  1.  0.  1.  1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.]
 [-1.  0.  0.  0. -1. -1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  1  1 14  0  0  0  0  1]
 [ 2  0  1  0  0 16  1  0  0  0]
 [ 1  0  1  0  0  2  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  2  6  0  0  0  3]]
row HD
[[0.  0.6 0.5 0.5 0.7 0.7 0.3 0.5 0.5 0.5]
 [0.  0.  0.5 0.1 0.3 0.2 0.6 0.3 0.4 0.5]
 [0.  0.  0.  0.6 0.6 0.5 0.5 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.2 0.5 0.5]
 [0.  0.  0.  0.  0.  0.3 0.5 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 1.14 0.71 0.71 0.71 0.57]
 [0.   0.   0.86 0.43 1.   0.71 0.57]
 [0.   0.   0.   1.14 1.   0.57 0.86]
 [0.   0.   0.   0.   0.86 1.   0.71]
 [0.   0.   0.   0.   0.   1.   0.86]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0. -1.  0.  1.  0. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.]
 [-1.  0.  1.  0. -1.  0.  0.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
confusion matrix
[[ 9  3  0  2  0  0  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  1  1 12  0  0  0  0  3]
 [ 0  0  1  2  0 16  1  0  0  0]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  3  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.7 0.6 0.6 0.8 0.8 0.4 0.6 0.5 0.6]
 [0.  0.  0.6 0.1 0.3 0.2 0.6 0.3 0.5 0.6]
 [0.  0.  0.  0.7 0.7 0.6 0.6 0.7 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.3 0.5 0.2 0.6 0.6]
 [0.  0.  0.  0.  0.  0.3 0.5 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 1.   0.62 0.62 0.62 0.5  0.62]
 [0.   0.   0.75 0.38 0.88 0.62 0.5  0.62]
 [0.   0.   0.   1.   0.88 0.5  0.75 0.75]
 [0.   0.   0.   0.   0.75 0.88 0.62 0.62]
 [0.   0.   0.   0.   0.   0.88 0.75 0.75]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:62,large_class sample len:273
extra_class: 4,extra_sample len: 227
cluster len:143
cluster contain small sample len:[1.0, 0.375, 0.7142857142857143, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7142857142857143, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14285714285714285, 0.0, 0.0, 0.5714285714285714, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]
after change column[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
confusion matrix
[[10  0  0  0  0  4  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  3  1  9  0  1  0  2  0  0]
 [ 0  0  0  1 12  1  0  0  0  3]
 [ 0  0  0  0  0 19  0  0  1  0]
 [ 1  0  0  0  0  3  2  0  9  0]
 [ 1  4  0  2  0  0  0 13  0  0]
 [ 2  0  1  0  0  5  1  1 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.8 0.7 0.7 0.8 0.8 0.5 0.7 0.5 0.6]
 [0.  0.  0.6 0.1 0.4 0.3 0.7 0.3 0.6 0.7]
 [0.  0.  0.  0.7 0.8 0.7 0.7 0.7 0.6 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.6 0.2 0.7 0.7]
 [0.  0.  0.  0.  0.  0.3 0.6 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.89 0.56 0.56 0.56 0.44 0.56 0.89]
 [0.   0.   0.67 0.33 0.78 0.56 0.44 0.56 0.89]
 [0.   0.   0.   0.89 0.78 0.44 0.67 0.67 0.67]
 [0.   0.   0.   0.   0.67 0.78 0.56 0.56 0.78]
 [0.   0.   0.   0.   0.   0.78 0.67 0.67 0.56]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.22 1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  1.  0.  0.  0.  1.  0.  0.  0.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
confusion matrix
[[10  0  0  0  0  4  0  0  2  1]
 [ 0 21  0  4  1  0  0  0  0  0]
 [ 0  2 17  1  0  0  0  1  1  0]
 [ 0  3  1  9  0  1  0  2  0  0]
 [ 0  0  0  1 12  0  0  0  0  4]
 [ 0  0  0  0  0 18  1  0  0  1]
 [ 1  0  0  0  0  2  6  2  3  1]
 [ 1  4  0  2  0  0  0 13  0  0]
 [ 2  0  1  0  0  5  2  2 10  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  0.9 0.8 0.8 0.8 0.8 0.6 0.8 0.6 0.7]
 [0.  0.  0.7 0.1 0.5 0.4 0.7 0.4 0.7 0.7]
 [0.  0.  0.  0.8 0.9 0.8 0.8 0.7 0.6 0.6]
 [0.  0.  0.  0.  0.5 0.5 0.6 0.3 0.8 0.7]
 [0.  0.  0.  0.  0.  0.3 0.7 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.8 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.8 0.5 0.5 0.5 0.4 0.5 0.8 0.4]
 [0.  0.  0.6 0.3 0.7 0.5 0.4 0.5 0.8 0.7]
 [0.  0.  0.  0.8 0.7 0.4 0.6 0.6 0.6 0.7]
 [0.  0.  0.  0.  0.6 0.7 0.5 0.5 0.7 0.8]
 [0.  0.  0.  0.  0.  0.7 0.6 0.6 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.2 1.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  0.  0.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
confusion matrix
[[10  0  0  0  1  3  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 17  0  0  0  0  0  2  0]
 [ 0  4  1  8  0  1  0  2  0  0]
 [ 0  1  0  0 12  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  2  6  2  3  1]
 [ 1  5  0  1  0  0  0 13  0  0]
 [ 2  0  2  0  0  4  2  1 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.  0.9 0.8 0.9 0.9 0.6 0.9 0.6 0.8]
 [0.  0.  0.8 0.2 0.5 0.4 0.8 0.4 0.8 0.8]
 [0.  0.  0.  0.9 1.  0.9 0.9 0.8 0.7 0.6]
 [0.  0.  0.  0.  0.6 0.6 0.6 0.4 0.8 0.8]
 [0.  0.  0.  0.  0.  0.3 0.8 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 0.6 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.73 0.45 0.45 0.45 0.36 0.45 0.73 0.36 0.55]
 [0.   0.   0.55 0.27 0.64 0.45 0.36 0.45 0.73 0.64 0.45]
 [0.   0.   0.   0.73 0.64 0.36 0.55 0.55 0.55 0.64 0.36]
 [0.   0.   0.   0.   0.55 0.64 0.45 0.45 0.64 0.73 0.64]
 [0.   0.   0.   0.   0.   0.64 0.55 0.55 0.45 0.27 0.55]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.64 0.55 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.91 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.64 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
confusion matrix
[[11  0  0  0  0  3  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 17  0  0  0  0  0  2  0]
 [ 0  4  1  8  0  1  0  2  0  0]
 [ 0  1  0  0 12  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  2  6  2  3  1]
 [ 3  5  0  1  0  0  0 11  0  0]
 [ 2  0  2  0  0  4  2  1 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.1 1.  0.9 1.  1.  0.7 1.  0.7 0.9]
 [0.  0.  0.9 0.2 0.5 0.4 0.8 0.4 0.9 0.8]
 [0.  0.  0.  1.  1.1 1.  1.  0.9 0.7 0.7]
 [0.  0.  0.  0.  0.6 0.6 0.6 0.4 0.9 0.8]
 [0.  0.  0.  0.  0.  0.3 0.8 0.6 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 0.6 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.67 0.42 0.42 0.42 0.33 0.42 0.67 0.33 0.5  0.33]
 [0.   0.   0.5  0.25 0.58 0.42 0.33 0.42 0.67 0.58 0.42 0.33]
 [0.   0.   0.   0.67 0.58 0.33 0.5  0.5  0.5  0.58 0.33 0.58]
 [0.   0.   0.   0.   0.5  0.58 0.42 0.42 0.58 0.67 0.58 0.42]
 [0.   0.   0.   0.   0.   0.58 0.5  0.5  0.42 0.25 0.5  0.42]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.58 0.5  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.83 0.42 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.58 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58 0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]
small_class len :1,large_class len:5, small_class sample:62,large_class sample len:275
extra_class: 4,extra_sample len: 225
cluster len:115
cluster contain small sample len:[0.8333333333333334, 1.0, 0.95, 1.0, 0.0, 0.0, 0.0, 0.2857142857142857, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0]
before change column[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]
after change column[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  3 17  0  0  0  0  0  2  0]
 [ 0  4  1  8  0  1  0  2  0  0]
 [ 0  1  0  0 12  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  4  6  0  3  1]
 [ 3  5  0  1  0  0  0 11  0  0]
 [ 2  0  2  0  0  5  2  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.2 1.  1.  1.  1.  0.8 1.1 0.8 1. ]
 [0.  0.  1.  0.2 0.6 0.5 0.8 0.5 0.9 0.8]
 [0.  0.  0.  1.1 1.1 1.  1.1 1.  0.8 0.8]
 [0.  0.  0.  0.  0.7 0.7 0.6 0.5 0.9 0.8]
 [0.  0.  0.  0.  0.  0.3 0.9 0.7 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  1.  0.7 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.62 0.38 0.38 0.38 0.31 0.38 0.62 0.31 0.46 0.31 0.46]
 [0.   0.   0.46 0.23 0.54 0.38 0.31 0.38 0.62 0.54 0.38 0.31 0.54]
 [0.   0.   0.   0.62 0.54 0.31 0.46 0.46 0.46 0.54 0.31 0.54 0.46]
 [0.   0.   0.   0.   0.46 0.54 0.38 0.38 0.54 0.62 0.54 0.38 0.62]
 [0.   0.   0.   0.   0.   0.54 0.46 0.46 0.38 0.23 0.46 0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.54 0.46 0.23 0.23 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.77 0.38 0.15 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.54 0.15 0.15 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.62 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 0.  1.  0.  1.  0.  0.  1. -1.  1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  0  0  1  0  0  2  0]
 [ 0  1  1  8  1  3  0  2  0  0]
 [ 0  1  0  0 12  0  0  0  0  4]
 [ 1  0  0  0  2 15  1  0  0  1]
 [ 1  0  2  0  0  2  6  0  3  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  0  3  0  3  1  2  0 11  0]
 [ 0  0  0  2  7  0  0  0  0  4]]
row HD
[[0.  1.2 1.  1.  1.1 1.1 0.8 1.2 0.9 1.1]
 [0.  0.  1.  0.2 0.7 0.6 0.8 0.6 1.  0.9]
 [0.  0.  0.  1.1 1.2 1.1 1.1 1.1 0.9 0.9]
 [0.  0.  0.  0.  0.8 0.8 0.6 0.6 1.  0.9]
 [0.  0.  0.  0.  0.  0.4 1.  0.8 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  1.1 0.7 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.57 0.36 0.36 0.36 0.29 0.36 0.57 0.29 0.43 0.29 0.43 0.43]
 [0.   0.   0.43 0.21 0.5  0.36 0.29 0.36 0.57 0.5  0.36 0.29 0.5  0.57]
 [0.   0.   0.   0.57 0.5  0.29 0.43 0.43 0.43 0.5  0.29 0.5  0.43 0.57]
 [0.   0.   0.   0.   0.43 0.5  0.36 0.36 0.5  0.57 0.5  0.36 0.57 0.43]
 [0.   0.   0.   0.   0.   0.5  0.43 0.43 0.36 0.21 0.43 0.36 0.29 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.5  0.43 0.21 0.21 0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.71 0.36 0.14 0.21 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.5  0.14 0.14 0.5  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.57 0.57 0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.14 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  1.  0.  0.  1.  0.  1. -1.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  0  0  1  0  0  2  0]
 [ 0  1  1  8  1  3  0  2  0  0]
 [ 0  1  0  0 12  0  0  0  0  4]
 [ 1  0  0  0  2 15  1  0  0  1]
 [ 1  0  2  0  0  2  6  0  3  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  0  3  0  3  1  2  0 11  0]
 [ 0  0  0  2  7  0  0  0  0  4]]
row HD
[[0.  1.3 1.1 1.1 1.1 1.1 0.9 1.2 0.9 1.2]
 [0.  0.  1.  0.3 0.8 0.7 0.9 0.7 1.1 0.9]
 [0.  0.  0.  1.2 1.3 1.2 1.2 1.2 1.  0.9]
 [0.  0.  0.  0.  0.9 0.9 0.6 0.7 1.1 1. ]
 [0.  0.  0.  0.  0.  0.4 1.1 0.8 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  1.2 0.7 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.53 0.33 0.33 0.33 0.27 0.33 0.53 0.27 0.4  0.27 0.4  0.4
  0.47]
 [0.   0.   0.4  0.2  0.47 0.33 0.27 0.33 0.53 0.47 0.33 0.27 0.47 0.53
  0.33]
 [0.   0.   0.   0.53 0.47 0.27 0.4  0.4  0.4  0.47 0.27 0.47 0.4  0.53
  0.33]
 [0.   0.   0.   0.   0.4  0.47 0.33 0.33 0.47 0.53 0.47 0.33 0.53 0.4
  0.47]
 [0.   0.   0.   0.   0.   0.47 0.4  0.4  0.33 0.2  0.4  0.33 0.27 0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.47 0.4  0.2  0.2  0.53 0.53
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.67 0.33 0.13 0.2  0.33 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.13 0.13 0.47 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.53 0.53 0.53
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.13 0.47
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.53
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 1.  0. -1.  0. -1.  0.  1.  0. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  2 17  0  0  1  0  0  2  0]
 [ 0  1  1  8  1  3  0  2  0  0]
 [ 0  1  0  0 12  0  0  0  0  4]
 [ 1  0  0  0  2 15  1  0  0  1]
 [ 1  0  2  0  0  2  6  0  3  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  0  3  0  3  1  2  0 11  0]
 [ 0  0  0  2  7  0  0  0  0  4]]
row HD
[[0.  1.4 1.2 1.2 1.2 1.2 1.  1.3 1.  1.2]
 [0.  0.  1.  0.3 0.9 0.7 1.  0.7 1.1 1. ]
 [0.  0.  0.  1.2 1.4 1.2 1.3 1.2 1.  1. ]
 [0.  0.  0.  0.  1.  0.9 0.7 0.7 1.1 1.1]
 [0.  0.  0.  0.  0.  0.5 1.1 0.9 1.  1. ]
 [0.  0.  0.  0.  0.  0.  1.3 0.7 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.5  0.31 0.31 0.31 0.25 0.31 0.5  0.25 0.38 0.25 0.38 0.38
  0.44 0.38]
 [0.   0.   0.38 0.19 0.44 0.31 0.25 0.31 0.5  0.44 0.31 0.25 0.44 0.5
  0.31 0.19]
 [0.   0.   0.   0.5  0.44 0.25 0.38 0.38 0.38 0.44 0.25 0.44 0.38 0.5
  0.31 0.25]
 [0.   0.   0.   0.   0.38 0.44 0.31 0.31 0.44 0.5  0.44 0.31 0.5  0.38
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.44 0.38 0.38 0.31 0.19 0.38 0.31 0.25 0.44
  0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.44 0.38 0.19 0.19 0.5  0.5
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.62 0.31 0.12 0.19 0.31 0.38
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.12 0.12 0.44 0.38
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.5  0.5  0.5  0.5
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.12 0.44
  0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.5
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.44
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.56 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  0.  0.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]
small_class len :1,large_class len:6, small_class sample:57,large_class sample len:326
extra_class: 3,extra_sample len: 179
cluster len:74
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 0.75, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1111111111111111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.2]
before change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  0  0  0  0  1  2  0]
 [ 0  1  1  8  0  3  0  3  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  2  0  0  0  2  6  0  3  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  1  1  0  0  5  2  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.4 1.3 1.2 1.3 1.2 1.  1.4 1.  1.2]
 [0.  0.  1.1 0.3 1.  0.7 1.  0.8 1.1 1. ]
 [0.  0.  0.  1.3 1.5 1.3 1.4 1.3 1.1 1.1]
 [0.  0.  0.  0.  1.1 0.9 0.7 0.8 1.1 1.1]
 [0.  0.  0.  0.  0.  0.6 1.2 0.9 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 0.8 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.47 0.29 0.29 0.29 0.24 0.29 0.47 0.24 0.35 0.24 0.35 0.35
  0.41 0.35 0.41]
 [0.   0.   0.35 0.18 0.41 0.29 0.24 0.29 0.47 0.41 0.29 0.24 0.41 0.47
  0.29 0.18 0.41]
 [0.   0.   0.   0.47 0.41 0.24 0.35 0.35 0.35 0.41 0.24 0.41 0.35 0.47
  0.29 0.24 0.41]
 [0.   0.   0.   0.   0.35 0.41 0.29 0.29 0.41 0.47 0.41 0.29 0.47 0.35
  0.41 0.29 0.35]
 [0.   0.   0.   0.   0.   0.41 0.35 0.35 0.29 0.18 0.35 0.29 0.24 0.41
  0.41 0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.41 0.35 0.18 0.18 0.47 0.47
  0.29 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.59 0.29 0.12 0.18 0.29 0.35
  0.29 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.41 0.12 0.12 0.41 0.35
  0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.47 0.47 0.47 0.47
  0.47 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.12 0.41
  0.24 0.47 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.47
  0.18 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.41
  0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.29 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.53 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  18 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  0  0  0  0  1  2  0]
 [ 0  1  1  8  0  3  0  3  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 2  0  0  0  0 16  1  0  0  1]
 [ 1  2  0  0  0  2  6  0  3  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  1  2  0  0  4  2  0 11  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.4 1.3 1.3 1.4 1.3 1.1 1.5 1.  1.3]
 [0.  0.  1.1 0.4 1.1 0.8 1.1 0.9 1.1 1.1]
 [0.  0.  0.  1.4 1.6 1.4 1.5 1.4 1.1 1.2]
 [0.  0.  0.  0.  1.2 1.  0.7 0.9 1.2 1.2]
 [0.  0.  0.  0.  0.  0.6 1.3 0.9 1.2 1.1]
 [0.  0.  0.  0.  0.  0.  1.4 0.8 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.28 0.44 0.28 0.28 0.28 0.22 0.28 0.44 0.22 0.33 0.22 0.33 0.33
  0.39 0.33 0.39 0.39]
 [0.   0.   0.33 0.17 0.39 0.28 0.22 0.28 0.44 0.39 0.28 0.22 0.39 0.44
  0.28 0.17 0.39 0.28]
 [0.   0.   0.   0.44 0.39 0.22 0.33 0.33 0.33 0.39 0.22 0.39 0.33 0.44
  0.28 0.22 0.39 0.44]
 [0.   0.   0.   0.   0.33 0.39 0.28 0.28 0.39 0.44 0.39 0.28 0.44 0.33
  0.39 0.28 0.33 0.39]
 [0.   0.   0.   0.   0.   0.39 0.33 0.33 0.28 0.17 0.33 0.28 0.22 0.39
  0.39 0.5  0.28 0.28]
 [0.   0.   0.   0.   0.   0.   0.17 0.17 0.39 0.33 0.17 0.17 0.44 0.44
  0.28 0.22 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.56 0.28 0.11 0.17 0.28 0.33
  0.28 0.28 0.17 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.39 0.11 0.11 0.39 0.33
  0.28 0.28 0.28 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.44 0.44 0.44 0.44
  0.44 0.44 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33 0.11 0.39
  0.22 0.44 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.28 0.44
  0.17 0.28 0.17 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.39
  0.33 0.33 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28
  0.28 0.39 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.5  0.33 0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.28 0.28 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  0.  0. -1.  0.  1.  0.]
select_j_column
[ 1.  0. -1.  0. -1.  0.  1.  0. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]
small_class len :1,large_class len:6, small_class sample:51,large_class sample len:336
extra_class: 3,extra_sample len: 175
cluster len:124
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2727272727272727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0]
before change column[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]
after change column[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  19 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  0  0  0  0  1  2  0]
 [ 0  1  1  8  0  3  0  3  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  2  6  0  5  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.5 1.4 1.4 1.5 1.4 1.2 1.6 1.1 1.4]
 [0.  0.  1.2 0.5 1.2 0.8 1.2 0.9 1.2 1.2]
 [0.  0.  0.  1.4 1.6 1.5 1.5 1.5 1.1 1.2]
 [0.  0.  0.  0.  1.2 1.1 0.7 1.  1.2 1.2]
 [0.  0.  0.  0.  0.  0.7 1.3 1.  1.2 1.1]
 [0.  0.  0.  0.  0.  0.  1.5 0.8 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.42 0.26 0.26 0.26 0.21 0.26 0.42 0.21 0.32 0.21 0.32 0.32
  0.37 0.32 0.37 0.37 0.26]
 [0.   0.   0.32 0.16 0.37 0.26 0.21 0.26 0.42 0.37 0.26 0.21 0.37 0.42
  0.26 0.16 0.37 0.26 0.37]
 [0.   0.   0.   0.42 0.37 0.21 0.32 0.32 0.32 0.37 0.21 0.37 0.32 0.42
  0.26 0.21 0.37 0.42 0.26]
 [0.   0.   0.   0.   0.32 0.37 0.26 0.26 0.37 0.42 0.37 0.26 0.42 0.32
  0.37 0.26 0.32 0.37 0.42]
 [0.   0.   0.   0.   0.   0.37 0.32 0.32 0.26 0.16 0.32 0.26 0.21 0.37
  0.37 0.47 0.26 0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.16 0.16 0.37 0.32 0.16 0.16 0.42 0.42
  0.26 0.21 0.32 0.37 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.53 0.26 0.11 0.16 0.26 0.32
  0.26 0.26 0.16 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.37 0.11 0.11 0.37 0.32
  0.26 0.26 0.26 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.42 0.42 0.42 0.42
  0.42 0.42 0.42 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.11 0.37
  0.21 0.42 0.21 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.26 0.42
  0.16 0.26 0.16 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.37
  0.32 0.32 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.26 0.37 0.21 0.32 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47 0.32 0.42 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.26 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.42 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  0.  0. -1.  1.  0.  0.]
select_j_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
most_cplx_inx
8
new_column
None


============== iter  20 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 17  0  0  0  0  1  2  0]
 [ 0  1  1  8  0  3  0  3  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  2  6  0  5  1]
 [ 3  4  0  1  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.5 1.4 1.4 1.5 1.4 1.2 1.6 1.1 1.4]
 [0.  0.  1.2 0.5 1.2 0.8 1.2 0.9 1.2 1.2]
 [0.  0.  0.  1.4 1.6 1.5 1.5 1.5 1.1 1.2]
 [0.  0.  0.  0.  1.2 1.1 0.7 1.  1.2 1.2]
 [0.  0.  0.  0.  0.  0.7 1.3 1.  1.2 1.1]
 [0.  0.  0.  0.  0.  0.  1.5 0.8 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.42 0.26 0.26 0.26 0.21 0.26 0.42 0.21 0.32 0.21 0.32 0.32
  0.37 0.32 0.37 0.37 0.26]
 [0.   0.   0.32 0.16 0.37 0.26 0.21 0.26 0.42 0.37 0.26 0.21 0.37 0.42
  0.26 0.16 0.37 0.26 0.37]
 [0.   0.   0.   0.42 0.37 0.21 0.32 0.32 0.32 0.37 0.21 0.37 0.32 0.42
  0.26 0.21 0.37 0.42 0.26]
 [0.   0.   0.   0.   0.32 0.37 0.26 0.26 0.37 0.42 0.37 0.26 0.42 0.32
  0.37 0.26 0.32 0.37 0.42]
 [0.   0.   0.   0.   0.   0.37 0.32 0.32 0.26 0.16 0.32 0.26 0.21 0.37
  0.37 0.47 0.26 0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.16 0.16 0.37 0.32 0.16 0.16 0.42 0.42
  0.26 0.21 0.32 0.37 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.53 0.26 0.11 0.16 0.26 0.32
  0.26 0.26 0.16 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.37 0.11 0.11 0.37 0.32
  0.26 0.26 0.26 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.42 0.42 0.42 0.42
  0.42 0.42 0.42 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.11 0.37
  0.21 0.42 0.21 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.26 0.42
  0.16 0.26 0.16 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.37
  0.32 0.32 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.26 0.37 0.21 0.32 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47 0.32 0.42 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.26 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.42 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  0.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0. -1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.  1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.  1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
19 classifiers pre label
Counter({0.0: 95, 1.0: 50, -1.0: 43})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  3  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.6 1.5 1.5 1.5 1.4 1.3 1.7 1.1 1.5]
 [0.  0.  1.3 0.6 1.3 0.9 1.3 1.  1.3 1.2]
 [0.  0.  0.  1.4 1.7 1.6 1.5 1.5 1.2 1.3]
 [0.  0.  0.  0.  1.3 1.2 0.7 1.  1.3 1.3]
 [0.  0.  0.  0.  0.  0.7 1.4 1.1 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  1.6 0.9 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.4  0.25 0.25 0.25 0.2  0.25 0.4  0.2  0.3  0.2  0.3  0.3
  0.35 0.3  0.35 0.35 0.25 0.4 ]
 [0.   0.   0.3  0.15 0.35 0.25 0.2  0.25 0.4  0.35 0.25 0.2  0.35 0.4
  0.25 0.15 0.35 0.25 0.35 0.25]
 [0.   0.   0.   0.4  0.35 0.2  0.3  0.3  0.3  0.35 0.2  0.35 0.3  0.4
  0.25 0.2  0.35 0.4  0.25 0.2 ]
 [0.   0.   0.   0.   0.3  0.35 0.25 0.25 0.35 0.4  0.35 0.25 0.4  0.3
  0.35 0.25 0.3  0.35 0.4  0.35]
 [0.   0.   0.   0.   0.   0.35 0.3  0.3  0.25 0.15 0.3  0.25 0.2  0.35
  0.35 0.45 0.25 0.25 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.15 0.15 0.35 0.3  0.15 0.15 0.4  0.4
  0.25 0.2  0.3  0.35 0.1  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.1  0.5  0.25 0.1  0.15 0.25 0.3
  0.25 0.25 0.15 0.25 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.35 0.1  0.1  0.35 0.3
  0.25 0.25 0.25 0.25 0.2  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.4  0.4  0.4  0.4
  0.4  0.4  0.4  0.4  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.1  0.35
  0.2  0.4  0.2  0.35 0.35 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.25 0.4
  0.15 0.25 0.15 0.25 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.35
  0.3  0.3  0.3  0.25 0.2  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.25 0.35 0.2  0.3  0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.45 0.3  0.4  0.45 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.25 0.35 0.3  0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.4  0.4  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1. -1.  0.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1.  0.  0. -1.  0.  1.  0.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]
small_class len :1,large_class len:6, small_class sample:62,large_class sample len:332
extra_class: 3,extra_sample len: 168
cluster len:112
cluster contain small sample len:[0.2727272727272727, 1.0, 0.9333333333333333, 1.0, 1.0, 0.8, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.7142857142857143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]
after change column[[ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  22 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0. -1. -1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.  1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.  1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.  0. -1.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.  0. -1.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.  1. -1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.  1.  1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.  0.  0.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
19 classifiers pre label
Counter({0.0: 95, 1.0: 50, -1.0: 43})
20 classifiers pre label
Counter({-1.0: 115, 0.0: 44, 1.0: 29})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  3  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.7 1.6 1.6 1.6 1.5 1.4 1.8 1.1 1.6]
 [0.  0.  1.3 0.7 1.3 0.9 1.3 1.1 1.4 1.2]
 [0.  0.  0.  1.5 1.7 1.6 1.5 1.6 1.3 1.3]
 [0.  0.  0.  0.  1.4 1.3 0.8 1.  1.4 1.4]
 [0.  0.  0.  0.  0.  0.7 1.4 1.2 1.3 1.2]
 [0.  0.  0.  0.  0.  0.  1.6 1.  1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.38 0.24 0.24 0.24 0.19 0.24 0.38 0.19 0.29 0.19 0.29 0.29
  0.33 0.29 0.33 0.33 0.24 0.38 0.38]
 [0.   0.   0.29 0.14 0.33 0.24 0.19 0.24 0.38 0.33 0.24 0.19 0.33 0.38
  0.24 0.14 0.33 0.24 0.33 0.24 0.43]
 [0.   0.   0.   0.38 0.33 0.19 0.29 0.29 0.29 0.33 0.19 0.33 0.29 0.38
  0.24 0.19 0.33 0.38 0.24 0.19 0.24]
 [0.   0.   0.   0.   0.29 0.33 0.24 0.24 0.33 0.38 0.33 0.24 0.38 0.29
  0.33 0.24 0.29 0.33 0.38 0.33 0.43]
 [0.   0.   0.   0.   0.   0.33 0.29 0.29 0.24 0.14 0.29 0.24 0.19 0.33
  0.33 0.43 0.24 0.24 0.33 0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.14 0.14 0.33 0.29 0.14 0.14 0.38 0.38
  0.24 0.19 0.29 0.33 0.1  0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.1  0.48 0.24 0.1  0.14 0.24 0.29
  0.24 0.24 0.14 0.24 0.24 0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.33 0.1  0.1  0.33 0.29
  0.24 0.24 0.24 0.24 0.19 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.38 0.38 0.38 0.38
  0.38 0.38 0.38 0.38 0.33 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.1  0.33
  0.19 0.38 0.19 0.33 0.33 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.24 0.38
  0.14 0.24 0.14 0.24 0.19 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.33
  0.29 0.29 0.29 0.24 0.19 0.38 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.24 0.33 0.19 0.29 0.43 0.24 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.43 0.29 0.38 0.43 0.43 0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.24 0.33 0.29 0.1  0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.38 0.38 0.29 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.24 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.24 0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  1.]
select_j_column
[ 0.  1.  0.  1.  0.  0.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  23 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0. -1. -1.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.  1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.  1.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.  0. -1.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.  0. -1.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.  1. -1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.  1.  1. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.  0.  0.  1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
19 classifiers pre label
Counter({0.0: 95, 1.0: 50, -1.0: 43})
20 classifiers pre label
Counter({-1.0: 115, 0.0: 44, 1.0: 29})
21 classifiers pre label
Counter({0.0: 110, 1.0: 41, -1.0: 37})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  3  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  5  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.7 1.7 1.6 1.6 1.5 1.5 1.9 1.2 1.7]
 [0.  0.  1.4 0.7 1.3 0.9 1.4 1.2 1.5 1.3]
 [0.  0.  0.  1.6 1.8 1.7 1.6 1.6 1.4 1.4]
 [0.  0.  0.  0.  1.4 1.3 0.9 1.1 1.5 1.5]
 [0.  0.  0.  0.  0.  0.7 1.5 1.3 1.4 1.3]
 [0.  0.  0.  0.  0.  0.  1.7 1.1 1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.36 0.23 0.23 0.23 0.18 0.23 0.36 0.18 0.27 0.18 0.27 0.27
  0.32 0.27 0.32 0.32 0.23 0.36 0.36 0.14]
 [0.   0.   0.27 0.14 0.32 0.23 0.18 0.23 0.36 0.32 0.23 0.18 0.32 0.36
  0.23 0.14 0.32 0.23 0.32 0.23 0.41 0.23]
 [0.   0.   0.   0.36 0.32 0.18 0.27 0.27 0.27 0.32 0.18 0.32 0.27 0.36
  0.23 0.18 0.32 0.36 0.23 0.18 0.23 0.32]
 [0.   0.   0.   0.   0.27 0.32 0.23 0.23 0.32 0.36 0.32 0.23 0.36 0.27
  0.32 0.23 0.27 0.32 0.36 0.32 0.41 0.27]
 [0.   0.   0.   0.   0.   0.32 0.27 0.27 0.23 0.14 0.27 0.23 0.18 0.32
  0.32 0.41 0.23 0.23 0.32 0.27 0.41 0.27]
 [0.   0.   0.   0.   0.   0.   0.14 0.14 0.32 0.27 0.14 0.14 0.36 0.36
  0.23 0.18 0.27 0.32 0.09 0.32 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.45 0.23 0.09 0.14 0.23 0.27
  0.23 0.23 0.14 0.23 0.23 0.32 0.41 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.32 0.09 0.09 0.32 0.27
  0.23 0.23 0.23 0.23 0.18 0.32 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.36 0.36 0.36 0.36
  0.36 0.36 0.36 0.36 0.32 0.27 0.23 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.09 0.32
  0.18 0.36 0.18 0.32 0.32 0.23 0.32 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.23 0.36
  0.14 0.23 0.14 0.23 0.18 0.23 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.32
  0.27 0.27 0.27 0.23 0.18 0.36 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23
  0.23 0.32 0.18 0.27 0.41 0.23 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.41 0.27 0.36 0.41 0.41 0.41 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.23 0.23 0.32 0.27 0.09 0.18 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.36 0.36 0.27 0.27 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.23 0.32 0.32 0.36 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.23 0.32 0.41 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.36 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  1.  0.  1.  1.  0.  1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0. -1. -1.  0.  1.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.  1. -1. -1. -1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.  1.  1.  0.  1.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.  0. -1.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.  0. -1.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.  1. -1.  1.  1.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.  1.  1. -1. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.  0.  0.  1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
19 classifiers pre label
Counter({0.0: 95, 1.0: 50, -1.0: 43})
20 classifiers pre label
Counter({-1.0: 115, 0.0: 44, 1.0: 29})
21 classifiers pre label
Counter({0.0: 110, 1.0: 41, -1.0: 37})
22 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  3  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.8 1.8 1.7 1.6 1.5 1.6 2.  1.3 1.8]
 [0.  0.  1.5 0.7 1.4 1.  1.4 1.3 1.6 1.3]
 [0.  0.  0.  1.7 1.9 1.8 1.7 1.6 1.4 1.5]
 [0.  0.  0.  0.  1.5 1.4 0.9 1.2 1.6 1.5]
 [0.  0.  0.  0.  0.  0.7 1.6 1.4 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  1.8 1.2 1.6 1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 2. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.35 0.22 0.22 0.22 0.17 0.22 0.35 0.17 0.26 0.17 0.26 0.26
  0.3  0.26 0.3  0.3  0.22 0.35 0.35 0.13 0.17]
 [0.   0.   0.26 0.13 0.3  0.22 0.17 0.22 0.35 0.3  0.22 0.17 0.3  0.35
  0.22 0.13 0.3  0.22 0.3  0.22 0.39 0.22 0.3 ]
 [0.   0.   0.   0.35 0.3  0.17 0.26 0.26 0.26 0.3  0.17 0.3  0.26 0.35
  0.22 0.17 0.3  0.35 0.22 0.17 0.22 0.3  0.3 ]
 [0.   0.   0.   0.   0.26 0.3  0.22 0.22 0.3  0.35 0.3  0.22 0.35 0.26
  0.3  0.22 0.26 0.3  0.35 0.3  0.39 0.26 0.35]
 [0.   0.   0.   0.   0.   0.3  0.26 0.26 0.22 0.13 0.26 0.22 0.17 0.3
  0.3  0.39 0.22 0.22 0.3  0.26 0.39 0.26 0.13]
 [0.   0.   0.   0.   0.   0.   0.13 0.13 0.3  0.26 0.13 0.13 0.35 0.35
  0.22 0.17 0.26 0.3  0.09 0.3  0.3  0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.43 0.22 0.09 0.13 0.22 0.26
  0.22 0.22 0.13 0.22 0.22 0.3  0.39 0.09 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.3  0.09 0.09 0.3  0.26
  0.22 0.22 0.22 0.22 0.17 0.3  0.35 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.35 0.35 0.35
  0.35 0.35 0.35 0.35 0.3  0.26 0.22 0.43 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26 0.09 0.3
  0.17 0.35 0.17 0.3  0.3  0.22 0.3  0.13 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.22 0.35
  0.13 0.22 0.13 0.22 0.17 0.22 0.3  0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.3
  0.26 0.26 0.26 0.22 0.17 0.35 0.39 0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.22 0.3  0.17 0.26 0.39 0.22 0.35 0.13 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.39 0.26 0.35 0.39 0.39 0.39 0.35 0.17 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.22 0.3  0.26 0.09 0.17 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35 0.35 0.26 0.26 0.35 0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22 0.3  0.3  0.35 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.22 0.3  0.39 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35 0.26 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
select_j_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  25 ================
current matrix is 
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.  0.  0.  0.  0. -1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0. -1. -1.  0.  1.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.  1. -1. -1. -1.  1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.  1.  1.  0.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.  0. -1.  0.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.  0. -1.  0.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.  1. -1.  1.  1.  0.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.  1.  1. -1. -1. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.  0.  0.  1. -1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
*======label=======*
true label
Counter({'1': 26, '8': 22, '2': 22, '5': 20, '7': 20, '0': 17, '4': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 89, 1.0: 8})
1 classifiers pre label
Counter({0.0: 140, 1.0: 24, -1.0: 24})
2 classifiers pre label
Counter({0.0: 113, 1.0: 54, -1.0: 21})
3 classifiers pre label
Counter({0.0: 102, 1.0: 70, -1.0: 16})
4 classifiers pre label
Counter({1.0: 88, 0.0: 54, -1.0: 46})
5 classifiers pre label
Counter({0.0: 91, -1.0: 70, 1.0: 27})
6 classifiers pre label
Counter({0.0: 108, 1.0: 61, -1.0: 19})
7 classifiers pre label
Counter({0.0: 111, 1.0: 42, -1.0: 35})
8 classifiers pre label
Counter({-1.0: 97, 1.0: 88, 0.0: 3})
9 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
10 classifiers pre label
Counter({0.0: 96, 1.0: 58, -1.0: 34})
11 classifiers pre label
Counter({0.0: 118, -1.0: 46, 1.0: 24})
12 classifiers pre label
Counter({0.0: 96, 1.0: 78, -1.0: 14})
13 classifiers pre label
Counter({0.0: 88, 1.0: 53, -1.0: 47})
14 classifiers pre label
Counter({0.0: 112, -1.0: 62, 1.0: 14})
15 classifiers pre label
Counter({0.0: 142, -1.0: 26, 1.0: 20})
16 classifiers pre label
Counter({1.0: 133, 0.0: 34, -1.0: 21})
17 classifiers pre label
Counter({1.0: 91, 0.0: 75, -1.0: 22})
18 classifiers pre label
Counter({-1.0: 94, 0.0: 79, 1.0: 15})
19 classifiers pre label
Counter({0.0: 95, 1.0: 50, -1.0: 43})
20 classifiers pre label
Counter({-1.0: 115, 0.0: 44, 1.0: 29})
21 classifiers pre label
Counter({0.0: 110, 1.0: 41, -1.0: 37})
22 classifiers pre label
Counter({0.0: 70, 1.0: 62, -1.0: 56})
23 classifiers pre label
Counter({0.0: 94, -1.0: 74, 1.0: 20})
confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  3  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  2  0  0  4  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
row HD
[[0.  1.9 1.9 1.8 1.7 1.6 1.7 2.  1.3 1.8]
 [0.  0.  1.6 0.7 1.4 1.  1.4 1.4 1.7 1.4]
 [0.  0.  0.  1.8 2.  1.9 1.8 1.7 1.5 1.6]
 [0.  0.  0.  0.  1.5 1.4 0.9 1.3 1.7 1.6]
 [0.  0.  0.  0.  0.  0.7 1.6 1.5 1.6 1.5]
 [0.  0.  0.  0.  0.  0.  1.8 1.3 1.7 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.8 1.6 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 2. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.33 0.21 0.21 0.21 0.17 0.21 0.33 0.17 0.25 0.17 0.25 0.25
  0.29 0.25 0.29 0.29 0.21 0.33 0.33 0.12 0.17 0.12]
 [0.   0.   0.25 0.12 0.29 0.21 0.17 0.21 0.33 0.29 0.21 0.17 0.29 0.33
  0.21 0.12 0.29 0.21 0.29 0.21 0.38 0.21 0.29 0.17]
 [0.   0.   0.   0.33 0.29 0.17 0.25 0.25 0.25 0.29 0.17 0.29 0.25 0.33
  0.21 0.17 0.29 0.33 0.21 0.17 0.21 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.25 0.29 0.21 0.21 0.29 0.33 0.29 0.21 0.33 0.25
  0.29 0.21 0.25 0.29 0.33 0.29 0.38 0.25 0.33 0.17]
 [0.   0.   0.   0.   0.   0.29 0.25 0.25 0.21 0.12 0.25 0.21 0.17 0.29
  0.29 0.38 0.21 0.21 0.29 0.25 0.38 0.25 0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.12 0.12 0.29 0.25 0.12 0.12 0.33 0.33
  0.21 0.17 0.25 0.29 0.08 0.29 0.29 0.21 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.42 0.21 0.08 0.12 0.21 0.25
  0.21 0.21 0.12 0.21 0.21 0.29 0.38 0.08 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.08 0.08 0.29 0.25
  0.21 0.21 0.21 0.21 0.17 0.29 0.33 0.17 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.33 0.33 0.33
  0.33 0.33 0.33 0.33 0.29 0.25 0.21 0.42 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25 0.08 0.29
  0.17 0.33 0.17 0.29 0.29 0.21 0.29 0.12 0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.21 0.33
  0.12 0.21 0.12 0.21 0.17 0.21 0.29 0.17 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.29
  0.25 0.25 0.25 0.21 0.17 0.33 0.38 0.21 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21
  0.21 0.29 0.17 0.25 0.38 0.21 0.33 0.12 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.25 0.33 0.38 0.38 0.38 0.33 0.17 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.21 0.29 0.25 0.08 0.17 0.21 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.33 0.25 0.25 0.33 0.25 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.29 0.29 0.33 0.21 0.17 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.21 0.29 0.38 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.25 0.29 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.25 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})

**********      classifier acc  **************
[0.761, 0.5, 0.612, 0.806, 0.713, 0.67, 0.73, 0.635, 0.936, 0.664, 0.629, 0.656, 0.643, 0.728, 0.554, 0.484, 0.901, 0.729, 0.73, 0.625, 0.799, 0.652, 0.664, 0.681]
before cutting matrix
[[-1. -1.  1. -1.  1.  1.  1.  1. -1.  0.  1.  1.  0.  0.  0. -1.  1.  1.
   1.  0.  0.  0.  0. -1.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  1.  1.  0.  0.  1.  0. -1.  0.  1.  1.
   0. -1. -1.  0.  1.  0.]
 [-1.  1.  0.  1.  1. -1. -1. -1.  1. -1. -1. -1.  0.  0. -1.  0. -1.  1.
  -1.  1. -1. -1. -1.  1.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.  1.  1.  1.  0.  1.  0.  1.  0.  1. -1.
  -1.  1.  1.  0.  1.  0.]
 [ 0.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  0.  0.  1.  0.  1.  0.  0.
  -1.  0. -1.  0.  0.  0.]
 [ 0.  0.  0.  1.  0.  0.  0.  0. -1.  0.  0.  0.  0. -1.  0.  0.  1.  0.
   0.  0. -1.  0.  0.  0.]
 [-1.  1.  1.  0.  0.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1. -1.
  -1.  1. -1.  1.  1.  0.]
 [-1.  0.  1.  0. -1.  0.  0.  0.  1. -1.  0.  0. -1. -1.  0.  0.  0.  0.
   0.  1.  1. -1. -1. -1.]
 [-1.  0.  0.  0. -1. -1.  1.  1. -1. -1.  1. -1.  1.  1.  0.  0.  1.  1.
  -1.  0.  0.  1. -1. -1.]
 [ 1.  0. -1.  1.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1. -1. -1.  1.  0.
  -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 224, -1.0: 116})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 285, -1.0: 114})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 285, -1.0: 114})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({-1.0: 225, 1.0: 97})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 225, 1.0: 97})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 110, 1.0: 103})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 223, -1.0: 171})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 223, -1.0: 171})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 214, -1.0: 110})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 275, -1.0: 62})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 168, -1.0: 116})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 169, 1.0: 111})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 219, -1.0: 111})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 230, -1.0: 112})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({1.0: 223, -1.0: 171})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
Counter({-1.0: 218, 1.0: 57})
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
positive and negative ratio
Counter({-1.0: 218, 1.0: 57})
after cutting matrix
[[-1. -1.  1. -1.  1.  1. -1.  1.  1.  0.  0.  0. -1.  1.  1.  1.  0.  0.
   0.  0.]
 [ 0.  0.  0.  0.  0.  0.  1.  0.  0.  1.  0. -1.  0.  1.  1.  0. -1. -1.
   0.  1.]
 [-1.  1.  0.  1. -1. -1.  1. -1. -1.  0.  0. -1.  0. -1.  1. -1.  1. -1.
  -1. -1.]
 [ 0.  0.  1.  0.  0.  0.  1.  1.  0.  1.  0.  1.  0.  1. -1. -1.  1.  1.
   0.  1.]
 [ 0.  0. -1.  0.  0.  0. -1.  0.  0.  0.  1.  0.  1.  0.  0. -1.  0. -1.
   0.  0.]
 [ 0.  0.  0.  1.  0.  0. -1.  0.  0.  0. -1.  0.  0.  1.  0.  0.  0. -1.
   0.  0.]
 [-1.  1.  1.  0.  1.  0.  0.  1.  0.  1.  0.  1.  1.  1. -1. -1.  1. -1.
   1.  1.]
 [-1.  0.  1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  0.  0.  0.  0.  1.  1.
  -1. -1.]
 [-1.  0.  0.  0.  1.  1. -1.  1. -1.  1.  1.  0.  0.  1.  1. -1.  0.  0.
   1. -1.]
 [ 1.  0. -1.  1.  1. -1. -1. -1.  0.  1.  1. -1. -1.  1.  0. -1. -1. -1.
   1.  1.]]
positive and negative ratio
Counter({-1.0: 268, 1.0: 53})
Counter({1.0: 103, -1.0: 51})
Counter({1.0: 224, -1.0: 116})
Counter({1.0: 164, -1.0: 51})
Counter({1.0: 202, -1.0: 57})
Counter({-1.0: 110, 1.0: 103})
Counter({-1.0: 273, 1.0: 243})
Counter({1.0: 214, -1.0: 110})
Counter({-1.0: 109, 1.0: 51})
Counter({1.0: 275, -1.0: 62})
Counter({1.0: 168, -1.0: 116})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 109, -1.0: 104})
Counter({1.0: 380, -1.0: 57})
Counter({1.0: 219, -1.0: 111})
Counter({-1.0: 336, 1.0: 51})
Counter({1.0: 230, -1.0: 112})
Counter({-1.0: 332, 1.0: 127})
Counter({1.0: 151, -1.0: 119})
Counter({1.0: 223, -1.0: 171})
cutting matrix's confusion matrix
[[11  3  0  0  0  0  0  0  2  1]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 17  1  0  1  0  0  2  0]
 [ 0  0  1  9  0  4  0  2  0  0]
 [ 0  0  0  0 13  0  0  0  0  4]
 [ 1  0  0  0  0 17  1  0  0  1]
 [ 1  0  0  0  0  3  6  0  5  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  0  1  0  0  5  2  0 12  0]
 [ 0  0  0  2  1  6  0  0  0  4]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果


SVM classifier
Time: 2019-01-09 23:13:47
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1.  1.]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({-1.0: 46, 1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:26,large_class sample len:140
cluster len:10
cluster contain small sample len:[1.0, 0.3, 0.2777777777777778, 0.06666666666666667, 0.0, 0.2, 0.05263157894736842, 0.5, 0.0, 0.42857142857142855]
before change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.  0.4 0.2 0.4]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:32,large_class sample len:134
cluster len:10
cluster contain small sample len:[0.7142857142857143, 0.3, 0.5555555555555556, 0.0, 0.0, 0.13333333333333333, 0.10526315789473684, 0.5, 0.2, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1.  1.  1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.  0.6 0.4 0.6]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:32,large_class sample len:134
cluster len:10
cluster contain small sample len:[0.7142857142857143, 0.3, 0.5555555555555556, 0.0, 0.0, 0.13333333333333333, 0.10526315789473684, 0.5, 0.2, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1.  1. -1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.  0.8 0.6 0.8]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.25 1.25]
 [0.   0.   0.25 0.25]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:32,large_class sample len:134
cluster len:10
cluster contain small sample len:[0.7142857142857143, 0.3, 0.5555555555555556, 0.0, 0.0, 0.13333333333333333, 0.10526315789473684, 0.5, 0.2, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.  1.  0.8 1. ]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 1.  1.  1. ]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.  1.2 1.  1.2]
 [0.  0.  1.2 1.  1.2]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.83 0.83 0.83 0.83]
 [0.   0.   0.17 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.  1.4 1.2 1.4]
 [0.  0.  1.4 1.2 1.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.71 0.71 0.71 0.71 0.71]
 [0.   0.   0.14 0.14 0.14 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:24,large_class sample len:142
cluster len:10
cluster contain small sample len:[0.5714285714285714, 0.2, 0.4444444444444444, 0.0, 0.0, 0.06666666666666667, 0.10526315789473684, 0.3125, 0.2, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.  1.4 1.4 1.4]
 [0.  0.  1.4 1.4 1.4]
 [0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.62 0.62 0.62 0.62 0.62 0.38]
 [0.   0.   0.12 0.12 0.12 0.12 0.12 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.  1.6 1.6 1.6]
 [0.  0.  1.6 1.6 1.6]
 [0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.56 0.56 0.56 0.56 0.56 0.33 0.56]
 [0.   0.   0.11 0.11 0.11 0.11 0.11 0.33 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.  1.8 1.8 1.8]
 [0.  0.  1.8 1.8 1.8]
 [0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.5 0.5 0.5 0.5 0.5 0.3 0.5 0.5]
 [0.  0.  0.1 0.1 0.1 0.1 0.1 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:24,large_class sample len:142
cluster len:10
cluster contain small sample len:[0.5714285714285714, 0.2, 0.4444444444444444, 0.0, 0.0, 0.06666666666666667, 0.10526315789473684, 0.3125, 0.2, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.  1.8 2.  1.8]
 [0.  0.  1.8 2.  1.8]
 [0.  0.  0.  0.6 0. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.45 0.45 0.45 0.45 0.45 0.27 0.45 0.45 0.27]
 [0.   0.   0.09 0.09 0.09 0.09 0.09 0.27 0.09 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.2 2.  2.  2. ]
 [0.  0.  1.8 2.2 1.8]
 [0.  0.  0.  0.8 0. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.42 0.42 0.42 0.42 0.42 0.25 0.42 0.42 0.25 0.17]
 [0.   0.   0.08 0.08 0.08 0.08 0.08 0.25 0.08 0.08 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:29,large_class sample len:137
cluster len:10
cluster contain small sample len:[0.2631578947368421, 0.125, 0.4, 0.2, 0.16666666666666666, 0.26666666666666666, 0.05, 0.2, 0.0, 0.0]
no one train sample is selected


============== iter  13 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 2.  2.  2. ]
 [0.  0.  2.  2.4 2. ]
 [0.  0.  0.  0.8 0. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.38 0.38 0.38 0.38 0.38 0.23 0.38 0.38 0.23 0.15 0.31]
 [0.   0.   0.08 0.08 0.08 0.08 0.08 0.23 0.08 0.08 0.23 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15 0.   0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1.  1.]
select_j_column
[ 1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:26,large_class sample len:140
cluster len:10
cluster contain small sample len:[1.0, 0.3, 0.2777777777777778, 0.06666666666666667, 0.0, 0.2, 0.05263157894736842, 0.5, 0.0, 0.42857142857142855]
before change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  0  1  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  0.4 2.2 2.  2.2]
 [0.  0.  2.2 2.4 2.2]
 [0.  0.  0.  1.  0. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.36 0.36 0.36 0.36 0.36 0.21 0.36 0.36 0.21 0.14 0.29 0.29]
 [0.   0.   0.07 0.07 0.07 0.07 0.07 0.21 0.07 0.07 0.21 0.29 0.14 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.   0.07 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 2.2 2.2 2.2]
 [0.  0.  2.4 2.4 2.4]
 [0.  0.  0.  1.2 0. ]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.33 0.33 0.33 0.33 0.33 0.2  0.33 0.33 0.2  0.13 0.27 0.27
  0.2 ]
 [0.   0.   0.07 0.07 0.07 0.07 0.07 0.2  0.07 0.07 0.2  0.27 0.13 0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.   0.07 0.2  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.07 0.07
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({-1.0: 56})
15 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.8 2.2 2.4 2.2]
 [0.  0.  2.6 2.4 2.6]
 [0.  0.  0.  1.4 0. ]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.31 0.31 0.31 0.31 0.31 0.19 0.31 0.31 0.19 0.12 0.25 0.25
  0.19 0.19]
 [0.   0.   0.06 0.06 0.06 0.06 0.06 0.19 0.06 0.06 0.19 0.25 0.12 0.
  0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.   0.06 0.19 0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.06 0.06
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({1.0: 46, -1.0: 10})
3 classifiers pre label
Counter({1.0: 46, -1.0: 10})
4 classifiers pre label
Counter({1.0: 46, -1.0: 10})
5 classifiers pre label
Counter({1.0: 46, -1.0: 10})
6 classifiers pre label
Counter({1.0: 46, -1.0: 10})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 46, -1.0: 10})
9 classifiers pre label
Counter({1.0: 46, -1.0: 10})
10 classifiers pre label
Counter({1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 56})
14 classifiers pre label
Counter({-1.0: 56})
15 classifiers pre label
Counter({-1.0: 56})
16 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.  2.4 2.4 2.4]
 [0.  0.  2.6 2.6 2.6]
 [0.  0.  0.  1.6 0. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.29 0.29 0.29 0.29 0.29 0.18 0.29 0.29 0.18 0.12 0.24 0.24
  0.18 0.18 0.18]
 [0.   0.   0.06 0.06 0.06 0.06 0.06 0.18 0.06 0.06 0.18 0.24 0.12 0.
  0.06 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.   0.06 0.18 0.18
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.06 0.06
  0.12 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.18
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24
  0.18 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.06 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.06 0.06 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})

**********      classifier acc  **************
[0.839, 0.786, 0.839, 0.839, 0.839, 0.839, 0.839, 0.911, 0.839, 0.839, 0.911, 0.536, 0.75, 0.786, 0.661, 0.661, 0.536]
before cutting matrix
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 111, 1.0: 55})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 111, 1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 137, 1.0: 29})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 137, 1.0: 29})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
positive and negative ratio
Counter({1.0: 111, -1.0: 55})
after cutting matrix
[[-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 140, -1.0: 26})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 116, -1.0: 50})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 140, -1.0: 26})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 5  0  4  0  0]
 [ 2  0  3  0  0]
 [ 1  0  2  0  0]]


SVM classifier
Time: 2019-01-09 23:13:51
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  0.]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
confusion matrix
[[21  3  0  1  0]
 [11  2  0  1  0]
 [ 3  3  0  3  0]
 [ 2  1  0  2  0]
 [ 1  1  0  1  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[-1.  0.  0.  0.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1.  0.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[21  0  4  0  0]
 [11  0  3  0  0]
 [ 3  0  5  1  0]
 [ 2  0  2  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.4 0.2]
 [0.  0.  0.2 0.4 0.2]
 [0.  0.  0.  0.4 0. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  0.  0. -1.  0.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 0.  1.  0.]
 [ 0. -1. -1.]
 [-1.  0. -1.]
 [ 0. -1.  0.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
confusion matrix
[[21  0  0  0  4]
 [10  0  2  0  2]
 [ 2  0  5  1  1]
 [ 2  0  1  1  1]
 [ 0  0  2  0  1]]
row HD
[[0.  0.6 0.4 0.6 0.4]
 [0.  0.  0.4 0.6 0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 0.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 1. -1.  0.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]
small_class len :1,large_class len:3, small_class sample:8,large_class sample len:140
extra_class: 1,extra_sample len: 18
cluster len:5
cluster contain small sample len:[0.3333333333333333, 0.2, 0.3333333333333333, 0.0, 0.375]
no one train sample is selected


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  1.]
 [ 0.  1.  0.  1.]
 [ 0. -1. -1.  0.]
 [-1.  0. -1.  1.]
 [ 0. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
confusion matrix
[[25  0  0  0  0]
 [12  0  1  1  0]
 [ 3  1  2  3  0]
 [ 3  0  0  2  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.6 0.6 0.6 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 0.25 0.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 1.  1.  0.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  1.  0.]
 [ 0.  1.  0.  1.  0.]
 [ 0. -1. -1.  0.  0.]
 [-1.  0. -1.  1.  1.]
 [ 0. -1.  0. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  1  4  1  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.6 0.6 0.8 0.8]
 [0.  0.  0.6 0.8 0.6]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.2 0.6 0.6]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  0. -1.]
select_j_column
[ 0.  0.  0.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
small_class len :1,large_class len:3, small_class sample:29,large_class sample len:129
extra_class: 1,extra_sample len: 8
cluster len:4
cluster contain small sample len:[0.7857142857142857, 0.9285714285714286, 0.5, 0.6666666666666666]
before change column[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
after change column[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.]
 [ 0.  1.  0.  1.  0.  1.]
 [ 0. -1. -1.  0.  0. -1.]
 [-1.  0. -1.  1.  1. -1.]
 [ 0. -1.  0. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  0  5  1  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.8 0.6 0.8 1. ]
 [0.  0.  0.8 1.  0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.17 0.5  0.5  0.67]
 [0.   0.   0.67 0.5  0.67 0.33]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:24,large_class sample len:142
cluster len:10
cluster contain small sample len:[0.5714285714285714, 0.2, 0.4444444444444444, 0.0, 0.0, 0.06666666666666667, 0.10526315789473684, 0.3125, 0.2, 0.0]
before change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.]
 [ 0. -1. -1.  0.  0. -1.  1.]
 [-1.  0. -1.  1.  1. -1. -1.]
 [ 0. -1.  0. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  0  6  0  0]
 [ 3  0  2  0  0]
 [ 1  0  2  0  0]]
row HD
[[0.  0.8 0.6 1.  1. ]
 [0.  0.  0.8 1.2 0.6]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.14 0.43 0.43 0.57 0.43]
 [0.   0.   0.57 0.43 0.57 0.29 0.57]
 [0.   0.   0.   0.57 0.57 0.43 0.43]
 [0.   0.   0.   0.   0.29 0.57 0.43]
 [0.   0.   0.   0.   0.   0.71 0.71]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  0. -1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  0.]
 [ 0. -1.  0. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  0  5  1  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.  0.6 1.2 1. ]
 [0.  0.  1.  1.4 0.8]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.12 0.38 0.38 0.5  0.38 0.62]
 [0.   0.   0.5  0.38 0.5  0.25 0.5  0.  ]
 [0.   0.   0.   0.5  0.5  0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.25 0.5  0.38 0.38]
 [0.   0.   0.   0.   0.   0.62 0.62 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[22  0  3  0  0]
 [11  0  3  0  0]
 [ 2  0  6  1  0]
 [ 2  0  2  1  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.2 0.8 1.4 1.2]
 [0.  0.  1.  1.4 0.8]
 [0.  0.  0.  1.2 0.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.11 0.33 0.33 0.44 0.33 0.56 0.33]
 [0.   0.   0.44 0.33 0.44 0.22 0.44 0.   0.33]
 [0.   0.   0.   0.44 0.44 0.33 0.33 0.44 0.22]
 [0.   0.   0.   0.   0.22 0.44 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.56 0.56 0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
confusion matrix
[[22  0  3  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 2  0  2  1  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.2 1.  1.6 1.4]
 [0.  0.  1.2 1.6 1. ]
 [0.  0.  0.  1.4 1. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.1 0.3 0.3 0.4 0.3 0.5 0.3 0.4]
 [0.  0.  0.4 0.3 0.4 0.2 0.4 0.  0.3 0.4]
 [0.  0.  0.  0.4 0.4 0.3 0.3 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.4 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  0. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]
small_class len :1,large_class len:3, small_class sample:8,large_class sample len:134
extra_class: 1,extra_sample len: 24
cluster len:4
cluster contain small sample len:[0.3333333333333333, 0.25, 0.2, 0.5]
no one train sample is selected


============== iter  11 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[22  0  3  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 2  0  2  1  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.2 1.  1.8 1.6]
 [0.  0.  1.2 1.8 1.2]
 [0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.09 0.27 0.27 0.36 0.27 0.45 0.27 0.36 0.36]
 [0.   0.   0.36 0.27 0.36 0.18 0.36 0.   0.27 0.36 0.18]
 [0.   0.   0.   0.36 0.36 0.27 0.27 0.36 0.18 0.27 0.36]
 [0.   0.   0.   0.   0.18 0.36 0.27 0.27 0.27 0.36 0.18]
 [0.   0.   0.   0.   0.   0.45 0.45 0.36 0.36 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.27 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  0. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]
small_class len :1,large_class len:3, small_class sample:8,large_class sample len:134
extra_class: 1,extra_sample len: 24
cluster len:4
cluster contain small sample len:[0.3333333333333333, 0.25, 0.2, 0.5]
no one train sample is selected


============== iter  12 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
11 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[22  0  3  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 2  0  2  1  0]
 [ 0  0  3  0  0]]
row HD
[[0.  1.2 1.  2.  1.8]
 [0.  0.  1.2 2.  1.4]
 [0.  0.  0.  1.8 1.4]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.08 0.25 0.25 0.33 0.25 0.42 0.25 0.33 0.33 0.33]
 [0.   0.   0.33 0.25 0.33 0.17 0.33 0.   0.25 0.33 0.17 0.17]
 [0.   0.   0.   0.33 0.33 0.25 0.25 0.33 0.17 0.25 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.33 0.25 0.25 0.25 0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.42 0.42 0.33 0.33 0.17 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.17 0.17 0.25 0.25 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
11 classifiers pre label
Counter({1.0: 53, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  0  4  2  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.4 1.2 2.  1.8]
 [0.  0.  1.2 2.2 1.6]
 [0.  0.  0.  2.  1.6]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.08 0.23 0.23 0.31 0.23 0.38 0.23 0.31 0.31 0.31 0.31]
 [0.   0.   0.31 0.23 0.31 0.15 0.31 0.   0.23 0.31 0.15 0.15 0.15]
 [0.   0.   0.   0.31 0.31 0.23 0.23 0.31 0.15 0.23 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.15 0.31 0.23 0.23 0.23 0.31 0.15 0.15 0.23]
 [0.   0.   0.   0.   0.   0.38 0.38 0.31 0.31 0.15 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.15 0.15 0.23 0.23 0.31 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.31 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.31 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[-1.  1. -1.  0. -1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  14 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1. -1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.  0.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1.  1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  0.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
11 classifiers pre label
Counter({1.0: 53, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 33, 1.0: 21, 0.0: 2})
confusion matrix
[[22  0  3  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.6 1.4 2.2 2. ]
 [0.  0.  1.4 2.2 1.8]
 [0.  0.  0.  2.2 1.6]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.07 0.21 0.21 0.29 0.21 0.36 0.21 0.29 0.29 0.29 0.29 0.21]
 [0.   0.   0.29 0.21 0.29 0.14 0.29 0.   0.21 0.29 0.14 0.14 0.14 0.21]
 [0.   0.   0.   0.29 0.29 0.21 0.21 0.29 0.14 0.21 0.29 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.14 0.29 0.21 0.21 0.21 0.29 0.14 0.14 0.21 0.14]
 [0.   0.   0.   0.   0.   0.36 0.36 0.29 0.29 0.14 0.29 0.29 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.14 0.14 0.21 0.21 0.29 0.29 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.29 0.14 0.14 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.14 0.14 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.21 0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1. -1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.  0.  0.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1.  1. -1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
11 classifiers pre label
Counter({1.0: 53, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 33, 1.0: 21, 0.0: 2})
14 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
confusion matrix
[[22  0  3  0  0]
 [11  0  3  0  0]
 [ 2  0  5  2  0]
 [ 3  0  1  1  0]
 [ 1  0  2  0  0]]
row HD
[[0.  1.8 1.6 2.4 2. ]
 [0.  0.  1.4 2.4 2. ]
 [0.  0.  0.  2.4 1.8]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.07 0.2  0.2  0.27 0.2  0.33 0.2  0.27 0.27 0.27 0.27 0.2
  0.07]
 [0.   0.   0.27 0.2  0.27 0.13 0.27 0.   0.2  0.27 0.13 0.13 0.13 0.2
  0.33]
 [0.   0.   0.   0.27 0.27 0.2  0.2  0.27 0.13 0.2  0.27 0.27 0.27 0.27
  0.13]
 [0.   0.   0.   0.   0.13 0.27 0.2  0.2  0.2  0.27 0.13 0.13 0.2  0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.33 0.33 0.27 0.27 0.13 0.27 0.27 0.27 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.13 0.13 0.2  0.2  0.27 0.27 0.13 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.27 0.13 0.13 0.13 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27 0.13 0.13 0.13 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.2  0.2  0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.33 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 1.  1.  1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]
small_class len :2,large_class len:2, small_class sample:26,large_class sample len:116
extra_class: 1,extra_sample len: 24
cluster len:5
cluster contain small sample len:[0.8333333333333334, 0.6, 1.0, 0.5, 0.4]
before change column[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  1.  0.  1.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.  0.  0. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1.  1. -1.  0.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
11 classifiers pre label
Counter({1.0: 53, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 33, 1.0: 21, 0.0: 2})
14 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
15 classifiers pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 4  0  2  3  0]
 [ 4  0  0  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.8 1.8 2.6 2.2]
 [0.  0.  1.6 2.6 2.2]
 [0.  0.  0.  2.6 1.8]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.06 0.19 0.19 0.25 0.19 0.31 0.19 0.25 0.25 0.25 0.25 0.19
  0.06 0.25]
 [0.   0.   0.25 0.19 0.25 0.12 0.25 0.   0.19 0.25 0.12 0.12 0.12 0.19
  0.31 0.06]
 [0.   0.   0.   0.25 0.25 0.19 0.19 0.25 0.12 0.19 0.25 0.25 0.25 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.12 0.25 0.19 0.19 0.19 0.25 0.12 0.12 0.19 0.12
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.31 0.31 0.25 0.25 0.12 0.25 0.25 0.25 0.19
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.12 0.12 0.19 0.19 0.25 0.25 0.12 0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.25 0.12 0.12 0.12 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25 0.12 0.12 0.12 0.19
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.19 0.19 0.31
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.31 0.25
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25
  0.25 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25
  0.25 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[ 1.  0. -1. -1.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  1.  0.  1.  0.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.  0.  0. -1. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1.  1. -1.  0. -1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 38, 0.0: 10, -1.0: 8})
1 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
2 classifiers pre label
Counter({1.0: 36, -1.0: 12, 0.0: 8})
3 classifiers pre label
Counter({1.0: 54, 0.0: 2})
4 classifiers pre label
Counter({0.0: 53, 1.0: 3})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({1.0: 56})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
8 classifiers pre label
Counter({1.0: 28, -1.0: 28})
9 classifiers pre label
Counter({0.0: 51, 1.0: 5})
10 classifiers pre label
Counter({1.0: 53, 0.0: 3})
11 classifiers pre label
Counter({1.0: 53, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 33, 1.0: 21, 0.0: 2})
14 classifiers pre label
Counter({1.0: 42, 0.0: 10, -1.0: 4})
15 classifiers pre label
Counter({1.0: 53, 0.0: 3})
16 classifiers pre label
Counter({1.0: 32, -1.0: 16, 0.0: 8})
confusion matrix
[[25  0  0  0  0]
 [12  0  2  0  0]
 [ 3  0  3  3  0]
 [ 3  0  1  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  2.  2.  2.8 2.4]
 [0.  0.  1.8 2.8 2.4]
 [0.  0.  0.  2.6 1.8]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.06 0.18 0.18 0.24 0.18 0.29 0.18 0.24 0.24 0.24 0.24 0.18
  0.06 0.24 0.12]
 [0.   0.   0.24 0.18 0.24 0.12 0.24 0.   0.18 0.24 0.12 0.12 0.12 0.18
  0.29 0.06 0.18]
 [0.   0.   0.   0.24 0.24 0.18 0.18 0.24 0.12 0.18 0.24 0.24 0.24 0.24
  0.12 0.18 0.06]
 [0.   0.   0.   0.   0.12 0.24 0.18 0.18 0.18 0.24 0.12 0.12 0.18 0.12
  0.18 0.12 0.18]
 [0.   0.   0.   0.   0.   0.29 0.29 0.24 0.24 0.12 0.24 0.24 0.24 0.18
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.12 0.12 0.18 0.18 0.24 0.24 0.12 0.18
  0.18 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.24 0.12 0.12 0.12 0.24
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24 0.12 0.12 0.12 0.18
  0.29 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.18 0.18 0.29
  0.18 0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29 0.24
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24
  0.24 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24
  0.24 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.24 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})

**********      classifier acc  **************
[0.767, 0.686, 0.769, 0.936, 0.125, 0.696, 0.911, 0.686, 0.804, 0.059, 0.902, 0.902, 0.589, 0.727, 0.727, 0.765, 0.786]
before cutting matrix
[[ 1. -1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1. -1.  1.  1.  1.]
 [ 0.  1.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  1.  0.  1.  0.]
 [ 0. -1. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.  0.  0. -1. -1.]
 [-1.  0. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1.  1. -1.  0. -1.]
 [ 0. -1.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 42})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({-1.0: 129, 1.0: 37})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({-1.0: 113, 1.0: 29})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({-1.0: 119, 1.0: 47})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 87, 1.0: 53})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({-1.0: 87, 1.0: 53})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 95, -1.0: 24})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
positive and negative ratio
Counter({1.0: 87, -1.0: 50})
after cutting matrix
[[ 1.  1.  1.  0. -1.  1. -1.  1.  0.  1.  1. -1.  1.  1.  1.]
 [ 0.  0.  1.  0.  1.  1.  1. -1.  0.  1.  1.  1.  0.  1.  0.]
 [ 0. -1.  0.  0. -1.  1. -1. -1. -1.  1.  1.  1.  0. -1. -1.]
 [-1. -1.  1.  1. -1. -1.  0. -1.  1.  0.  0. -1. -1.  0. -1.]
 [ 0.  0. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 87, -1.0: 24})
Counter({1.0: 87, -1.0: 42})
Counter({1.0: 140, -1.0: 8})
Counter({1.0: 24, -1.0: 8})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 142, -1.0: 24})
Counter({-1.0: 113, 1.0: 29})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 32, -1.0: 18})
Counter({1.0: 134, -1.0: 8})
Counter({1.0: 134, -1.0: 8})
Counter({-1.0: 119, 1.0: 47})
Counter({1.0: 95, -1.0: 24})
Counter({1.0: 116, -1.0: 26})
Counter({1.0: 87, -1.0: 50})
cutting matrix's confusion matrix
[[25  0  0  0  0]
 [13  0  1  0  0]
 [ 3  0  3  3  0]
 [ 3  0  1  1  0]
 [ 2  0  0  1  0]]


SVM classifier
Time: 2019-01-09 23:13:55
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1.  1. -1.  1.]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({-1.0: 35, 1.0: 32})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.   0.33 0.  ]
 [0.   0.   0.   0.33 0.   0.33]
 [0.   0.   0.   0.33 0.   0.33]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 0.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:31,large_class sample len:170
cluster len:20
cluster contain small sample len:[0.8, 0.7777777777777778, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2727272727272727, 0.0, 0.0, 0.0]
before change column[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
after change column[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [-1. -1.  1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 105, 1.0: 96})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  3  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0 11  0  0  0]
 [ 0  0  0  8  0  0]]
row HD
[[0.   0.33 0.5  0.17 0.5  0.17]
 [0.   0.   0.17 0.5  0.17 0.5 ]
 [0.   0.   0.   0.33 0.   0.33]
 [0.   0.   0.   0.   0.33 0.  ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 0. 1.]
 [0. 0. 1.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 148, 1.0: 53})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
2 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
3 classifiers pre label
Counter({-1.0: 49, 1.0: 18})
confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  3  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  0  0  0  8]]
row HD
[[0.   0.33 0.5  0.33 0.67 0.17]
 [0.   0.   0.17 0.67 0.33 0.5 ]
 [0.   0.   0.   0.5  0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.   0.75 0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None}
average_class_acc >= 0.8
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 148, 1.0: 53})

**********      classifier acc  **************
[0.985, 0.985, 0.94, 0.985]
before cutting matrix
[[ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 148, 1.0: 53})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 148, 1.0: 53})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 148, 1.0: 53})
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
after cutting matrix
[[ 1.  1.  1. -1.]
 [-1. -1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1.  1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 148, 1.0: 53})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0  9  3  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 0  0  0  0  0  8]]


SVM classifier
Time: 2019-01-09 23:13:56
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({0.0: 42, -1.0: 14, 1.0: 11})
confusion matrix
[[17  0  0  0  0  0]
 [11  0  0  1  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  6  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True}
select_i_column
[-1.  0.  0. -1.  0.  1.]
select_j_column
[ 1.  0. -1. -1.  0. -1.]
most_cplx_inx
1
new_column
None


============== iter  2 ================
current matrix is 
[ 0.  0.  0. -1.  1. -1.]
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
pre label
Counter({0.0: 42, -1.0: 14, 1.0: 11})
confusion matrix
[[17  0  0  0  0  0]
 [11  0  0  1  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  6  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True}
select_i_column
[ 1.  0. -1. -1.  0. -1.]
select_j_column
[ 0.  1.  0. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0.  1.]
 [ 0. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  0.]]
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
Counter({1.0: 124, -1.0: 68})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({0.0: 42, -1.0: 14, 1.0: 11})
1 classifiers pre label
Counter({1.0: 39, -1.0: 22, 0.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [11  0  0  1  0  0]
 [ 0  0 11  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 2  0  0  0  0  6]]
row HD
[[0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.17 0.17 0.33 0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 3.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: None}
select_i_column
[ 0.  1.  0. -1. -1.  1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 0. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1.  0.]
 [-1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '6': 8, '4': 8})
0 classifiers pre label
Counter({0.0: 42, -1.0: 14, 1.0: 11})
1 classifiers pre label
Counter({1.0: 39, -1.0: 22, 0.0: 6})
2 classifiers pre label
Counter({0.0: 34, 1.0: 27, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.17 0.33 0.5  0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   2.   1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
average_class_acc >= 0.8
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})

**********      classifier acc  **************
[0.889, 1.0, 0.935]
before cutting matrix
[[ 0.  1.  0.]
 [ 0.  1.  1.]
 [ 0. -1.  1.]
 [-1.  1. -1.]
 [ 1. -1.  0.]
 [-1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({-1.0: 37, 1.0: 25})
positive and negative ratio
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})
positive and negative ratio
Counter({1.0: 124, -1.0: 68})
positive and negative ratio
Counter({1.0: 74, -1.0: 28})
after cutting matrix
[[ 1.  0.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  0.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 124, -1.0: 68})
Counter({1.0: 74, -1.0: 28})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0  0  0  0 11  0]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-09 23:13:57
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({1.0: 131, -1.0: 57})
confusion matrix
[[17  1  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [ 7 19  0  0  0  0  0  0  0  0]
 [11  6  0  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [19  0  0  0  0  0  0  0  0  0]
 [ 3 14  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [ 4  0 19  0  0  0  0  0  3  0]
 [11  5  1  0  0  0  0  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  0  0  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 3 12  2  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.  0.1 0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.1 0.2 0.1 0.2 0.  0.  0.1 0.2]
 [0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:58,large_class sample len:504
cluster len:521
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
after change column[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [-1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 5  0  0  0  0  0 17  0  0  0]
 [ 4  0 19  0  0  0  0  0  3  0]
 [11  0  1  0  0  0  5  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  0  0  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 3  0  2  0  0  0 12  0  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.1 0.  0.1 0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.2 0.3 0.2 0.3 0.1 0.1 0.2 0.3]
 [0.  0.  0.  0.1 0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  1.]
 [-1.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1. -1. -1. -1.]
 [-1.  1. -1.  1.]
 [-1.  1. -1. -1.]
 [ 1.  1. -1.  1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 4  0  0  0  0  1  0 17  0  0]
 [ 3  0 19  0  0  1  0  0  3  0]
 [10  0  1  0  0  1  0  5  0  0]
 [ 2  0  0  0  0 21  0  0  0  0]
 [ 1  0  0  0  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 1  0  2  0  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 3  0  0  0  0 10  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.  0.1 0.1 0.2 0.3 0.1 0.1]
 [0.  0.  0.3 0.3 0.2 0.4 0.1 0.2 0.2 0.4]
 [0.  0.  0.  0.2 0.1 0.1 0.2 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.1 0.1 0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  1.25]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [-1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.4 0.2 0.1 0.1 0.1 0.3 0.4 0.1 0.2]
 [0.  0.  0.4 0.3 0.3 0.5 0.1 0.2 0.3 0.4]
 [0.  0.  0.  0.3 0.1 0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.  0.8]
 [0.  0.  0.6 0.8 1.4]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1. -1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.]
 [-1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 2  0 19  2  0  0  0  0  3  0]
 [ 1  0  1 10  0  0  0  5  0  0]
 [21  0  0  2  0  0  0  0  0  0]
 [16  0  0  1  0  0  0  0  2  0]
 [ 3  0  0  0  0  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 5  0  0  0  0  0  0  0  9  0]
 [10  0  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.1 0.1 0.2 0.3 0.4 0.1 0.2]
 [0.  0.  0.4 0.4 0.4 0.5 0.2 0.3 0.4 0.5]
 [0.  0.  0.  0.4 0.2 0.1 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.2 0.3 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   0.83 0.67 1.  ]
 [0.   0.   0.5  0.67 1.17 0.83]
 [0.   0.   0.   0.83 1.   0.33]
 [0.   0.   0.   0.   0.83 1.17]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.1 0.2 0.3 0.4 0.5 0.1 0.2]
 [0.  0.  0.4 0.5 0.4 0.5 0.2 0.3 0.5 0.6]
 [0.  0.  0.  0.5 0.2 0.1 0.4 0.3 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.4 0.2 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 0.71 0.57 0.86 0.14]
 [0.   0.   0.43 0.57 1.   0.71 0.86]
 [0.   0.   0.   0.71 0.86 0.29 0.71]
 [0.   0.   0.   0.   0.71 1.   0.57]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
confusion matrix
[[13  0  1  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  0 21  0  0  0  0]
 [ 0  0  0  1  0 16  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  2  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  3  0  0  9  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  0.7 0.4 0.1 0.2 0.3 0.5 0.6 0.2 0.2]
 [0.  0.  0.5 0.6 0.5 0.6 0.2 0.3 0.5 0.7]
 [0.  0.  0.  0.5 0.2 0.1 0.5 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.4 0.5 0.3 0.1]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 0.62 0.5  0.75 0.12 0.88]
 [0.   0.   0.38 0.5  0.88 0.62 0.75 0.  ]
 [0.   0.   0.   0.62 0.75 0.25 0.62 0.38]
 [0.   0.   0.   0.   0.62 0.88 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.62 0.88]
 [0.   0.   0.   0.   0.   0.   0.88 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :2,large_class len:8, small_class sample:106,large_class sample len:456
cluster len:373
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7368421052631579, 0.5, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
after change column[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.2 0.3 0.4 0.5 0.6 0.2 0.2]
 [0.  0.  0.6 0.6 0.5 0.6 0.3 0.4 0.6 0.8]
 [0.  0.  0.  0.6 0.3 0.2 0.5 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.5 0.6 0.4 0.2]
 [0.  0.  0.  0.  0.  0.3 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.67 0.56 0.44 0.67 0.11 0.78 0.56]
 [0.   0.   0.33 0.44 0.78 0.56 0.67 0.   0.44]
 [0.   0.   0.   0.56 0.67 0.22 0.56 0.33 0.78]
 [0.   0.   0.   0.   0.56 0.78 0.44 0.44 0.67]
 [0.   0.   0.   0.   0.   0.44 0.56 0.78 0.56]
 [0.   0.   0.   0.   0.   0.   0.78 0.56 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.3 0.3 0.4 0.5 0.6 0.3 0.2]
 [0.  0.  0.6 0.7 0.5 0.6 0.3 0.4 0.7 0.8]
 [0.  0.  0.  0.7 0.3 0.2 0.5 0.4 0.7 0.4]
 [0.  0.  0.  0.  0.4 0.5 0.6 0.7 0.4 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.6 0.5 0.4 0.6 0.1 0.7 0.5 0.3]
 [0.  0.  0.3 0.4 0.7 0.5 0.6 0.  0.4 0.4]
 [0.  0.  0.  0.5 0.6 0.2 0.5 0.3 0.7 0.3]
 [0.  0.  0.  0.  0.5 0.7 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.4 0.5 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.5 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.8 0.4 0.4 0.3 0.5 0.6 0.6 0.3 0.3]
 [0.  0.  0.6 0.8 0.5 0.7 0.4 0.4 0.7 0.9]
 [0.  0.  0.  0.8 0.3 0.3 0.6 0.4 0.7 0.5]
 [0.  0.  0.  0.  0.5 0.5 0.6 0.8 0.5 0.3]
 [0.  0.  0.  0.  0.  0.4 0.5 0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 0.7 0.8 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.55 0.45 0.36 0.55 0.09 0.64 0.45 0.27 0.64]
 [0.   0.   0.27 0.36 0.64 0.45 0.55 0.   0.36 0.36 0.36]
 [0.   0.   0.   0.45 0.55 0.18 0.45 0.27 0.64 0.27 0.45]
 [0.   0.   0.   0.   0.45 0.64 0.36 0.36 0.55 0.36 0.36]
 [0.   0.   0.   0.   0.   0.36 0.45 0.64 0.45 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.64 0.45 0.64 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.55 0.36 0.18 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.9 0.5 0.4 0.3 0.6 0.6 0.7 0.3 0.3]
 [0.  0.  0.6 0.9 0.6 0.7 0.5 0.4 0.8 1. ]
 [0.  0.  0.  0.9 0.4 0.3 0.7 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.5 0.6 0.6 0.9 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.5  0.42 0.33 0.5  0.08 0.58 0.42 0.25 0.58 0.25]
 [0.   0.   0.25 0.33 0.58 0.42 0.5  0.   0.33 0.33 0.33 0.5 ]
 [0.   0.   0.   0.42 0.5  0.17 0.42 0.25 0.58 0.25 0.42 0.58]
 [0.   0.   0.   0.   0.42 0.58 0.33 0.33 0.5  0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.33 0.42 0.58 0.42 0.42 0.25 0.42]
 [0.   0.   0.   0.   0.   0.   0.58 0.42 0.58 0.42 0.42 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.33 0.17 0.5  0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 4  0 19  2  0  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 5  0  0  1  0 13  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [12  0  0  0  0  2  0  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.9 0.5 0.5 0.3 0.6 0.6 0.7 0.4 0.4]
 [0.  0.  0.6 1.  0.6 0.7 0.5 0.4 0.9 1.1]
 [0.  0.  0.  1.  0.4 0.3 0.7 0.4 0.9 0.7]
 [0.  0.  0.  0.  0.6 0.7 0.7 1.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 1.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.46 0.38 0.31 0.46 0.08 0.54 0.38 0.23 0.54 0.23 0.15]
 [0.   0.   0.23 0.31 0.54 0.38 0.46 0.   0.31 0.31 0.31 0.46 0.38]
 [0.   0.   0.   0.38 0.46 0.15 0.38 0.23 0.54 0.23 0.38 0.54 0.31]
 [0.   0.   0.   0.   0.38 0.54 0.31 0.31 0.46 0.31 0.31 0.15 0.38]
 [0.   0.   0.   0.   0.   0.31 0.38 0.54 0.38 0.38 0.23 0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.54 0.38 0.54 0.38 0.38 0.69 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.15 0.46 0.15 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.31 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  14 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 4  0 19  2  0  1  0  0  0  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 5  0  0  1  0 13  0  0  0  0]
 [18  0  0  0  0  1  0  0  0  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [12  0  0  0  0  2  0  0  0  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.5 0.5 0.4 0.7 0.7 0.8 0.4 0.4]
 [0.  0.  0.7 1.1 0.6 0.7 0.5 0.4 1.  1.2]
 [0.  0.  0.  1.  0.5 0.4 0.8 0.5 0.9 0.7]
 [0.  0.  0.  0.  0.7 0.8 0.8 1.1 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 1.1 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.43 0.36 0.29 0.43 0.07 0.5  0.36 0.21 0.5  0.21 0.14 0.57]
 [0.   0.   0.21 0.29 0.5  0.36 0.43 0.   0.29 0.29 0.29 0.43 0.36 0.21]
 [0.   0.   0.   0.36 0.43 0.14 0.36 0.21 0.5  0.21 0.36 0.5  0.29 0.29]
 [0.   0.   0.   0.   0.36 0.5  0.29 0.29 0.43 0.29 0.29 0.14 0.36 0.36]
 [0.   0.   0.   0.   0.   0.29 0.36 0.5  0.36 0.36 0.21 0.36 0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.5  0.36 0.5  0.36 0.36 0.64 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.14 0.43 0.14 0.07 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29 0.43 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.29 0.36 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.07 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.6 0.5 0.5 0.7 0.7 0.8 0.5 0.4]
 [0.  0.  0.8 1.1 0.7 0.7 0.5 0.4 1.1 1.2]
 [0.  0.  0.  1.1 0.5 0.5 0.9 0.6 0.9 0.8]
 [0.  0.  0.  0.  0.8 0.8 0.8 1.1 0.6 0.3]
 [0.  0.  0.  0.  0.  0.6 0.6 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 1.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.4  0.33 0.27 0.4  0.07 0.47 0.33 0.2  0.47 0.2  0.13 0.53
  0.4 ]
 [0.   0.   0.2  0.27 0.47 0.33 0.4  0.   0.27 0.27 0.27 0.4  0.33 0.2
  0.33]
 [0.   0.   0.   0.33 0.4  0.13 0.33 0.2  0.47 0.2  0.33 0.47 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.33 0.47 0.27 0.27 0.4  0.27 0.27 0.13 0.33 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.27 0.33 0.47 0.33 0.33 0.2  0.33 0.4  0.4
  0.13]
 [0.   0.   0.   0.   0.   0.   0.47 0.33 0.47 0.33 0.33 0.6  0.4  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.13 0.4  0.13 0.07 0.6
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27 0.4  0.33 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.27 0.33 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.07 0.47
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.47 0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.7 0.5 0.6 0.8 0.7 0.8 0.6 0.4]
 [0.  0.  0.9 1.1 0.8 0.8 0.5 0.4 1.2 1.2]
 [0.  0.  0.  1.2 0.5 0.5 1.  0.7 0.9 0.9]
 [0.  0.  0.  0.  0.9 0.9 0.8 1.1 0.7 0.3]
 [0.  0.  0.  0.  0.  0.6 0.7 0.8 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.2 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.38 0.31 0.25 0.38 0.06 0.44 0.31 0.19 0.44 0.19 0.12 0.5
  0.38 0.31]
 [0.   0.   0.19 0.25 0.44 0.31 0.38 0.   0.25 0.25 0.25 0.38 0.31 0.19
  0.31 0.38]
 [0.   0.   0.   0.31 0.38 0.12 0.31 0.19 0.44 0.19 0.31 0.44 0.25 0.25
  0.25 0.31]
 [0.   0.   0.   0.   0.31 0.44 0.25 0.25 0.38 0.25 0.25 0.12 0.31 0.31
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.25 0.31 0.44 0.31 0.31 0.19 0.31 0.38 0.38
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.44 0.31 0.44 0.31 0.31 0.56 0.38 0.25
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.12 0.38 0.12 0.06 0.56
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.38 0.31 0.19
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.25 0.31 0.44
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.06 0.44
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.44 0.31
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.44
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.7 0.6 0.6 0.8 0.7 0.8 0.7 0.5]
 [0.  0.  0.9 1.2 0.8 0.8 0.5 0.4 1.3 1.3]
 [0.  0.  0.  1.3 0.5 0.5 1.  0.7 1.  1. ]
 [0.  0.  0.  0.  1.  1.  0.9 1.2 0.7 0.3]
 [0.  0.  0.  0.  0.  0.6 0.7 0.8 0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 1.3 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.3 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.35 0.29 0.24 0.35 0.06 0.41 0.29 0.18 0.41 0.18 0.12 0.47
  0.35 0.29 0.12]
 [0.   0.   0.18 0.24 0.41 0.29 0.35 0.   0.24 0.24 0.24 0.35 0.29 0.18
  0.29 0.35 0.29]
 [0.   0.   0.   0.29 0.35 0.12 0.29 0.18 0.41 0.18 0.29 0.41 0.24 0.24
  0.24 0.29 0.24]
 [0.   0.   0.   0.   0.29 0.41 0.24 0.24 0.35 0.24 0.24 0.12 0.29 0.29
  0.29 0.35 0.29]
 [0.   0.   0.   0.   0.   0.24 0.29 0.41 0.29 0.29 0.18 0.29 0.35 0.35
  0.12 0.06 0.35]
 [0.   0.   0.   0.   0.   0.   0.41 0.29 0.41 0.29 0.29 0.53 0.35 0.24
  0.24 0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.12 0.35 0.12 0.06 0.53
  0.29 0.35 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.24 0.35 0.29 0.18
  0.29 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.24 0.29 0.41
  0.29 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.06 0.41
  0.18 0.24 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.41 0.29
  0.18 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.41
  0.29 0.35 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47
  0.24 0.29 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.29 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  0  1  0  0  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.8 0.6 0.7 0.9 0.7 0.8 0.8 0.5]
 [0.  0.  1.  1.2 0.9 0.9 0.5 0.4 1.4 1.3]
 [0.  0.  0.  1.4 0.5 0.5 1.1 0.8 1.  1.1]
 [0.  0.  0.  0.  1.1 1.1 0.9 1.2 0.8 0.3]
 [0.  0.  0.  0.  0.  0.6 0.8 0.9 0.9 1.2]
 [0.  0.  0.  0.  0.  0.  1.  0.9 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.3 1.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.39 0.33 0.28 0.22 0.33 0.06 0.39 0.28 0.17 0.39 0.17 0.11 0.44
  0.33 0.28 0.11 0.28]
 [0.   0.   0.17 0.22 0.39 0.28 0.33 0.   0.22 0.22 0.22 0.33 0.28 0.17
  0.28 0.33 0.28 0.33]
 [0.   0.   0.   0.28 0.33 0.11 0.28 0.17 0.39 0.17 0.28 0.39 0.22 0.22
  0.22 0.28 0.22 0.28]
 [0.   0.   0.   0.   0.28 0.39 0.22 0.22 0.33 0.22 0.22 0.11 0.28 0.28
  0.28 0.33 0.28 0.33]
 [0.   0.   0.   0.   0.   0.22 0.28 0.39 0.28 0.28 0.17 0.28 0.33 0.33
  0.11 0.06 0.33 0.06]
 [0.   0.   0.   0.   0.   0.   0.39 0.28 0.39 0.28 0.28 0.5  0.33 0.22
  0.22 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.11 0.33 0.11 0.06 0.5
  0.28 0.33 0.06 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.22 0.22 0.33 0.28 0.17
  0.28 0.33 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.22 0.28 0.39
  0.28 0.33 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.06 0.39
  0.17 0.22 0.06 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.39 0.28
  0.17 0.22 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.39
  0.28 0.33 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44
  0.22 0.28 0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.28 0.44 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.22 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.28 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[-1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  19 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.9 0.7 0.8 1.  0.7 0.8 0.8 0.6]
 [0.  0.  1.1 1.3 1.  1.  0.5 0.4 1.4 1.4]
 [0.  0.  0.  1.4 0.5 0.5 1.2 0.9 1.1 1.1]
 [0.  0.  0.  0.  1.1 1.1 1.  1.3 0.9 0.3]
 [0.  0.  0.  0.  0.  0.6 0.9 1.  1.  1.2]
 [0.  0.  0.  0.  0.  0.  1.1 1.  1.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.3 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.37 0.32 0.26 0.21 0.32 0.05 0.37 0.26 0.16 0.37 0.16 0.11 0.42
  0.32 0.26 0.11 0.26 0.32]
 [0.   0.   0.16 0.21 0.37 0.26 0.32 0.   0.21 0.21 0.21 0.32 0.26 0.16
  0.26 0.32 0.26 0.32 0.05]
 [0.   0.   0.   0.26 0.32 0.11 0.26 0.16 0.37 0.16 0.26 0.37 0.21 0.21
  0.21 0.26 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.26 0.37 0.21 0.21 0.32 0.21 0.21 0.11 0.26 0.26
  0.26 0.32 0.26 0.32 0.16]
 [0.   0.   0.   0.   0.   0.21 0.26 0.37 0.26 0.26 0.16 0.26 0.32 0.32
  0.11 0.05 0.32 0.05 0.32]
 [0.   0.   0.   0.   0.   0.   0.37 0.26 0.37 0.26 0.26 0.47 0.32 0.21
  0.21 0.16 0.32 0.16 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.21 0.11 0.32 0.11 0.05 0.47
  0.26 0.32 0.05 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.32 0.26 0.16
  0.26 0.32 0.26 0.32 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.21 0.21 0.26 0.37
  0.26 0.32 0.26 0.32 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.21 0.05 0.37
  0.16 0.21 0.05 0.21 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.37 0.26
  0.16 0.21 0.37 0.21 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.37
  0.26 0.32 0.16 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42
  0.21 0.26 0.   0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.32 0.26 0.42 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.21 0.05 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
19 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.9 0.7 0.8 1.1 0.8 0.8 0.9 0.6]
 [0.  0.  1.1 1.3 1.  1.1 0.6 0.4 1.5 1.4]
 [0.  0.  0.  1.4 0.5 0.6 1.3 0.9 1.2 1.1]
 [0.  0.  0.  0.  1.1 1.2 1.1 1.3 1.  0.3]
 [0.  0.  0.  0.  0.  0.7 1.  1.  1.1 1.2]
 [0.  0.  0.  0.  0.  0.  1.1 1.1 1.4 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.4 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.3  0.25 0.2  0.3  0.05 0.35 0.25 0.15 0.35 0.15 0.1  0.4
  0.3  0.25 0.1  0.25 0.3  0.2 ]
 [0.   0.   0.15 0.2  0.35 0.25 0.3  0.   0.2  0.2  0.2  0.3  0.25 0.15
  0.25 0.3  0.25 0.3  0.05 0.15]
 [0.   0.   0.   0.25 0.3  0.1  0.25 0.15 0.35 0.15 0.25 0.35 0.2  0.2
  0.2  0.25 0.2  0.25 0.2  0.2 ]
 [0.   0.   0.   0.   0.25 0.35 0.2  0.2  0.3  0.2  0.2  0.1  0.25 0.25
  0.25 0.3  0.25 0.3  0.15 0.25]
 [0.   0.   0.   0.   0.   0.2  0.25 0.35 0.25 0.25 0.15 0.25 0.3  0.3
  0.1  0.05 0.3  0.05 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.25 0.35 0.25 0.25 0.45 0.3  0.2
  0.2  0.15 0.3  0.15 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.2  0.1  0.3  0.1  0.05 0.45
  0.25 0.3  0.05 0.3  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.2  0.3  0.25 0.15
  0.25 0.3  0.25 0.3  0.05 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.2  0.2  0.25 0.35
  0.25 0.3  0.25 0.3  0.15 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.2  0.05 0.35
  0.15 0.2  0.05 0.2  0.25 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.35 0.25
  0.15 0.2  0.35 0.2  0.15 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.35
  0.25 0.3  0.15 0.3  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.2  0.25 0.   0.25 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.25 0.4  0.25 0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.2  0.05 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.   0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  21 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.  1.  1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
19 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
20 classifiers pre label
Counter({1.0: 119, -1.0: 69})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  1.  0.9 0.8 0.9 1.2 0.8 0.8 0.9 0.6]
 [0.  0.  1.1 1.4 1.1 1.2 0.6 0.4 1.5 1.4]
 [0.  0.  0.  1.5 0.6 0.7 1.3 0.9 1.2 1.1]
 [0.  0.  0.  0.  1.1 1.2 1.2 1.4 1.1 0.4]
 [0.  0.  0.  0.  0.  0.7 1.1 1.1 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  1.2 1.2 1.5 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.29 0.24 0.19 0.29 0.05 0.33 0.24 0.14 0.33 0.14 0.1  0.38
  0.29 0.24 0.1  0.24 0.29 0.19 0.29]
 [0.   0.   0.14 0.19 0.33 0.24 0.29 0.   0.19 0.19 0.19 0.29 0.24 0.14
  0.24 0.29 0.24 0.29 0.05 0.14 0.14]
 [0.   0.   0.   0.24 0.29 0.1  0.24 0.14 0.33 0.14 0.24 0.33 0.19 0.19
  0.19 0.24 0.19 0.24 0.19 0.19 0.29]
 [0.   0.   0.   0.   0.24 0.33 0.19 0.19 0.29 0.19 0.19 0.1  0.24 0.24
  0.24 0.29 0.24 0.29 0.14 0.24 0.24]
 [0.   0.   0.   0.   0.   0.19 0.24 0.33 0.24 0.24 0.14 0.24 0.29 0.29
  0.1  0.05 0.29 0.05 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.33 0.24 0.33 0.24 0.24 0.43 0.29 0.19
  0.19 0.14 0.29 0.14 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.19 0.1  0.29 0.1  0.05 0.43
  0.24 0.29 0.05 0.29 0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.19 0.29 0.24 0.14
  0.24 0.29 0.24 0.29 0.05 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.19 0.19 0.24 0.33
  0.24 0.29 0.24 0.29 0.14 0.24 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.19 0.05 0.33
  0.14 0.19 0.05 0.19 0.24 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.33 0.24
  0.14 0.19 0.33 0.19 0.14 0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.33
  0.24 0.29 0.14 0.29 0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.19 0.24 0.   0.24 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.24 0.38 0.24 0.19 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.19 0.05 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24 0.   0.33 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.24 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.19 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  22 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.  1.  1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
19 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
20 classifiers pre label
Counter({1.0: 119, -1.0: 69})
21 classifiers pre label
Counter({1.0: 142, -1.0: 46})
confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.  0.9 0.8 1.  1.2 0.9 0.8 0.9 0.7]
 [0.  0.  1.1 1.4 1.2 1.2 0.7 0.4 1.5 1.5]
 [0.  0.  0.  1.5 0.7 0.7 1.4 0.9 1.2 1.2]
 [0.  0.  0.  0.  1.2 1.2 1.3 1.4 1.1 0.5]
 [0.  0.  0.  0.  0.  0.8 1.1 1.2 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.5 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.27 0.23 0.18 0.27 0.05 0.32 0.23 0.14 0.32 0.14 0.09 0.36
  0.27 0.23 0.09 0.23 0.27 0.18 0.27 0.18]
 [0.   0.   0.14 0.18 0.32 0.23 0.27 0.   0.18 0.18 0.18 0.27 0.23 0.14
  0.23 0.27 0.23 0.27 0.05 0.14 0.14 0.23]
 [0.   0.   0.   0.23 0.27 0.09 0.23 0.14 0.32 0.14 0.23 0.32 0.18 0.18
  0.18 0.23 0.18 0.23 0.18 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.23 0.32 0.18 0.18 0.27 0.18 0.18 0.09 0.23 0.23
  0.23 0.27 0.23 0.27 0.14 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.18 0.23 0.32 0.23 0.23 0.14 0.23 0.27 0.27
  0.09 0.05 0.27 0.05 0.27 0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.32 0.23 0.32 0.23 0.23 0.41 0.27 0.18
  0.18 0.14 0.27 0.14 0.27 0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.09 0.27 0.09 0.05 0.41
  0.23 0.27 0.05 0.27 0.23 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.18 0.27 0.23 0.14
  0.23 0.27 0.23 0.27 0.05 0.14 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.18 0.23 0.32
  0.23 0.27 0.23 0.27 0.14 0.23 0.05 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.05 0.32
  0.14 0.18 0.05 0.18 0.23 0.14 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.32 0.23
  0.14 0.18 0.32 0.18 0.14 0.32 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.32
  0.23 0.27 0.14 0.27 0.23 0.23 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36
  0.18 0.23 0.   0.23 0.27 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27 0.23 0.36 0.23 0.18 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.05 0.18 0.05 0.27 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.23 0.   0.32 0.14 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.23 0.27 0.18 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32 0.14 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.18 0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  23 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
19 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
20 classifiers pre label
Counter({1.0: 119, -1.0: 69})
21 classifiers pre label
Counter({1.0: 142, -1.0: 46})
22 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.  0.9 0.8 1.1 1.3 1.  0.9 0.9 0.8]
 [0.  0.  1.1 1.4 1.3 1.3 0.8 0.5 1.5 1.6]
 [0.  0.  0.  1.5 0.8 0.8 1.5 1.  1.2 1.3]
 [0.  0.  0.  0.  1.3 1.3 1.4 1.5 1.1 0.6]
 [0.  0.  0.  0.  0.  0.8 1.1 1.2 1.4 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.6 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.26 0.22 0.17 0.26 0.04 0.3  0.22 0.13 0.3  0.13 0.09 0.35
  0.26 0.22 0.09 0.22 0.26 0.17 0.26 0.17 0.17]
 [0.   0.   0.13 0.17 0.3  0.22 0.26 0.   0.17 0.17 0.17 0.26 0.22 0.13
  0.22 0.26 0.22 0.26 0.04 0.13 0.13 0.22 0.22]
 [0.   0.   0.   0.22 0.26 0.09 0.22 0.13 0.3  0.13 0.22 0.3  0.17 0.17
  0.17 0.22 0.17 0.22 0.17 0.17 0.26 0.26 0.17]
 [0.   0.   0.   0.   0.22 0.3  0.17 0.17 0.26 0.17 0.17 0.09 0.22 0.22
  0.22 0.26 0.22 0.26 0.13 0.22 0.22 0.22 0.13]
 [0.   0.   0.   0.   0.   0.17 0.22 0.3  0.22 0.22 0.13 0.22 0.26 0.26
  0.09 0.04 0.26 0.04 0.26 0.17 0.26 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.3  0.22 0.3  0.22 0.22 0.39 0.26 0.17
  0.17 0.13 0.26 0.13 0.26 0.17 0.26 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.17 0.09 0.26 0.09 0.04 0.39
  0.22 0.26 0.04 0.26 0.22 0.22 0.22 0.22 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.17 0.26 0.22 0.13
  0.22 0.26 0.22 0.26 0.04 0.13 0.13 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.17 0.17 0.22 0.3
  0.22 0.26 0.22 0.26 0.13 0.22 0.04 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.17 0.04 0.3
  0.13 0.17 0.04 0.17 0.22 0.13 0.3  0.22 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.3  0.22
  0.13 0.17 0.3  0.17 0.13 0.3  0.13 0.13 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.3
  0.22 0.26 0.13 0.26 0.22 0.22 0.22 0.3  0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.17 0.22 0.   0.22 0.26 0.17 0.26 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.22 0.35 0.22 0.17 0.17 0.26 0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.04 0.17 0.04 0.26 0.17 0.26 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.   0.3  0.13 0.3  0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22 0.26 0.17 0.26 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.13 0.3  0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.09 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.26 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 131, -1.0: 57})
1 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
2 classifiers pre label
Counter({-1.0: 188})
3 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
4 classifiers pre label
Counter({1.0: 131, -1.0: 57})
5 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
6 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
7 classifiers pre label
Counter({-1.0: 123, 1.0: 65})
8 classifiers pre label
Counter({1.0: 119, -1.0: 69})
9 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
10 classifiers pre label
Counter({1.0: 119, -1.0: 69})
11 classifiers pre label
Counter({1.0: 131, -1.0: 57})
12 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
13 classifiers pre label
Counter({1.0: 98, -1.0: 90})
14 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
15 classifiers pre label
Counter({1.0: 95, -1.0: 93})
16 classifiers pre label
Counter({-1.0: 165, 1.0: 23})
17 classifiers pre label
Counter({1.0: 95, -1.0: 93})
18 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
19 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
20 classifiers pre label
Counter({1.0: 119, -1.0: 69})
21 classifiers pre label
Counter({1.0: 142, -1.0: 46})
22 classifiers pre label
Counter({1.0: 95, -1.0: 93})
23 classifiers pre label
Counter({1.0: 100, -1.0: 88})
confusion matrix
[[16  0  1  0  0  0  0  0  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  2  1  0  0  0 12  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.1 1.  0.8 1.1 1.4 1.1 1.  1.  0.8]
 [0.  0.  1.1 1.5 1.4 1.3 0.8 0.5 1.5 1.7]
 [0.  0.  0.  1.6 0.9 0.8 1.5 1.  1.2 1.4]
 [0.  0.  0.  0.  1.3 1.4 1.5 1.6 1.2 0.6]
 [0.  0.  0.  0.  0.  0.9 1.2 1.3 1.5 1.3]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 1.6 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.25 0.21 0.17 0.25 0.04 0.29 0.21 0.12 0.29 0.12 0.08 0.33
  0.25 0.21 0.08 0.21 0.25 0.17 0.25 0.17 0.17 0.12]
 [0.   0.   0.12 0.17 0.29 0.21 0.25 0.   0.17 0.17 0.17 0.25 0.21 0.12
  0.21 0.25 0.21 0.25 0.04 0.12 0.12 0.21 0.21 0.33]
 [0.   0.   0.   0.21 0.25 0.08 0.21 0.12 0.29 0.12 0.21 0.29 0.17 0.17
  0.17 0.21 0.17 0.21 0.17 0.17 0.25 0.25 0.17 0.21]
 [0.   0.   0.   0.   0.21 0.29 0.17 0.17 0.25 0.17 0.17 0.08 0.21 0.21
  0.21 0.25 0.21 0.25 0.12 0.21 0.21 0.21 0.12 0.17]
 [0.   0.   0.   0.   0.   0.17 0.21 0.29 0.21 0.21 0.12 0.21 0.25 0.25
  0.08 0.04 0.25 0.04 0.25 0.17 0.25 0.17 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.29 0.21 0.29 0.21 0.21 0.38 0.25 0.17
  0.17 0.12 0.25 0.12 0.25 0.17 0.25 0.17 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.08 0.25 0.08 0.04 0.38
  0.21 0.25 0.04 0.25 0.21 0.21 0.21 0.21 0.12 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.17 0.25 0.21 0.12
  0.21 0.25 0.21 0.25 0.04 0.12 0.12 0.21 0.21 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.17 0.21 0.29
  0.21 0.25 0.21 0.25 0.12 0.21 0.04 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.04 0.29
  0.12 0.17 0.04 0.17 0.21 0.12 0.29 0.21 0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.29 0.21
  0.12 0.17 0.29 0.17 0.12 0.29 0.12 0.12 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29
  0.21 0.25 0.12 0.25 0.21 0.21 0.21 0.29 0.21 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.17 0.21 0.   0.21 0.25 0.17 0.25 0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.21 0.33 0.21 0.17 0.17 0.25 0.25 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.04 0.17 0.04 0.25 0.17 0.25 0.25 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.   0.29 0.12 0.29 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.25 0.17 0.25 0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.12 0.29 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.08 0.17 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.25 0.25 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})

**********      classifier acc  **************
[0.66, 0.846, 0.883, 0.644, 0.782, 0.723, 0.691, 0.846, 0.734, 0.819, 0.676, 0.782, 0.782, 0.713, 0.713, 0.761, 0.782, 0.761, 0.851, 0.846, 0.809, 0.771, 0.681, 0.761]
before cutting matrix
[[ 1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.  1.  1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.
  -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1.  1.  1. -1.  1.
  -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.
  -1.  1. -1.  1. -1. -1.]
 [-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.
   1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1. -1. -1. -1.
   1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.
   1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.
  -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({1.0: 321, -1.0: 241})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 380, 1.0: 182})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 380, 1.0: 182})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({1.0: 328, -1.0: 234})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({1.0: 328, -1.0: 234})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 345, -1.0: 217})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({1.0: 345, -1.0: 217})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({1.0: 289, -1.0: 273})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 390, 1.0: 172})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 390, 1.0: 172})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 323, 1.0: 239})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 323, 1.0: 239})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 282, 1.0: 280})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 282, 1.0: 280})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
Counter({-1.0: 353, 1.0: 209})
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
positive and negative ratio
Counter({-1.0: 353, 1.0: 209})
after cutting matrix
[[-1. -1.  1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.  1.  1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [-1. -1.  1.  1. -1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1.  1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 321, -1.0: 241})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 333, 1.0: 229})
Counter({-1.0: 446, 1.0: 116})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 395, 1.0: 167})
Counter({1.0: 289, -1.0: 273})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 395, 1.0: 167})
Counter({-1.0: 323, 1.0: 239})
Counter({-1.0: 284, 1.0: 278})
Counter({-1.0: 390, 1.0: 172})
Counter({1.0: 386, -1.0: 176})
Counter({1.0: 413, -1.0: 149})
cutting matrix's confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]


SVM classifier
Time: 2019-01-09 23:14:31
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
confusion matrix
[[16  2  0  0  0  0  0  0  0  0]
 [ 1  4  0 17  0  0  0  0  0  0]
 [ 1 25  0  0  0  0  0  0  0  0]
 [ 0 12  0  5  0  0  0  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 3 16  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 2  3  0 12  0  0  0  0  0  0]
 [ 3 11  0  0  0  0  0  0  0  0]
 [ 1 12  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]
small_class len :1,large_class len:5, small_class sample:44,large_class sample len:267
extra_class: 4,extra_sample len: 251
cluster len:265
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]
after change column[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 0. -1.]
 [ 0.  0.]
 [ 1. -1.]
 [ 0. -1.]
 [-1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [-1.  0.]
 [ 0. -1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  5 17  0  0  0  3  0  0  0]
 [ 0 11  1  0  0  0  0  5  0  0]
 [ 0 21  0  0  0  2  0  0  0  0]
 [ 0 14  0  0  0  3  2  0  0  0]
 [ 2  1  0  0  0  0 16  0  0  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  2  0  0  0  1  9  0  0  0]
 [ 0 12  0  0  0  1  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.2 0.2 0.1 0.1]
 [0.  0.  0.1 0.1 0.  0.2 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.2 0.1 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 0. -1.  0.]
 [ 0.  0.  1.]
 [ 1. -1.  0.]
 [ 0. -1. -1.]
 [-1.  0.  1.]
 [ 0.  1. -1.]
 [ 1.  0. -1.]
 [-1.  0. -1.]
 [ 0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
confusion matrix
[[13  1  0  0  0  3  1  0  0  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  4 17  0  1  0  3  0  0  0]
 [ 0 10  1  0  1  0  0  5  0  0]
 [ 0  2  0  0 19  2  0  0  0  0]
 [ 0  1  0  0 13  3  2  0  0  0]
 [ 2  0  0  0  1  0 16  0  0  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  9  0  0  0]
 [ 0  3  0  0  9  1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.1 0.3 0.3 0.2 0.2]
 [0.  0.  0.2 0.1 0.1 0.3 0.2 0.3 0.3 0. ]
 [0.  0.  0.  0.3 0.2 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.2 0.3 0.1]
 [0.  0.  0.  0.  0.  0.3 0.1 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.33]
 [0.   0.   3.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[-1. -1.  0. -1. -1.  0.  1.  0.  0. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]
small_class len :1,large_class len:8, small_class sample:44,large_class sample len:452
extra_class: 1,extra_sample len: 66
cluster len:87
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]
after change column[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 0. -1.  0. -1.]
 [ 0.  0.  1. -1.]
 [ 1. -1.  0. -1.]
 [ 0. -1. -1. -1.]
 [-1.  0.  1. -1.]
 [ 0.  1. -1.  1.]
 [ 1.  0. -1.  0.]
 [-1.  0. -1. -1.]
 [ 0. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  4 17  0  1  0  0  0  3  0]
 [ 0 10  1  0  1  0  0  5  0  0]
 [ 0  2  0  0 19  2  0  0  0  0]
 [ 0  1  0  0 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  3  0  0  9  1  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.1 0.4 0.4 0.2 0.2]
 [0.  0.  0.2 0.1 0.1 0.3 0.3 0.4 0.3 0. ]
 [0.  0.  0.  0.3 0.2 0.1 0.3 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.3 0.2 0.3 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.75 1.75]
 [0.   0.   2.25 0.75]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.  0.]
 [ 0. -1.  0. -1. -1.]
 [ 0.  0.  1. -1. -1.]
 [ 1. -1.  0. -1. -1.]
 [ 0. -1. -1. -1.  0.]
 [-1.  0.  1. -1. -1.]
 [ 0.  1. -1.  1. -1.]
 [ 1.  0. -1.  0. -1.]
 [-1.  0. -1. -1.  1.]
 [ 0. -1.  0. -1.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  4 17  0  1  0  0  0  3  0]
 [ 0 10  1  0  1  0  0  5  0  0]
 [ 0  2  0  0 19  2  0  0  0  0]
 [ 0  1  0  0 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  3  0  0  9  1  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.3 0.2 0.2 0.5 0.5 0.3 0.3]
 [0.  0.  0.2 0.1 0.2 0.3 0.3 0.4 0.4 0.1]
 [0.  0.  0.  0.3 0.3 0.1 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.4 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.4 0.3 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.4 1.4 1.6]
 [0.  0.  1.8 0.6 1.6]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.]
 [ 0.  0.  1. -1. -1.  0.]
 [ 1. -1.  0. -1. -1. -1.]
 [ 0. -1. -1. -1.  0.  1.]
 [-1.  0.  1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.]
 [ 1.  0. -1.  0. -1.  0.]
 [-1.  0. -1. -1.  1.  1.]
 [ 0. -1.  0. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  5 17  0  0  0  0  0  3  0]
 [ 0 11  1  0  0  0  0  5  0  0]
 [ 0 21  0  0  0  2  0  0  0  0]
 [ 0 14  0  0  0  3  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  2  0  0  0  1  0  0  9  0]
 [ 0 12  0  0  0  1  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.4 0.2 0.3 0.6 0.6 0.3 0.4]
 [0.  0.  0.2 0.2 0.3 0.4 0.4 0.4 0.5 0.1]
 [0.  0.  0.  0.4 0.4 0.2 0.4 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.5 0.4 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.17 1.17 1.33 1.  ]
 [0.   0.   1.5  0.5  1.33 1.17]
 [0.   0.   0.   1.33 1.33 1.  ]
 [0.   0.   0.   0.   1.   1.17]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1. -1. -1. -1.  0.]
select_j_column
[ 1.  0.  0. -1.  1. -1. -1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.]
 [-1.  0.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.]
 [-1.  0. -1. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  5 17  0  0  0  0  0  3  0]
 [ 0 11  1  0  0  0  0  5  0  0]
 [ 0 21  0  0  0  2  0  0  0  0]
 [ 0 14  0  0  0  3  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  2  0  0  0  1  0  0  9  0]
 [ 0 12  0  0  0  1  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.5 0.3 0.4 0.6 0.7 0.4 0.5]
 [0.  0.  0.2 0.2 0.4 0.5 0.5 0.4 0.6 0.1]
 [0.  0.  0.  0.4 0.5 0.3 0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.   1.   1.14 0.86 0.71]
 [0.   0.   1.29 0.43 1.14 1.   0.86]
 [0.   0.   0.   1.14 1.14 0.86 0.57]
 [0.   0.   0.   0.   0.86 1.   0.71]
 [0.   0.   0.   0.   0.   0.86 1.29]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
9
new_column
None


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.]
 [-1.  0.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.]
 [-1.  0. -1. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  5 17  0  0  0  0  0  3  0]
 [ 0 11  1  0  0  0  0  5  0  0]
 [ 0 21  0  0  0  2  0  0  0  0]
 [ 0 14  0  0  0  3  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  2  0  0  0  1  0  0  9  0]
 [ 0 12  0  0  0  1  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.5 0.3 0.4 0.6 0.7 0.4 0.5]
 [0.  0.  0.2 0.2 0.4 0.5 0.5 0.4 0.6 0.1]
 [0.  0.  0.  0.4 0.5 0.3 0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.   1.   1.14 0.86 0.71]
 [0.   0.   1.29 0.43 1.14 1.   0.86]
 [0.   0.   0.   1.14 1.14 0.86 0.57]
 [0.   0.   0.   0.   0.86 1.   0.71]
 [0.   0.   0.   0.   0.   0.86 1.29]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
3
new_column
None


============== iter  9 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.]
 [-1.  0.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.]
 [-1.  0. -1. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  4  0  0  0  1  0 17  0  0]
 [ 1  5 17  0  0  0  0  0  3  0]
 [ 0 11  1  0  0  0  0  5  0  0]
 [ 0 21  0  0  0  2  0  0  0  0]
 [ 0 14  0  0  0  3  0  0  2  0]
 [ 2  1  0  0  0  0  0  0 16  0]
 [ 0  3  0  0  0  2  0 12  0  0]
 [ 2  2  0  0  0  1  0  0  9  0]
 [ 0 12  0  0  0  1  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.5 0.3 0.4 0.6 0.7 0.4 0.5]
 [0.  0.  0.2 0.2 0.4 0.5 0.5 0.4 0.6 0.1]
 [0.  0.  0.  0.4 0.5 0.3 0.5 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.4 0.6 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.   1.   1.14 0.86 0.71]
 [0.   0.   1.29 0.43 1.14 1.   0.86]
 [0.   0.   0.   1.14 1.14 0.86 0.57]
 [0.   0.   0.   0.   0.86 1.   0.71]
 [0.   0.   0.   0.   0.   0.86 1.29]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0. -1.  1. -1. -1.  0.  1.  0.]
select_j_column
[ 0. -1. -1. -1.  0. -1. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1.]
 [-1.  0.  1. -1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.]
 [-1.  0. -1. -1.  1.  1. -1.  1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
confusion matrix
[[13  1  3  0  0  0  0  0  1  0]
 [ 0  4  1  0  0  0  0 17  0  0]
 [ 1  4 17  0  1  0  0  0  3  0]
 [ 0 10  1  0  1  0  0  5  0  0]
 [ 0  2  2  0 19  0  0  0  0  0]
 [ 0  1  3  0 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  3  2  0  0  0  0 12  0  0]
 [ 2  0  1  0  2  0  0  0  9  0]
 [ 0  3  1  0  9  0  0  0  0  0]]
row HD
[[0.  0.6 0.6 0.6 0.3 0.5 0.7 0.8 0.4 0.5]
 [0.  0.  0.2 0.3 0.5 0.6 0.6 0.4 0.7 0.2]
 [0.  0.  0.  0.5 0.6 0.4 0.6 0.3 0.6 0.4]
 [0.  0.  0.  0.  0.6 0.4 0.5 0.5 0.7 0.4]
 [0.  0.  0.  0.  0.  0.6 0.6 0.7 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.88 0.88 1.   0.75 0.62 0.88]
 [0.   0.   1.12 0.38 1.   0.88 0.75 0.88]
 [0.   0.   0.   1.   1.   0.75 0.5  0.88]
 [0.   0.   0.   0.   0.75 0.88 0.62 0.88]
 [0.   0.   0.   0.   0.   0.75 1.12 0.62]
 [0.   0.   0.   0.   0.   0.   0.5  0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  4  0  0  1  0 17  0  0]
 [ 1  2 19  0  1  0  0  0  3  0]
 [ 0  0 11  0  1  0  0  5  0  0]
 [ 0  0  2  0 19  2  0  0  0  0]
 [ 0  0  1  0 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  1  0  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  3  0  9  1  0  0  0  0]]
row HD
[[0.  0.6 0.7 0.7 0.3 0.5 0.8 0.9 0.4 0.6]
 [0.  0.  0.3 0.4 0.5 0.6 0.7 0.5 0.7 0.3]
 [0.  0.  0.  0.6 0.7 0.5 0.6 0.4 0.7 0.4]
 [0.  0.  0.  0.  0.7 0.5 0.6 0.5 0.8 0.5]
 [0.  0.  0.  0.  0.  0.6 0.7 0.8 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.78 0.78 0.89 0.67 0.56 0.78 0.22]
 [0.   0.   1.   0.33 0.89 0.78 0.67 0.78 0.67]
 [0.   0.   0.   0.89 0.89 0.67 0.44 0.78 0.78]
 [0.   0.   0.   0.   0.67 0.78 0.56 0.78 0.56]
 [0.   0.   0.   0.   0.   0.67 1.   0.56 0.89]
 [0.   0.   0.   0.   0.   0.   0.44 0.11 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:55,large_class sample len:220
extra_class: 5,extra_sample len: 287
cluster len:177
cluster contain small sample len:[0.5, 0.7142857142857143, 1.0, 1.0, 1.0, 0.625, 0.8, 0.8, 0.8333333333333334, 0.5, 0.375, 0.125, 1.0, 0.3333333333333333, 0.75, 1.0, 0.5, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]
after change column[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.7 0.8 0.8 0.3 0.6 0.9 1.  0.4 0.7]
 [0.  0.  0.3 0.5 0.6 0.6 0.7 0.5 0.8 0.3]
 [0.  0.  0.  0.7 0.8 0.5 0.6 0.4 0.8 0.4]
 [0.  0.  0.  0.  0.8 0.6 0.7 0.6 0.9 0.6]
 [0.  0.  0.  0.  0.  0.7 0.8 0.9 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.7 0.7 0.8 0.6 0.5 0.7 0.2 0.8]
 [0.  0.  0.9 0.3 0.8 0.7 0.6 0.7 0.6 0.7]
 [0.  0.  0.  0.8 0.8 0.6 0.4 0.7 0.7 0.8]
 [0.  0.  0.  0.  0.6 0.7 0.5 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.6 0.9 0.5 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  0. -1. -1.  0.  1.  0.  0. -1.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]
small_class len :1,large_class len:8, small_class sample:44,large_class sample len:452
extra_class: 1,extra_sample len: 66
cluster len:87
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]
after change column[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 19  2  0  0  0  0]
 [ 0  0  0  1 13  3  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  2  1  0  0  9  0]
 [ 0  0  0  3  9  1  0  0  0  0]]
row HD
[[0.  0.7 0.8 0.8 0.3 0.6 1.  1.1 0.4 0.7]
 [0.  0.  0.3 0.5 0.6 0.6 0.8 0.6 0.8 0.3]
 [0.  0.  0.  0.7 0.8 0.5 0.7 0.5 0.8 0.4]
 [0.  0.  0.  0.  0.8 0.6 0.8 0.7 0.9 0.6]
 [0.  0.  0.  0.  0.  0.7 0.9 1.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.73 0.64 0.64 0.73 0.55 0.45 0.64 0.18 0.73 0.64]
 [0.   0.   0.82 0.27 0.73 0.64 0.55 0.64 0.55 0.64 0.27]
 [0.   0.   0.   0.73 0.73 0.55 0.36 0.64 0.64 0.73 0.73]
 [0.   0.   0.   0.   0.55 0.64 0.45 0.64 0.45 0.73 0.  ]
 [0.   0.   0.   0.   0.   0.55 0.82 0.45 0.73 0.55 0.55]
 [0.   0.   0.   0.   0.   0.   0.36 0.09 0.64 0.82 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.45 0.82 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.82 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0. -1.  1. -1. -1.  0.  1.  1.]
select_j_column
[-1. -1.  0.  1. -1. -1.  0.  1. -1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]
small_class len :1,large_class len:6, small_class sample:67,large_class sample len:336
extra_class: 3,extra_sample len: 159
cluster len:131
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.4, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]
after change column[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
confusion matrix
[[13  1  3  0  0  0  0  0  1  0]
 [ 0  0  1  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  2  2 19  0  0  0  0  0]
 [ 0  0  3  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  2  1  0  0  0 12  0  0]
 [ 2  0  1  0  2  0  0  0  9  0]
 [ 0  0  1  3  9  0  0  0  0  0]]
row HD
[[0.  0.7 0.8 0.8 0.3 0.7 1.1 1.1 0.4 0.7]
 [0.  0.  0.3 0.5 0.6 0.7 0.9 0.6 0.8 0.3]
 [0.  0.  0.  0.7 0.8 0.6 0.8 0.5 0.8 0.4]
 [0.  0.  0.  0.  0.8 0.7 0.9 0.7 0.9 0.6]
 [0.  0.  0.  0.  0.  0.8 1.  1.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.58 0.58 0.67 0.5  0.42 0.58 0.17 0.67 0.58 0.5 ]
 [0.   0.   0.75 0.25 0.67 0.58 0.5  0.58 0.5  0.58 0.25 0.83]
 [0.   0.   0.   0.67 0.67 0.5  0.33 0.58 0.58 0.67 0.67 0.67]
 [0.   0.   0.   0.   0.5  0.58 0.42 0.58 0.42 0.67 0.   0.75]
 [0.   0.   0.   0.   0.   0.5  0.75 0.42 0.67 0.5  0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.33 0.08 0.58 0.75 0.58 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.75 0.42 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.67 0.58 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75 0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  0.  1. -1. -1.  0.  1. -1.  0.]
select_j_column
[ 0. -1. -1. -1.  0. -1. -1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.8 0.8 0.9 0.3 0.8 1.1 1.2 0.5 0.8]
 [0.  0.  0.4 0.6 0.7 0.7 1.  0.7 0.9 0.4]
 [0.  0.  0.  0.8 0.8 0.7 0.8 0.6 0.9 0.5]
 [0.  0.  0.  0.  0.9 0.8 1.  0.7 0.9 0.6]
 [0.  0.  0.  0.  0.  0.9 1.  1.1 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 1.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.54 0.54 0.62 0.46 0.38 0.54 0.15 0.62 0.54 0.46 0.31]
 [0.   0.   0.69 0.23 0.62 0.54 0.46 0.54 0.46 0.54 0.23 0.77 0.62]
 [0.   0.   0.   0.62 0.62 0.46 0.31 0.54 0.54 0.62 0.62 0.62 0.77]
 [0.   0.   0.   0.   0.46 0.54 0.38 0.54 0.38 0.62 0.   0.69 0.62]
 [0.   0.   0.   0.   0.   0.46 0.69 0.38 0.62 0.46 0.46 0.54 0.31]
 [0.   0.   0.   0.   0.   0.   0.31 0.08 0.54 0.69 0.54 0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.69 0.38 0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.62 0.54 0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.38 0.46 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.69 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.  0.  1.  1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.  1. -1. -1. -1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  16 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.9 0.8 1.  0.4 0.9 1.2 1.3 0.6 0.9]
 [0.  0.  0.5 0.6 0.8 0.8 1.  0.8 1.  0.4]
 [0.  0.  0.  0.9 0.9 0.8 0.9 0.7 1.  0.6]
 [0.  0.  0.  0.  1.  0.9 1.  0.8 1.  0.6]
 [0.  0.  0.  0.  0.  0.9 1.1 1.1 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  1.  1.  0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.5  0.5  0.57 0.43 0.36 0.5  0.14 0.57 0.5  0.43 0.29 0.36]
 [0.   0.   0.64 0.21 0.57 0.5  0.43 0.5  0.43 0.5  0.21 0.71 0.57 0.64]
 [0.   0.   0.   0.57 0.57 0.43 0.29 0.5  0.5  0.57 0.57 0.57 0.71 0.14]
 [0.   0.   0.   0.   0.43 0.5  0.36 0.5  0.36 0.57 0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.43 0.64 0.36 0.57 0.43 0.43 0.5  0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.29 0.07 0.5  0.64 0.5  0.43 0.5  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.64 0.36 0.57 0.57 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.5  0.36 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.36 0.43 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0. -1. -1.  0. -1. -1.  0.]
select_j_column
[ 1.  0.  1.  0. -1. -1.  0. -1. -1.  0.]
most_cplx_inx
6
new_column
None


============== iter  17 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.9 0.8 1.  0.4 0.9 1.2 1.3 0.6 0.9]
 [0.  0.  0.5 0.6 0.8 0.8 1.  0.8 1.  0.4]
 [0.  0.  0.  0.9 0.9 0.8 0.9 0.7 1.  0.6]
 [0.  0.  0.  0.  1.  0.9 1.  0.8 1.  0.6]
 [0.  0.  0.  0.  0.  0.9 1.1 1.1 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  1.  1.  0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.5  0.5  0.57 0.43 0.36 0.5  0.14 0.57 0.5  0.43 0.29 0.36]
 [0.   0.   0.64 0.21 0.57 0.5  0.43 0.5  0.43 0.5  0.21 0.71 0.57 0.64]
 [0.   0.   0.   0.57 0.57 0.43 0.29 0.5  0.5  0.57 0.57 0.57 0.71 0.14]
 [0.   0.   0.   0.   0.43 0.5  0.36 0.5  0.36 0.57 0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.43 0.64 0.36 0.57 0.43 0.43 0.5  0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.29 0.07 0.5  0.64 0.5  0.43 0.5  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.64 0.36 0.57 0.57 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.5  0.36 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.36 0.43 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 1.  0.  0. -1.  1. -1. -1.  0.  1.  0.]
most_cplx_inx
1
new_column
None


============== iter  18 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.9 0.8 1.  0.4 0.9 1.2 1.3 0.6 0.9]
 [0.  0.  0.5 0.6 0.8 0.8 1.  0.8 1.  0.4]
 [0.  0.  0.  0.9 0.9 0.8 0.9 0.7 1.  0.6]
 [0.  0.  0.  0.  1.  0.9 1.  0.8 1.  0.6]
 [0.  0.  0.  0.  0.  0.9 1.1 1.1 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  1.  1.  0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.5  0.5  0.57 0.43 0.36 0.5  0.14 0.57 0.5  0.43 0.29 0.36]
 [0.   0.   0.64 0.21 0.57 0.5  0.43 0.5  0.43 0.5  0.21 0.71 0.57 0.64]
 [0.   0.   0.   0.57 0.57 0.43 0.29 0.5  0.5  0.57 0.57 0.57 0.71 0.14]
 [0.   0.   0.   0.   0.43 0.5  0.36 0.5  0.36 0.57 0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.43 0.64 0.36 0.57 0.43 0.43 0.5  0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.29 0.07 0.5  0.64 0.5  0.43 0.5  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.64 0.36 0.57 0.57 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.5  0.36 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.36 0.43 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
most_cplx_inx
9
new_column
None


============== iter  19 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.9 0.8 1.  0.4 0.9 1.2 1.3 0.6 0.9]
 [0.  0.  0.5 0.6 0.8 0.8 1.  0.8 1.  0.4]
 [0.  0.  0.  0.9 0.9 0.8 0.9 0.7 1.  0.6]
 [0.  0.  0.  0.  1.  0.9 1.  0.8 1.  0.6]
 [0.  0.  0.  0.  0.  0.9 1.1 1.1 0.4 0.8]
 [0.  0.  0.  0.  0.  0.  1.  1.  0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.3 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.5  0.5  0.57 0.43 0.36 0.5  0.14 0.57 0.5  0.43 0.29 0.36]
 [0.   0.   0.64 0.21 0.57 0.5  0.43 0.5  0.43 0.5  0.21 0.71 0.57 0.64]
 [0.   0.   0.   0.57 0.57 0.43 0.29 0.5  0.5  0.57 0.57 0.57 0.71 0.14]
 [0.   0.   0.   0.   0.43 0.5  0.36 0.5  0.36 0.57 0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.43 0.64 0.36 0.57 0.43 0.43 0.5  0.29 0.57]
 [0.   0.   0.   0.   0.   0.   0.29 0.07 0.5  0.64 0.5  0.43 0.5  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.64 0.36 0.57 0.57 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.57 0.5  0.36 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.36 0.43 0.29 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[-1. -1.  0.  1. -1. -1.  0.  1. -1.  0.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  20 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  0.9 0.9 1.1 0.4 0.9 1.3 1.4 0.6 1. ]
 [0.  0.  0.6 0.7 0.8 0.8 1.1 0.9 1.  0.5]
 [0.  0.  0.  1.  1.  0.9 0.9 0.8 1.1 0.6]
 [0.  0.  0.  0.  1.1 1.  1.1 0.8 1.1 0.7]
 [0.  0.  0.  0.  0.  0.9 1.2 1.2 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  1.1 1.1 0.7 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.53 0.47 0.47 0.53 0.4  0.33 0.47 0.13 0.53 0.47 0.4  0.27 0.33
  0.13]
 [0.   0.   0.6  0.2  0.53 0.47 0.4  0.47 0.4  0.47 0.2  0.67 0.53 0.6
  0.4 ]
 [0.   0.   0.   0.53 0.53 0.4  0.27 0.47 0.47 0.53 0.53 0.53 0.67 0.13
  0.47]
 [0.   0.   0.   0.   0.4  0.47 0.33 0.47 0.33 0.53 0.   0.6  0.53 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.4  0.6  0.33 0.53 0.4  0.4  0.47 0.27 0.53
  0.53]
 [0.   0.   0.   0.   0.   0.   0.27 0.07 0.47 0.6  0.47 0.4  0.47 0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.6  0.33 0.53 0.53 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.53 0.47 0.33 0.4  0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.33 0.4  0.27 0.33
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4  0.4  0.6
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.6  0.53 0.47
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1. -1. -1. -1.  0.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  21 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.  0.9 1.2 0.5 0.9 1.4 1.5 0.7 1.1]
 [0.  0.  0.7 0.7 0.9 0.9 1.2 0.9 1.  0.5]
 [0.  0.  0.  1.1 1.1 0.9 1.  0.9 1.2 0.7]
 [0.  0.  0.  0.  1.2 1.1 1.2 0.8 1.1 0.7]
 [0.  0.  0.  0.  0.  1.  1.2 1.3 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  1.2 1.2 0.8 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.5 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.44 0.44 0.5  0.38 0.31 0.44 0.12 0.5  0.44 0.38 0.25 0.31
  0.12 0.5 ]
 [0.   0.   0.56 0.19 0.5  0.44 0.38 0.44 0.38 0.44 0.19 0.62 0.5  0.56
  0.38 0.44]
 [0.   0.   0.   0.5  0.5  0.38 0.25 0.44 0.44 0.5  0.5  0.5  0.62 0.12
  0.44 0.12]
 [0.   0.   0.   0.   0.38 0.44 0.31 0.44 0.31 0.5  0.   0.56 0.5  0.44
  0.31 0.5 ]
 [0.   0.   0.   0.   0.   0.38 0.56 0.31 0.5  0.38 0.38 0.44 0.25 0.5
  0.5  0.56]
 [0.   0.   0.   0.   0.   0.   0.25 0.06 0.44 0.56 0.44 0.38 0.44 0.38
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.56 0.31 0.5  0.5  0.19
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.44 0.31 0.38 0.44
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.31 0.38 0.25 0.31
  0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38 0.38 0.56
  0.56 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.5  0.44
  0.31 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.38
  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5
  0.25 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.  0.9 1.2 0.6 1.  1.5 1.6 0.8 1.2]
 [0.  0.  0.7 0.7 1.  1.  1.3 1.  1.1 0.6]
 [0.  0.  0.  1.1 1.2 1.  1.1 1.  1.3 0.8]
 [0.  0.  0.  0.  1.3 1.2 1.3 0.9 1.2 0.8]
 [0.  0.  0.  0.  0.  1.1 1.2 1.4 0.5 1. ]
 [0.  0.  0.  0.  0.  0.  1.3 1.2 0.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.5 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.41 0.41 0.47 0.35 0.29 0.41 0.12 0.47 0.41 0.35 0.24 0.29
  0.12 0.47 0.41]
 [0.   0.   0.53 0.18 0.47 0.41 0.35 0.41 0.35 0.41 0.18 0.59 0.47 0.53
  0.35 0.41 0.47]
 [0.   0.   0.   0.47 0.47 0.35 0.24 0.41 0.41 0.47 0.47 0.47 0.59 0.12
  0.41 0.12 0.41]
 [0.   0.   0.   0.   0.35 0.41 0.29 0.41 0.29 0.47 0.   0.53 0.47 0.41
  0.29 0.47 0.47]
 [0.   0.   0.   0.   0.   0.35 0.53 0.29 0.47 0.35 0.35 0.41 0.24 0.47
  0.47 0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.24 0.06 0.41 0.53 0.41 0.35 0.41 0.35
  0.41 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.53 0.29 0.47 0.47 0.18
  0.29 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.41 0.29 0.35 0.41
  0.47 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.29 0.35 0.24 0.29
  0.   0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35 0.35 0.53
  0.53 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.41
  0.29 0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.35
  0.35 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47
  0.24 0.59 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.47 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1. -1.  0. -1. -1. -1.  1.  1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]]
small_class len :1,large_class len:4, small_class sample:55,large_class sample len:220
extra_class: 5,extra_sample len: 287
cluster len:177
cluster contain small sample len:[0.5, 0.7142857142857143, 1.0, 1.0, 1.0, 0.625, 0.8, 0.8, 0.8333333333333334, 0.5, 0.375, 0.125, 1.0, 0.3333333333333333, 0.75, 1.0, 0.5, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]]
after change column[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]]


============== iter  23 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
confusion matrix
[[13  3  1  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  2  2  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.1 1.  1.3 0.6 1.1 1.6 1.7 0.8 1.3]
 [0.  0.  0.8 0.8 1.1 1.  1.3 1.1 1.2 0.6]
 [0.  0.  0.  1.1 1.3 1.1 1.2 1.  1.4 0.9]
 [0.  0.  0.  0.  1.4 1.3 1.4 0.9 1.3 0.9]
 [0.  0.  0.  0.  0.  1.2 1.3 1.5 0.5 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.3 1.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.39 0.39 0.44 0.33 0.28 0.39 0.11 0.44 0.39 0.33 0.22 0.28
  0.11 0.44 0.39 0.33]
 [0.   0.   0.5  0.17 0.44 0.39 0.33 0.39 0.33 0.39 0.17 0.56 0.44 0.5
  0.33 0.39 0.44 0.39]
 [0.   0.   0.   0.44 0.44 0.33 0.22 0.39 0.39 0.44 0.44 0.44 0.56 0.11
  0.39 0.11 0.39 0.44]
 [0.   0.   0.   0.   0.33 0.39 0.28 0.39 0.28 0.44 0.   0.5  0.44 0.39
  0.28 0.44 0.44 0.39]
 [0.   0.   0.   0.   0.   0.33 0.5  0.28 0.44 0.33 0.33 0.39 0.22 0.44
  0.44 0.5  0.28 0.28]
 [0.   0.   0.   0.   0.   0.   0.22 0.06 0.39 0.5  0.39 0.33 0.39 0.33
  0.39 0.28 0.28 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.28 0.5  0.28 0.44 0.44 0.17
  0.28 0.22 0.28 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.39 0.28 0.33 0.39
  0.44 0.33 0.22 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.28 0.33 0.22 0.28
  0.   0.44 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33 0.33 0.5
  0.5  0.39 0.39 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.39
  0.28 0.44 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.33
  0.33 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44
  0.22 0.56 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.28 0.22 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.44 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1. -1.  0.  0.  0.]
select_j_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  24 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
18 classifiers pre label
Counter({1.0: 95, 0.0: 59, -1.0: 34})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  2  0  2  0  0  0  0  0 19]
 [ 0  3  0  1  0  0  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  0  0  0  0  9  2]
 [ 0  1  0  3  0  0  0  0  0  9]]
row HD
[[0.  1.2 1.  1.4 0.7 1.1 1.7 1.8 0.9 1.3]
 [0.  0.  0.9 0.9 1.2 1.1 1.3 1.2 1.3 0.7]
 [0.  0.  0.  1.2 1.4 1.1 1.3 1.1 1.5 0.9]
 [0.  0.  0.  0.  1.4 1.4 1.5 0.9 1.3 1. ]
 [0.  0.  0.  0.  0.  1.3 1.4 1.5 0.5 1.2]
 [0.  0.  0.  0.  0.  0.  1.4 1.4 1.1 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.6 1.7 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.37 0.37 0.42 0.32 0.26 0.37 0.11 0.42 0.37 0.32 0.21 0.26
  0.11 0.42 0.37 0.32 0.37]
 [0.   0.   0.47 0.16 0.42 0.37 0.32 0.37 0.32 0.37 0.16 0.53 0.42 0.47
  0.32 0.37 0.42 0.37 0.42]
 [0.   0.   0.   0.42 0.42 0.32 0.21 0.37 0.37 0.42 0.42 0.42 0.53 0.11
  0.37 0.11 0.37 0.42 0.16]
 [0.   0.   0.   0.   0.32 0.37 0.26 0.37 0.26 0.42 0.   0.47 0.42 0.37
  0.26 0.42 0.42 0.37 0.37]
 [0.   0.   0.   0.   0.   0.32 0.47 0.26 0.42 0.32 0.32 0.37 0.21 0.42
  0.42 0.47 0.26 0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.21 0.05 0.37 0.47 0.37 0.32 0.37 0.32
  0.37 0.26 0.26 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.47 0.26 0.42 0.42 0.16
  0.26 0.21 0.26 0.47 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.42 0.37 0.26 0.32 0.37
  0.42 0.32 0.21 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.26 0.32 0.21 0.26
  0.   0.42 0.42 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32 0.32 0.47
  0.47 0.37 0.37 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.42 0.37
  0.26 0.42 0.42 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.32
  0.32 0.42 0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42
  0.21 0.53 0.26 0.21 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.21 0.32 0.42 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.42 0.42 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.42 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1.  0.  1. -1. -1.  1.  0. -1. -1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]]
small_class len :1,large_class len:4, small_class sample:49,large_class sample len:236
extra_class: 5,extra_sample len: 277
cluster len:245
cluster contain small sample len:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.5, 1.0, 0.8333333333333334, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
before change column[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]]
after change column[[ 1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  25 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.  0.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1. -1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
18 classifiers pre label
Counter({1.0: 95, 0.0: 59, -1.0: 34})
19 classifiers pre label
Counter({0.0: 90, -1.0: 80, 1.0: 18})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.3 1.1 1.5 0.8 1.2 1.8 1.9 1.  1.3]
 [0.  0.  0.9 1.  1.3 1.1 1.3 1.3 1.4 0.8]
 [0.  0.  0.  1.3 1.5 1.1 1.3 1.2 1.6 1. ]
 [0.  0.  0.  0.  1.4 1.5 1.6 0.9 1.3 1.1]
 [0.  0.  0.  0.  0.  1.4 1.5 1.5 0.5 1.3]
 [0.  0.  0.  0.  0.  0.  1.4 1.5 1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.8 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.35 0.35 0.4  0.3  0.25 0.35 0.1  0.4  0.35 0.3  0.2  0.25
  0.1  0.4  0.35 0.3  0.35 0.3 ]
 [0.   0.   0.45 0.15 0.4  0.35 0.3  0.35 0.3  0.35 0.15 0.5  0.4  0.45
  0.3  0.35 0.4  0.35 0.4  0.3 ]
 [0.   0.   0.   0.4  0.4  0.3  0.2  0.35 0.35 0.4  0.4  0.4  0.5  0.1
  0.35 0.1  0.35 0.4  0.15 0.25]
 [0.   0.   0.   0.   0.3  0.35 0.25 0.35 0.25 0.4  0.   0.45 0.4  0.35
  0.25 0.4  0.4  0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.3  0.45 0.25 0.4  0.3  0.3  0.35 0.2  0.4
  0.4  0.45 0.25 0.25 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.2  0.05 0.35 0.45 0.35 0.3  0.35 0.3
  0.35 0.25 0.25 0.4  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.45 0.25 0.4  0.4  0.15
  0.25 0.2  0.25 0.45 0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.35 0.25 0.3  0.35
  0.4  0.3  0.2  0.4  0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.25 0.3  0.2  0.25
  0.   0.4  0.4  0.3  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3  0.3  0.45
  0.45 0.35 0.35 0.25 0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.4  0.35
  0.25 0.4  0.4  0.35 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.3
  0.3  0.4  0.3  0.3  0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.2  0.5  0.25 0.2  0.4  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.2  0.3  0.4  0.15 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.4  0.4  0.3  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.4  0.35 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.4  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.45 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  1.  0. -1.  1. -1. -1. -1.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]]


============== iter  26 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.  0.  0.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.  0.  1.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1. -1.  0.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1. -1.  0.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.  0.  0.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.  0.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1. -1.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
18 classifiers pre label
Counter({1.0: 95, 0.0: 59, -1.0: 34})
19 classifiers pre label
Counter({0.0: 90, -1.0: 80, 1.0: 18})
20 classifiers pre label
Counter({0.0: 105, 1.0: 52, -1.0: 31})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.3 1.2 1.5 0.8 1.2 1.9 2.  1.1 1.3]
 [0.  0.  1.  1.  1.3 1.1 1.4 1.4 1.5 0.8]
 [0.  0.  0.  1.4 1.6 1.2 1.3 1.2 1.7 1.1]
 [0.  0.  0.  0.  1.4 1.5 1.7 1.  1.4 1.1]
 [0.  0.  0.  0.  0.  1.4 1.6 1.6 0.6 1.3]
 [0.  0.  0.  0.  0.  0.  1.5 1.6 1.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.33 0.33 0.38 0.29 0.24 0.33 0.1  0.38 0.33 0.29 0.19 0.24
  0.1  0.38 0.33 0.29 0.33 0.29 0.24]
 [0.   0.   0.43 0.14 0.38 0.33 0.29 0.33 0.29 0.33 0.14 0.48 0.38 0.43
  0.29 0.33 0.38 0.33 0.38 0.29 0.38]
 [0.   0.   0.   0.38 0.38 0.29 0.19 0.33 0.33 0.38 0.38 0.38 0.48 0.1
  0.33 0.1  0.33 0.38 0.14 0.24 0.24]
 [0.   0.   0.   0.   0.29 0.33 0.24 0.33 0.24 0.38 0.   0.43 0.38 0.33
  0.24 0.38 0.38 0.33 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.29 0.43 0.24 0.38 0.29 0.29 0.33 0.19 0.38
  0.38 0.43 0.24 0.24 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.19 0.05 0.33 0.43 0.33 0.29 0.33 0.29
  0.33 0.24 0.24 0.38 0.33 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.43 0.24 0.38 0.38 0.14
  0.24 0.19 0.24 0.43 0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.33 0.24 0.29 0.33
  0.38 0.29 0.19 0.38 0.29 0.24 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.24 0.29 0.19 0.24
  0.   0.38 0.38 0.29 0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.29 0.43
  0.43 0.33 0.33 0.24 0.29 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.38 0.33
  0.24 0.38 0.38 0.33 0.33 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.29
  0.29 0.38 0.29 0.29 0.29 0.33 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.19 0.48 0.24 0.19 0.38 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.19 0.29 0.38 0.14 0.19 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38 0.38 0.29 0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.38 0.33 0.24 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.38 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.43 0.48 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.1  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  27 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.  1.  0. -1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.  0.  0.  1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.  0.  1.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1. -1.  0. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.  0.  0.  0.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.  0.  1.  0.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1. -1.  1.  0.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
18 classifiers pre label
Counter({1.0: 95, 0.0: 59, -1.0: 34})
19 classifiers pre label
Counter({0.0: 90, -1.0: 80, 1.0: 18})
20 classifiers pre label
Counter({0.0: 105, 1.0: 52, -1.0: 31})
21 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.4 1.3 1.5 0.9 1.3 2.  2.1 1.2 1.3]
 [0.  0.  1.1 1.1 1.4 1.2 1.5 1.5 1.6 0.9]
 [0.  0.  0.  1.5 1.6 1.2 1.3 1.2 1.7 1.2]
 [0.  0.  0.  0.  1.5 1.6 1.8 1.1 1.5 1.1]
 [0.  0.  0.  0.  0.  1.4 1.6 1.6 0.6 1.4]
 [0.  0.  0.  0.  0.  0.  1.5 1.6 1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.7 1.9 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.32 0.32 0.36 0.27 0.23 0.32 0.09 0.36 0.32 0.27 0.18 0.23
  0.09 0.36 0.32 0.27 0.32 0.27 0.23 0.27]
 [0.   0.   0.41 0.14 0.36 0.32 0.27 0.32 0.27 0.32 0.14 0.45 0.36 0.41
  0.27 0.32 0.36 0.32 0.36 0.27 0.36 0.14]
 [0.   0.   0.   0.36 0.36 0.27 0.18 0.32 0.32 0.36 0.36 0.36 0.45 0.09
  0.32 0.09 0.32 0.36 0.14 0.23 0.23 0.45]
 [0.   0.   0.   0.   0.27 0.32 0.23 0.32 0.23 0.36 0.   0.41 0.36 0.32
  0.23 0.36 0.36 0.32 0.32 0.32 0.36 0.27]
 [0.   0.   0.   0.   0.   0.27 0.41 0.23 0.36 0.27 0.27 0.32 0.18 0.36
  0.36 0.41 0.23 0.23 0.32 0.32 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.18 0.05 0.32 0.41 0.32 0.27 0.32 0.27
  0.32 0.23 0.23 0.36 0.32 0.27 0.36 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.23 0.41 0.23 0.36 0.36 0.14
  0.23 0.18 0.23 0.41 0.27 0.23 0.23 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36 0.32 0.23 0.27 0.32
  0.36 0.27 0.18 0.36 0.27 0.23 0.41 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.23 0.27 0.18 0.23
  0.   0.36 0.36 0.27 0.32 0.27 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.27 0.41
  0.41 0.32 0.32 0.23 0.27 0.36 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.36 0.32
  0.23 0.36 0.36 0.32 0.32 0.32 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27
  0.27 0.36 0.27 0.27 0.27 0.32 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36
  0.18 0.45 0.23 0.18 0.36 0.32 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.23 0.18 0.27 0.36 0.14 0.18 0.23 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.36 0.36 0.27 0.32 0.27 0.32 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.36 0.32 0.23 0.32 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.36 0.32 0.27 0.27 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.41 0.45 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.09 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]]


============== iter  28 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.  1.  0. -1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.  0.  0.  1.  1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.  0.  1.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1. -1.  0. -1. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1. -1.  0.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.  0.  0.  0.  1.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.  0.  1.  0.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1. -1.  1.  0.  0.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  0.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.  1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
18 classifiers pre label
Counter({1.0: 95, 0.0: 59, -1.0: 34})
19 classifiers pre label
Counter({0.0: 90, -1.0: 80, 1.0: 18})
20 classifiers pre label
Counter({0.0: 105, 1.0: 52, -1.0: 31})
21 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
22 classifiers pre label
Counter({0.0: 116, 1.0: 49, -1.0: 23})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  1  0  0  0  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  9  0]
 [ 0  1  0  3  9  0  0  0  0  0]]
row HD
[[0.  1.5 1.3 1.6 0.9 1.4 2.1 2.1 1.2 1.4]
 [0.  0.  1.2 1.2 1.5 1.2 1.5 1.6 1.7 1. ]
 [0.  0.  0.  1.6 1.6 1.3 1.4 1.2 1.7 1.3]
 [0.  0.  0.  0.  1.6 1.7 1.9 1.2 1.6 1.1]
 [0.  0.  0.  0.  0.  1.5 1.7 1.6 0.6 1.5]
 [0.  0.  0.  0.  0.  0.  1.5 1.7 1.4 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.8 2.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.3  0.3  0.35 0.26 0.22 0.3  0.09 0.35 0.3  0.26 0.17 0.22
  0.09 0.35 0.3  0.26 0.3  0.26 0.22 0.26 0.35]
 [0.   0.   0.39 0.13 0.35 0.3  0.26 0.3  0.26 0.3  0.13 0.43 0.35 0.39
  0.26 0.3  0.35 0.3  0.35 0.26 0.35 0.13 0.17]
 [0.   0.   0.   0.35 0.35 0.26 0.17 0.3  0.3  0.35 0.35 0.35 0.43 0.09
  0.3  0.09 0.3  0.35 0.13 0.22 0.22 0.43 0.39]
 [0.   0.   0.   0.   0.26 0.3  0.22 0.3  0.22 0.35 0.   0.39 0.35 0.3
  0.22 0.35 0.35 0.3  0.3  0.3  0.35 0.26 0.26]
 [0.   0.   0.   0.   0.   0.26 0.39 0.22 0.35 0.26 0.26 0.3  0.17 0.35
  0.35 0.39 0.22 0.22 0.3  0.3  0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.17 0.04 0.3  0.39 0.3  0.26 0.3  0.26
  0.3  0.22 0.22 0.35 0.3  0.26 0.35 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.22 0.39 0.22 0.35 0.35 0.13
  0.22 0.17 0.22 0.39 0.26 0.22 0.22 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.3  0.22 0.26 0.3
  0.35 0.26 0.17 0.35 0.26 0.22 0.39 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.22 0.26 0.17 0.22
  0.   0.35 0.35 0.26 0.3  0.26 0.3  0.3  0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26 0.26 0.39
  0.39 0.3  0.3  0.22 0.26 0.35 0.22 0.26 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.35 0.3
  0.22 0.35 0.35 0.3  0.3  0.3  0.35 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.26
  0.26 0.35 0.26 0.26 0.26 0.3  0.35 0.35 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.17 0.43 0.22 0.17 0.35 0.3  0.3  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.17 0.26 0.35 0.13 0.17 0.22 0.39 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.35 0.26 0.3  0.26 0.3  0.3  0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35 0.3  0.22 0.3  0.26 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.35 0.3  0.26 0.26 0.39 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.39 0.43 0.26 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.09 0.3  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.3  0.26 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1. -1. -1.  0. -1. -1. -1.  1.  1.]
select_j_column
[ 1.  0.  1.  0. -1.  1. -1. -1. -1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  29 ================
current matrix is 
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.  1.  0. -1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.  0.  0.  1.  1. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.  0.  1.  0.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1. -1.  0. -1. -1. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1. -1.  0.  0.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.  0.  0.  0.  1.  0.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.  0.  1.  0.  1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1. -1.  1.  0.  0.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.  1.  0. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '6': 19, '5': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 123, 1.0: 34, -1.0: 31})
1 classifiers pre label
Counter({-1.0: 92, 0.0: 65, 1.0: 31})
2 classifiers pre label
Counter({-1.0: 111, 1.0: 49, 0.0: 28})
3 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
4 classifiers pre label
Counter({-1.0: 93, 0.0: 64, 1.0: 31})
5 classifiers pre label
Counter({0.0: 80, -1.0: 59, 1.0: 49})
6 classifiers pre label
Counter({-1.0: 90, 0.0: 80, 1.0: 18})
7 classifiers pre label
Counter({1.0: 108, 0.0: 80})
8 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
9 classifiers pre label
Counter({1.0: 101, 0.0: 64, -1.0: 23})
10 classifiers pre label
Counter({-1.0: 154, 0.0: 34})
11 classifiers pre label
Counter({1.0: 157, 0.0: 31})
12 classifiers pre label
Counter({0.0: 113, 1.0: 62, -1.0: 13})
13 classifiers pre label
Counter({-1.0: 93, 0.0: 59, 1.0: 36})
14 classifiers pre label
Counter({-1.0: 82, 1.0: 57, 0.0: 49})
15 classifiers pre label
Counter({1.0: 95, 0.0: 62, -1.0: 31})
16 classifiers pre label
Counter({1.0: 90, 0.0: 64, -1.0: 34})
17 classifiers pre label
Counter({1.0: 80, 0.0: 64, -1.0: 44})
18 classifiers pre label
Counter({1.0: 95, 0.0: 59, -1.0: 34})
19 classifiers pre label
Counter({0.0: 90, -1.0: 80, 1.0: 18})
20 classifiers pre label
Counter({0.0: 105, 1.0: 52, -1.0: 31})
21 classifiers pre label
Counter({0.0: 142, -1.0: 41, 1.0: 5})
22 classifiers pre label
Counter({0.0: 116, 1.0: 49, -1.0: 23})
23 classifiers pre label
Counter({1.0: 134, 0.0: 31, -1.0: 23})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  4  0]
 [ 0  0  1 10  0  0  0  5  1  0]
 [ 0  2  0  2  0  0  0  0 19  0]
 [ 0  3  0  1  0  0  0  0 15  0]
 [ 2  0  0  0  0  0  0  0 17  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2  1  0  0  0  0  0  0 11  0]
 [ 0  1  0  3  0  0  0  0  9  0]]
row HD
[[0.  1.6 1.4 1.7 1.  1.5 2.1 2.1 1.3 1.4]
 [0.  0.  1.3 1.2 1.5 1.3 1.6 1.7 1.8 1.1]
 [0.  0.  0.  1.7 1.7 1.3 1.5 1.3 1.7 1.4]
 [0.  0.  0.  0.  1.6 1.8 2.  1.3 1.7 1.2]
 [0.  0.  0.  0.  0.  1.6 1.8 1.7 0.7 1.6]
 [0.  0.  0.  0.  0.  0.  1.6 1.8 1.4 1.8]
 [0.  0.  0.  0.  0.  0.  0.  1.8 2.1 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.29 0.29 0.33 0.25 0.21 0.29 0.08 0.33 0.29 0.25 0.17 0.21
  0.08 0.33 0.29 0.25 0.29 0.25 0.21 0.25 0.33 0.33]
 [0.   0.   0.38 0.12 0.33 0.29 0.25 0.29 0.25 0.29 0.12 0.42 0.33 0.38
  0.25 0.29 0.33 0.29 0.33 0.25 0.33 0.12 0.17 0.12]
 [0.   0.   0.   0.33 0.33 0.25 0.17 0.29 0.29 0.33 0.33 0.33 0.42 0.08
  0.29 0.08 0.29 0.33 0.12 0.21 0.21 0.42 0.38 0.33]
 [0.   0.   0.   0.   0.25 0.29 0.21 0.29 0.21 0.33 0.   0.38 0.33 0.29
  0.21 0.33 0.33 0.29 0.29 0.29 0.33 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.25 0.38 0.21 0.33 0.25 0.25 0.29 0.17 0.33
  0.33 0.38 0.21 0.21 0.29 0.29 0.33 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.17 0.04 0.29 0.38 0.29 0.25 0.29 0.25
  0.29 0.21 0.21 0.33 0.29 0.25 0.33 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.38 0.21 0.33 0.33 0.12
  0.21 0.17 0.21 0.38 0.25 0.21 0.21 0.33 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.29 0.21 0.25 0.29
  0.33 0.25 0.17 0.33 0.25 0.21 0.38 0.29 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.21 0.25 0.17 0.21
  0.   0.33 0.33 0.25 0.29 0.25 0.29 0.29 0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.25 0.38
  0.38 0.29 0.29 0.21 0.25 0.33 0.21 0.25 0.12 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.33 0.29
  0.21 0.33 0.33 0.29 0.29 0.29 0.33 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25
  0.25 0.33 0.25 0.25 0.25 0.29 0.33 0.33 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.17 0.42 0.21 0.17 0.33 0.29 0.29 0.29 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.21 0.17 0.25 0.33 0.12 0.17 0.21 0.38 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.33 0.25 0.29 0.25 0.29 0.29 0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.29 0.21 0.29 0.25 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33 0.29 0.25 0.25 0.38 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.38 0.42 0.25 0.29 0.25 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.08 0.29 0.33 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29 0.25 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})

**********      classifier acc  **************
[0.459, 0.696, 0.706, 0.76, 0.605, 0.391, 0.71, 0.504, 0.677, 0.662, 0.76, 0.811, 0.363, 0.726, 0.677, 0.638, 0.686, 0.564, 0.531, 0.51, 0.5, 0.371, 0.389, 0.566]
before cutting matrix
[[-1. -1.  1. -1.  0.  1.  1.  1. -1.  0. -1.  1.  0.  1. -1.  1.  0.  0.
   1.  1.  0. -1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.  0. -1.  1. -1.  1. -1.  0. -1.  0.  0. -1.
   0.  0.  0.  1.  1. -1.]
 [ 0.  0.  1. -1. -1.  0.  0.  0.  0.  1. -1.  1.  0.  1.  0.  1.  0.  1.
   1.  0.  1.  0.  0.  0.]
 [ 1. -1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.  0.  1.  0.  0.  1.
  -1. -1.  0. -1. -1. -1.]
 [ 0. -1. -1. -1.  0.  1. -1.  1. -1.  0. -1.  1.  0. -1. -1. -1.  1.  0.
  -1. -1.  0.  0.  0. -1.]
 [-1.  0.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
   1.  0.  0.  0.  1.  0.]
 [ 0.  1. -1.  1. -1. -1.  1. -1.  0.  1.  1.  0.  0.  0.  0. -1.  1. -1.
   0.  0.  1.  0.  1.  1.]
 [ 1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1.  1. -1.  1.  0. -1.  1.
  -1. -1.  1.  0.  0.  1.]
 [-1.  0. -1. -1.  1.  1. -1.  1. -1.  0. -1.  1.  1. -1. -1.  0.  1.  0.
  -1. -1. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  1.  0.  0.  1.  0.  1. -1.  1.  1.  0.  0.  0.  1. -1.
   1.  1.  0. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 177, 1.0: 121})
positive and negative ratio
Counter({-1.0: 267, 1.0: 44})
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 267, 1.0: 44})
positive and negative ratio
Counter({-1.0: 225, 1.0: 173})
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 225, 1.0: 173})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 166, 1.0: 164})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 166, 1.0: 164})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({1.0: 215, -1.0: 166})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({1.0: 215, -1.0: 166})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({1.0: 233, -1.0: 125})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 248, 1.0: 106})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 248, 1.0: 106})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 220, 1.0: 178})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 224})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 236, 1.0: 224})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({-1.0: 236, 1.0: 100})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 236, 1.0: 100})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 169, -1.0: 106})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({1.0: 169, -1.0: 106})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
Counter({1.0: 210, -1.0: 167})
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
positive and negative ratio
Counter({1.0: 210, -1.0: 167})
after cutting matrix
[[-1.  0.  1. -1.  0. -1.  1.  0. -1.  1.  0.  0.  0. -1.]
 [-1. -1.  0. -1.  1. -1.  1. -1. -1.  0.  0. -1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0.  1.  1.  0.]
 [-1. -1.  0.  1. -1. -1.  1.  1.  1.  0.  0.  1.  0. -1.]
 [-1.  0. -1. -1.  0. -1.  1.  0. -1. -1.  1.  0.  0.  0.]
 [-1. -1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1.  0.  0.]
 [ 1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  1. -1.  1.  0.]
 [ 0. -1.  0.  1.  1.  0.  1.  1.  1.  0. -1.  1.  1.  0.]
 [-1.  1. -1. -1.  0. -1.  1.  1. -1.  0.  1.  0. -1.  0.]
 [-1.  1.  0.  0.  1. -1.  1.  1.  0.  0.  1. -1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 452, 1.0: 44})
Counter({-1.0: 347, 1.0: 112})
Counter({-1.0: 182, 1.0: 93})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 343, -1.0: 55})
Counter({-1.0: 452, 1.0: 44})
Counter({1.0: 451, -1.0: 67})
Counter({1.0: 233, -1.0: 125})
Counter({-1.0: 289, 1.0: 121})
Counter({1.0: 173, -1.0: 98})
Counter({1.0: 210, -1.0: 133})
Counter({-1.0: 220, 1.0: 178})
Counter({1.0: 167, -1.0: 61})
Counter({-1.0: 155, 1.0: 58})
cutting matrix's confusion matrix
[[13  3  1  0  0  0  0  0  0  1]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  0 19  2  1  0  0  0  0  3]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  2  0  2 19  0  0  0  0  0]
 [ 0  3  0  1 13  0  0  0  0  2]
 [ 2  0  0  0  1  0  0  0  0 16]
 [ 0  2  2  1  0  0  0 12  0  0]
 [ 2  1  0  0  2  0  0  0  0  9]
 [ 0  1  0  3  9  0  0  0  0  0]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果


SVM classifier
Time: 2019-01-09 23:14:58
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 118, 1.0: 48})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
confusion matrix
[[34  0  0  0  0]
 [ 6  0  0  3  0]
 [ 2  0  0  5  0]
 [ 4  0  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.2 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[-1. -1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [-1.  1.  1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
2 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[34  0  0  0  0]
 [ 6  0  0  3  0]
 [ 2  0  0  5  0]
 [ 4  0  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.4 0.4]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]
small_class len :2,large_class len:3, small_class sample:32,large_class sample len:134
cluster len:9
cluster contain small sample len:[0.5, 0.14285714285714285, 0.18181818181818182, 0.0, 0.09090909090909091, 0.07142857142857142, 0.5714285714285714, 0.2857142857142857, 0.36363636363636365]
before change column[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]
after change column[[1]
 [1]
 [1]
 [1]
 [1]]


============== iter  4 ================
current matrix is 
[[-1. -1. -1.  1.]
 [ 1. -1.  1.  1.]
 [ 1.  1.  1.  1.]
 [-1.  1.  1.  1.]
 [-1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 118, 1.0: 48})
Counter({-1.0: 89, 1.0: 77})
Counter({1.0: 166})
