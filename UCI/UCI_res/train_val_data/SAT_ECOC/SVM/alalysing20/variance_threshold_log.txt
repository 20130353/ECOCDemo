算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-10 15:29:02
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1. -1.]
 [ 1. -1.  0.]
 [ 1. -1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
confusion matrix
[[29  1  0  0  0]
 [ 4  5  0  0  0]
 [ 4  3  0  0  0]
 [ 0  5  1  1  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.4 0.2 0.4]
 [0.  0.  0.  0.2 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  0. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  1. -1.]
 [ 1.  1. -1.  1.]
 [ 1. -1.  0.  1.]
 [ 1. -1. -1.  1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 3  4  0  0  0]
 [ 0  5  1  1  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 0.6 0.6 0.2]
 [0.  0.  0.4 0.2 0.6]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   0.25]
 [0.   0.   0.5  1.  ]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1.]
 [ 1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 3  4  0  0  0]
 [ 0  5  1  1  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 0.8 0.8 0.2]
 [0.  0.  0.6 0.4 0.6]
 [0.  0.  0.  0.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.2 0.6]
 [0.  0.  0.4 0.8 0. ]
 [0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:6,large_class sample len:36
extra_class: 2,extra_sample len: 124
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[0, 0, -1, -1, 1]
after change column:	[0, 0, -1, -1, 1]


============== iter  6 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0.]
 [ 1.  1. -1.  1.  1.  0.]
 [ 1. -1.  0.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 3  4  0  0  0]
 [ 0  5  1  1  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.4 1.  1.  0.4]
 [0.  0.  0.8 0.6 0.8]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.67 0.17 0.5  0.83]
 [0.   0.   0.33 0.67 0.   0.33]
 [0.   0.   0.   0.83 0.33 0.5 ]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:31,large_class sample len:135
cluster len:1
cluster contain small sample len:[0.19]
before change column:	[-1, 1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1]


============== iter  7 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.]
 [ 1. -1.  0.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 4  5  0  0  0]
 [ 4  3  0  0  0]
 [ 0  5  1  1  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.6 1.  1.  0.4]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.57 0.14 0.43 0.71 0.43]
 [0.   0.   0.29 0.57 0.   0.29 0.29]
 [0.   0.   0.   0.71 0.29 0.43 0.57]
 [0.   0.   0.   0.   0.57 0.71 0.29]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:31,large_class sample len:135
cluster len:1
cluster contain small sample len:[0.19]
before change column:	[1, -1, 1, 1, 1]
after change column:	[-1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 135, -1.0: 31})
after change, the sample len:	Counter({-1.0: 166})


============== iter  8 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.]
 [ 1. -1.  0.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  1  0  0  0]
 [ 4  5  0  0  0]
 [ 4  3  0  0  0]
 [ 0  5  1  1  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.6 1.  1.  0.4]
 [0.  0.  1.  0.8 1. ]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.57 0.14 0.43 0.71 0.43]
 [0.   0.   0.29 0.57 0.   0.29 0.29]
 [0.   0.   0.   0.71 0.29 0.43 0.57]
 [0.   0.   0.   0.   0.57 0.71 0.29]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:31,large_class sample len:135
cluster len:1
cluster contain small sample len:[0.19]
before change column:	[-1, 1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1]


============== iter  9 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  1  1  0]
 [ 1  0  1  1  0]]
row HD
[[0.  0.8 1.  1.  0.4]
 [0.  0.  1.2 1.  1.2]
 [0.  0.  0.  0.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.5  0.12 0.38 0.62 0.38 0.38]
 [0.   0.   0.25 0.5  0.   0.25 0.25 0.25]
 [0.   0.   0.   0.62 0.25 0.38 0.5  0.5 ]
 [0.   0.   0.   0.   0.5  0.62 0.25 0.25]
 [0.   0.   0.   0.   0.   0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
confusion matrix
[[29  1  0  0  0]
 [ 6  2  0  1  0]
 [ 6  1  0  0  0]
 [ 1  4  1  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  1.  1.  1.2 0.4]
 [0.  0.  1.4 1.  1.4]
 [0.  0.  0.  0.4 1.2]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.44 0.11 0.33 0.56 0.33 0.33 0.22]
 [0.   0.   0.22 0.44 0.   0.22 0.22 0.22 0.33]
 [0.   0.   0.   0.56 0.22 0.33 0.44 0.44 0.56]
 [0.   0.   0.   0.   0.44 0.56 0.22 0.22 0.11]
 [0.   0.   0.   0.   0.   0.22 0.22 0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:3, small_class sample:6,large_class sample len:67
extra_class: 1,extra_sample len: 93
cluster len:1
cluster contain small sample len:[0.06]
before change column:	[0, -1, -1, -1, 1]
after change column:	[0, -1, -1, -1, 1]


============== iter  11 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[29  1  0  0  0]
 [ 6  2  0  1  0]
 [ 5  1  1  0  0]
 [ 1  4  1  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  1.2 1.2 1.4 0.6]
 [0.  0.  1.4 1.  1.6]
 [0.  0.  0.  0.4 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.3 0.4 0.1 0.3 0.5 0.3 0.3 0.2 0.5]
 [0.  0.  0.2 0.4 0.  0.2 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.5 0.2 0.3 0.4 0.4 0.5 0.2]
 [0.  0.  0.  0.  0.4 0.5 0.2 0.2 0.1 0.5]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:31,large_class sample len:135
cluster len:1
cluster contain small sample len:[0.19]
before change column:	[-1, 1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1]


============== iter  12 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 6  0  0  3  0]
 [ 5  0  1  1  0]
 [ 1  0  1  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.4 1.2 1.4 0.6]
 [0.  0.  1.6 1.2 1.8]
 [0.  0.  0.  0.4 1.4]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.36 0.09 0.27 0.45 0.27 0.27 0.18 0.45 0.27]
 [0.   0.   0.18 0.36 0.   0.18 0.18 0.18 0.27 0.18 0.18]
 [0.   0.   0.   0.45 0.18 0.27 0.36 0.36 0.45 0.18 0.36]
 [0.   0.   0.   0.   0.36 0.45 0.18 0.18 0.09 0.45 0.18]
 [0.   0.   0.   0.   0.   0.18 0.18 0.18 0.27 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.36 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.27 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.27 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 3  0  3  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.6 1.4 1.6 0.6]
 [0.  0.  1.6 1.2 2. ]
 [0.  0.  0.  0.4 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.33 0.08 0.25 0.42 0.25 0.25 0.17 0.42 0.25 0.33]
 [0.   0.   0.17 0.33 0.   0.17 0.17 0.17 0.25 0.17 0.17 0.08]
 [0.   0.   0.   0.42 0.17 0.25 0.33 0.33 0.42 0.17 0.33 0.08]
 [0.   0.   0.   0.   0.33 0.42 0.17 0.17 0.08 0.42 0.17 0.42]
 [0.   0.   0.   0.   0.   0.17 0.17 0.17 0.25 0.17 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.33 0.08 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.08 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:31,large_class sample len:135
cluster len:1
cluster contain small sample len:[0.19]
before change column:	[-1, 1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1]


============== iter  14 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 3  0  3  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 1.4 1.6 0.6]
 [0.  0.  1.8 1.4 2.2]
 [0.  0.  0.  0.4 1.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.31 0.08 0.23 0.38 0.23 0.23 0.15 0.38 0.23 0.31 0.23]
 [0.   0.   0.15 0.31 0.   0.15 0.15 0.15 0.23 0.15 0.15 0.08 0.15]
 [0.   0.   0.   0.38 0.15 0.23 0.31 0.31 0.38 0.15 0.31 0.08 0.31]
 [0.   0.   0.   0.   0.31 0.38 0.15 0.15 0.08 0.38 0.15 0.38 0.15]
 [0.   0.   0.   0.   0.   0.15 0.15 0.15 0.23 0.15 0.15 0.08 0.15]
 [0.   0.   0.   0.   0.   0.   0.23 0.23 0.31 0.08 0.23 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.   0.23 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.   0.23 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.08 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.08 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True}
select_i_column
[ 1. -1.  0. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [-1]]
small_class len :1,large_class len:3, small_class sample:21,large_class sample len:130
extra_class: 1,extra_sample len: 15
cluster len:1
cluster contain small sample len:[0.58]
before change column:	[-1, -1, 0, 1, -1]
after change column:	[-1, -1, 1, 1, -1]
before change, the sample len:	Counter({-1.0: 130, 1.0: 21})
after change, the sample len:	Counter({-1.0: 130, 1.0: 36})


============== iter  15 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[29  0  0  1  0]
 [ 6  0  0  3  0]
 [ 5  0  1  1  0]
 [ 1  0  1  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 1.6 1.8 0.6]
 [0.  0.  2.  1.6 2.2]
 [0.  0.  0.  0.4 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.29 0.07 0.21 0.36 0.21 0.21 0.14 0.36 0.21 0.29 0.21 0.14]
 [0.   0.   0.14 0.29 0.   0.14 0.14 0.14 0.21 0.14 0.14 0.07 0.14 0.36]
 [0.   0.   0.   0.36 0.14 0.21 0.29 0.29 0.36 0.14 0.29 0.07 0.29 0.29]
 [0.   0.   0.   0.   0.29 0.36 0.14 0.14 0.07 0.36 0.14 0.36 0.14 0.07]
 [0.   0.   0.   0.   0.   0.14 0.14 0.14 0.21 0.14 0.14 0.07 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.29 0.07 0.21 0.14 0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.   0.21 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.   0.21 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.07 0.29 0.07 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.07 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:6,large_class sample len:160
cluster len:1
cluster contain small sample len:[0.04]
before change column:	[1, 1, 1, 1, -1]
after change column:	[-1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 160, -1.0: 6})
after change, the sample len:	Counter({-1.0: 166})


============== iter  16 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[29  0  0  1  0]
 [ 6  0  0  3  0]
 [ 5  0  1  1  0]
 [ 1  0  1  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  1.8 1.6 1.8 0.6]
 [0.  0.  2.  1.6 2.2]
 [0.  0.  0.  0.4 1.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.29 0.07 0.21 0.36 0.21 0.21 0.14 0.36 0.21 0.29 0.21 0.14]
 [0.   0.   0.14 0.29 0.   0.14 0.14 0.14 0.21 0.14 0.14 0.07 0.14 0.36]
 [0.   0.   0.   0.36 0.14 0.21 0.29 0.29 0.36 0.14 0.29 0.07 0.29 0.29]
 [0.   0.   0.   0.   0.29 0.36 0.14 0.14 0.07 0.36 0.14 0.36 0.14 0.07]
 [0.   0.   0.   0.   0.   0.14 0.14 0.14 0.21 0.14 0.14 0.07 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.21 0.21 0.29 0.07 0.21 0.14 0.21 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.   0.21 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.   0.21 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.07 0.29 0.07 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.07 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
14 classifiers pre label
Counter({1.0: 53, -1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 8  1  0  0  0]
 [ 6  1  0  0  0]
 [ 4  1  1  1  0]
 [ 0  1  0  2  0]]
row HD
[[0.  1.8 1.8 2.  0.6]
 [0.  0.  2.2 1.8 2.2]
 [0.  0.  0.  0.4 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.27 0.07 0.2  0.33 0.2  0.2  0.13 0.33 0.2  0.27 0.2  0.13
  0.2 ]
 [0.   0.   0.13 0.27 0.   0.13 0.13 0.13 0.2  0.13 0.13 0.07 0.13 0.33
  0.  ]
 [0.   0.   0.   0.33 0.13 0.2  0.27 0.27 0.33 0.13 0.27 0.07 0.27 0.27
  0.13]
 [0.   0.   0.   0.   0.27 0.33 0.13 0.13 0.07 0.33 0.13 0.33 0.13 0.07
  0.27]
 [0.   0.   0.   0.   0.   0.13 0.13 0.13 0.2  0.13 0.13 0.07 0.13 0.33
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.2  0.2  0.27 0.07 0.2  0.13 0.2  0.33
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.   0.2  0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.   0.2  0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.07 0.27 0.07 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.07 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.27
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:31,large_class sample len:135
cluster len:1
cluster contain small sample len:[0.19]
before change column:	[-1, 1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1]


============== iter  18 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
14 classifiers pre label
Counter({1.0: 53, -1.0: 3})
15 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  1  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  2.  1.8 2.  0.6]
 [0.  0.  2.4 2.  2.4]
 [0.  0.  0.  0.4 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.25 0.06 0.19 0.31 0.19 0.19 0.12 0.31 0.19 0.25 0.19 0.12
  0.19 0.19]
 [0.   0.   0.12 0.25 0.   0.12 0.12 0.12 0.19 0.12 0.12 0.06 0.12 0.31
  0.   0.12]
 [0.   0.   0.   0.31 0.12 0.19 0.25 0.25 0.31 0.12 0.25 0.06 0.25 0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.25 0.31 0.12 0.12 0.06 0.31 0.12 0.31 0.12 0.06
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.12 0.12 0.12 0.19 0.12 0.12 0.06 0.12 0.31
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.19 0.19 0.25 0.06 0.19 0.12 0.19 0.31
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.   0.19 0.   0.19
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.   0.19 0.   0.19
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.06 0.25 0.06 0.12
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.06 0.19 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.   0.19
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.25
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 1.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  19 ================
current matrix is 
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  0.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 35, -1.0: 17, 0.0: 4})
3 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
4 classifiers pre label
Counter({1.0: 53, -1.0: 3})
5 classifiers pre label
Counter({0.0: 50, -1.0: 6})
6 classifiers pre label
Counter({-1.0: 56})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
9 classifiers pre label
Counter({0.0: 38, -1.0: 18})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({1.0: 34, -1.0: 22})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 53, 1.0: 3})
14 classifiers pre label
Counter({1.0: 53, -1.0: 3})
15 classifiers pre label
Counter({-1.0: 56})
16 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
confusion matrix
[[29  0  0  1  0]
 [ 7  0  0  2  0]
 [ 6  0  1  0  0]
 [ 2  0  1  4  0]
 [ 1  0  0  2  0]]
row HD
[[0.  2.2 2.  2.2 0.6]
 [0.  0.  2.6 2.2 2.6]
 [0.  0.  0.  0.4 2.2]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.24 0.06 0.18 0.29 0.18 0.18 0.12 0.29 0.18 0.24 0.18 0.12
  0.18 0.18 0.24]
 [0.   0.   0.12 0.24 0.   0.12 0.12 0.12 0.18 0.12 0.12 0.06 0.12 0.29
  0.   0.12 0.06]
 [0.   0.   0.   0.29 0.12 0.18 0.24 0.24 0.29 0.12 0.24 0.06 0.24 0.24
  0.12 0.24 0.12]
 [0.   0.   0.   0.   0.24 0.29 0.12 0.12 0.06 0.29 0.12 0.29 0.12 0.06
  0.24 0.12 0.29]
 [0.   0.   0.   0.   0.   0.12 0.12 0.12 0.18 0.12 0.12 0.06 0.12 0.29
  0.   0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.18 0.18 0.24 0.06 0.18 0.12 0.18 0.29
  0.12 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.   0.18 0.   0.18
  0.12 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.   0.18 0.   0.18
  0.12 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.06 0.24 0.06 0.12
  0.18 0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.06 0.18 0.24
  0.12 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.18
  0.12 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.24
  0.06 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.12 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.15789473684210525
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})

**********      classifier acc  **************
[0.946, 0.768, 0.816, 0.839, 0.768, 0.176, 0.839, 0.839, 0.768, 0.423, 0.839, 0.839, 0.839, 0.768, 0.768, 0.839, 0.66]
before cutting matrix
[[ 1.  1.  1. -1.  1.  0. -1. -1. -1.  0. -1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1.  1.  1.  0.  1.  1.  1. -1.  1. -1.  1. -1.  1.  1.  0.]
 [ 1. -1.  0.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 130, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 99, -1.0: 52})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 130, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 36, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({-1.0: 36, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({-1.0: 114, 1.0: 52})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 67, 1.0: 6})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({-1.0: 67, 1.0: 6})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 130, 1.0: 36})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 130, -1.0: 36})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 130, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 36})
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
positive and negative ratio
Counter({1.0: 99, -1.0: 36})
after cutting matrix
[[ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
 [ 1.  0.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 99, -1.0: 52})
Counter({-1.0: 99, 1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 135, 1.0: 31})
Counter({1.0: 99, -1.0: 67})
Counter({-1.0: 135, 1.0: 31})
Counter({-1.0: 135, 1.0: 31})
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 3  0  3  3  0]
 [ 2  0  4  1  0]
 [ 0  0  2  5  0]
 [ 0  0  0  3  0]]


SVM classifier
Time: 2019-01-10 15:29:07
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1.  1.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  0.  0.  1.  1.  0.  1.  1.  0.]
 [-1. -1.  0. -1.  0. -1.  1. -1.  0.  1.]
 [ 1.  0. -1.  0.  1.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1. -1. -1.  1.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  0.  0. -1.  1.]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 40, 0.0: 16})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  0.  0.]
select_j_column
[-1.  0.  1.  0.  0.]
most_cplx_inx
4
new_column
None


============== iter  2 ================
current matrix is 
[ 1.  0.  0. -1.  1.]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({1.0: 40, 0.0: 16})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0.  1.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]
small_class len :1,large_class len:2, small_class sample:15,large_class sample len:114
extra_class: 2,extra_sample len: 37
cluster len:1
cluster contain small sample len:[0.29]
before change column:	[-1, 0, 1, -1, 0]
after change column:	[-1, 0, 1, -1, 1]
before change, the sample len:	Counter({-1.0: 114, 1.0: 15})
after change, the sample len:	Counter({-1.0: 114, 1.0: 21})


============== iter  3 ================
current matrix is 
[[ 1. -1.]
 [ 0.  0.]
 [ 0.  1.]
 [-1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
confusion matrix
[[26  4  0  0  0]
 [ 6  3  0  0  0]
 [ 5  2  0  0  0]
 [ 5  2  0  0  0]
 [ 2  1  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.2]
 [0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  0.]
 [ 0.  0. -1.]
 [ 0.  1.  1.]
 [-1. -1. -1.]
 [ 1.  1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 5  4  0  0  0]
 [ 4  3  0  0  0]
 [ 4  3  0  0  0]
 [ 1  2  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1. -1.  1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:6,large_class sample len:114
extra_class: 2,extra_sample len: 46
cluster len:1
cluster contain small sample len:[0.12]
before change column:	[-1, 0, 0, -1, 1]
after change column:	[-1, 0, 1, -1, 1]
before change, the sample len:	Counter({-1.0: 114, 1.0: 6})
after change, the sample len:	Counter({-1.0: 114, 1.0: 21})


============== iter  5 ================
current matrix is 
[[ 1. -1.  0. -1.]
 [ 0.  0. -1.  0.]
 [ 0.  1.  1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 4  2  0  1  0]
 [ 4  2  0  1  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.8 0.8 0.4 0.6]
 [0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  1.   0.5 ]
 [0.   0.   0.75 0.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1.  0.  1. -1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  0. -1.  0.]
 [ 0.  0. -1.  0.  1.]
 [ 0.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 5  0  0  4  0]
 [ 4  1  0  2  0]
 [ 4  1  0  2  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.  1.  0.6 0.8]
 [0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  0.8 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.8 0.4 0.8]
 [0.  0.  0.6 0.  0.8]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  0. -1.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.]
 [ 0.  0. -1.  0.  1.  1.]
 [ 0.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  0.]
 [ 1.  1. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 4  2  0  1  0]
 [ 4  2  0  1  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.2 1.2 0.6 0.8]
 [0.  0.  1.  1.  1. ]
 [0.  0.  0.  1.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.67 0.33 0.67 0.83]
 [0.   0.   0.5  0.   0.67 0.83]
 [0.   0.   0.   0.5  0.33 0.67]
 [0.   0.   0.   0.   0.67 0.83]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1. -1.  1.]
select_j_column
[ 0.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.]
 [ 0.  0. -1.  0.  1.  1.  0.]
 [ 0.  1.  1.  1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.]
 [ 1.  1. -1.  1. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 5  3  0  1  0]
 [ 4  2  0  1  0]
 [ 4  2  0  1  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.2 1.4 0.8 1. ]
 [0.  0.  1.2 1.2 1.2]
 [0.  0.  0.  1.2 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.57 0.29 0.57 0.71 0.57]
 [0.   0.   0.43 0.   0.57 0.71 0.57]
 [0.   0.   0.   0.43 0.29 0.57 0.43]
 [0.   0.   0.   0.   0.57 0.71 0.57]
 [0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1. -1.  1.]
select_j_column
[-1.  0.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:2, small_class sample:21,large_class sample len:114
extra_class: 1,extra_sample len: 31
cluster len:1
cluster contain small sample len:[0.4]
before change column:	[1, 0, -1, 1, -1]
after change column:	[1, -1, -1, 1, -1]
before change, the sample len:	Counter({1.0: 114, -1.0: 21})
after change, the sample len:	Counter({1.0: 114, -1.0: 52})


============== iter  9 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
confusion matrix
[[26  4  0  0  0]
 [ 5  1  0  3  0]
 [ 4  1  0  2  0]
 [ 4  2  0  1  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.4 1.6 0.8 1.2]
 [0.  0.  1.2 1.4 1.2]
 [0.  0.  0.  1.4 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.5  0.25 0.5  0.62 0.5  0.5 ]
 [0.   0.   0.38 0.   0.5  0.62 0.5  0.62]
 [0.   0.   0.   0.38 0.25 0.5  0.38 0.38]
 [0.   0.   0.   0.   0.5  0.62 0.5  0.62]
 [0.   0.   0.   0.   0.   0.25 0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1. -1. -1.]
select_j_column
[-1.  0.  1. -1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
confusion matrix
[[26  4  0  0  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 4  2  0  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.4 1.8 1.  1.4]
 [0.  0.  1.4 1.6 1.4]
 [0.  0.  0.  1.6 0.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.44 0.22 0.44 0.56 0.44 0.44 0.44]
 [0.   0.   0.33 0.   0.44 0.56 0.44 0.56 0.44]
 [0.   0.   0.   0.33 0.22 0.44 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.44 0.56 0.44 0.56 0.44]
 [0.   0.   0.   0.   0.   0.22 0.22 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1. -1.  1. -1.]
select_j_column
[ 0. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[26  4  0  0  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 4  2  0  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.6 2.  1.2 1.6]
 [0.  0.  1.4 1.8 1.4]
 [0.  0.  0.  1.8 0.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.4 0.2 0.4 0.5 0.4 0.4 0.4 0.3]
 [0.  0.  0.3 0.  0.4 0.5 0.4 0.5 0.4 0.2]
 [0.  0.  0.  0.3 0.2 0.4 0.3 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.4 0.5 0.4 0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  1.]
select_j_column
[ 1.  0.  0. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:6,large_class sample len:114
extra_class: 2,extra_sample len: 46
cluster len:1
cluster contain small sample len:[0.12]
before change column:	[-1, 0, 0, -1, 1]
after change column:	[-1, 0, 1, -1, 1]
before change, the sample len:	Counter({-1.0: 114, 1.0: 6})
after change, the sample len:	Counter({-1.0: 114, 1.0: 21})


============== iter  12 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
confusion matrix
[[26  4  0  0  0]
 [ 7  1  0  1  0]
 [ 5  1  0  1  0]
 [ 4  2  0  1  0]
 [ 2  0  0  1  0]]
row HD
[[0.  1.8 2.2 1.2 1.8]
 [0.  0.  1.6 2.  1.6]
 [0.  0.  0.  2.  0.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.36 0.18 0.36 0.45 0.36 0.36 0.36 0.27 0.18]
 [0.   0.   0.27 0.   0.36 0.45 0.36 0.45 0.36 0.18 0.  ]
 [0.   0.   0.   0.27 0.18 0.36 0.27 0.27 0.27 0.18 0.27]
 [0.   0.   0.   0.   0.36 0.45 0.36 0.45 0.36 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.18 0.18 0.27 0.18 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.36 0.27 0.27 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1. -1.  1.]
select_j_column
[ 0.  1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
confusion matrix
[[30  0  0  0  0]
 [ 6  1  0  1  1]
 [ 6  1  0  0  0]
 [ 5  2  0  0  0]
 [ 0  1  0  2  0]]
row HD
[[0.  2.  2.2 1.4 1.8]
 [0.  0.  1.8 2.  1.8]
 [0.  0.  0.  2.2 0.6]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.33 0.17 0.33 0.42 0.33 0.33 0.33 0.25 0.17 0.42]
 [0.   0.   0.25 0.   0.33 0.42 0.33 0.42 0.33 0.17 0.   0.33]
 [0.   0.   0.   0.25 0.17 0.33 0.25 0.25 0.25 0.17 0.25 0.33]
 [0.   0.   0.   0.   0.33 0.42 0.33 0.42 0.33 0.17 0.   0.33]
 [0.   0.   0.   0.   0.   0.17 0.17 0.25 0.17 0.17 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.25 0.33 0.25 0.25 0.42 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.42 0.42 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1.  0. -1.]
select_j_column
[ 0.  0. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:2, small_class sample:21,large_class sample len:114
extra_class: 1,extra_sample len: 31
cluster len:1
cluster contain small sample len:[0.4]
before change column:	[1, 0, -1, 1, -1]
after change column:	[1, -1, -1, 1, -1]
before change, the sample len:	Counter({1.0: 114, -1.0: 21})
after change, the sample len:	Counter({1.0: 114, -1.0: 52})


============== iter  14 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  1.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1. -1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.  1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
12 classifiers pre label
Counter({1.0: 54, -1.0: 2})
confusion matrix
[[30  0  0  0  0]
 [ 6  0  0  2  1]
 [ 6  0  0  1  0]
 [ 5  2  0  0  0]
 [ 0  0  0  3  0]]
row HD
[[0.  2.2 2.4 1.4 2. ]
 [0.  0.  1.8 2.2 1.8]
 [0.  0.  0.  2.4 0.6]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.31 0.15 0.31 0.38 0.31 0.31 0.31 0.23 0.15 0.38 0.31]
 [0.   0.   0.23 0.   0.31 0.38 0.31 0.38 0.31 0.15 0.   0.31 0.38]
 [0.   0.   0.   0.23 0.15 0.31 0.23 0.23 0.23 0.15 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.31 0.38 0.31 0.38 0.31 0.15 0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.15 0.15 0.23 0.15 0.15 0.31 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.31 0.23 0.23 0.38 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.   0.31 0.31 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.38 0.38 0.15 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  0.  0.]
select_j_column
[ 0.  1. -1.  0.  0.]
most_cplx_inx
1
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
ERROR-F1: the denominator of the 10 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  1.  0.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.  1.  0.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1. -1.  0.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
12 classifiers pre label
Counter({1.0: 54, -1.0: 2})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
confusion matrix
[[30  0  0  0  0]
 [ 6  2  0  1  0]
 [ 6  1  0  0  0]
 [ 5  2  0  0  0]
 [ 0  1  0  2  0]]
row HD
[[0.  2.4 2.6 1.4 2. ]
 [0.  0.  2.  2.4 2. ]
 [0.  0.  0.  2.6 0.8]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.29 0.14 0.29 0.36 0.29 0.29 0.29 0.21 0.14 0.36 0.29 0.36]
 [0.   0.   0.21 0.   0.29 0.36 0.29 0.36 0.29 0.14 0.   0.29 0.36 0.29]
 [0.   0.   0.   0.21 0.14 0.29 0.21 0.21 0.21 0.14 0.21 0.29 0.21 0.14]
 [0.   0.   0.   0.   0.29 0.36 0.29 0.36 0.29 0.14 0.   0.29 0.36 0.29]
 [0.   0.   0.   0.   0.   0.14 0.14 0.21 0.14 0.14 0.29 0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.21 0.29 0.21 0.21 0.36 0.21 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.   0.29 0.29 0.14 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.36 0.14 0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.14 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.36 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  1. -1.]
select_j_column
[ 0.  0. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  1.  0.  0.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.  1.  0. -1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
12 classifiers pre label
Counter({1.0: 54, -1.0: 2})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
14 classifiers pre label
Counter({0.0: 38, 1.0: 18})
confusion matrix
[[30  0  0  0  0]
 [ 6  2  0  1  0]
 [ 6  1  0  0  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  2.6 2.8 1.6 2.2]
 [0.  0.  2.  2.6 2. ]
 [0.  0.  0.  2.8 0.8]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.27 0.13 0.27 0.33 0.27 0.27 0.27 0.2  0.13 0.33 0.27 0.33
  0.2 ]
 [0.   0.   0.2  0.   0.27 0.33 0.27 0.33 0.27 0.13 0.   0.27 0.33 0.27
  0.13]
 [0.   0.   0.   0.2  0.13 0.27 0.2  0.2  0.2  0.13 0.2  0.27 0.2  0.13
  0.13]
 [0.   0.   0.   0.   0.27 0.33 0.27 0.33 0.27 0.13 0.   0.27 0.33 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.13 0.13 0.2  0.13 0.13 0.27 0.13 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.2  0.27 0.2  0.2  0.33 0.2  0.27 0.13
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.   0.27 0.27 0.13 0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33 0.33 0.13 0.   0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.13 0.13 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.33 0.2
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1. -1.]
select_j_column
[-1.  0.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]
small_class len :1,large_class len:3, small_class sample:21,large_class sample len:114
extra_class: 1,extra_sample len: 31
cluster len:1
cluster contain small sample len:[0.4]
before change column:	[1, 0, 1, -1, 1]
after change column:	[1, -1, 1, -1, 1]
before change, the sample len:	Counter({1.0: 114, -1.0: 21})
after change, the sample len:	Counter({1.0: 114, -1.0: 52})


============== iter  17 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  1.  0.  0.  1.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.  1. -1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.  1.  0. -1. -1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
12 classifiers pre label
Counter({1.0: 54, -1.0: 2})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
14 classifiers pre label
Counter({0.0: 38, 1.0: 18})
15 classifiers pre label
Counter({1.0: 43, -1.0: 13})
confusion matrix
[[30  0  0  0  0]
 [ 6  1  0  1  1]
 [ 6  1  0  0  0]
 [ 5  2  0  0  0]
 [ 0  1  0  2  0]]
row HD
[[0.  2.8 2.8 1.8 2.2]
 [0.  0.  2.2 2.6 2.2]
 [0.  0.  0.  3.  0.8]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.25 0.12 0.25 0.31 0.25 0.25 0.25 0.19 0.12 0.31 0.25 0.31
  0.19 0.12]
 [0.   0.   0.19 0.   0.25 0.31 0.25 0.31 0.25 0.12 0.   0.25 0.31 0.25
  0.12 0.12]
 [0.   0.   0.   0.19 0.12 0.25 0.19 0.19 0.19 0.12 0.19 0.25 0.19 0.12
  0.12 0.12]
 [0.   0.   0.   0.   0.25 0.31 0.25 0.31 0.25 0.12 0.   0.25 0.31 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.12 0.12 0.19 0.12 0.12 0.25 0.12 0.19 0.25
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.19 0.25 0.19 0.19 0.31 0.19 0.25 0.12
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.25 0.25 0.12 0.12 0.25
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31 0.31 0.12 0.   0.25
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.12 0.12 0.25
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.31 0.19
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.25
  0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.31
  0.25 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  1. -1.  0.  0.]
select_j_column
[ 0.  1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  18 ================
current matrix is 
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  1.  0.  0.  1.  0.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.  1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.  1.  0. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1. -1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 40, 0.0: 16})
1 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
2 classifiers pre label
Counter({0.0: 38, -1.0: 18})
3 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
4 classifiers pre label
Counter({0.0: 38, -1.0: 12, 1.0: 6})
5 classifiers pre label
Counter({0.0: 40, 1.0: 16})
6 classifiers pre label
Counter({0.0: 50, 1.0: 6})
7 classifiers pre label
Counter({1.0: 54, -1.0: 2})
8 classifiers pre label
Counter({0.0: 50, 1.0: 6})
9 classifiers pre label
Counter({0.0: 38, 1.0: 18})
10 classifiers pre label
Counter({-1.0: 44, 0.0: 12})
11 classifiers pre label
Counter({-1.0: 43, 1.0: 13})
12 classifiers pre label
Counter({1.0: 54, -1.0: 2})
13 classifiers pre label
Counter({0.0: 40, -1.0: 16})
14 classifiers pre label
Counter({0.0: 38, 1.0: 18})
15 classifiers pre label
Counter({1.0: 43, -1.0: 13})
16 classifiers pre label
Counter({0.0: 38, -1.0: 10, 1.0: 8})
confusion matrix
[[30  0  0  0  0]
 [ 6  1  0  1  1]
 [ 6  1  0  0  0]
 [ 5  2  0  0  0]
 [ 1  1  0  1  0]]
row HD
[[0.  3.  3.  2.  2.2]
 [0.  0.  2.4 2.8 2.4]
 [0.  0.  0.  3.  1. ]
 [0.  0.  0.  0.  2.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.24 0.12 0.24 0.29 0.24 0.24 0.24 0.18 0.12 0.29 0.24 0.29
  0.18 0.12 0.24]
 [0.   0.   0.18 0.   0.24 0.29 0.24 0.29 0.24 0.12 0.   0.24 0.29 0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.18 0.12 0.24 0.18 0.18 0.18 0.12 0.18 0.24 0.18 0.12
  0.12 0.12 0.18]
 [0.   0.   0.   0.   0.24 0.29 0.24 0.29 0.24 0.12 0.   0.24 0.29 0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.12 0.12 0.18 0.12 0.12 0.24 0.12 0.18 0.24
  0.12 0.24 0.06]
 [0.   0.   0.   0.   0.   0.   0.18 0.24 0.18 0.18 0.29 0.18 0.24 0.12
  0.18 0.29 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.   0.24 0.24 0.12 0.12 0.24
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29 0.29 0.12 0.   0.24
  0.29 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.12 0.12 0.24
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.29 0.18
  0.   0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.24
  0.12 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.29
  0.24 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.29 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.3333333333333333
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})

**********      classifier acc  **************
[0.675, 0.66, 0.385, 0.66, 0.308, 0.25, 0.059, 0.661, 0.059, 0.423, 0.66, 0.768, 0.661, 0.25, 0.423, 0.768, 0.261]
before cutting matrix
[[ 1. -1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  1.  0.  0.  1.  0.]
 [ 0.  0. -1.  0.  1.  1.  0. -1.  0.  1.  0.  1. -1. -1.  1. -1.  1.]
 [ 0.  1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  0.  1.  1.  1. -1. -1.  1.  1.  0. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  0. -1. -1. -1.  1.  1. -1. -1.  0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 99, -1.0: 21})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
positive and negative ratio
Counter({-1.0: 58, 1.0: 15})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 58, 1.0: 15})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
positive and negative ratio
Counter({-1.0: 42, 1.0: 31})
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 42, 1.0: 31})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 31, -1.0: 15})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 114, 1.0: 21})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 31, 1.0: 15})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({-1.0: 31, 1.0: 15})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({-1.0: 36, 1.0: 31})
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
positive and negative ratio
Counter({-1.0: 36, 1.0: 31})
after cutting matrix
[[ 0.  1.  0.  0. -1.  1.  0.  1.]
 [ 0. -1.  0.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 21, -1.0: 21})
Counter({1.0: 52, -1.0: 21})
Counter({-1.0: 114, 1.0: 52})
Counter({1.0: 114, -1.0: 52})
Counter({1.0: 52, -1.0: 21})
Counter({1.0: 114, -1.0: 52})
cutting matrix's confusion matrix
[[29  0  0  1  0]
 [ 5  1  1  2  0]
 [ 6  1  0  0  0]
 [ 2  2  0  3  0]
 [ 0  1  0  2  0]]


SVM classifier
Time: 2019-01-10 15:29:11
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.  1.]
 [-1.  1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1. -1.  1.  1.]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({1.0: 67})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [15  0  0  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.17 0.17 0.   0.17]
 [0.   0.   0.17 0.17 0.   0.17]
 [0.   0.   0.   0.33 0.17 0.  ]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:10,large_class sample len:153
extra_class: 1,extra_sample len: 38
cluster len:6
cluster contain small sample len:[1.0, 1.0, 1.0, 0.0, 0.0, nan]
no one train sample is selected


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  0.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 7  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.33 0.17 0.   0.33]
 [0.   0.   0.33 0.17 0.   0.33]
 [0.   0.   0.   0.5  0.33 0.17]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1. -1.]
 [ 1. -1. -1. -1.]
 [ 1.  1.  0. -1.]
 [-1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
confusion matrix
[[18  0  0  0  0  0]
 [12  0  0  0  1  0]
 [ 1  0 14  0  0  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.   0.33 0.33 0.17 0.5 ]
 [0.   0.   0.33 0.33 0.17 0.5 ]
 [0.   0.   0.   0.67 0.5  0.33]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.75 1.   1.  ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  0. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1.  1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.]
 [ 1.  1.  0. -1.  0.]
 [-1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [13  0  0  0  0  0]
 [ 1  0 14  0  0  0]
 [ 4  0  0  0  3  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.5  0.5  0.33 0.5 ]
 [0.   0.   0.   0.83 0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.67]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.6 0.8 0.8 0.4]
 [0.  0.  0.2 0.6 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1.  1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:29,large_class sample len:172
cluster len:8
cluster contain small sample len:[0.23, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan]
before change column:	[-1, -1, -1, 1, -1, -1]
after change column:	[1, -1, -1, 1, -1, 1]
before change, the sample len:	Counter({-1.0: 172, 1.0: 29})
after change, the sample len:	Counter({-1.0: 102, 1.0: 99})


============== iter  6 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.]
 [ 1.  1.  0. -1.  0. -1.]
 [-1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 3  1  0  2  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.67 0.5  0.5  0.5 ]
 [0.   0.   0.5  0.67 0.33 0.67]
 [0.   0.   0.   1.   0.67 0.67]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  0.67 0.67 0.33 0.67]
 [0.   0.   0.17 0.5  0.5  0.5 ]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.83 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  0. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:10,large_class sample len:153
extra_class: 1,extra_sample len: 38
cluster len:6
cluster contain small sample len:[1.0, 1.0, 1.0, 0.0, 0.0, nan]
no one train sample is selected


============== iter  7 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1.]
 [ 1.  1.  0. -1.  0. -1.  0.]
 [-1. -1. -1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 3  1  0  2  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 0.83 0.5  0.5  0.67]
 [0.   0.   0.67 0.67 0.33 0.83]
 [0.   0.   0.   1.17 0.83 0.83]
 [0.   0.   0.   0.   0.33 0.83]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.43 0.57 0.57 0.29 0.57 0.43]
 [0.   0.   0.14 0.43 0.43 0.43 0.86]
 [0.   0.   0.   0.43 0.29 0.43 0.71]
 [0.   0.   0.   0.   0.71 0.29 0.57]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1.  1.]
select_j_column
[ 1.  1.  0. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:10,large_class sample len:153
extra_class: 1,extra_sample len: 38
cluster len:6
cluster contain small sample len:[1.0, 1.0, 1.0, 0.0, 0.0, nan]
no one train sample is selected


============== iter  8 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.]
 [-1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  1 14  0  0  0]
 [ 3  1  0  2  1  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 1.   0.5  0.5  0.83]
 [0.   0.   0.83 0.67 0.33 1.  ]
 [0.   0.   0.   1.33 1.   1.  ]
 [0.   0.   0.   0.   0.33 1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.38 0.5  0.5  0.25 0.5  0.38 0.5 ]
 [0.   0.   0.12 0.38 0.38 0.38 0.75 0.12]
 [0.   0.   0.   0.38 0.25 0.38 0.62 0.  ]
 [0.   0.   0.   0.   0.62 0.25 0.5  0.38]
 [0.   0.   0.   0.   0.   0.38 0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1.  0. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 3  0  0  2  2  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.17 1.17 0.67 0.67 0.83]
 [0.   0.   1.   0.83 0.5  1.  ]
 [0.   0.   0.   1.5  1.17 1.17]
 [0.   0.   0.   0.   0.33 1.17]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.33 0.44 0.44 0.22 0.44 0.33 0.44 0.22]
 [0.   0.   0.11 0.33 0.33 0.33 0.67 0.11 0.33]
 [0.   0.   0.   0.33 0.22 0.33 0.56 0.   0.22]
 [0.   0.   0.   0.   0.56 0.22 0.44 0.33 0.56]
 [0.   0.   0.   0.   0.   0.33 0.33 0.22 0.  ]
 [0.   0.   0.   0.   0.   0.   0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  0.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 3  0  0  0  4  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 1.33 0.67 0.83 1.  ]
 [0.   0.   1.   1.   0.5  1.  ]
 [0.   0.   0.   1.67 1.17 1.17]
 [0.   0.   0.   0.   0.5  1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.3 0.4 0.4 0.2 0.4 0.3 0.4 0.2 0.5]
 [0.  0.  0.1 0.3 0.3 0.3 0.6 0.1 0.3 0.4]
 [0.  0.  0.  0.3 0.2 0.3 0.5 0.  0.2 0.4]
 [0.  0.  0.  0.  0.5 0.2 0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.3 0.3 0.2 0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 13  0  0  0  0]
 [ 0  0 14  0  1  0]
 [ 3  0  0  0  4  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.33 1.5  0.83 1.   1.17]
 [0.   0.   1.17 1.17 0.67 1.17]
 [0.   0.   0.   1.67 1.17 1.17]
 [0.   0.   0.   0.   0.5  1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.27 0.36 0.36 0.18 0.36 0.27 0.36 0.18 0.45 0.27]
 [0.   0.   0.09 0.27 0.27 0.27 0.55 0.09 0.27 0.36 0.36]
 [0.   0.   0.   0.27 0.18 0.27 0.45 0.   0.18 0.36 0.36]
 [0.   0.   0.   0.   0.45 0.18 0.36 0.27 0.45 0.27 0.45]
 [0.   0.   0.   0.   0.   0.27 0.27 0.18 0.   0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.36 0.27 0.27 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.27 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1.  1. -1. -1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 1  0  0  0  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.33 1.67 1.   1.17 1.33]
 [0.   0.   1.33 1.33 0.83 1.33]
 [0.   0.   0.   1.67 1.17 1.17]
 [0.   0.   0.   0.   0.5  1.33]
 [0.   0.   0.   0.   0.   1.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.25 0.33 0.33 0.17 0.33 0.25 0.33 0.17 0.42 0.25 0.25]
 [0.   0.   0.08 0.25 0.25 0.25 0.5  0.08 0.25 0.33 0.33 0.33]
 [0.   0.   0.   0.25 0.17 0.25 0.42 0.   0.17 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.42 0.17 0.33 0.25 0.42 0.25 0.42 0.42]
 [0.   0.   0.   0.   0.   0.25 0.25 0.17 0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.33 0.25 0.25 0.08 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.25 0.25 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
12 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  1  6  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  1.83 1.17 1.33 1.33]
 [0.   0.   1.33 1.33 0.83 1.5 ]
 [0.   0.   0.   1.67 1.17 1.33]
 [0.   0.   0.   0.   0.5  1.5 ]
 [0.   0.   0.   0.   0.   1.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.23 0.31 0.31 0.15 0.31 0.23 0.31 0.15 0.38 0.23 0.23 0.23]
 [0.   0.   0.08 0.23 0.23 0.23 0.46 0.08 0.23 0.31 0.31 0.31 0.15]
 [0.   0.   0.   0.23 0.15 0.23 0.38 0.   0.15 0.31 0.31 0.31 0.15]
 [0.   0.   0.   0.   0.38 0.15 0.31 0.23 0.38 0.23 0.38 0.38 0.23]
 [0.   0.   0.   0.   0.   0.23 0.23 0.15 0.   0.31 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.31 0.23 0.23 0.08 0.23 0.23 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.23 0.23 0.23 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.31 0.31 0.31 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  0. -1. -1.  1.]
select_j_column
[ 1.  1.  1. -1. -1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:10,large_class sample len:153
extra_class: 1,extra_sample len: 38
cluster len:6
cluster contain small sample len:[1.0, 1.0, 1.0, 0.0, 0.0, nan]
no one train sample is selected


============== iter  14 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.  0.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
12 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
13 classifiers pre label
Counter({1.0: 53, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  1  6  0]
 [ 0  0  0  0 10  0]
 [ 4  0  0  0  0  0]]
row HD
[[0.   0.5  2.   1.17 1.33 1.5 ]
 [0.   0.   1.5  1.33 0.83 1.67]
 [0.   0.   0.   1.83 1.33 1.5 ]
 [0.   0.   0.   0.   0.5  1.67]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.21 0.29 0.29 0.14 0.29 0.21 0.29 0.14 0.36 0.21 0.21 0.21 0.21]
 [0.   0.   0.07 0.21 0.21 0.21 0.43 0.07 0.21 0.29 0.29 0.29 0.14 0.43]
 [0.   0.   0.   0.21 0.14 0.21 0.36 0.   0.14 0.29 0.29 0.29 0.14 0.36]
 [0.   0.   0.   0.   0.36 0.14 0.29 0.21 0.36 0.21 0.36 0.36 0.21 0.29]
 [0.   0.   0.   0.   0.   0.21 0.21 0.14 0.   0.29 0.14 0.14 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.29 0.21 0.21 0.07 0.21 0.21 0.07 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.21 0.21 0.21 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.29 0.29 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.14 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1.  1.  0.  1.  1. -1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.  0.  0.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
12 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
13 classifiers pre label
Counter({1.0: 53, 0.0: 14})
14 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  1  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.5  2.17 1.33 1.5  1.67]
 [0.   0.   1.67 1.5  1.   1.83]
 [0.   0.   0.   2.   1.5  1.67]
 [0.   0.   0.   0.   0.5  1.67]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.2  0.27 0.27 0.13 0.27 0.2  0.27 0.13 0.33 0.2  0.2  0.2  0.2
  0.27]
 [0.   0.   0.07 0.2  0.2  0.2  0.4  0.07 0.2  0.27 0.27 0.27 0.13 0.4
  0.2 ]
 [0.   0.   0.   0.2  0.13 0.2  0.33 0.   0.13 0.27 0.27 0.27 0.13 0.33
  0.13]
 [0.   0.   0.   0.   0.33 0.13 0.27 0.2  0.33 0.2  0.33 0.33 0.2  0.27
  0.07]
 [0.   0.   0.   0.   0.   0.2  0.2  0.13 0.   0.27 0.13 0.13 0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.27 0.2  0.2  0.07 0.2  0.2  0.07 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.2  0.2  0.2  0.33 0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.27 0.27 0.27 0.13 0.33
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.13 0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1. -1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  16 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.  0.  0. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
12 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
13 classifiers pre label
Counter({1.0: 53, 0.0: 14})
14 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 14})
15 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  1  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.5  2.33 1.5  1.67 1.83]
 [0.   0.   1.83 1.67 1.17 2.  ]
 [0.   0.   0.   2.   1.5  1.67]
 [0.   0.   0.   0.   0.5  1.67]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.19 0.25 0.25 0.12 0.25 0.19 0.25 0.12 0.31 0.19 0.19 0.19 0.19
  0.25 0.19]
 [0.   0.   0.06 0.19 0.19 0.19 0.38 0.06 0.19 0.25 0.25 0.25 0.12 0.38
  0.19 0.25]
 [0.   0.   0.   0.19 0.12 0.19 0.31 0.   0.12 0.25 0.25 0.25 0.12 0.31
  0.12 0.25]
 [0.   0.   0.   0.   0.31 0.12 0.25 0.19 0.31 0.19 0.31 0.31 0.19 0.25
  0.06 0.31]
 [0.   0.   0.   0.   0.   0.19 0.19 0.12 0.   0.25 0.12 0.12 0.12 0.19
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.25 0.19 0.19 0.06 0.19 0.19 0.06 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.19 0.19 0.19 0.31 0.
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.25 0.25 0.12 0.31
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.12 0.12 0.19
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12 0.19
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19
  0.38 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19
  0.38 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  0.  1.  1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  17 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.  0.  0. -1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  0.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
12 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
13 classifiers pre label
Counter({1.0: 53, 0.0: 14})
14 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 14})
15 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
16 classifiers pre label
Counter({-1.0: 36, 1.0: 18, 0.0: 13})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  1  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.5  2.5  1.67 1.83 2.  ]
 [0.   0.   2.   1.83 1.33 2.17]
 [0.   0.   0.   2.   1.67 1.83]
 [0.   0.   0.   0.   0.67 1.83]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.18 0.24 0.24 0.12 0.24 0.18 0.24 0.12 0.29 0.18 0.18 0.18 0.18
  0.24 0.18 0.29]
 [0.   0.   0.06 0.18 0.18 0.18 0.35 0.06 0.18 0.24 0.24 0.24 0.12 0.35
  0.18 0.24 0.18]
 [0.   0.   0.   0.18 0.12 0.18 0.29 0.   0.12 0.24 0.24 0.24 0.12 0.29
  0.12 0.24 0.24]
 [0.   0.   0.   0.   0.29 0.12 0.24 0.18 0.29 0.18 0.29 0.29 0.18 0.24
  0.06 0.29 0.18]
 [0.   0.   0.   0.   0.   0.18 0.18 0.12 0.   0.24 0.12 0.12 0.12 0.18
  0.24 0.12 0.35]
 [0.   0.   0.   0.   0.   0.   0.24 0.18 0.18 0.06 0.18 0.18 0.06 0.24
  0.18 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.18 0.18 0.18 0.29 0.
  0.18 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.24 0.24 0.24 0.12 0.29
  0.12 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.12 0.12 0.18
  0.24 0.12 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12 0.18
  0.24 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18
  0.35 0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18
  0.35 0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.24 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
select_i_column
[ 1.  1.  0.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.]
most_cplx_inx
3
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:10,large_class sample len:131
extra_class: 1,extra_sample len: 60
cluster len:8
cluster contain small sample len:[1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, nan]
no one train sample is selected


============== iter  18 ================
current matrix is 
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  0.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.  0.  0. -1.  1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  0. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({1.0: 67})
1 classifiers pre label
Counter({-1.0: 53, 1.0: 14})
2 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
3 classifiers pre label
Counter({-1.0: 47, 1.0: 20})
4 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
5 classifiers pre label
Counter({-1.0: 40, 1.0: 27})
6 classifiers pre label
Counter({1.0: 53, 0.0: 14})
7 classifiers pre label
Counter({-1.0: 53, 0.0: 14})
8 classifiers pre label
Counter({1.0: 38, -1.0: 15, 0.0: 14})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 19})
10 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
11 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
12 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
13 classifiers pre label
Counter({1.0: 53, 0.0: 14})
14 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 14})
15 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
16 classifiers pre label
Counter({-1.0: 36, 1.0: 18, 0.0: 13})
17 classifiers pre label
Counter({-1.0: 50, 0.0: 17})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  1  6  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  3  0]]
row HD
[[0.   0.67 2.67 1.83 2.   2.17]
 [0.   0.   2.   1.83 1.33 2.33]
 [0.   0.   0.   2.   1.67 2.  ]
 [0.   0.   0.   0.   0.67 2.  ]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.17 0.22 0.22 0.11 0.22 0.17 0.22 0.11 0.28 0.17 0.17 0.17 0.17
  0.22 0.17 0.28 0.22]
 [0.   0.   0.06 0.17 0.17 0.17 0.33 0.06 0.17 0.22 0.22 0.22 0.11 0.33
  0.17 0.22 0.17 0.11]
 [0.   0.   0.   0.17 0.11 0.17 0.28 0.   0.11 0.22 0.22 0.22 0.11 0.28
  0.11 0.22 0.22 0.11]
 [0.   0.   0.   0.   0.28 0.11 0.22 0.17 0.28 0.17 0.28 0.28 0.17 0.22
  0.06 0.28 0.17 0.17]
 [0.   0.   0.   0.   0.   0.17 0.17 0.11 0.   0.22 0.11 0.11 0.11 0.17
  0.22 0.11 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.22 0.17 0.17 0.06 0.17 0.17 0.06 0.22
  0.17 0.17 0.22 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.28 0.17 0.17 0.17 0.17 0.28 0.
  0.17 0.17 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.22 0.22 0.22 0.11 0.28
  0.11 0.22 0.22 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.11 0.11 0.11 0.17
  0.22 0.11 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.11 0.11 0.17
  0.22 0.11 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.17
  0.33 0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.11 0.17
  0.33 0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28
  0.22 0.11 0.28 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.17 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.17 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.05555555555555555
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})

**********      classifier acc  **************
[0.896, 0.925, 0.923, 0.955, 0.942, 0.97, 0.923, 0.923, 0.942, 0.91, 0.97, 0.97, 1.0, 0.923, 0.962, 0.97, 0.906, 0.918]
before cutting matrix
[[ 1. -1. -1. -1.  1.  1.  1. -1.  1.  1.  1.  1.  1.  1. -1.  1. -1.  0.]
 [ 1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [ 1.  1.  0. -1.  0. -1.  0.  0.  0. -1. -1. -1. -1.  0.  0. -1.  1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  0. -1.]
 [ 1.  1.  1.  1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({1.0: 172, -1.0: 29})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 48})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({1.0: 153, -1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({-1.0: 153, 1.0: 10})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 153, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 112, 1.0: 89})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 112, 1.0: 89})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({1.0: 153, -1.0: 10})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({1.0: 153, -1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 98, 1.0: 67})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 98, 1.0: 67})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 10})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
positive and negative ratio
Counter({-1.0: 131, 1.0: 10})
after cutting matrix
[[-1.  1.  1.  1.  1.  1.  1. -1.  1.  0.]
 [-1.  1. -1.  1.  1.  1. -1. -1.  1. -1.]
 [-1.  0. -1.  0. -1. -1. -1.  0. -1. -1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 102, 1.0: 99})
Counter({1.0: 108, -1.0: 55})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 70})
Counter({-1.0: 98, 1.0: 65})
Counter({-1.0: 103, 1.0: 98})
Counter({-1.0: 131, 1.0: 10})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  0 15  0  0  0]
 [ 0  0  1  5  1  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  0  0  3]]


SVM classifier
Time: 2019-01-10 15:29:17
FS: variance_threshold
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0. -1.  0. -1.  1.  0.  0.  0.  0.  1.  1.]
 [-1. -1.  0. -1.  0.  1.  1.  0.  0. -1.  0.]
 [ 1.  0.  0. -1.  0. -1.  0. -1. -1.  0. -1.]
 [ 1.  1. -1.  1. -1.  1.  0. -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0. -1.  1.  0.  0.  0.]
 [ 1.  0.  1.  0. -1. -1.  0.  1.  1.  0. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  0.  0.  0.  0.]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
confusion matrix
[[17  0  1  0  0  0]
 [ 0 12  1  0  0  0]
 [ 0  1 14  0  0  0]
 [ 0  1  6  0  0  0]
 [ 0  0 10  0  0  0]
 [ 1  1  2  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[ 1.  0.  0. -1.  0. -1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
1 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 1 11  0  1  0  0]
 [ 0  0 14  1  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  1.  0.  0. -1.  0.]
select_j_column
[-1. -1.  0.  1.  0.  0.]
most_cplx_inx
5
new_column
None


============== iter  3 ================
current matrix is 
[[ 1.  1.]
 [-1.  1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0. -1.]
 [ 0. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
1 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 14})
confusion matrix
[[18  0  0  0  0  0]
 [ 1 11  0  1  0  0]
 [ 0  0 14  1  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.17 0.33 0.33 0.33 0.33]
 [0.   0.   0.33 0.33 0.33 0.33]
 [0.   0.   0.   0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  0. -1. -1. -1.]
select_j_column
[ 0.  1.  0.  0. -1.  0.]
most_cplx_inx
5
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 28 dimension of F1 is zero!
ERROR-F1: the denominator of the 29 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 64 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
ERROR-F1: the denominator of the 11 dimension of F1 is zero!
ERROR-F1: the denominator of the 12 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 16 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 23 dimension of F1 is zero!
ERROR-F1: the denominator of the 48 dimension of F1 is zero!
ERROR-F1: the denominator of the 49 dimension of F1 is zero!
ERROR-F1: the denominator of the 52 dimension of F1 is zero!
ERROR-F1: the denominator of the 56 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1.  0.]
 [-1.  1.  1.]
 [ 0.  0.  0.]
 [ 0. -1. -1.]
 [ 0. -1. -1.]
 [ 0. -1. -1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
1 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 14})
2 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 10  2  1  0  0]
 [ 0  0 14  1  0  0]
 [ 0  0  0  7  0  0]
 [ 0  0  0 10  0  0]
 [ 1  0  0  3  0  0]]
row HD
[[0.   0.33 0.33 0.5  0.5  0.5 ]
 [0.   0.   0.5  0.5  0.5  0.5 ]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.67]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 0.  0. -1.  0.  0.  1.]
select_j_column
[ 0.  0.  0. -1.  1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
ERROR-F1: the denominator of the 26 dimension of F1 is zero!
ERROR-F1: the denominator of the 38 dimension of F1 is zero!
ERROR-F1: the denominator of the 39 dimension of F1 is zero!
ERROR-F1: the denominator of the 42 dimension of F1 is zero!
ERROR-F1: the denominator of the 43 dimension of F1 is zero!
ERROR-F1: the denominator of the 44 dimension of F1 is zero!
ERROR-F1: the denominator of the 45 dimension of F1 is zero!
ERROR-F1: the denominator of the 46 dimension of F1 is zero!
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:10,large_class sample len:67
extra_class: 3,extra_sample len: 124
cluster len:6
cluster contain small sample len:[1.0, 0.07, 0.0, 0.0, 0.0, nan]
no one train sample is selected


============== iter  5 ================
current matrix is 
[[ 1.  1.  0.  0.]
 [-1.  1.  1.  0.]
 [ 0.  0.  0. -1.]
 [ 0. -1. -1. -1.]
 [ 0. -1. -1.  0.]
 [ 0. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})
*======label=======*
true label
Counter({'1': 18, '3': 15, '2': 13, '5': 10, '4': 7, '6': 4})
0 classifiers pre label
Counter({0.0: 34, 1.0: 18, -1.0: 15})
1 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 14})
2 classifiers pre label
Counter({0.0: 31, -1.0: 26, 1.0: 10})
3 classifiers pre label
Counter({0.0: 44, -1.0: 22, 1.0: 1})
confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  6  1  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  1  1  1]]
row HD
[[0.   0.33 0.5  0.67 0.5  0.67]
 [0.   0.   0.67 0.67 0.5  0.67]
 [0.   0.   0.   0.33 0.5  0.5 ]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   1.25 1.25]
 [0.   0.   0.25 1.25]
 [0.   0.   0.   1.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True}
average_class_acc >= 0.8
change ratio is:	0.0
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})

**********      classifier acc  **************
[0.935, 0.962, 0.912, 0.808]
before cutting matrix
[[ 1.  1.  0.  0.]
 [-1.  1.  1.  0.]
 [ 0.  0.  0. -1.]
 [ 0. -1. -1. -1.]
 [ 0. -1. -1.  0.]
 [ 0. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})
positive and negative ratio
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
positive and negative ratio
Counter({-1.0: 67, 1.0: 10})
after cutting matrix
[[ 1.  1.  0.  0.]
 [-1.  1.  1.  0.]
 [ 0.  0.  0. -1.]
 [ 0. -1. -1. -1.]
 [ 0. -1. -1.  0.]
 [ 0. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 60, -1.0: 38})
Counter({1.0: 98, -1.0: 65})
Counter({-1.0: 65, 1.0: 38})
Counter({-1.0: 67, 1.0: 10})
cutting matrix's confusion matrix
[[18  0  0  0  0  0]
 [ 0 12  0  0  1  0]
 [ 0  0 14  0  1  0]
 [ 0  0  0  6  1  0]
 [ 0  0  0  0 10  0]
 [ 1  0  0  1  1  1]]


SVM classifier
Time: 2019-01-10 15:29:18
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1.  1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.  1. -1. -1.  1.]
 [ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  1. -1.  1.  1.  1.]
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[11  6  0  0  0  0  0  0  0  0]
 [ 1 25  0  0  0  0  0  0  0  0]
 [ 0 22  0  0  0  0  0  0  0  0]
 [ 0 16  0  0  0  0  0  0  0  0]
 [10  7  0  0  0  0  0  0  0  0]
 [ 1 19  0  0  0  0  0  0  0  0]
 [11  4  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  0  0  0  0]
 [ 5 17  0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
confusion matrix
[[10  0  6  0  1  0  0  0  0  0]
 [ 0 24  1  0  1  0  0  0  0  0]
 [ 0  1 21  0  0  0  0  0  0  0]
 [ 0  0 16  0  0  0  0  0  0  0]
 [ 0  1  6  0 10  0  0  0  0  0]
 [ 0  0 19  0  1  0  0  0  0  0]
 [ 3  0  4  0  8  0  0  0  0  0]
 [ 0  3 17  0  0  0  0  0  0  0]
 [ 3  0 17  0  2  0  0  0  0  0]
 [ 0  0 13  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.2 0.  0.2 0.  0.  0. ]
 [0.  0.  0.  0.  0.2 0.  0.2 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.2 0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[-1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[11  0  2  0  0  0  0  0  4  0]
 [ 0 24  1  0  1  0  0  0  0  0]
 [ 0  1 20  0  0  0  0  0  1  0]
 [ 0  0 16  0  0  0  0  0  0  0]
 [ 2  1  6  0  8  0  0  0  0  0]
 [ 0  0 19  0  1  0  0  0  0  0]
 [ 4  0  1  0  7  0  0  0  3  0]
 [ 0  3 16  0  0  0  0  0  1  0]
 [ 3  0  8  0  2  0  0  0  9  0]
 [ 0  0 13  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.2 0.2 0.2 0.2 0.2 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.  0.2 0.  0.1 0. ]
 [0.  0.  0.  0.  0.2 0.  0.2 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.2 0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.  1.]
 [ 1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [ 1. -1. -1. -1.]
 [-1.  1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
confusion matrix
[[13  0  1  0  0  0  0  1  2  0]
 [ 0 20  5  0  0  0  1  0  0  0]
 [ 0  1 15  0  0  0  0  5  1  0]
 [ 0  0 15  0  0  0  0  1  0  0]
 [ 1  0  6  0  9  0  0  1  0  0]
 [ 0  0 18  0  0  0  1  1  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  1  0  0  0  0 15  0  0]
 [ 2  0  9  0  0  0  2  0  9  0]
 [ 0  0 13  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.3 0.3 0.3 0.2 0.2 0.2 0.3]
 [0.  0.  0.3 0.3 0.3 0.3 0.2 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.  0.3 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.2 0.  0.3 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   1.5  1.75]
 [0.   0.   1.   0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:8, small_class sample:98,large_class sample len:464
cluster len:1
cluster contain small sample len:[0.17]
before change column:	[-1, -1, -1, -1, -1, -1, 1, -1, 1, -1]
after change column:	[-1, -1, -1, -1, -1, -1, 1, -1, 1, -1]


============== iter  5 ================
current matrix is 
[[-1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
confusion matrix
[[13  0  1  0  0  0  0  1  2  0]
 [ 0 20  5  0  1  0  0  0  0  0]
 [ 0  1 15  0  0  0  0  5  1  0]
 [ 0  0 15  0  0  0  0  1  0  0]
 [ 1  0  6  0  9  0  0  1  0  0]
 [ 0  0 18  0  0  0  1  1  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  1  0  0  0  0 15  0  0]
 [ 2  0  9  0  0  0  2  0  9  0]
 [ 0  0 13  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.3 0.3 0.3 0.3 0.2 0.3 0.3]
 [0.  0.  0.3 0.3 0.3 0.3 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.  0.4 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.2 0.  0.4 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.2 1.4 1.4]
 [0.  0.  0.8 0.6 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True, 6: None, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
confusion matrix
[[13  0  2  0  0  0  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  1  1  0]
 [ 0  0  3 12  0  0  0  1  0  0]
 [ 1  0  6  1  9  0  0  0  0  0]
 [ 0  0 19  0  0  0  1  0  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  0  1  0  0  0 15  0  0]
 [ 2  0  9  0  0  0  2  0  9  0]
 [ 0  0 11  2  0  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.4 0.3 0.3 0.3 0.3 0.3 0.3]
 [0.  0.  0.4 0.3 0.4 0.4 0.4 0.2 0.4 0.4]
 [0.  0.  0.  0.1 0.2 0.  0.4 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.3 0.1 0.5 0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.2 0.2 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.   1.17 1.17 1.  ]
 [0.   0.   0.67 0.5  0.5  1.  ]
 [0.   0.   0.   0.5  0.5  1.  ]
 [0.   0.   0.   0.   0.67 1.17]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
confusion matrix
[[13  0  2  0  0  0  0  0  2  0]
 [ 0 24  0  1  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  3 13  0  0  0  0  0  0]
 [ 1  1  5  0  9  0  0  1  0  0]
 [ 0  0 19  0  0  0  1  0  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  9  0  0  0  2  0  9  0]
 [ 0  0 11  2  0  0  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.4 0.4 0.3 0.3 0.4 0.4 0.3]
 [0.  0.  0.5 0.4 0.4 0.5 0.5 0.2 0.4 0.5]
 [0.  0.  0.  0.1 0.3 0.  0.4 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.4 0.1 0.5 0.2 0.4 0.1]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.3 0.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 0.86 1.   1.   0.86 0.71]
 [0.   0.   0.57 0.43 0.43 0.86 0.43]
 [0.   0.   0.   0.43 0.43 0.86 0.43]
 [0.   0.   0.   0.   0.57 1.   0.57]
 [0.   0.   0.   0.   0.   0.71 0.57]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1.  1. -1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
confusion matrix
[[13  0  2  0  0  0  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  3 13  0  0  0  0  0  0]
 [ 1  0  5  1  8  0  0  1  1  0]
 [ 0  0 19  0  0  0  1  0  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0 10  0  0  0  2  0  8  0]
 [ 0  0 11  2  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.3 0.4 0.4 0.3 0.4 0.4 0.5 0.3]
 [0.  0.  0.6 0.5 0.5 0.6 0.5 0.3 0.4 0.6]
 [0.  0.  0.  0.1 0.3 0.  0.5 0.3 0.4 0. ]
 [0.  0.  0.  0.  0.4 0.1 0.6 0.2 0.5 0.1]
 [0.  0.  0.  0.  0.  0.3 0.4 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 0.88 0.88 0.75 0.62 0.75]
 [0.   0.   0.5  0.38 0.38 0.75 0.38 0.25]
 [0.   0.   0.   0.38 0.38 0.75 0.38 0.25]
 [0.   0.   0.   0.   0.5  0.88 0.5  0.38]
 [0.   0.   0.   0.   0.   0.62 0.5  0.12]
 [0.   0.   0.   0.   0.   0.   0.88 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
confusion matrix
[[14  0  1  0  0  0  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  3 13  0  0  0  0  0  0]
 [ 1  0  5  1  9  0  0  1  0  0]
 [ 1  0 18  0  0  0  1  0  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0 10  0  0  0  2  0  8  0]
 [ 0  0 11  2  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.4 0.4 0.4 0.4 0.4 0.6 0.4]
 [0.  0.  0.7 0.5 0.5 0.7 0.5 0.3 0.5 0.7]
 [0.  0.  0.  0.2 0.4 0.  0.6 0.4 0.4 0. ]
 [0.  0.  0.  0.  0.4 0.2 0.6 0.2 0.6 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.67 0.78 0.78 0.67 0.56 0.67 0.33]
 [0.   0.   0.44 0.33 0.33 0.67 0.33 0.22 0.78]
 [0.   0.   0.   0.33 0.33 0.67 0.33 0.22 0.56]
 [0.   0.   0.   0.   0.44 0.78 0.44 0.33 0.89]
 [0.   0.   0.   0.   0.   0.56 0.44 0.11 0.44]
 [0.   0.   0.   0.   0.   0.   0.78 0.67 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[13  0  2  0  0  0  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  3 13  0  0  0  0  0  0]
 [ 1  0  5  1  8  0  0  1  1  0]
 [ 0  0 19  0  0  0  1  0  0  0]
 [ 1  0  4  0  0  0  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  9  0  0  0  2  0  9  0]
 [ 0  0 11  2  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.6 0.5]
 [0.  0.  0.8 0.6 0.6 0.8 0.6 0.4 0.5 0.8]
 [0.  0.  0.  0.2 0.4 0.  0.6 0.4 0.5 0. ]
 [0.  0.  0.  0.  0.4 0.2 0.6 0.2 0.7 0.2]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.5 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.7 0.7 0.6 0.5 0.6 0.3 0.6]
 [0.  0.  0.4 0.3 0.3 0.6 0.3 0.2 0.7 0.4]
 [0.  0.  0.  0.3 0.3 0.6 0.3 0.2 0.5 0. ]
 [0.  0.  0.  0.  0.4 0.7 0.4 0.3 0.8 0.3]
 [0.  0.  0.  0.  0.  0.5 0.4 0.1 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.6 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 13  0  1  0  0  0  0]
 [ 1  0  1  1  8  4  0  1  1  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  0  0  0  4  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  4  0  0  5  2  0  9  0]
 [ 0  0  1  2  0 10  0  0  0  0]]
row HD
[[0.  0.5 0.5 0.5 0.5 0.6 0.6 0.5 0.6 0.6]
 [0.  0.  0.8 0.6 0.6 0.9 0.7 0.4 0.5 0.9]
 [0.  0.  0.  0.2 0.4 0.1 0.7 0.4 0.5 0.1]
 [0.  0.  0.  0.  0.4 0.3 0.7 0.2 0.7 0.3]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.6 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.73 0.55 0.64 0.64 0.55 0.45 0.55 0.27 0.55 0.55]
 [0.   0.   0.36 0.27 0.27 0.55 0.27 0.18 0.64 0.36 0.36]
 [0.   0.   0.   0.27 0.27 0.55 0.27 0.18 0.45 0.   0.55]
 [0.   0.   0.   0.   0.36 0.64 0.36 0.27 0.73 0.27 0.45]
 [0.   0.   0.   0.   0.   0.45 0.36 0.09 0.36 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.64 0.55 0.27 0.55 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.55 0.27 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.  1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  1  5  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  1  1  0  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  0  0  0  4  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  4  0  0  5  2  0  9  0]
 [ 0  0  1  2  0 10  0  0  0  0]]
row HD
[[0.  0.6 0.5 0.5 0.6 0.6 0.6 0.6 0.6 0.6]
 [0.  0.  0.9 0.7 0.6 1.  0.8 0.4 0.6 1. ]
 [0.  0.  0.  0.2 0.5 0.1 0.7 0.5 0.5 0.1]
 [0.  0.  0.  0.  0.5 0.3 0.7 0.3 0.7 0.3]
 [0.  0.  0.  0.  0.  0.6 0.6 0.4 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.6 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.58 0.58 0.5  0.42 0.5  0.25 0.5  0.5  0.5 ]
 [0.   0.   0.33 0.25 0.25 0.5  0.25 0.17 0.58 0.33 0.33 0.17]
 [0.   0.   0.   0.25 0.25 0.5  0.25 0.17 0.42 0.   0.5  0.33]
 [0.   0.   0.   0.   0.33 0.58 0.33 0.25 0.67 0.25 0.42 0.25]
 [0.   0.   0.   0.   0.   0.42 0.33 0.08 0.33 0.25 0.25 0.42]
 [0.   0.   0.   0.   0.   0.   0.58 0.5  0.25 0.5  0.33 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.5  0.25 0.58 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.17 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.25 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  0  5  1  9  0  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  5  0  0  4  2  0  9  0]
 [ 0  0  2  2  0  9  0  0  0  0]]
row HD
[[0.  0.7 0.5 0.6 0.6 0.7 0.7 0.6 0.6 0.7]
 [0.  0.  1.  0.7 0.7 1.  0.8 0.5 0.7 1. ]
 [0.  0.  0.  0.3 0.5 0.2 0.8 0.5 0.5 0.2]
 [0.  0.  0.  0.  0.6 0.3 0.7 0.4 0.8 0.3]
 [0.  0.  0.  0.  0.  0.7 0.7 0.4 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.7 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.9 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.46 0.54 0.54 0.46 0.38 0.46 0.23 0.46 0.46 0.46 0.31]
 [0.   0.   0.31 0.23 0.23 0.46 0.23 0.15 0.54 0.31 0.31 0.15 0.31]
 [0.   0.   0.   0.23 0.23 0.46 0.23 0.15 0.38 0.   0.46 0.31 0.46]
 [0.   0.   0.   0.   0.31 0.54 0.31 0.23 0.62 0.23 0.38 0.23 0.38]
 [0.   0.   0.   0.   0.   0.38 0.31 0.08 0.31 0.23 0.23 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.54 0.46 0.23 0.46 0.31 0.62 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.46 0.23 0.54 0.08 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.15 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.54 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.31 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:8, small_class sample:111,large_class sample len:451
cluster len:1
cluster contain small sample len:[0.2]
before change column:	[-1, 1, -1, -1, -1, -1, -1, -1, 1, -1]
after change column:	[-1, 1, -1, -1, -1, -1, -1, -1, 1, -1]


============== iter  14 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  0  5  1  9  0  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  6  0  0  4  2  0  8  0]
 [ 0  0  2  2  0  9  0  0  0  0]]
row HD
[[0.  0.8 0.5 0.6 0.6 0.7 0.7 0.6 0.7 0.7]
 [0.  0.  1.1 0.8 0.8 1.1 0.9 0.6 0.7 1.1]
 [0.  0.  0.  0.3 0.5 0.2 0.8 0.5 0.6 0.2]
 [0.  0.  0.  0.  0.6 0.3 0.7 0.4 0.9 0.3]
 [0.  0.  0.  0.  0.  0.7 0.7 0.4 0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.8 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.43 0.5  0.5  0.43 0.36 0.43 0.21 0.43 0.43 0.43 0.29 0.36]
 [0.   0.   0.29 0.21 0.21 0.43 0.21 0.14 0.5  0.29 0.29 0.14 0.29 0.21]
 [0.   0.   0.   0.21 0.21 0.43 0.21 0.14 0.36 0.   0.43 0.29 0.43 0.07]
 [0.   0.   0.   0.   0.29 0.5  0.29 0.21 0.57 0.21 0.36 0.21 0.36 0.29]
 [0.   0.   0.   0.   0.   0.36 0.29 0.07 0.29 0.21 0.21 0.36 0.36 0.14]
 [0.   0.   0.   0.   0.   0.   0.5  0.43 0.21 0.43 0.29 0.57 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.43 0.21 0.5  0.07 0.5  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.14 0.29 0.29 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.5  0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.29 0.43 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1. -1.  1.  1. -1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.  1. -1.  1.  1.  1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  0  5  1  9  0  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  6  0  0  4  2  0  8  0]
 [ 0  0  1  2  0 10  0  0  0  0]]
row HD
[[0.  0.9 0.5 0.7 0.6 0.8 0.7 0.6 0.7 0.8]
 [0.  0.  1.2 0.8 0.9 1.1 1.  0.7 0.8 1.1]
 [0.  0.  0.  0.4 0.5 0.3 0.8 0.5 0.6 0.3]
 [0.  0.  0.  0.  0.7 0.3 0.8 0.5 1.  0.3]
 [0.  0.  0.  0.  0.  0.8 0.7 0.4 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.9 0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.53 0.4  0.47 0.47 0.4  0.33 0.4  0.2  0.4  0.4  0.4  0.27 0.33
  0.2 ]
 [0.   0.   0.27 0.2  0.2  0.4  0.2  0.13 0.47 0.27 0.27 0.13 0.27 0.2
  0.33]
 [0.   0.   0.   0.2  0.2  0.4  0.2  0.13 0.33 0.   0.4  0.27 0.4  0.07
  0.33]
 [0.   0.   0.   0.   0.27 0.47 0.27 0.2  0.53 0.2  0.33 0.2  0.33 0.27
  0.4 ]
 [0.   0.   0.   0.   0.   0.33 0.27 0.07 0.27 0.2  0.2  0.33 0.33 0.13
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.47 0.4  0.2  0.4  0.27 0.53 0.4  0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.4  0.2  0.47 0.07 0.47 0.13
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.13 0.27 0.27 0.27 0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.47 0.33 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.27 0.4  0.07
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.13 0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1. -1.  1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  0  5  1  9  0  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  5  0  0  4  2  0  9  0]
 [ 0  0  2  3  0  8  0  0  0  0]]
row HD
[[0.  0.9 0.5 0.7 0.6 0.9 0.8 0.6 0.8 0.9]
 [0.  0.  1.2 0.8 0.9 1.2 1.1 0.7 0.9 1.2]
 [0.  0.  0.  0.4 0.5 0.4 0.9 0.5 0.7 0.4]
 [0.  0.  0.  0.  0.7 0.4 0.9 0.5 1.1 0.4]
 [0.  0.  0.  0.  0.  0.9 0.8 0.4 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.9 0.9 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.  1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.38 0.44 0.44 0.38 0.31 0.38 0.19 0.38 0.38 0.38 0.25 0.31
  0.19 0.31]
 [0.   0.   0.25 0.19 0.19 0.38 0.19 0.12 0.44 0.25 0.25 0.12 0.25 0.19
  0.31 0.31]
 [0.   0.   0.   0.19 0.19 0.38 0.19 0.12 0.31 0.   0.38 0.25 0.38 0.06
  0.31 0.31]
 [0.   0.   0.   0.   0.25 0.44 0.25 0.19 0.5  0.19 0.31 0.19 0.31 0.25
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.31 0.25 0.06 0.25 0.19 0.19 0.31 0.31 0.12
  0.38 0.12]
 [0.   0.   0.   0.   0.   0.   0.44 0.38 0.19 0.38 0.25 0.5  0.38 0.44
  0.44 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.38 0.19 0.44 0.06 0.44 0.12
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.12 0.25 0.25 0.25 0.06
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.44 0.31 0.25
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.25 0.38 0.06
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.12 0.31
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.19
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.06 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  3  0  0  0  0  1  0]
 [ 0  0  1 12  0  1  0  2  0  0]
 [ 1  0  1  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  5  0  0  4  2  0  9  0]
 [ 0  0  0  4  0  9  0  0  0  0]]
row HD
[[0.  0.9 0.6 0.7 0.6 0.9 0.9 0.6 0.9 0.9]
 [0.  0.  1.3 0.8 0.9 1.2 1.2 0.7 1.  1.2]
 [0.  0.  0.  0.5 0.6 0.5 0.9 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.7 0.4 1.  0.5 1.2 0.4]
 [0.  0.  0.  0.  0.  0.9 0.9 0.4 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 1.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.35 0.41 0.41 0.35 0.29 0.35 0.18 0.35 0.35 0.35 0.24 0.29
  0.18 0.29 0.24]
 [0.   0.   0.24 0.18 0.18 0.35 0.18 0.12 0.41 0.24 0.24 0.12 0.24 0.18
  0.29 0.29 0.35]
 [0.   0.   0.   0.18 0.18 0.35 0.18 0.12 0.29 0.   0.35 0.24 0.35 0.06
  0.29 0.29 0.35]
 [0.   0.   0.   0.   0.24 0.41 0.24 0.18 0.47 0.18 0.29 0.18 0.29 0.24
  0.35 0.35 0.29]
 [0.   0.   0.   0.   0.   0.29 0.24 0.06 0.24 0.18 0.18 0.29 0.29 0.12
  0.35 0.12 0.53]
 [0.   0.   0.   0.   0.   0.   0.41 0.35 0.18 0.35 0.24 0.47 0.35 0.41
  0.41 0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.35 0.18 0.41 0.06 0.41 0.12
  0.35 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.12 0.24 0.24 0.24 0.06
  0.29 0.18 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.41 0.29 0.24
  0.24 0.12 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.35 0.06
  0.29 0.29 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.12 0.29
  0.18 0.06 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.18
  0.29 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.06 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
select_j_column
[-1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]
small_class len :2,large_class len:8, small_class sample:98,large_class sample len:464
cluster len:1
cluster contain small sample len:[0.17]
before change column:	[1, 1, 1, 1, 1, 1, -1, 1, -1, 1]
after change column:	[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 464, -1.0: 98})
after change, the sample len:	Counter({-1.0: 562})


============== iter  18 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
confusion matrix
[[13  0  0  1  0  1  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  3  0  0  0  0  1  0]
 [ 0  0  1 12  0  1  0  2  0  0]
 [ 1  0  1  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  5  0  0  4  2  0  9  0]
 [ 0  0  0  4  0  9  0  0  0  0]]
row HD
[[0.  0.9 0.6 0.7 0.6 0.9 0.9 0.6 0.9 0.9]
 [0.  0.  1.3 0.8 0.9 1.2 1.2 0.7 1.  1.2]
 [0.  0.  0.  0.5 0.6 0.5 0.9 0.6 0.7 0.5]
 [0.  0.  0.  0.  0.7 0.4 1.  0.5 1.2 0.4]
 [0.  0.  0.  0.  0.  0.9 0.9 0.4 1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.9 1.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.35 0.41 0.41 0.35 0.29 0.35 0.18 0.35 0.35 0.35 0.24 0.29
  0.18 0.29 0.24]
 [0.   0.   0.24 0.18 0.18 0.35 0.18 0.12 0.41 0.24 0.24 0.12 0.24 0.18
  0.29 0.29 0.35]
 [0.   0.   0.   0.18 0.18 0.35 0.18 0.12 0.29 0.   0.35 0.24 0.35 0.06
  0.29 0.29 0.35]
 [0.   0.   0.   0.   0.24 0.41 0.24 0.18 0.47 0.18 0.29 0.18 0.29 0.24
  0.35 0.35 0.29]
 [0.   0.   0.   0.   0.   0.29 0.24 0.06 0.24 0.18 0.18 0.29 0.29 0.12
  0.35 0.12 0.53]
 [0.   0.   0.   0.   0.   0.   0.41 0.35 0.18 0.35 0.24 0.47 0.35 0.41
  0.41 0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.35 0.18 0.41 0.06 0.41 0.12
  0.35 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.12 0.24 0.24 0.24 0.06
  0.29 0.18 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.41 0.29 0.24
  0.24 0.12 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.24 0.35 0.06
  0.29 0.29 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.12 0.29
  0.18 0.06 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.18
  0.29 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.06 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  19 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  0  1  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  6  0  0  4  2  0  8  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.  0.7 0.7 0.6 1.  0.9 0.6 0.9 1. ]
 [0.  0.  1.3 0.9 1.  1.2 1.3 0.8 1.1 1.2]
 [0.  0.  0.  0.6 0.7 0.5 1.  0.7 0.8 0.5]
 [0.  0.  0.  0.  0.7 0.5 1.  0.5 1.2 0.5]
 [0.  0.  0.  0.  0.  1.  0.9 0.4 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.9 1.  1.1 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.33 0.39 0.39 0.33 0.28 0.33 0.17 0.33 0.33 0.33 0.22 0.28
  0.17 0.28 0.22 0.39]
 [0.   0.   0.22 0.17 0.17 0.33 0.17 0.11 0.39 0.22 0.22 0.11 0.22 0.17
  0.28 0.28 0.33 0.28]
 [0.   0.   0.   0.17 0.17 0.33 0.17 0.11 0.28 0.   0.33 0.22 0.33 0.06
  0.28 0.28 0.33 0.28]
 [0.   0.   0.   0.   0.22 0.39 0.22 0.17 0.44 0.17 0.28 0.17 0.28 0.22
  0.33 0.33 0.28 0.22]
 [0.   0.   0.   0.   0.   0.28 0.22 0.06 0.22 0.17 0.17 0.28 0.28 0.11
  0.33 0.11 0.5  0.22]
 [0.   0.   0.   0.   0.   0.   0.39 0.33 0.17 0.33 0.22 0.44 0.33 0.39
  0.39 0.17 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.33 0.17 0.39 0.06 0.39 0.11
  0.33 0.33 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.11 0.22 0.22 0.22 0.06
  0.28 0.17 0.44 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.17 0.39 0.28 0.22
  0.22 0.11 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.22 0.33 0.06
  0.28 0.28 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.11 0.28
  0.17 0.06 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17
  0.28 0.39 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28
  0.06 0.17 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.22 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.17 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1.  1.  1. -1.  1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
18 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  0  1  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.  0.7 0.7 0.7 1.  1.  0.6 1.  1. ]
 [0.  0.  1.3 0.9 1.1 1.2 1.4 0.8 1.2 1.2]
 [0.  0.  0.  0.6 0.8 0.5 1.1 0.7 0.9 0.5]
 [0.  0.  0.  0.  0.8 0.5 1.1 0.5 1.3 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.5 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.  1.  1.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.32 0.37 0.37 0.32 0.26 0.32 0.16 0.32 0.32 0.32 0.21 0.26
  0.16 0.26 0.21 0.37 0.42]
 [0.   0.   0.21 0.16 0.16 0.32 0.16 0.11 0.37 0.21 0.21 0.11 0.21 0.16
  0.26 0.26 0.32 0.26 0.11]
 [0.   0.   0.   0.16 0.16 0.32 0.16 0.11 0.26 0.   0.32 0.21 0.32 0.05
  0.26 0.26 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.21 0.37 0.21 0.16 0.42 0.16 0.26 0.16 0.26 0.21
  0.32 0.32 0.26 0.21 0.26]
 [0.   0.   0.   0.   0.   0.26 0.21 0.05 0.21 0.16 0.16 0.26 0.26 0.11
  0.32 0.11 0.47 0.21 0.05]
 [0.   0.   0.   0.   0.   0.   0.37 0.32 0.16 0.32 0.21 0.42 0.32 0.37
  0.37 0.16 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.16 0.32 0.16 0.37 0.05 0.37 0.11
  0.32 0.32 0.26 0.21 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.11 0.21 0.21 0.21 0.05
  0.26 0.16 0.42 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.16 0.37 0.26 0.21
  0.21 0.11 0.37 0.42 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.21 0.32 0.05
  0.26 0.26 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.11 0.26
  0.16 0.05 0.32 0.37 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.16
  0.26 0.37 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.05 0.16 0.21 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.21 0.21 0.37 0.32 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.16 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.37 0.32 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1.  1. -1.  1. -1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
18 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
19 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  0  1  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.1 0.7 0.7 0.7 1.  1.  0.7 1.  1. ]
 [0.  0.  1.4 1.  1.2 1.3 1.5 0.8 1.3 1.3]
 [0.  0.  0.  0.6 0.8 0.5 1.1 0.8 0.9 0.5]
 [0.  0.  0.  0.  0.8 0.5 1.1 0.6 1.3 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.6 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.  1.1 1.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.3  0.35 0.35 0.3  0.25 0.3  0.15 0.3  0.3  0.3  0.2  0.25
  0.15 0.25 0.2  0.35 0.4  0.25]
 [0.   0.   0.2  0.15 0.15 0.3  0.15 0.1  0.35 0.2  0.2  0.1  0.2  0.15
  0.25 0.25 0.3  0.25 0.1  0.15]
 [0.   0.   0.   0.15 0.15 0.3  0.15 0.1  0.25 0.   0.3  0.2  0.3  0.05
  0.25 0.25 0.3  0.25 0.2  0.15]
 [0.   0.   0.   0.   0.2  0.35 0.2  0.15 0.4  0.15 0.25 0.15 0.25 0.2
  0.3  0.3  0.25 0.2  0.25 0.1 ]
 [0.   0.   0.   0.   0.   0.25 0.2  0.05 0.2  0.15 0.15 0.25 0.25 0.1
  0.3  0.1  0.45 0.2  0.05 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.3  0.15 0.3  0.2  0.4  0.3  0.35
  0.35 0.15 0.3  0.25 0.2  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.3  0.15 0.35 0.05 0.35 0.1
  0.3  0.3  0.25 0.2  0.15 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.1  0.2  0.2  0.2  0.05
  0.25 0.15 0.4  0.25 0.1  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.15 0.35 0.25 0.2
  0.2  0.1  0.35 0.4  0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.2  0.3  0.05
  0.25 0.25 0.3  0.25 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.1  0.25
  0.15 0.05 0.3  0.35 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.15
  0.25 0.35 0.2  0.25 0.2  0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.05 0.15 0.2  0.35 0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.2  0.2  0.35 0.3  0.15 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.2  0.15 0.4  0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35 0.3  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.4  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:59,large_class sample len:503
cluster len:1
cluster contain small sample len:[0.1]
before change column:	[-1, 1, -1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1, -1, -1, -1, -1, -1]


============== iter  22 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
18 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
19 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 163, 1.0: 25})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 17  2  0  1  0  0  1  0]
 [ 0  0  1 11  0  2  0  2  0  0]
 [ 1  0  1  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  0  3  0 10  0  0  0  0]]
row HD
[[0.  1.2 0.7 0.7 0.7 1.  1.  0.7 1.  1. ]
 [0.  0.  1.5 1.1 1.3 1.4 1.6 0.9 1.4 1.4]
 [0.  0.  0.  0.6 0.8 0.5 1.1 0.8 0.9 0.5]
 [0.  0.  0.  0.  0.8 0.5 1.1 0.6 1.3 0.5]
 [0.  0.  0.  0.  0.  1.1 0.9 0.6 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.  1.1 1.2 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.29 0.33 0.33 0.29 0.24 0.29 0.14 0.29 0.29 0.29 0.19 0.24
  0.14 0.24 0.19 0.33 0.38 0.24 0.29]
 [0.   0.   0.19 0.14 0.14 0.29 0.14 0.1  0.33 0.19 0.19 0.1  0.19 0.14
  0.24 0.24 0.29 0.24 0.1  0.14 0.1 ]
 [0.   0.   0.   0.14 0.14 0.29 0.14 0.1  0.24 0.   0.29 0.19 0.29 0.05
  0.24 0.24 0.29 0.24 0.19 0.14 0.1 ]
 [0.   0.   0.   0.   0.19 0.33 0.19 0.14 0.38 0.14 0.24 0.14 0.24 0.19
  0.29 0.29 0.24 0.19 0.24 0.1  0.14]
 [0.   0.   0.   0.   0.   0.24 0.19 0.05 0.19 0.14 0.14 0.24 0.24 0.1
  0.29 0.1  0.43 0.19 0.05 0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.33 0.29 0.14 0.29 0.19 0.38 0.29 0.33
  0.33 0.14 0.29 0.24 0.19 0.43 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.29 0.14 0.33 0.05 0.33 0.1
  0.29 0.29 0.24 0.19 0.14 0.1  0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.1  0.19 0.19 0.19 0.05
  0.24 0.14 0.38 0.24 0.1  0.14 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.14 0.33 0.24 0.19
  0.19 0.1  0.33 0.38 0.24 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.19 0.29 0.05
  0.24 0.24 0.29 0.24 0.19 0.14 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.1  0.24
  0.14 0.05 0.29 0.33 0.19 0.24 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14
  0.24 0.33 0.19 0.24 0.19 0.05 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.05 0.14 0.19 0.33 0.29 0.24 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.19 0.19 0.33 0.29 0.14 0.1  0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19 0.14 0.38 0.33 0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.29 0.14 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.24 0.38 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.24 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  23 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
18 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
19 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 163, 1.0: 25})
21 classifiers pre label
Counter({1.0: 95, -1.0: 93})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  0  4  1  9  1  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  1  3  0  9  0  0  0  0]]
row HD
[[0.  1.2 0.8 0.8 0.8 1.  1.  0.8 1.1 1. ]
 [0.  0.  1.6 1.2 1.4 1.4 1.6 1.  1.5 1.4]
 [0.  0.  0.  0.6 0.8 0.6 1.2 0.8 0.9 0.6]
 [0.  0.  0.  0.  0.8 0.6 1.2 0.6 1.3 0.6]
 [0.  0.  0.  0.  0.  1.2 1.  0.6 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  1.  1.2 1.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.27 0.32 0.32 0.27 0.23 0.27 0.14 0.27 0.27 0.27 0.18 0.23
  0.14 0.23 0.18 0.32 0.36 0.23 0.27 0.18]
 [0.   0.   0.18 0.14 0.14 0.27 0.14 0.09 0.32 0.18 0.18 0.09 0.18 0.14
  0.23 0.23 0.27 0.23 0.09 0.14 0.09 0.27]
 [0.   0.   0.   0.14 0.14 0.27 0.14 0.09 0.23 0.   0.27 0.18 0.27 0.05
  0.23 0.23 0.27 0.23 0.18 0.14 0.09 0.27]
 [0.   0.   0.   0.   0.18 0.32 0.18 0.14 0.36 0.14 0.23 0.14 0.23 0.18
  0.27 0.27 0.23 0.18 0.23 0.09 0.14 0.32]
 [0.   0.   0.   0.   0.   0.23 0.18 0.05 0.18 0.14 0.14 0.23 0.23 0.09
  0.27 0.09 0.41 0.18 0.05 0.18 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.32 0.27 0.14 0.27 0.18 0.36 0.27 0.32
  0.32 0.14 0.27 0.23 0.18 0.41 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.27 0.14 0.32 0.05 0.32 0.09
  0.27 0.27 0.23 0.18 0.14 0.09 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.09 0.18 0.18 0.18 0.05
  0.23 0.14 0.36 0.23 0.09 0.14 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.14 0.32 0.23 0.18
  0.18 0.09 0.32 0.36 0.23 0.27 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.18 0.27 0.05
  0.23 0.23 0.27 0.23 0.18 0.14 0.09 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.09 0.23
  0.14 0.05 0.27 0.32 0.18 0.23 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.14
  0.23 0.32 0.18 0.23 0.18 0.05 0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23
  0.05 0.14 0.18 0.32 0.27 0.23 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.18 0.18 0.32 0.27 0.14 0.09 0.05 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.14 0.36 0.32 0.18 0.14 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.27 0.14 0.27 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.23 0.36 0.23 0.27 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.27 0.32 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.23 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.05 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[ 1.  1. -1.  1.  1.  1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  24 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
18 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
19 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 163, 1.0: 25})
21 classifiers pre label
Counter({1.0: 95, -1.0: 93})
22 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  0  4  1  9  1  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  2  0  0  2  7  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  3  0  0  4  2  0 11  0]
 [ 0  0  1  3  0  9  0  0  0  0]]
row HD
[[0.  1.3 0.9 0.9 0.8 1.1 1.1 0.9 1.2 1.1]
 [0.  0.  1.6 1.2 1.5 1.4 1.6 1.  1.5 1.4]
 [0.  0.  0.  0.6 0.9 0.6 1.2 0.8 0.9 0.6]
 [0.  0.  0.  0.  0.9 0.6 1.2 0.6 1.3 0.6]
 [0.  0.  0.  0.  0.  1.3 1.1 0.7 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  1.  1.2 1.3 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.1 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.26 0.3  0.3  0.26 0.22 0.26 0.13 0.26 0.26 0.26 0.17 0.22
  0.13 0.22 0.17 0.3  0.35 0.22 0.26 0.17 0.39]
 [0.   0.   0.17 0.13 0.13 0.26 0.13 0.09 0.3  0.17 0.17 0.09 0.17 0.13
  0.22 0.22 0.26 0.22 0.09 0.13 0.09 0.26 0.13]
 [0.   0.   0.   0.13 0.13 0.26 0.13 0.09 0.22 0.   0.26 0.17 0.26 0.04
  0.22 0.22 0.26 0.22 0.17 0.13 0.09 0.26 0.13]
 [0.   0.   0.   0.   0.17 0.3  0.17 0.13 0.35 0.13 0.22 0.13 0.22 0.17
  0.26 0.26 0.22 0.17 0.22 0.09 0.13 0.3  0.17]
 [0.   0.   0.   0.   0.   0.22 0.17 0.04 0.17 0.13 0.13 0.22 0.22 0.09
  0.26 0.09 0.39 0.17 0.04 0.17 0.13 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.3  0.26 0.13 0.26 0.17 0.35 0.26 0.3
  0.3  0.13 0.26 0.22 0.17 0.39 0.35 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.26 0.13 0.3  0.04 0.3  0.09
  0.26 0.26 0.22 0.17 0.13 0.09 0.13 0.13 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.09 0.17 0.17 0.17 0.04
  0.22 0.13 0.35 0.22 0.09 0.13 0.09 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.13 0.3  0.22 0.17
  0.17 0.09 0.3  0.35 0.22 0.26 0.22 0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.17 0.26 0.04
  0.22 0.22 0.26 0.22 0.17 0.13 0.09 0.26 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.09 0.22
  0.13 0.04 0.26 0.3  0.17 0.22 0.17 0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.13
  0.22 0.3  0.17 0.22 0.17 0.04 0.09 0.17 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.04 0.13 0.17 0.3  0.26 0.22 0.17 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.17 0.3  0.26 0.13 0.09 0.04 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.13 0.35 0.3  0.17 0.13 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.3  0.26 0.13 0.26 0.22 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22 0.35 0.22 0.26 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.13 0.26 0.3  0.13 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.22 0.17 0.17 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.04 0.22 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.26 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.  1.  1. -1.  1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:8, small_class sample:98,large_class sample len:464
cluster len:1
cluster contain small sample len:[0.17]
before change column:	[-1, -1, -1, -1, -1, -1, 1, -1, 1, -1]
after change column:	[-1, -1, -1, -1, -1, -1, 1, -1, 1, -1]


============== iter  25 ================
current matrix is 
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1. -1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({1.0: 149, -1.0: 39})
1 classifiers pre label
Counter({-1.0: 136, 1.0: 52})
2 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
3 classifiers pre label
Counter({-1.0: 111, 1.0: 77})
4 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
5 classifiers pre label
Counter({1.0: 125, -1.0: 63})
6 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
7 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
8 classifiers pre label
Counter({-1.0: 107, 1.0: 81})
9 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
10 classifiers pre label
Counter({-1.0: 130, 1.0: 58})
11 classifiers pre label
Counter({-1.0: 132, 1.0: 56})
12 classifiers pre label
Counter({1.0: 97, -1.0: 91})
13 classifiers pre label
Counter({-1.0: 150, 1.0: 38})
14 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
15 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
16 classifiers pre label
Counter({1.0: 142, -1.0: 46})
17 classifiers pre label
Counter({1.0: 97, -1.0: 91})
18 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
19 classifiers pre label
Counter({-1.0: 148, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 163, 1.0: 25})
21 classifiers pre label
Counter({1.0: 95, -1.0: 93})
22 classifiers pre label
Counter({-1.0: 160, 1.0: 28})
23 classifiers pre label
Counter({-1.0: 157, 1.0: 31})
confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 11  0  1  0  2  0  0]
 [ 1  0  4  1  9  1  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  2  0  0  4  3  0 11  0]
 [ 0  0  1  3  0  9  0  0  0  0]]
row HD
[[0.  1.3 0.9 0.9 0.8 1.1 1.2 0.9 1.3 1.1]
 [0.  0.  1.6 1.2 1.5 1.4 1.7 1.  1.6 1.4]
 [0.  0.  0.  0.6 0.9 0.6 1.3 0.8 1.  0.6]
 [0.  0.  0.  0.  0.9 0.6 1.3 0.6 1.4 0.6]
 [0.  0.  0.  0.  0.  1.3 1.2 0.7 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  1.1 1.2 1.4 0. ]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.25 0.29 0.29 0.25 0.21 0.25 0.12 0.25 0.25 0.25 0.17 0.21
  0.12 0.21 0.17 0.29 0.33 0.21 0.25 0.17 0.38 0.29]
 [0.   0.   0.17 0.12 0.12 0.25 0.12 0.08 0.29 0.17 0.17 0.08 0.17 0.12
  0.21 0.21 0.25 0.21 0.08 0.12 0.08 0.25 0.12 0.12]
 [0.   0.   0.   0.12 0.12 0.25 0.12 0.08 0.21 0.   0.25 0.17 0.25 0.04
  0.21 0.21 0.25 0.21 0.17 0.12 0.08 0.25 0.12 0.12]
 [0.   0.   0.   0.   0.17 0.29 0.17 0.12 0.33 0.12 0.21 0.12 0.21 0.17
  0.25 0.25 0.21 0.17 0.21 0.08 0.12 0.29 0.17 0.17]
 [0.   0.   0.   0.   0.   0.21 0.17 0.04 0.17 0.12 0.12 0.21 0.21 0.08
  0.25 0.08 0.38 0.17 0.04 0.17 0.12 0.21 0.17 0.  ]
 [0.   0.   0.   0.   0.   0.   0.29 0.25 0.12 0.25 0.17 0.33 0.25 0.29
  0.29 0.12 0.25 0.21 0.17 0.38 0.33 0.25 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.25 0.12 0.29 0.04 0.29 0.08
  0.25 0.25 0.21 0.17 0.12 0.08 0.12 0.12 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.08 0.17 0.17 0.17 0.04
  0.21 0.12 0.33 0.21 0.08 0.12 0.08 0.25 0.21 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.12 0.29 0.21 0.17
  0.17 0.08 0.29 0.33 0.21 0.25 0.21 0.21 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.25 0.04
  0.21 0.21 0.25 0.21 0.17 0.12 0.08 0.25 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.08 0.21
  0.12 0.04 0.25 0.29 0.17 0.21 0.17 0.33 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12
  0.21 0.29 0.17 0.21 0.17 0.04 0.08 0.17 0.12 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21
  0.04 0.12 0.17 0.29 0.25 0.21 0.17 0.33 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.17 0.17 0.29 0.25 0.12 0.08 0.04 0.21 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.12 0.33 0.29 0.17 0.12 0.29 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29 0.25 0.12 0.25 0.21 0.29 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.33 0.21 0.25 0.25 0.21 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.12 0.25 0.29 0.12 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.21 0.17 0.17 0.12 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.04 0.21 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: None, 7: None, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.04
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})

**********      classifier acc  **************
[0.872, 0.883, 0.83, 0.835, 0.915, 0.941, 0.814, 0.84, 0.83, 0.83, 0.872, 0.931, 0.846, 0.84, 0.867, 0.904, 0.878, 0.809, 0.872, 0.936, 0.941, 0.798, 0.915, 0.915]
before cutting matrix
[[-1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1.  1. -1.
  -1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1.  1.
  -1. -1. -1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
   1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1.  1.  1. -1.  1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.
   1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  1.  1.
  -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1.
   1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1.  1. -1.
  -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 400, 1.0: 162})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 344, 1.0: 218})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 344, 1.0: 218})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 326, 1.0: 236})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 326, 1.0: 236})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 405, 1.0: 157})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 405, 1.0: 157})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 400, 1.0: 162})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 285, 1.0: 277})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 285, 1.0: 277})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 451, 1.0: 111})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 331, 1.0: 231})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({-1.0: 331, 1.0: 231})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({1.0: 339, -1.0: 223})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 339, -1.0: 223})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({1.0: 299, -1.0: 263})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
positive and negative ratio
Counter({1.0: 299, -1.0: 263})
after cutting matrix
[[-1. -1. -1.  1.  1. -1. -1. -1.  1. -1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 402, -1.0: 160})
Counter({-1.0: 394, 1.0: 168})
Counter({-1.0: 464, 1.0: 98})
Counter({1.0: 376, -1.0: 186})
Counter({-1.0: 400, 1.0: 162})
Counter({-1.0: 409, 1.0: 153})
Counter({-1.0: 378, 1.0: 184})
Counter({-1.0: 357, 1.0: 205})
Counter({1.0: 407, -1.0: 155})
Counter({-1.0: 401, 1.0: 161})
Counter({-1.0: 441, 1.0: 121})
Counter({-1.0: 503, 1.0: 59})
Counter({-1.0: 448, 1.0: 114})
Counter({-1.0: 464, 1.0: 98})
cutting matrix's confusion matrix
[[13  0  0  0  0  2  0  0  2  0]
 [ 0 20  0  5  1  0  0  0  0  0]
 [ 0  1 18  2  0  0  0  0  1  0]
 [ 0  0  2 13  0  1  0  0  0  0]
 [ 1  1  0  1  9  4  0  1  0  0]
 [ 0  0  0  0  0 19  1  0  0  0]
 [ 1  0  0  0  0  2  9  0  3  0]
 [ 1  3  0  3  0  0  0 13  0  0]
 [ 2  0  2  0  0  4  3  0 11  0]
 [ 1  0  0  2  0 10  0  0  0  0]]


SVM classifier
Time: 2019-01-10 15:29:44
FS: variance_threshold
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0. -1.  1.  0.  0.  1. -1. -1.  0.  1.  0.  0.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0. -1.  1.  0.  0.  1.  0.  1.  0. -1.  1. -1.  0.]
 [ 1.  1.  0.  0. -1.  0. -1.  1.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  1. -1.  0.  0.  0.  1.  0. -1.  0.  0.  0.  0. -1. -1.]
 [-1.  0.  1.  0.  0.  0. -1.  0. -1.  1.  0.  0.  1.  0.  0.]
 [ 1.  1.  0. -1.  0. -1. -1.  0.  1.  0. -1.  1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  1.  0. -1.  1.  0. -1.  0.  0.  1.  1.]
 [ 0.  0.  0. -1.  1.  0.  0. -1.  0.  0.  1.  1.  0.  1. -1.]
 [-1.  1. -1.  1.  0.  0.  0.  1.  1. -1.  0.  0.  1. -1. -1.]]


============== iter  1 ================
current matrix is 
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
confusion matrix
[[12  5  0  0  0  0  0  0  0  0]
 [ 4 22  0  0  0  0  0  0  0  0]
 [ 0 20  0  0  0  0  2  0  0  0]
 [ 2  9  0  0  0  0  5  0  0  0]
 [11  2  0  0  0  0  4  0  0  0]
 [16  2  0  0  0  0  2  0  0  0]
 [ 3 10  0  0  0  0  2  0  0  0]
 [ 2  4  0  0  0  0 14  0  0  0]
 [ 3 15  0  0  0  0  4  0  0  0]
 [ 2  2  0  0  0  0  9  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 0.  0.]
 [ 0. -1.]
 [ 0. -1.]
 [-1.  0.]
 [-1.  1.]
 [ 1. -1.]
 [ 1.  0.]
 [ 0. -1.]
 [ 1.  1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
confusion matrix
[[10  3  2  0  0  2  0  0  0  0]
 [ 0 21  1  0  4  0  0  0  0  0]
 [ 0  1 19  0  0  0  1  1  0  0]
 [ 2  0  9  0  0  0  1  3  0  1]
 [ 0  2  0  0 11  0  0  2  0  2]
 [ 0  1  1  0  0 16  0  0  0  2]
 [ 1  0 10  0  0  2  2  0  0  0]
 [ 2  3  1  0  0  0  2 12  0  0]
 [ 2  0 15  0  0  1  1  0  0  3]
 [ 0  0  2  0  1  1  0  0  0  9]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.1 0.1 0.1 0.2 0.2 0.1 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.2 0.  0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  3.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  3 ================
current matrix is 
[[-1. -1.  0.]
 [ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 0. -1.  0.]
 [-1.  0.  0.]
 [-1.  1.  0.]
 [ 1. -1.  0.]
 [ 1.  0.  1.]
 [ 0. -1. -1.]
 [ 1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
confusion matrix
[[10  3  0  0  0  2  0  0  2  0]
 [ 0 21  1  0  4  0  0  0  0  0]
 [ 0  1 18  0  0  0  1  1  1  0]
 [ 2  0  9  0  0  0  1  3  0  1]
 [ 0  3  0  0 11  0  0  1  0  2]
 [ 0  1  0  0  0 16  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  1  0  0  0  2 12  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  0  2  0  1  1  0  0  0  9]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.1 0.1 0.3 0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
most_cplx_inx
6
new_column
None


============== iter  4 ================
current matrix is 
[[-1. -1.  0.]
 [ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 0. -1.  0.]
 [-1.  0.  0.]
 [-1.  1.  0.]
 [ 1. -1.  0.]
 [ 1.  0.  1.]
 [ 0. -1. -1.]
 [ 1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
confusion matrix
[[10  3  0  0  0  2  0  0  2  0]
 [ 0 21  1  0  4  0  0  0  0  0]
 [ 0  1 18  0  0  0  1  1  1  0]
 [ 2  0  9  0  0  0  1  3  0  1]
 [ 0  3  0  0 11  0  0  1  0  2]
 [ 0  1  0  0  0 16  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  1  0  0  0  2 12  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  0  2  0  1  1  0  0  0  9]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.1 0.1 0.3 0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
select_j_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
most_cplx_inx
3
new_column
None


============== iter  5 ================
current matrix is 
[[-1. -1.  0.]
 [ 0.  0.  0.]
 [ 0. -1.  0.]
 [ 0. -1.  0.]
 [-1.  0.  0.]
 [-1.  1.  0.]
 [ 1. -1.  0.]
 [ 1.  0.  1.]
 [ 0. -1. -1.]
 [ 1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
confusion matrix
[[10  3  0  0  0  2  0  0  2  0]
 [ 0 21  1  0  4  0  0  0  0  0]
 [ 0  1 18  0  0  0  1  1  1  0]
 [ 2  0  9  0  0  0  1  3  0  1]
 [ 0  3  0  0 11  0  0  1  0  2]
 [ 0  1  0  0  0 16  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  1  0  0  0  2 12  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  0  2  0  1  1  0  0  0  9]]
row HD
[[0.  0.2 0.1 0.1 0.1 0.1 0.1 0.3 0.2 0.2]
 [0.  0.  0.1 0.1 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.2 0.2 0.1 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.33 2.  ]
 [0.   0.   2.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  0.  0.  0.  0.  0.  1. -1.  0.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1. -1.  0.  0.]
 [ 0.  0.  0. -1.]
 [ 0. -1.  0.  0.]
 [ 0. -1.  0. -1.]
 [-1.  0.  0.  1.]
 [-1.  1.  0. -1.]
 [ 1. -1.  0. -1.]
 [ 1.  0.  1.  1.]
 [ 0. -1. -1. -1.]
 [ 1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
confusion matrix
[[10  3  0  0  0  2  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  2 18  0  0  0  1  0  1  0]
 [ 2  1  1  8  0  0  1  2  0  1]
 [ 0  1  0  0 10  0  0  2  0  4]
 [ 0  0  0  0  0 16  0  0  1  3]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  2  1  0  0  0 11  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  1  0  2  0  1  0  0  0  9]]
row HD
[[0.  0.3 0.1 0.2 0.2 0.2 0.2 0.4 0.3 0.2]
 [0.  0.  0.2 0.1 0.2 0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.1 0.3 0.3 0.2 0.4 0.2 0.2]
 [0.  0.  0.  0.  0.3 0.2 0.1 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.2 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.75 1.5  1.75]
 [0.   0.   1.75 1.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1.]
 [ 0. -1.  0.  0.  1.]
 [ 0. -1.  0. -1. -1.]
 [-1.  0.  0.  1. -1.]
 [-1.  1.  0. -1.  1.]
 [ 1. -1.  0. -1.  0.]
 [ 1.  0.  1.  1.  0.]
 [ 0. -1. -1. -1.  1.]
 [ 1.  1.  0.  0. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
confusion matrix
[[10  0  3  0  1  1  0  0  2  0]
 [ 0 21  0  1  4  0  0  0  0  0]
 [ 0  1 16  2  0  0  2  0  1  0]
 [ 2  0  1  8  0  0  2  2  0  1]
 [ 0  1  0  0 10  1  0  2  0  3]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  2  1  0  0  1 11  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  1  0  2  1  0  0  0  0  9]]
row HD
[[0.  0.4 0.1 0.3 0.3 0.2 0.3 0.5 0.3 0.3]
 [0.  0.  0.3 0.1 0.2 0.3 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.2 0.4 0.3 0.3 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.3 0.3 0.2 0.5 0.2 0.3]
 [0.  0.  0.  0.  0.  0.3 0.4 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.4 1.2 1.4 1.8]
 [0.  0.  1.4 1.4 1.4]
 [0.  0.  0.  1.  1.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 0. -1.  0.  0. -1.  1.  0.  1.  0. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  8 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.]
 [ 0.  0.  0. -1. -1. -1.]
 [ 0. -1.  0.  0.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.]
 [-1.  0.  0.  1. -1.  1.]
 [-1.  1.  0. -1.  1.  0.]
 [ 1. -1.  0. -1.  0.  1.]
 [ 1.  0.  1.  1.  0. -1.]
 [ 0. -1. -1. -1.  1.  0.]
 [ 1.  1.  0.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
confusion matrix
[[13  0  0  0  1  1  0  0  2  0]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 2  1  2  8  0  0  0  2  0  1]
 [ 0  0  0  1 10  1  0  1  0  4]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  2  1  0  0  0 11  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.4 0.2 0.4 0.4 0.3 0.4 0.5 0.4 0.4]
 [0.  0.  0.4 0.2 0.3 0.4 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.5 0.3 0.4 0.6 0.2 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.6 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   1.17 1.5  0.83]
 [0.   0.   1.17 1.17 1.17 1.5 ]
 [0.   0.   0.   0.83 1.5  1.  ]
 [0.   0.   0.   0.   1.33 1.  ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
7
new_column
None


============== iter  9 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1.]
 [ 0.  0.  0. -1. -1. -1.]
 [ 0. -1.  0.  0.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.]
 [-1.  0.  0.  1. -1.  1.]
 [-1.  1.  0. -1.  1.  0.]
 [ 1. -1.  0. -1.  0.  1.]
 [ 1.  0.  1.  1.  0. -1.]
 [ 0. -1. -1. -1.  1.  0.]
 [ 1.  1.  0.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
confusion matrix
[[13  0  0  0  1  1  0  0  2  0]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 0  2 17  2  0  0  0  0  1  0]
 [ 2  1  2  8  0  0  0  2  0  1]
 [ 0  0  0  1 10  1  0  1  0  4]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  2  1  0  0  0 11  0  0]
 [ 2  0  3  0  0  1  1  0 12  3]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.4 0.2 0.4 0.4 0.3 0.4 0.5 0.4 0.4]
 [0.  0.  0.4 0.2 0.3 0.4 0.4 0.4 0.4 0.4]
 [0.  0.  0.  0.2 0.5 0.3 0.4 0.6 0.2 0.3]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.6 0.2 0.3]
 [0.  0.  0.  0.  0.  0.4 0.4 0.4 0.6 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.17 1.   1.17 1.5  0.83]
 [0.   0.   1.17 1.17 1.17 1.5 ]
 [0.   0.   0.   0.83 1.5  1.  ]
 [0.   0.   0.   0.   1.33 1.  ]
 [0.   0.   0.   0.   0.   1.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
select_j_column
[ 1.  0. -1.  0.  0.  0.  1.  0.  1.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]]


============== iter  10 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.]
 [ 0.  0.  0. -1. -1. -1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0.]
 [-1.  0.  0.  1. -1.  1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.]
 [ 1. -1.  0. -1.  0.  1. -1.]
 [ 1.  0.  1.  1.  0. -1.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.]
 [ 1.  1.  0.  0. -1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
confusion matrix
[[ 9  0  1  0  1  4  0  0  2  0]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  2 16  2  0  0  0  0  1  0]
 [ 2  1  2  8  0  0  0  2  0  1]
 [ 0  0  0  1 10  1  0  1  0  4]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  3  0  0  2  0  0  9  0]
 [ 4  4  0  1  0  0  0 11  0  0]
 [ 3  0  3  0  0  1  0  0 12  3]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.5 0.3 0.5 0.5 0.4 0.4 0.6 0.4 0.5]
 [0.  0.  0.5 0.2 0.3 0.4 0.5 0.4 0.5 0.4]
 [0.  0.  0.  0.3 0.6 0.4 0.5 0.7 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.4 0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.4 0.5 0.4 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.86 1.   1.29 0.71 1.  ]
 [0.   0.   1.   1.   1.   1.29 0.57]
 [0.   0.   0.   0.71 1.29 0.86 0.57]
 [0.   0.   0.   0.   1.14 0.86 1.  ]
 [0.   0.   0.   0.   0.   1.29 1.14]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
select_j_column
[ 0. -1.  0. -1.  1. -1. -1.  1. -1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  11 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
confusion matrix
[[10  0  1  0  1  3  0  0  2  0]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  1 15  2  0  0  1  1  1  0]
 [ 2  0  1  8  0  0  1  3  0  1]
 [ 0  1  1  1 10  0  0  1  0  3]
 [ 2  0  1  0  0 14  0  0  1  2]
 [ 1  0  1  2  0  2  0  0  9  0]
 [ 4  3  0  1  0  0  0 12  0  0]
 [ 3  0  2  1  0  1  0  0 12  3]
 [ 0  0  0  3  1  0  0  0  0  9]]
row HD
[[0.  0.6 0.3 0.6 0.6 0.5 0.5 0.7 0.4 0.5]
 [0.  0.  0.6 0.3 0.4 0.4 0.6 0.5 0.6 0.5]
 [0.  0.  0.  0.4 0.7 0.5 0.6 0.8 0.3 0.4]
 [0.  0.  0.  0.  0.4 0.4 0.4 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.5 0.5 0.4 0.8 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.88 0.75 0.88 1.12 0.62 0.88 0.88]
 [0.   0.   0.88 0.88 0.88 1.12 0.5  0.88]
 [0.   0.   0.   0.62 1.12 0.75 0.5  0.88]
 [0.   0.   0.   0.   1.   0.75 0.88 0.62]
 [0.   0.   0.   0.   0.   1.12 1.   0.88]
 [0.   0.   0.   0.   0.   0.   0.75 0.75]
 [0.   0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1.  1.  1.  1.  0.  0.  0. -1. -1.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
confusion matrix
[[10  0  1  0  1  3  0  0  2  0]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  1  2  9  0  2  0  2  0  0]
 [ 0  1  1  1 10  0  0  1  0  3]
 [ 2  2  0  0  0 15  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  3  2  0  0  1  1  0 13  0]
 [ 0  6  0  3  1  0  0  0  0  3]]
row HD
[[0.  0.7 0.4 0.7 0.6 0.6 0.5 0.8 0.5 0.5]
 [0.  0.  0.7 0.3 0.5 0.4 0.7 0.6 0.7 0.6]
 [0.  0.  0.  0.5 0.8 0.6 0.7 0.8 0.3 0.5]
 [0.  0.  0.  0.  0.5 0.4 0.5 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.  0.6 0.5 0.5 0.9 0.5]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.78 0.67 0.78 1.   0.56 0.78 0.78 1.11]
 [0.   0.   0.78 0.78 0.78 1.   0.44 0.78 0.67]
 [0.   0.   0.   0.56 1.   0.67 0.44 0.78 0.56]
 [0.   0.   0.   0.   0.89 0.67 0.78 0.56 0.78]
 [0.   0.   0.   0.   0.   1.   0.89 0.78 0.89]
 [0.   0.   0.   0.   0.   0.   0.67 0.67 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  0.  0.  0. -1.  0.  0.  1. -1. -1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
9
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
confusion matrix
[[10  1  0  0  0  4  0  0  2  0]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  1  2  9  0  2  0  2  0  0]
 [ 0  1  1  0 11  0  0  1  0  3]
 [ 0  2  0  0  0 17  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 3  3  0  2  0  1  0 11  0  0]
 [ 2  3  2  0  0  1  1  0 13  0]
 [ 0  7  0  2  1  0  0  0  0  3]]
row HD
[[0.  0.8 0.5 0.8 0.7 0.7 0.6 0.9 0.6 0.6]
 [0.  0.  0.7 0.3 0.6 0.4 0.8 0.6 0.7 0.7]
 [0.  0.  0.  0.5 0.9 0.6 0.8 0.8 0.3 0.6]
 [0.  0.  0.  0.  0.6 0.4 0.6 0.7 0.5 0.6]
 [0.  0.  0.  0.  0.  0.7 0.5 0.6 1.  0.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.7 0.6 0.7 0.9 0.5 0.7 0.7 1.  0.5]
 [0.  0.  0.7 0.7 0.7 0.9 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.5 0.9 0.6 0.4 0.7 0.5 0.6]
 [0.  0.  0.  0.  0.8 0.6 0.7 0.5 0.7 0.8]
 [0.  0.  0.  0.  0.  0.9 0.8 0.7 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  14 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
confusion matrix
[[10  4  0  0  0  1  0  0  2  0]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 0  1 18  1  0  0  0  0  2  0]
 [ 0  1  2  9  0  2  0  2  0  0]
 [ 0  2  1  0 11  0  0  1  0  2]
 [ 0  2  0  0  0 17  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  0  2  0  1  0 11  1  0]
 [ 2  3  2  0  0  1  1  0 13  0]
 [ 0  7  0  2  1  0  0  0  0  3]]
row HD
[[0.  0.9 0.6 0.8 0.8 0.8 0.7 1.  0.7 0.6]
 [0.  0.  0.8 0.4 0.6 0.5 0.8 0.6 0.7 0.8]
 [0.  0.  0.  0.6 1.  0.6 0.9 0.9 0.4 0.7]
 [0.  0.  0.  0.  0.7 0.5 0.7 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.  0.8 0.5 0.6 1.  0.6]
 [0.  0.  0.  0.  0.  0.  0.9 0.9 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.64 0.55 0.64 0.82 0.45 0.64 0.64 0.91 0.45 0.64]
 [0.   0.   0.64 0.64 0.64 0.82 0.36 0.64 0.55 0.64 0.36]
 [0.   0.   0.   0.45 0.82 0.55 0.36 0.64 0.45 0.55 0.64]
 [0.   0.   0.   0.   0.73 0.55 0.64 0.45 0.64 0.73 0.82]
 [0.   0.   0.   0.   0.   0.82 0.73 0.64 0.73 0.55 0.36]
 [0.   0.   0.   0.   0.   0.   0.55 0.55 0.73 0.55 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.73 0.64 0.45 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.55 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.91 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  0.  0.  1.  0.  1. -1.  0.  0.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  15 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
confusion matrix
[[10  1  0  0  0  4  0  0  2  0]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  2  2  8  0  2  0  2  0  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  2  0  0  0 17  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 11  1  0]
 [ 3  3  2  0  0  1  1  0 12  0]
 [ 0  7  0  2  1  0  0  0  0  3]]
row HD
[[0.  1.  0.6 0.9 0.8 0.8 0.7 1.1 0.8 0.7]
 [0.  0.  0.9 0.5 0.7 0.6 0.9 0.6 0.8 0.8]
 [0.  0.  0.  0.7 1.  0.6 0.9 1.  0.5 0.8]
 [0.  0.  0.  0.  0.8 0.6 0.8 0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.8 0.5 0.7 1.1 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 1.  0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.58 0.5  0.58 0.75 0.42 0.58 0.58 0.83 0.42 0.58 0.58]
 [0.   0.   0.58 0.58 0.58 0.75 0.33 0.58 0.5  0.58 0.33 0.75]
 [0.   0.   0.   0.42 0.75 0.5  0.33 0.58 0.42 0.5  0.58 0.75]
 [0.   0.   0.   0.   0.67 0.5  0.58 0.42 0.58 0.67 0.75 0.67]
 [0.   0.   0.   0.   0.   0.75 0.67 0.58 0.67 0.5  0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.5  0.5  0.67 0.5  0.67 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.58 0.42 0.42 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.5  0.58 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.83 0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0.  1.  0. -1. -1.  1. -1. -1.  0.  0.]
select_j_column
[ 1. -1.  1. -1. -1.  1.  0.  0.  1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]
small_class len :1,large_class len:6, small_class sample:54,large_class sample len:348
extra_class: 3,extra_sample len: 160
cluster len:1
cluster contain small sample len:[0.25]
before change column:	[0, -1, 0, -1, -1, 1, -1, -1, 0, -1]
after change column:	[0, -1, 0, -1, -1, 1, -1, -1, 0, -1]


============== iter  16 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
confusion matrix
[[10  4  0  0  0  1  0  0  2  0]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  2  2  8  0  2  0  2  0  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  2  0  0  0 17  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 11  1  0]
 [ 3  3  2  0  0  1  1  0 12  0]
 [ 0  7  0  2  1  0  0  0  0  3]]
row HD
[[0.  1.1 0.6 1.  0.9 0.9 0.8 1.2 0.8 0.8]
 [0.  0.  1.  0.5 0.7 0.7 0.9 0.6 0.9 0.8]
 [0.  0.  0.  0.8 1.1 0.7 1.  1.1 0.5 0.9]
 [0.  0.  0.  0.  0.8 0.7 0.8 0.9 0.7 0.7]
 [0.  0.  0.  0.  0.  0.9 0.5 0.7 1.2 0.7]
 [0.  0.  0.  0.  0.  0.  1.  1.1 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.54 0.46 0.54 0.69 0.38 0.54 0.54 0.77 0.38 0.54 0.54 0.54]
 [0.   0.   0.54 0.54 0.54 0.69 0.31 0.54 0.46 0.54 0.31 0.69 0.54]
 [0.   0.   0.   0.38 0.69 0.46 0.31 0.54 0.38 0.46 0.54 0.69 0.62]
 [0.   0.   0.   0.   0.62 0.46 0.54 0.38 0.54 0.62 0.69 0.62 0.38]
 [0.   0.   0.   0.   0.   0.69 0.62 0.54 0.62 0.46 0.31 0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.46 0.46 0.62 0.46 0.62 0.31 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.62 0.54 0.38 0.38 0.62 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46 0.54 0.54 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.77 0.54 0.62 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0. -1. -1.  1. -1. -1.  0. -1.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
confusion matrix
[[10  4  0  0  0  1  0  0  2  0]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  2  2  8  0  2  0  2  0  0]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  2  0  0  0 17  0  0  1  0]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 11  1  0]
 [ 3  3  2  0  0  1  1  0 12  0]
 [ 0  7  0  2  1  0  0  0  0  3]]
row HD
[[0.  1.2 0.6 1.1 1.  1.  0.9 1.3 0.9 0.9]
 [0.  0.  1.1 0.5 0.7 0.8 1.  0.7 1.  0.8]
 [0.  0.  0.  0.9 1.2 0.8 1.1 1.2 0.6 1. ]
 [0.  0.  0.  0.  0.8 0.8 0.9 1.  0.8 0.7]
 [0.  0.  0.  0.  0.  1.  0.6 0.8 1.3 0.7]
 [0.  0.  0.  0.  0.  0.  1.  1.1 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.43 0.5  0.64 0.36 0.5  0.5  0.71 0.36 0.5  0.5  0.5  0.43]
 [0.   0.   0.5  0.5  0.5  0.64 0.29 0.5  0.43 0.5  0.29 0.64 0.5  0.57]
 [0.   0.   0.   0.36 0.64 0.43 0.29 0.5  0.36 0.43 0.5  0.64 0.57 0.5 ]
 [0.   0.   0.   0.   0.57 0.43 0.5  0.36 0.5  0.57 0.64 0.57 0.36 0.36]
 [0.   0.   0.   0.   0.   0.64 0.57 0.5  0.57 0.43 0.29 0.36 0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.43 0.43 0.57 0.43 0.57 0.29 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.57 0.5  0.36 0.36 0.57 0.64 0.71]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.5  0.5  0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.71 0.5  0.57 0.5  0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.36 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 0. -1.  0.  1.  1.  0.  1.  0.  0.  1.]
select_j_column
[ 1. -1.  1. -1. -1.  1.  0.  0.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]]
small_class len :1,large_class len:8, small_class sample:59,large_class sample len:441
extra_class: 1,extra_sample len: 62
cluster len:1
cluster contain small sample len:[0.49]
before change column:	[1, -1, 1, 1, 1, 1, 1, 0, 1, 1]
after change column:	[1, -1, 1, 1, 1, 1, 1, -1, 1, 1]
before change, the sample len:	Counter({1.0: 441, -1.0: 59})
after change, the sample len:	Counter({1.0: 441, -1.0: 121})


============== iter  18 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  1 18  1  0  0  0  0  1  0]
 [ 0  0  2  9  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 1  3  0  2  0  1  0 13  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.3 0.6 1.1 1.  1.  0.9 1.4 0.9 0.9]
 [0.  0.  1.2 0.6 0.8 0.9 1.1 0.7 1.1 0.9]
 [0.  0.  0.  0.9 1.2 0.8 1.1 1.3 0.6 1. ]
 [0.  0.  0.  0.  0.8 0.8 0.9 1.1 0.8 0.7]
 [0.  0.  0.  0.  0.  1.  0.6 0.9 1.3 0.7]
 [0.  0.  0.  0.  0.  0.  1.  1.2 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.4  0.47 0.6  0.33 0.47 0.47 0.67 0.33 0.47 0.47 0.47 0.4
  0.53]
 [0.   0.   0.47 0.47 0.47 0.6  0.27 0.47 0.4  0.47 0.27 0.6  0.47 0.53
  0.53]
 [0.   0.   0.   0.33 0.6  0.4  0.27 0.47 0.33 0.4  0.47 0.6  0.53 0.47
  0.67]
 [0.   0.   0.   0.   0.53 0.4  0.47 0.33 0.47 0.53 0.6  0.53 0.33 0.33
  0.53]
 [0.   0.   0.   0.   0.   0.6  0.53 0.47 0.53 0.4  0.27 0.33 0.33 0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.4  0.4  0.53 0.4  0.53 0.27 0.4  0.47
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.33 0.33 0.53 0.6  0.67
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.47 0.47 0.13 0.33
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.47 0.53 0.47 0.53
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.33 0.47
  0.6 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.4  0.47
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1.  1.]
select_j_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
most_cplx_inx
6
new_column
[[ 0]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 0]]


============== iter  19 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  1 18  0  0  0  0  0  1  1]
 [ 0  0  2  8  0  2  0  2  0  2]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  3  0  1  0  1  0 12  0  1]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.4 0.7 1.2 1.1 1.1 1.  1.5 1.  0.9]
 [0.  0.  1.2 0.7 0.9 0.9 1.2 0.7 1.2 1. ]
 [0.  0.  0.  1.  1.3 0.8 1.2 1.3 0.7 1.1]
 [0.  0.  0.  0.  0.8 0.9 0.9 1.2 0.8 0.8]
 [0.  0.  0.  0.  0.  1.1 0.6 1.  1.3 0.8]
 [0.  0.  0.  0.  0.  0.  1.1 1.2 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.38 0.44 0.56 0.31 0.44 0.44 0.62 0.31 0.44 0.44 0.44 0.38
  0.5  0.5 ]
 [0.   0.   0.44 0.44 0.44 0.56 0.25 0.44 0.38 0.44 0.25 0.56 0.44 0.5
  0.5  0.56]
 [0.   0.   0.   0.31 0.56 0.38 0.25 0.44 0.31 0.38 0.44 0.56 0.5  0.44
  0.62 0.5 ]
 [0.   0.   0.   0.   0.5  0.38 0.44 0.31 0.44 0.5  0.56 0.5  0.31 0.31
  0.5  0.31]
 [0.   0.   0.   0.   0.   0.56 0.5  0.44 0.5  0.38 0.25 0.31 0.31 0.25
  0.31 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.38 0.38 0.5  0.38 0.5  0.25 0.38 0.44
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.31 0.31 0.5  0.56 0.62
  0.56 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.44 0.44 0.12 0.31
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.44 0.5  0.44 0.5
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.31 0.44
  0.56 0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.38 0.44
  0.5  0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38
  0.19 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  0.  1. -1.  0.  1.  0.  0.  0. -1.]
select_j_column
[ 0.  0.  1. -1.  0.  1.  0.  0.  0.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 0]
 [-1]]


============== iter  20 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  3  0  0  0  0  8]]
row HD
[[0.  1.5 0.8 1.2 1.2 1.2 1.1 1.6 1.1 0.9]
 [0.  0.  1.3 0.8 0.9 1.  1.2 0.7 1.2 1.1]
 [0.  0.  0.  1.1 1.4 0.8 1.3 1.4 0.8 1.2]
 [0.  0.  0.  0.  0.9 1.  1.  1.3 0.9 0.8]
 [0.  0.  0.  0.  0.  1.2 0.6 1.  1.3 0.9]
 [0.  0.  0.  0.  0.  0.  1.2 1.3 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.41 0.35 0.41 0.53 0.29 0.41 0.41 0.59 0.29 0.41 0.41 0.41 0.35
  0.47 0.47 0.41]
 [0.   0.   0.41 0.41 0.41 0.53 0.24 0.41 0.35 0.41 0.24 0.53 0.41 0.47
  0.47 0.53 0.24]
 [0.   0.   0.   0.29 0.53 0.35 0.24 0.41 0.29 0.35 0.41 0.53 0.47 0.41
  0.59 0.47 0.41]
 [0.   0.   0.   0.   0.47 0.35 0.41 0.29 0.41 0.47 0.53 0.47 0.29 0.29
  0.47 0.29 0.53]
 [0.   0.   0.   0.   0.   0.53 0.47 0.41 0.47 0.35 0.24 0.29 0.29 0.24
  0.29 0.47 0.24]
 [0.   0.   0.   0.   0.   0.   0.35 0.35 0.47 0.35 0.47 0.24 0.35 0.41
  0.35 0.29 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.41 0.29 0.29 0.47 0.53 0.59
  0.53 0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.41 0.41 0.12 0.29
  0.47 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.59 0.41 0.47 0.41 0.47
  0.41 0.29 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.29 0.41
  0.53 0.59 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.41
  0.47 0.59 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35
  0.18 0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.41 0.41 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.35 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.59]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  0.  0.  0.]
select_j_column
[ 1. -1.  1. -1. -1.  1.  0.  0.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  3  0  0  0  0  8]]
row HD
[[0.  1.5 0.8 1.2 1.3 1.3 1.2 1.7 1.1 1. ]
 [0.  0.  1.3 0.8 1.  1.1 1.3 0.8 1.2 1.2]
 [0.  0.  0.  1.1 1.5 0.9 1.4 1.5 0.8 1.3]
 [0.  0.  0.  0.  1.  1.1 1.1 1.4 0.9 0.9]
 [0.  0.  0.  0.  0.  1.2 0.7 1.  1.4 1. ]
 [0.  0.  0.  0.  0.  0.  1.3 1.3 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.39 0.33 0.39 0.5  0.28 0.39 0.39 0.56 0.28 0.39 0.39 0.39 0.33
  0.44 0.44 0.39 0.56]
 [0.   0.   0.39 0.39 0.39 0.5  0.22 0.39 0.33 0.39 0.22 0.5  0.39 0.44
  0.44 0.5  0.22 0.39]
 [0.   0.   0.   0.28 0.5  0.33 0.22 0.39 0.28 0.33 0.39 0.5  0.44 0.39
  0.56 0.44 0.39 0.44]
 [0.   0.   0.   0.   0.44 0.33 0.39 0.28 0.39 0.44 0.5  0.44 0.28 0.28
  0.44 0.28 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5  0.44 0.39 0.44 0.33 0.22 0.28 0.28 0.22
  0.28 0.44 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.33 0.33 0.44 0.33 0.44 0.22 0.33 0.39
  0.33 0.28 0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.39 0.28 0.28 0.44 0.5  0.56
  0.5  0.5  0.28 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33 0.39 0.39 0.11 0.28
  0.44 0.39 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.56 0.39 0.44 0.39 0.44
  0.39 0.28 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.28 0.39
  0.5  0.56 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.39
  0.44 0.56 0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33
  0.17 0.33 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17
  0.39 0.39 0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.33 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.56 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[ 0. -1.  0. -1. -1.  1.  1.  1.  1. -1.]
select_j_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:52,large_class sample len:302
extra_class: 4,extra_sample len: 208
cluster len:1
cluster contain small sample len:[0.2]
before change column:	[0, -1, 0, -1, -1, 0, 0, -1, 1, -1]
after change column:	[0, -1, 0, -1, -1, 0, 0, -1, 1, -1]


============== iter  22 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  3  0  0  0  0  8]]
row HD
[[0.  1.6 0.8 1.3 1.4 1.3 1.2 1.8 1.2 1.1]
 [0.  0.  1.4 0.8 1.  1.2 1.4 0.8 1.3 1.2]
 [0.  0.  0.  1.2 1.6 0.9 1.4 1.6 0.9 1.4]
 [0.  0.  0.  0.  1.  1.2 1.2 1.4 1.  0.9]
 [0.  0.  0.  0.  0.  1.3 0.8 1.  1.5 1. ]
 [0.  0.  0.  0.  0.  0.  1.3 1.4 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.37 0.32 0.37 0.47 0.26 0.37 0.37 0.53 0.26 0.37 0.37 0.37 0.32
  0.42 0.42 0.37 0.53 0.42]
 [0.   0.   0.37 0.37 0.37 0.47 0.21 0.37 0.32 0.37 0.21 0.47 0.37 0.42
  0.42 0.47 0.21 0.37 0.47]
 [0.   0.   0.   0.26 0.47 0.32 0.21 0.37 0.26 0.32 0.37 0.47 0.42 0.37
  0.53 0.42 0.37 0.42 0.32]
 [0.   0.   0.   0.   0.42 0.32 0.37 0.26 0.37 0.42 0.47 0.42 0.26 0.26
  0.42 0.26 0.47 0.47 0.32]
 [0.   0.   0.   0.   0.   0.47 0.42 0.37 0.42 0.32 0.21 0.26 0.26 0.21
  0.26 0.42 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.32 0.32 0.42 0.32 0.42 0.21 0.32 0.37
  0.32 0.26 0.42 0.47 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.42 0.37 0.26 0.26 0.42 0.47 0.53
  0.47 0.47 0.26 0.26 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.37 0.37 0.11 0.26
  0.42 0.37 0.37 0.42 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.37 0.42 0.37 0.42
  0.37 0.26 0.37 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.26 0.37
  0.47 0.53 0.32 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.37
  0.42 0.53 0.   0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32
  0.16 0.32 0.32 0.37 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16
  0.37 0.37 0.32 0.42 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.32 0.32 0.37 0.42 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.42 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.53 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: True, 9: None}
select_i_column
[-1.  0. -1. -1.  0.  1. -1.  0. -1.  1.]
select_j_column
[-1. -1. -1.  1. -1. -1.  1. -1.  0. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]]


============== iter  23 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 0  2 18  0  0  0  0  0  2  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  0  0 11  2  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  1  0 13  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.7 0.8 1.4 1.5 1.4 1.3 1.9 1.3 1.2]
 [0.  0.  1.5 0.9 1.  1.3 1.5 0.8 1.3 1.3]
 [0.  0.  0.  1.3 1.7 1.  1.5 1.7 1.  1.5]
 [0.  0.  0.  0.  1.1 1.2 1.2 1.5 1.1 0.9]
 [0.  0.  0.  0.  0.  1.4 0.9 1.  1.5 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.5 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.3  0.35 0.45 0.25 0.35 0.35 0.5  0.25 0.35 0.35 0.35 0.3
  0.4  0.4  0.35 0.5  0.4  0.35]
 [0.   0.   0.35 0.35 0.35 0.45 0.2  0.35 0.3  0.35 0.2  0.45 0.35 0.4
  0.4  0.45 0.2  0.35 0.45 0.25]
 [0.   0.   0.   0.25 0.45 0.3  0.2  0.35 0.25 0.3  0.35 0.45 0.4  0.35
  0.5  0.4  0.35 0.4  0.3  0.4 ]
 [0.   0.   0.   0.   0.4  0.3  0.35 0.25 0.35 0.4  0.45 0.4  0.25 0.25
  0.4  0.25 0.45 0.45 0.3  0.35]
 [0.   0.   0.   0.   0.   0.45 0.4  0.35 0.4  0.3  0.2  0.25 0.25 0.2
  0.25 0.4  0.2  0.25 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.3  0.3  0.4  0.3  0.4  0.2  0.3  0.35
  0.3  0.25 0.4  0.45 0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.35 0.25 0.25 0.4  0.45 0.5
  0.45 0.45 0.25 0.25 0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.35 0.35 0.1  0.25
  0.4  0.35 0.35 0.4  0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.35 0.4  0.35 0.4
  0.35 0.25 0.35 0.35 0.35 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.25 0.35
  0.45 0.5  0.3  0.25 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.35
  0.4  0.5  0.   0.3  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3
  0.15 0.3  0.3  0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15
  0.35 0.35 0.3  0.4  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.3  0.35 0.4  0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.2  0.4  0.3  0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.5  0.4  0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  1. -1.  1.  0.  1.  0. -1. -1.  0.]
select_j_column
[ 0. -1.  0. -1. -1.  0.  0. -1.  1. -1.]
most_cplx_inx
6
new_column
None


============== iter  24 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 0  2 18  0  0  0  0  0  2  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  0  0 11  2  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  1  0 13  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.7 0.8 1.4 1.5 1.4 1.3 1.9 1.3 1.2]
 [0.  0.  1.5 0.9 1.  1.3 1.5 0.8 1.3 1.3]
 [0.  0.  0.  1.3 1.7 1.  1.5 1.7 1.  1.5]
 [0.  0.  0.  0.  1.1 1.2 1.2 1.5 1.1 0.9]
 [0.  0.  0.  0.  0.  1.4 0.9 1.  1.5 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.5 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.3  0.35 0.45 0.25 0.35 0.35 0.5  0.25 0.35 0.35 0.35 0.3
  0.4  0.4  0.35 0.5  0.4  0.35]
 [0.   0.   0.35 0.35 0.35 0.45 0.2  0.35 0.3  0.35 0.2  0.45 0.35 0.4
  0.4  0.45 0.2  0.35 0.45 0.25]
 [0.   0.   0.   0.25 0.45 0.3  0.2  0.35 0.25 0.3  0.35 0.45 0.4  0.35
  0.5  0.4  0.35 0.4  0.3  0.4 ]
 [0.   0.   0.   0.   0.4  0.3  0.35 0.25 0.35 0.4  0.45 0.4  0.25 0.25
  0.4  0.25 0.45 0.45 0.3  0.35]
 [0.   0.   0.   0.   0.   0.45 0.4  0.35 0.4  0.3  0.2  0.25 0.25 0.2
  0.25 0.4  0.2  0.25 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.3  0.3  0.4  0.3  0.4  0.2  0.3  0.35
  0.3  0.25 0.4  0.45 0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.35 0.25 0.25 0.4  0.45 0.5
  0.45 0.45 0.25 0.25 0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.35 0.35 0.1  0.25
  0.4  0.35 0.35 0.4  0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.35 0.4  0.35 0.4
  0.35 0.25 0.35 0.35 0.35 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.25 0.35
  0.45 0.5  0.3  0.25 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.35
  0.4  0.5  0.   0.3  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3
  0.15 0.3  0.3  0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15
  0.35 0.35 0.3  0.4  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.3  0.35 0.4  0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.2  0.4  0.3  0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.5  0.4  0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1.  0.  1.  0.  0.  1.  0.  0.  0. -1.]
select_j_column
[ 1. -1.  1.  0.  1.  1.  1. -1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  25 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 0  2 18  0  0  0  0  0  2  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  0  0 11  2  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  0  1  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  1  0 13  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.7 0.8 1.4 1.5 1.4 1.3 1.9 1.3 1.2]
 [0.  0.  1.5 0.9 1.  1.3 1.5 0.8 1.3 1.3]
 [0.  0.  0.  1.3 1.7 1.  1.5 1.7 1.  1.5]
 [0.  0.  0.  0.  1.1 1.2 1.2 1.5 1.1 0.9]
 [0.  0.  0.  0.  0.  1.4 0.9 1.  1.5 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.5 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.3  0.35 0.45 0.25 0.35 0.35 0.5  0.25 0.35 0.35 0.35 0.3
  0.4  0.4  0.35 0.5  0.4  0.35]
 [0.   0.   0.35 0.35 0.35 0.45 0.2  0.35 0.3  0.35 0.2  0.45 0.35 0.4
  0.4  0.45 0.2  0.35 0.45 0.25]
 [0.   0.   0.   0.25 0.45 0.3  0.2  0.35 0.25 0.3  0.35 0.45 0.4  0.35
  0.5  0.4  0.35 0.4  0.3  0.4 ]
 [0.   0.   0.   0.   0.4  0.3  0.35 0.25 0.35 0.4  0.45 0.4  0.25 0.25
  0.4  0.25 0.45 0.45 0.3  0.35]
 [0.   0.   0.   0.   0.   0.45 0.4  0.35 0.4  0.3  0.2  0.25 0.25 0.2
  0.25 0.4  0.2  0.25 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.3  0.3  0.4  0.3  0.4  0.2  0.3  0.35
  0.3  0.25 0.4  0.45 0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.35 0.25 0.25 0.4  0.45 0.5
  0.45 0.45 0.25 0.25 0.45 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.35 0.35 0.1  0.25
  0.4  0.35 0.35 0.4  0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.35 0.4  0.35 0.4
  0.35 0.25 0.35 0.35 0.35 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.25 0.35
  0.45 0.5  0.3  0.25 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.35
  0.4  0.5  0.   0.3  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3
  0.15 0.3  0.3  0.35 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15
  0.35 0.35 0.3  0.4  0.15 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.3  0.3  0.35 0.4  0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.2  0.4  0.3  0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.5  0.4  0.3  0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.3  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0. -1.  0. -1.  1. -1. -1.  1. -1.  0.]
select_j_column
[ 1. -1.  1.  0.  1.  1.  1. -1.  0. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:7, small_class sample:63,large_class sample len:391
extra_class: 2,extra_sample len: 108
cluster len:1
cluster contain small sample len:[0.37]
before change column:	[0, -1, 0, -1, 1, -1, -1, -1, -1, -1]
after change column:	[0, -1, 0, -1, 1, -1, -1, -1, -1, -1]


============== iter  26 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.  1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0. -1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 134, 0.0: 45, 1.0: 9})
confusion matrix
[[10  0  0  3  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  1  1  0  1  0 11  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.8 0.8 1.5 1.6 1.5 1.4 2.  1.4 1.3]
 [0.  0.  1.6 0.9 1.1 1.3 1.5 0.8 1.3 1.3]
 [0.  0.  0.  1.4 1.8 1.1 1.6 1.8 1.1 1.6]
 [0.  0.  0.  0.  1.2 1.2 1.2 1.5 1.1 0.9]
 [0.  0.  0.  0.  0.  1.5 1.  1.1 1.6 1.2]
 [0.  0.  0.  0.  0.  0.  1.3 1.5 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.29 0.33 0.43 0.24 0.33 0.33 0.48 0.24 0.33 0.33 0.33 0.29
  0.38 0.38 0.33 0.48 0.38 0.33 0.38]
 [0.   0.   0.33 0.33 0.33 0.43 0.19 0.33 0.29 0.33 0.19 0.43 0.33 0.38
  0.38 0.43 0.19 0.33 0.43 0.24 0.33]
 [0.   0.   0.   0.24 0.43 0.29 0.19 0.33 0.24 0.29 0.33 0.43 0.38 0.33
  0.48 0.38 0.33 0.38 0.29 0.38 0.33]
 [0.   0.   0.   0.   0.38 0.29 0.33 0.24 0.33 0.38 0.43 0.38 0.24 0.24
  0.38 0.24 0.43 0.43 0.29 0.33 0.1 ]
 [0.   0.   0.   0.   0.   0.43 0.38 0.33 0.38 0.29 0.19 0.24 0.24 0.19
  0.24 0.38 0.19 0.24 0.19 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.29 0.29 0.38 0.29 0.38 0.19 0.29 0.33
  0.29 0.24 0.38 0.43 0.29 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.33 0.24 0.24 0.38 0.43 0.48
  0.43 0.43 0.24 0.24 0.43 0.24 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.33 0.33 0.1  0.24
  0.38 0.33 0.33 0.38 0.24 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.48 0.33 0.38 0.33 0.38
  0.33 0.24 0.33 0.33 0.33 0.43 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.24 0.33
  0.43 0.48 0.29 0.24 0.29 0.19 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.33
  0.38 0.48 0.   0.29 0.33 0.14 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29
  0.14 0.29 0.29 0.33 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14
  0.33 0.33 0.29 0.38 0.14 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.29 0.33 0.38 0.14 0.38 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.19 0.38 0.29 0.33 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.48 0.38 0.29 0.43 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.29 0.33 0.14 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.19 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.38 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 1.  0.  1. -1.  0.  0.  0. -1.  1.  0.]
select_j_column
[-1.  0. -1.  0.  0.  0. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  27 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.  0.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0. -1.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.  0.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1. -1. -1.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.  1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1. -1.  0.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1. -1. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0. -1.  1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0. -1.  0.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 134, 0.0: 45, 1.0: 9})
21 classifiers pre label
Counter({0.0: 149, 1.0: 21, -1.0: 18})
confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  3  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  1  1  0  1  0 11  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.8 0.8 1.6 1.6 1.5 1.5 2.1 1.4 1.4]
 [0.  0.  1.6 1.  1.1 1.3 1.6 0.9 1.3 1.4]
 [0.  0.  0.  1.5 1.8 1.1 1.7 1.9 1.1 1.7]
 [0.  0.  0.  0.  1.3 1.3 1.2 1.6 1.2 1. ]
 [0.  0.  0.  0.  0.  1.5 1.1 1.2 1.6 1.3]
 [0.  0.  0.  0.  0.  0.  1.4 1.6 1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.32 0.27 0.32 0.41 0.23 0.32 0.32 0.45 0.23 0.32 0.32 0.32 0.27
  0.36 0.36 0.32 0.45 0.36 0.32 0.36 0.23]
 [0.   0.   0.32 0.32 0.32 0.41 0.18 0.32 0.27 0.32 0.18 0.41 0.32 0.36
  0.36 0.41 0.18 0.32 0.41 0.23 0.32 0.23]
 [0.   0.   0.   0.23 0.41 0.27 0.18 0.32 0.23 0.27 0.32 0.41 0.36 0.32
  0.45 0.36 0.32 0.36 0.27 0.36 0.32 0.18]
 [0.   0.   0.   0.   0.36 0.27 0.32 0.23 0.32 0.36 0.41 0.36 0.23 0.23
  0.36 0.23 0.41 0.41 0.27 0.32 0.09 0.23]
 [0.   0.   0.   0.   0.   0.41 0.36 0.32 0.36 0.27 0.18 0.23 0.23 0.18
  0.23 0.36 0.18 0.23 0.18 0.23 0.32 0.41]
 [0.   0.   0.   0.   0.   0.   0.27 0.27 0.36 0.27 0.36 0.18 0.27 0.32
  0.27 0.23 0.36 0.41 0.27 0.41 0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.32 0.23 0.23 0.36 0.41 0.45
  0.41 0.41 0.23 0.23 0.41 0.23 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.32 0.32 0.09 0.23
  0.36 0.32 0.32 0.36 0.23 0.32 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.32 0.36 0.32 0.36
  0.32 0.23 0.32 0.32 0.32 0.41 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.23 0.32
  0.41 0.45 0.27 0.23 0.27 0.18 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.32
  0.36 0.45 0.   0.27 0.32 0.14 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27
  0.14 0.27 0.27 0.32 0.32 0.27 0.27 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14
  0.32 0.32 0.27 0.36 0.14 0.27 0.14 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27 0.27 0.32 0.36 0.14 0.36 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.18 0.36 0.27 0.32 0.36 0.32 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.45 0.36 0.27 0.41 0.23 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.27 0.32 0.14 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32 0.18 0.36 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.36 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[-1.  0.  0.  0. -1. -1.  1.  1.  0.  1.]
select_j_column
[ 0.  0.  0.  0.  0.  0.  0.  1. -1.  0.]
most_cplx_inx
8
new_column
[[-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  28 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.  0.  0. -1.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0. -1.  0.  0.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.  0.  0.  0.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1. -1. -1.  0.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.  1.  0. -1.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1. -1.  0. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1. -1. -1.  0.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0. -1.  1.  1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 134, 0.0: 45, 1.0: 9})
21 classifiers pre label
Counter({0.0: 149, 1.0: 21, -1.0: 18})
22 classifiers pre label
Counter({-1.0: 96, 0.0: 76, 1.0: 16})
confusion matrix
[[10  0  0  3  0  1  0  0  2  1]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 1  2 18  0  0  0  0  0  1  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  1  1  0  1  0 11  0  0]
 [ 3  0  2  0  0  1  1  0 12  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  1.9 0.9 1.7 1.6 1.5 1.6 2.2 1.4 1.5]
 [0.  0.  1.6 1.  1.2 1.4 1.6 1.  1.4 1.4]
 [0.  0.  0.  1.5 1.9 1.2 1.7 2.  1.2 1.7]
 [0.  0.  0.  0.  1.4 1.4 1.2 1.7 1.3 1. ]
 [0.  0.  0.  0.  0.  1.5 1.2 1.3 1.6 1.4]
 [0.  0.  0.  0.  0.  0.  1.5 1.7 1.4 1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.4 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.3  0.26 0.3  0.39 0.22 0.3  0.3  0.43 0.22 0.3  0.3  0.3  0.26
  0.35 0.35 0.3  0.43 0.35 0.3  0.35 0.22 0.13]
 [0.   0.   0.3  0.3  0.3  0.39 0.17 0.3  0.26 0.3  0.17 0.39 0.3  0.35
  0.35 0.39 0.17 0.3  0.39 0.22 0.3  0.22 0.3 ]
 [0.   0.   0.   0.22 0.39 0.26 0.17 0.3  0.22 0.26 0.3  0.39 0.35 0.3
  0.43 0.35 0.3  0.35 0.26 0.35 0.3  0.17 0.13]
 [0.   0.   0.   0.   0.35 0.26 0.3  0.22 0.3  0.35 0.39 0.35 0.22 0.22
  0.35 0.22 0.39 0.39 0.26 0.3  0.09 0.22 0.22]
 [0.   0.   0.   0.   0.   0.39 0.35 0.3  0.35 0.26 0.17 0.22 0.22 0.17
  0.22 0.35 0.17 0.22 0.17 0.22 0.3  0.39 0.35]
 [0.   0.   0.   0.   0.   0.   0.26 0.26 0.35 0.26 0.35 0.17 0.26 0.3
  0.26 0.22 0.35 0.39 0.26 0.39 0.26 0.3  0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.3  0.22 0.22 0.35 0.39 0.43
  0.39 0.39 0.22 0.22 0.39 0.22 0.35 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26 0.3  0.3  0.09 0.22
  0.35 0.3  0.3  0.35 0.22 0.3  0.22 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.3  0.35 0.3  0.35
  0.3  0.22 0.3  0.3  0.3  0.39 0.3  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.22 0.3
  0.39 0.43 0.26 0.22 0.26 0.17 0.3  0.22 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.26 0.3
  0.35 0.43 0.   0.26 0.3  0.13 0.35 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26
  0.13 0.26 0.26 0.3  0.3  0.26 0.26 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13
  0.3  0.3  0.26 0.35 0.13 0.26 0.13 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.26 0.3  0.35 0.13 0.35 0.22 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.35 0.26 0.3  0.35 0.3  0.39 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.43 0.35 0.26 0.39 0.22 0.39 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.3  0.13 0.35 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.17 0.35 0.3  0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35 0.17 0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.26 0.22 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.26 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: None}
select_i_column
[ 0. -1. -1.  1.  1. -1.  1. -1.  1.  0.]
select_j_column
[ 0.  0.  0.  0.  0.  0. -1. -1.  1.  0.]
most_cplx_inx
7
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 0]]
small_class len :1,large_class len:5, small_class sample:52,large_class sample len:278
extra_class: 4,extra_sample len: 232
cluster len:1
cluster contain small sample len:[0.18]
before change column:	[0, -1, -1, 0, 0, -1, -1, -1, 1, 0]
after change column:	[0, -1, -1, 0, 0, -1, -1, -1, 1, 0]


============== iter  29 ================
current matrix is 
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.  0.  0. -1.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0. -1.  0.  0. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.  0.  0.  0. -1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1. -1. -1.  0.  0.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.  1.  0. -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1. -1.  0. -1. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1. -1. -1.  0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0. -1.  1.  1. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0. -1.  0. -1.  1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
*======label=======*
true label
Counter({'1': 26, '2': 22, '8': 22, '5': 20, '7': 20, '4': 17, '0': 17, '3': 16, '6': 15, '9': 13})
0 classifiers pre label
Counter({0.0: 91, -1.0: 55, 1.0: 42})
1 classifiers pre label
Counter({-1.0: 84, 0.0: 62, 1.0: 42})
2 classifiers pre label
Counter({0.0: 146, -1.0: 25, 1.0: 17})
3 classifiers pre label
Counter({-1.0: 107, 0.0: 52, 1.0: 29})
4 classifiers pre label
Counter({1.0: 92, -1.0: 76, 0.0: 20})
5 classifiers pre label
Counter({0.0: 104, -1.0: 69, 1.0: 15})
6 classifiers pre label
Counter({0.0: 115, -1.0: 45, 1.0: 28})
7 classifiers pre label
Counter({0.0: 77, 1.0: 61, -1.0: 50})
8 classifiers pre label
Counter({1.0: 76, -1.0: 66, 0.0: 46})
9 classifiers pre label
Counter({0.0: 142, -1.0: 28, 1.0: 18})
10 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
11 classifiers pre label
Counter({1.0: 85, -1.0: 66, 0.0: 37})
12 classifiers pre label
Counter({-1.0: 96, 0.0: 70, 1.0: 22})
13 classifiers pre label
Counter({-1.0: 76, 1.0: 67, 0.0: 45})
14 classifiers pre label
Counter({1.0: 148, -1.0: 40})
15 classifiers pre label
Counter({-1.0: 91, 1.0: 71, 0.0: 26})
16 classifiers pre label
Counter({0.0: 90, 1.0: 52, -1.0: 46})
17 classifiers pre label
Counter({1.0: 94, 0.0: 68, -1.0: 26})
18 classifiers pre label
Counter({-1.0: 83, 0.0: 82, 1.0: 23})
19 classifiers pre label
Counter({0.0: 87, -1.0: 61, 1.0: 40})
20 classifiers pre label
Counter({-1.0: 134, 0.0: 45, 1.0: 9})
21 classifiers pre label
Counter({0.0: 149, 1.0: 21, -1.0: 18})
22 classifiers pre label
Counter({-1.0: 96, 0.0: 76, 1.0: 16})
23 classifiers pre label
Counter({-1.0: 115, 0.0: 55, 1.0: 18})
confusion matrix
[[10  3  0  0  0  1  0  0  2  1]
 [ 0 20  0  2  4  0  0  0  0  0]
 [ 0  2 18  0  0  0  0  0  2  0]
 [ 0  1  2  8  0  2  0  2  0  1]
 [ 0  1  1  0 11  1  0  1  0  2]
 [ 0  0  0  0  0 17  0  0  1  2]
 [ 1  0  1  0  0  2  2  0  9  0]
 [ 2  4  1  1  0  1  0 11  0  0]
 [ 2  0  2  0  0  1  1  0 13  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
row HD
[[0.  2.  1.  1.7 1.6 1.6 1.7 2.3 1.5 1.5]
 [0.  0.  1.6 1.1 1.3 1.4 1.6 1.  1.5 1.5]
 [0.  0.  0.  1.6 2.  1.2 1.7 2.  1.3 1.8]
 [0.  0.  0.  0.  1.4 1.5 1.3 1.8 1.4 1. ]
 [0.  0.  0.  0.  0.  1.6 1.3 1.4 1.7 1.4]
 [0.  0.  0.  0.  0.  0.  1.5 1.7 1.5 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.7 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.25 0.29 0.38 0.21 0.29 0.29 0.42 0.21 0.29 0.29 0.29 0.25
  0.33 0.33 0.29 0.42 0.33 0.29 0.33 0.21 0.12 0.33]
 [0.   0.   0.29 0.29 0.29 0.38 0.17 0.29 0.25 0.29 0.17 0.38 0.29 0.33
  0.33 0.38 0.17 0.29 0.38 0.21 0.29 0.21 0.29 0.29]
 [0.   0.   0.   0.21 0.38 0.25 0.17 0.29 0.21 0.25 0.29 0.38 0.33 0.29
  0.42 0.33 0.29 0.33 0.25 0.33 0.29 0.17 0.12 0.25]
 [0.   0.   0.   0.   0.33 0.25 0.29 0.21 0.29 0.33 0.38 0.33 0.21 0.21
  0.33 0.21 0.38 0.38 0.25 0.29 0.08 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.38 0.33 0.29 0.33 0.25 0.17 0.21 0.21 0.17
  0.21 0.33 0.17 0.21 0.17 0.21 0.29 0.38 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.25 0.25 0.33 0.25 0.33 0.17 0.25 0.29
  0.25 0.21 0.33 0.38 0.25 0.38 0.25 0.29 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.21 0.21 0.33 0.38 0.42
  0.38 0.38 0.21 0.21 0.38 0.21 0.33 0.25 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25 0.29 0.29 0.08 0.21
  0.33 0.29 0.29 0.33 0.21 0.29 0.21 0.21 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.29 0.33 0.29 0.33
  0.29 0.21 0.29 0.29 0.29 0.38 0.29 0.33 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.21 0.29
  0.38 0.42 0.25 0.21 0.25 0.17 0.29 0.21 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.29
  0.33 0.42 0.   0.25 0.29 0.12 0.33 0.25 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25
  0.12 0.25 0.25 0.29 0.29 0.25 0.25 0.38 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12
  0.29 0.29 0.25 0.33 0.12 0.25 0.12 0.21 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.25 0.29 0.33 0.12 0.33 0.21 0.25 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.17 0.33 0.25 0.29 0.33 0.29 0.38 0.42 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.42 0.33 0.25 0.38 0.21 0.38 0.33 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.29 0.12 0.33 0.25 0.29 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.17 0.33 0.29 0.42 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.17 0.25 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.25 0.21 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.25 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None, 6: True, 7: True, 8: None, 9: None}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.034482758620689655
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})

**********      classifier acc  **************
[0.627, 0.832, 0.571, 0.772, 0.869, 0.716, 0.711, 0.667, 0.778, 0.5, 0.739, 0.767, 0.772, 0.765, 0.936, 0.747, 0.739, 0.71, 0.746, 0.699, 0.839, 0.406, 0.781, 0.776]
before cutting matrix
[[-1. -1.  0.  0.  1. -1. -1.  0.  0.  1. -1.  1.  0.  0.  1.  0. -1.  1.
   0.  1.  0.  0. -1.  0.]
 [ 0.  0.  0. -1. -1. -1.  0.  1.  1.  0.  0. -1. -1. -1. -1. -1.  0.  1.
  -1.  0. -1.  0.  0. -1.]
 [ 0. -1.  0.  0.  1.  0.  1.  0. -1.  0.  1.  1.  0.  0.  1. -1.  1.  1.
   0.  1.  0.  0.  0. -1.]
 [ 0. -1.  0. -1. -1.  0.  0. -1.  1.  0. -1.  0. -1. -1.  1.  1. -1.  1.
  -1. -1. -1. -1.  0.  0.]
 [-1.  0.  0.  1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  1.  1.  0.  0.
  -1.  0.  1.  0. -1.  0.]
 [-1.  1.  0. -1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1. -1.  1.  0.
   0. -1. -1.  0. -1. -1.]
 [ 1. -1.  0. -1.  0.  1. -1. -1.  0. -1.  0.  1. -1.  1.  1.  1.  0. -1.
   0. -1. -1. -1.  0. -1.]
 [ 1.  0.  1.  1.  0. -1.  0. -1. -1.  0.  0. -1. -1.  1. -1. -1.  0.  0.
  -1.  0. -1.  1.  1. -1.]
 [ 0. -1. -1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  0.  1.  1.  1.  0.  1.
   1.  0. -1.  0. -1.  1.]
 [ 1.  1.  0.  0. -1.  0.  0.  0.  0. -1. -1. -1. -1. -1.  1.  0. -1. -1.
  -1. -1. -1.  1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 168, 1.0: 161})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 276, 1.0: 125})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 276, 1.0: 125})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 236, 1.0: 113})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({1.0: 178, -1.0: 171})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 169, 1.0: 111})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({1.0: 271, -1.0: 174})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({-1.0: 240, 1.0: 214})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 240, 1.0: 214})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 232, 1.0: 226})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 169, 1.0: 111})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({1.0: 284, -1.0: 99})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 302, 1.0: 52})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 302, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 218, 1.0: 108})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 218, 1.0: 108})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({1.0: 115, -1.0: 111})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({1.0: 115, -1.0: 111})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({-1.0: 220, 1.0: 62})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 220, 1.0: 62})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({-1.0: 278, 1.0: 52})
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
positive and negative ratio
Counter({-1.0: 278, 1.0: 52})
after cutting matrix
[[-1.  0.  1. -1. -1.  0.  0.  1.  1.  0.  1.  0. -1.  1.  0.  0.]
 [ 0.  0. -1. -1.  0.  1.  1.  0. -1. -1. -1. -1.  0.  1. -1. -1.]
 [-1.  0.  1.  0.  1.  0. -1.  0.  1.  0.  1. -1.  1.  1.  0. -1.]
 [-1.  0. -1.  0.  0. -1.  1.  0.  0. -1.  1.  1. -1.  1. -1.  0.]
 [ 0.  0. -1.  1.  0. -1.  0. -1.  1. -1.  1.  1.  0.  0.  1.  0.]
 [ 1.  0.  1.  0.  0.  1.  1.  0.  1.  1.  1. -1.  1.  0. -1. -1.]
 [-1.  0.  0.  1. -1. -1.  0. -1.  1. -1.  1.  1.  0. -1. -1. -1.]
 [ 0.  1.  0. -1.  0. -1. -1.  0. -1. -1. -1. -1.  0.  0. -1. -1.]
 [-1. -1.  1.  0. -1.  0. -1.  0.  0.  0.  1.  1.  0.  1. -1.  1.]
 [ 1.  0. -1.  0.  0.  0.  0. -1. -1. -1.  1.  0. -1. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 271, 1.0: 107})
Counter({1.0: 62, -1.0: 52})
Counter({-1.0: 240, 1.0: 214})
Counter({-1.0: 172, 1.0: 109})
Counter({-1.0: 149, 1.0: 57})
Counter({-1.0: 236, 1.0: 113})
Counter({1.0: 178, -1.0: 171})
Counter({-1.0: 162, 1.0: 51})
Counter({1.0: 271, -1.0: 174})
Counter({-1.0: 348, 1.0: 54})
Counter({1.0: 441, -1.0: 121})
Counter({-1.0: 232, 1.0: 226})
Counter({-1.0: 169, 1.0: 111})
Counter({1.0: 284, -1.0: 99})
Counter({-1.0: 391, 1.0: 63})
Counter({-1.0: 278, 1.0: 52})
cutting matrix's confusion matrix
[[13  0  0  0  0  1  0  0  2  1]
 [ 0 21  0  2  0  0  0  0  0  3]
 [ 0  1 18  0  0  0  0  1  2  0]
 [ 0  0  2  8  0  2  0  3  0  1]
 [ 0  1  1  0 10  1  0  1  0  3]
 [ 0  0  0  0  0 17  1  0  0  2]
 [ 1  0  1  0  0  2  8  0  3  0]
 [ 3  3  0  1  0  1  0 12  0  0]
 [ 2  0  2  0  0  1  3  0 11  3]
 [ 0  0  0  2  1  0  0  0  0 10]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-10 15:30:13
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1. -1.  1.]
 [-1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1.  1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1.  1.  1.]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  7  0  0  0]
 [ 0  5  0  0  0]
 [ 0  3  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  4  0]
 [ 5  0  0  9  0]
 [ 2  0  0  7  0]
 [ 0  0  0  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:8,large_class sample len:158
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[1, 1, 1, 1, -1]
after change column:	[-1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 158, -1.0: 8})
after change, the sample len:	Counter({-1.0: 166})


============== iter  3 ================
current matrix is 
[[-1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  4  0]
 [ 5  0  0  9  0]
 [ 2  0  0  7  0]
 [ 0  0  0  5  0]
 [ 0  0  0  3  0]]
row HD
[[0.  0.4 0.4 0.2 0.4]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.2 0. ]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.]
 [ 1. -1. -1.]
 [ 1. -1.  1.]
 [ 1.  1.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 5  0  0  4  0]
 [ 2  0  0  3  0]
 [ 2  0  0  1  0]]
row HD
[[0.  0.4 0.6 0.4 0.4]
 [0.  0.  0.2 0.4 0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   0.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1.]
 [ 1. -1. -1. -1.]
 [ 1. -1.  1. -1.]
 [ 1.  1.  1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  4  0  0  0]
 [ 5  9  0  0  0]
 [ 2  3  0  4  0]
 [ 0  2  0  3  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.6 0.8 0.6 0.6]
 [0.  0.  0.2 0.4 0. ]
 [0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.5  1.25]
 [0.   0.   0.5  0.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  0.]
 [ 1. -1. -1. -1.  0.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
confusion matrix
[[21  1  0  3  0]
 [ 5  3  0  6  0]
 [ 2  2  0  5  0]
 [ 0  1  0  4  0]
 [ 0  1  0  2  0]]
row HD
[[0.  0.8 1.  0.8 0.8]
 [0.  0.  0.2 0.6 0.2]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.4 1.  0.4]
 [0.  0.  0.4 0.2 1. ]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  1. -1.]
select_j_column
[-1.  1.  1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  0.  0.]
 [ 1. -1. -1. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
confusion matrix
[[21  1  0  0  3]
 [ 5  3  0  1  5]
 [ 2  2  0  5  0]
 [ 0  1  0  3  1]
 [ 0  1  0  2  0]]
row HD
[[0.  1.  1.2 1.  1. ]
 [0.  0.  0.2 0.8 0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33 0.83 0.33 0.17]
 [0.   0.   0.33 0.17 0.83 0.83]
 [0.   0.   0.   0.5  0.5  0.5 ]
 [0.   0.   0.   0.   0.83 0.83]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
confusion matrix
[[21  1  0  0  3]
 [ 6  3  0  0  5]
 [ 2  2  1  4  0]
 [ 0  1  1  2  1]
 [ 1  1  1  0  0]]
row HD
[[0.  1.2 1.2 1.2 1.2]
 [0.  0.  0.4 0.8 0.2]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.29 0.71 0.29 0.14 0.14]
 [0.   0.   0.29 0.14 0.71 0.71 0.43]
 [0.   0.   0.   0.43 0.43 0.43 0.43]
 [0.   0.   0.   0.   0.71 0.71 0.57]
 [0.   0.   0.   0.   0.   0.14 0.43]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1.  1.]
select_j_column
[-1.  1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  9 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 6  0  0  0  8]
 [ 2  0  0  5  2]
 [ 0  0  0  3  2]
 [ 1  0  0  1  1]]
row HD
[[0.  1.4 1.4 1.2 1.2]
 [0.  0.  0.4 1.  0.4]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 0.62 0.25 0.12 0.12 0.38]
 [0.   0.   0.25 0.12 0.62 0.62 0.38 0.12]
 [0.   0.   0.   0.38 0.38 0.38 0.38 0.38]
 [0.   0.   0.   0.   0.62 0.62 0.5  0.25]
 [0.   0.   0.   0.   0.   0.12 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1.  1.  0.  1.]
select_j_column
[-1.  1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  10 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
confusion matrix
[[21  0  0  0  4]
 [ 6  0  0  0  8]
 [ 2  0  0  5  2]
 [ 0  0  0  3  2]
 [ 1  0  0  1  1]]
row HD
[[0.  1.6 1.6 1.4 1.2]
 [0.  0.  0.4 1.2 0.6]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.22 0.56 0.22 0.11 0.11 0.33 0.44]
 [0.   0.   0.22 0.11 0.56 0.56 0.33 0.11 0.22]
 [0.   0.   0.   0.33 0.33 0.33 0.33 0.33 0.44]
 [0.   0.   0.   0.   0.56 0.56 0.44 0.22 0.22]
 [0.   0.   0.   0.   0.   0.11 0.33 0.56 0.44]
 [0.   0.   0.   0.   0.   0.   0.22 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[ 1. -1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 6  0  0  0  8]
 [ 2  0  0  5  2]
 [ 0  0  0  3  2]
 [ 1  0  0  1  1]]
row HD
[[0.  1.8 1.8 1.4 1.2]
 [0.  0.  0.4 1.4 0.8]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.2 0.5 0.2 0.1 0.1 0.3 0.4 0.2]
 [0.  0.  0.2 0.1 0.5 0.5 0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.3 0.4 0.2]
 [0.  0.  0.  0.  0.5 0.5 0.4 0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.1 0.3 0.5 0.4 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.4 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
confusion matrix
[[21  0  0  0  4]
 [ 6  0  0  1  7]
 [ 2  0  0  5  2]
 [ 0  0  0  3  2]
 [ 0  0  0  2  1]]
row HD
[[0.  1.8 2.  1.6 1.4]
 [0.  0.  0.6 1.6 1. ]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.18 0.45 0.18 0.09 0.09 0.27 0.36 0.18 0.09]
 [0.   0.   0.18 0.09 0.45 0.45 0.27 0.09 0.18 0.36 0.27]
 [0.   0.   0.   0.27 0.27 0.27 0.27 0.27 0.36 0.18 0.09]
 [0.   0.   0.   0.   0.45 0.45 0.36 0.18 0.18 0.27 0.36]
 [0.   0.   0.   0.   0.   0.09 0.27 0.45 0.36 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.18 0.36 0.27 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1.  1.  0.  1.]
select_j_column
[ 1. -1. -1.  0.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  13 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
11 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 2  0  0  5  2]
 [ 0  0  0  3  2]
 [ 1  0  0  1  1]]
row HD
[[0.  2.  2.2 1.8 1.6]
 [0.  0.  0.6 1.8 1.2]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.17 0.42 0.17 0.08 0.08 0.25 0.33 0.17 0.08 0.42]
 [0.   0.   0.17 0.08 0.42 0.42 0.25 0.08 0.17 0.33 0.25 0.17]
 [0.   0.   0.   0.25 0.25 0.25 0.25 0.25 0.33 0.17 0.08 0.33]
 [0.   0.   0.   0.   0.42 0.42 0.33 0.17 0.17 0.25 0.33 0.17]
 [0.   0.   0.   0.   0.   0.08 0.25 0.42 0.33 0.17 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.17 0.33 0.25 0.17 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.25 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.42 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  14 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
11 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 2  0  0  4  3]
 [ 0  0  0  3  2]
 [ 1  0  1  0  1]]
row HD
[[0.  2.2 2.2 2.  1.6]
 [0.  0.  0.8 1.8 1.4]
 [0.  0.  0.  1.8 1.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.15 0.38 0.15 0.08 0.08 0.23 0.31 0.15 0.08 0.38 0.15]
 [0.   0.   0.15 0.08 0.38 0.38 0.23 0.08 0.15 0.31 0.23 0.15 0.15]
 [0.   0.   0.   0.23 0.23 0.23 0.23 0.23 0.31 0.15 0.08 0.31 0.15]
 [0.   0.   0.   0.   0.38 0.38 0.31 0.15 0.15 0.23 0.31 0.15 0.23]
 [0.   0.   0.   0.   0.   0.08 0.23 0.38 0.31 0.15 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.15 0.31 0.23 0.15 0.15 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.23 0.15 0.31 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.38 0.15 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.23 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1.  1.  0.  1.]
select_j_column
[ 1. -1. -1.  0.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  15 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.  1.  0.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
11 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
confusion matrix
[[21  0  0  0  4]
 [ 7  0  0  0  7]
 [ 2  0  0  4  3]
 [ 0  0  0  3  2]
 [ 1  0  1  0  1]]
row HD
[[0.  2.4 2.4 2.2 1.8]
 [0.  0.  0.8 2.  1.6]
 [0.  0.  0.  2.  1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.14 0.36 0.14 0.07 0.07 0.21 0.29 0.14 0.07 0.36 0.14 0.36]
 [0.   0.   0.14 0.07 0.36 0.36 0.21 0.07 0.14 0.29 0.21 0.14 0.14 0.14]
 [0.   0.   0.   0.21 0.21 0.21 0.21 0.21 0.29 0.14 0.07 0.29 0.14 0.29]
 [0.   0.   0.   0.   0.36 0.36 0.29 0.14 0.14 0.21 0.29 0.14 0.21 0.14]
 [0.   0.   0.   0.   0.   0.07 0.21 0.36 0.29 0.14 0.21 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.14 0.29 0.21 0.14 0.14 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.21 0.14 0.29 0.07 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.36 0.14 0.14 0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.21 0.07 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36 0.14 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1. -1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.  1.  0.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0. -1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
11 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
14 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
confusion matrix
[[21  0  0  0  4]
 [ 6  0  0  0  8]
 [ 2  0  0  4  3]
 [ 0  0  0  3  2]
 [ 0  0  1  0  2]]
row HD
[[0.  2.4 2.6 2.4 2. ]
 [0.  0.  1.  2.2 1.8]
 [0.  0.  0.  2.  1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.13 0.33 0.13 0.07 0.07 0.2  0.27 0.13 0.07 0.33 0.13 0.33
  0.07]
 [0.   0.   0.13 0.07 0.33 0.33 0.2  0.07 0.13 0.27 0.2  0.13 0.13 0.13
  0.2 ]
 [0.   0.   0.   0.2  0.2  0.2  0.2  0.2  0.27 0.13 0.07 0.27 0.13 0.27
  0.07]
 [0.   0.   0.   0.   0.33 0.33 0.27 0.13 0.13 0.2  0.27 0.13 0.2  0.13
  0.27]
 [0.   0.   0.   0.   0.   0.07 0.2  0.33 0.27 0.13 0.2  0.2  0.2  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.13 0.27 0.2  0.13 0.13 0.27 0.2  0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.2  0.13 0.27 0.07 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.33 0.13 0.13 0.2  0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.2  0.07 0.27 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.33 0.13 0.33
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[ 1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.  1.  0.  1.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0. -1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
11 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
14 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
15 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
confusion matrix
[[21  0  0  0  4]
 [ 6  0  0  0  8]
 [ 2  0  0  4  3]
 [ 0  0  0  3  2]
 [ 0  0  1  0  2]]
row HD
[[0.  2.4 2.8 2.6 2. ]
 [0.  0.  1.2 2.4 1.8]
 [0.  0.  0.  2.  1.8]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.12 0.31 0.12 0.06 0.06 0.19 0.25 0.12 0.06 0.31 0.12 0.31
  0.06 0.12]
 [0.   0.   0.12 0.06 0.31 0.31 0.19 0.06 0.12 0.25 0.19 0.12 0.12 0.12
  0.19 0.12]
 [0.   0.   0.   0.19 0.19 0.19 0.19 0.19 0.25 0.12 0.06 0.25 0.12 0.25
  0.06 0.  ]
 [0.   0.   0.   0.   0.31 0.31 0.25 0.12 0.12 0.19 0.25 0.12 0.19 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.06 0.19 0.31 0.25 0.12 0.19 0.19 0.19 0.19
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.12 0.25 0.19 0.12 0.12 0.25 0.19 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.19 0.12 0.25 0.06 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.31 0.12 0.12 0.19 0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.19 0.06 0.25 0.06
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.31 0.12 0.31
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.25
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.19 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None}
select_i_column
[-1.  1. -1.  1.  1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.  1.  0.  1.  1.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0. -1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 28, -1.0: 28})
1 classifiers pre label
Counter({1.0: 56})
2 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
3 classifiers pre label
Counter({1.0: 28, -1.0: 28})
4 classifiers pre label
Counter({-1.0: 39, 1.0: 14, 0.0: 3})
5 classifiers pre label
Counter({-1.0: 31, 1.0: 22, 0.0: 3})
6 classifiers pre label
Counter({-1.0: 35, 1.0: 21})
7 classifiers pre label
Counter({1.0: 56})
8 classifiers pre label
Counter({1.0: 51, 0.0: 3, -1.0: 2})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
11 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({1.0: 39, -1.0: 14, 0.0: 3})
14 classifiers pre label
Counter({-1.0: 46, 1.0: 10})
15 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
16 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[24  0  0  0  1]
 [11  0  0  0  3]
 [ 3  0  0  4  2]
 [ 1  0  0  3  1]
 [ 1  0  0  1  1]]
row HD
[[0.  2.6 3.  2.6 2.2]
 [0.  0.  1.2 2.6 1.8]
 [0.  0.  0.  2.2 1.8]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.12 0.29 0.12 0.06 0.06 0.18 0.24 0.12 0.06 0.29 0.12 0.29
  0.06 0.12 0.24]
 [0.   0.   0.12 0.06 0.29 0.29 0.18 0.06 0.12 0.24 0.18 0.12 0.12 0.12
  0.18 0.12 0.  ]
 [0.   0.   0.   0.18 0.18 0.18 0.18 0.18 0.24 0.12 0.06 0.24 0.12 0.24
  0.06 0.   0.12]
 [0.   0.   0.   0.   0.29 0.29 0.24 0.12 0.12 0.18 0.24 0.12 0.18 0.12
  0.24 0.18 0.06]
 [0.   0.   0.   0.   0.   0.06 0.18 0.29 0.24 0.12 0.18 0.18 0.18 0.18
  0.18 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.12 0.24 0.18 0.12 0.12 0.24 0.18 0.24
  0.12 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.18 0.12 0.24 0.06 0.24
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.29 0.12 0.12 0.18 0.12
  0.12 0.18 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.18 0.06 0.24 0.06
  0.18 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.29 0.12 0.29
  0.18 0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.24
  0.   0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.
  0.24 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.18 0.12 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.05555555555555555
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})

**********      classifier acc  **************
[0.804, 0.536, 0.857, 0.804, 0.667, 0.706, 0.625, 0.589, 0.549, 0.589, 0.839, 0.667, 0.661, 0.667, 0.839, 0.857, 0.536]
before cutting matrix
[[-1.  1. -1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  0.  1.  1.  0. -1.  1.  0.  1.  0.  1.  1.  1.]
 [ 1. -1. -1. -1.  0.  1.  1.  1.  1. -1.  1.  0. -1.  0.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 47})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 47})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 87, 1.0: 55})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 105, 1.0: 61})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 105, 1.0: 61})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 119, -1.0: 47})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({1.0: 119, -1.0: 47})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({1.0: 95, -1.0: 47})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({1.0: 95, -1.0: 47})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 119, 1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 119, 1.0: 47})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({1.0: 87, -1.0: 47})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 113, 1.0: 53})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({1.0: 87, -1.0: 47})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 111, -1.0: 55})
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
positive and negative ratio
Counter({1.0: 111, -1.0: 55})
after cutting matrix
[[-1.  1. -1.  1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  0.  1.  0.  1.  1.]
 [ 1. -1. -1. -1.  1.  0. -1.  0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 87, 1.0: 79})
Counter({1.0: 111, -1.0: 55})
Counter({-1.0: 124, 1.0: 42})
Counter({1.0: 87, -1.0: 79})
Counter({-1.0: 116, 1.0: 50})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 113, 1.0: 53})
Counter({1.0: 87, -1.0: 47})
Counter({-1.0: 116, 1.0: 50})
Counter({-1.0: 124, 1.0: 42})
cutting matrix's confusion matrix
[[24  1  0  0  0]
 [10  3  0  0  1]
 [ 3  2  3  1  0]
 [ 1  1  2  1  0]
 [ 0  1  1  0  1]]


SVM classifier
Time: 2019-01-10 15:30:18
FS: linear_svc
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1.  0.  0.  0.  1. -1.  1.  1.  1. -1.]
 [ 1.  0.  0. -1.  0.  1.  1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  1. -1.  0.  0.  0.]
 [ 1.  1. -1.  1. -1.  0.  0.  0. -1.  0.]
 [ 0.  1.  1.  0.  0.  0.  0. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  0.  0.]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
pre label
Counter({1.0: 53, 0.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 0. -1.]
 [ 0.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.4 0.4 0.2]
 [0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  0.]
select_j_column
[ 0.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [-1]
 [ 1]
 [ 1]]
small_class len :1,large_class len:3, small_class sample:18,large_class sample len:119
extra_class: 1,extra_sample len: 29
cluster len:1
cluster contain small sample len:[0.38]
before change column:	[1, 0, -1, 1, 1]
after change column:	[1, 0, -1, 1, 1]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1.  1.  0.]
 [-1. -1. -1.]
 [ 0. -1.  1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 7  0  0  2  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.4 0.4 0.2 0.4]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  1.  0.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1.  0.]
 [ 1.  1.  0.  1.]
 [-1. -1. -1.  0.]
 [ 0. -1.  1. -1.]
 [ 0.  1.  1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
confusion matrix
[[25  0  0  0  0]
 [14  0  0  0  0]
 [ 8  0  0  1  0]
 [ 4  0  0  1  0]
 [ 3  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.4 0.4]
 [0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 0.75 0.75]
 [0.   0.   0.75 0.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 1.  0.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1.  0.  1.]
 [ 1.  1.  0.  1. -1.]
 [-1. -1. -1.  0.  0.]
 [ 0. -1.  1. -1. -1.]
 [ 0.  1.  1.  0. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
confusion matrix
[[21  3  0  1  0]
 [ 6  1  0  7  0]
 [ 5  1  0  3  0]
 [ 2  0  0  3  0]
 [ 1  1  0  1  0]]
row HD
[[0.  0.8 0.6 0.6 0.6]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.6 0.6 0.8]
 [0.  0.  0.6 0.6 0.8]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 1.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.]
 [ 1.  1.  0.  1. -1.  1.]
 [-1. -1. -1.  0.  0.  1.]
 [ 0. -1.  1. -1. -1.  1.]
 [ 0.  1.  1.  0. -1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
confusion matrix
[[21  3  0  1  0]
 [ 6  1  0  7  0]
 [ 3  1  0  5  0]
 [ 2  0  0  3  0]
 [ 1  1  0  1  0]]
row HD
[[0.  1.  0.8 0.8 0.8]
 [0.  0.  1.  0.8 0.6]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.5  0.67 0.67]
 [0.   0.   0.5  0.5  0.67 0.33]
 [0.   0.   0.   0.83 0.67 0.5 ]
 [0.   0.   0.   0.   0.5  0.67]
 [0.   0.   0.   0.   0.   0.83]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  0. -1.  1.  1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.]
 [-1. -1. -1.  0.  0.  1. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 1  0  0  4  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.2 1.  1.  1. ]
 [0.  0.  1.2 1.  0.6]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.43 0.43 0.43 0.57 0.57 0.43]
 [0.   0.   0.43 0.43 0.57 0.29 0.14]
 [0.   0.   0.   0.71 0.57 0.43 0.43]
 [0.   0.   0.   0.   0.43 0.57 0.29]
 [0.   0.   0.   0.   0.   0.71 0.57]
 [0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.4 1.2 1.2 1. ]
 [0.  0.  1.2 1.  0.8]
 [0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.38 0.5  0.5  0.38 0.5 ]
 [0.   0.   0.38 0.38 0.5  0.25 0.12 0.38]
 [0.   0.   0.   0.62 0.5  0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.38 0.5  0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.62 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.38 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  0. -1.  1.  1.]
select_j_column
[ 0.  1.  0. -1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 1]]


============== iter  9 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.6 1.4 1.2 1.2]
 [0.  0.  1.4 1.2 0.8]
 [0.  0.  0.  1.  1.4]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.33 0.44 0.44 0.33 0.44 0.22]
 [0.   0.   0.33 0.33 0.44 0.22 0.11 0.33 0.22]
 [0.   0.   0.   0.56 0.44 0.33 0.33 0.44 0.33]
 [0.   0.   0.   0.   0.33 0.44 0.22 0.44 0.33]
 [0.   0.   0.   0.   0.   0.56 0.44 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.33 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  0.  0.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
small_class len :1,large_class len:3, small_class sample:29,large_class sample len:129
extra_class: 1,extra_sample len: 8
cluster len:1
cluster contain small sample len:[0.78]
before change column:	[-1, 1, -1, -1, 0]
after change column:	[-1, 1, -1, -1, 1]
before change, the sample len:	Counter({-1.0: 129, 1.0: 29})
after change, the sample len:	Counter({-1.0: 129, 1.0: 37})


============== iter  10 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  1.8 1.4 1.2 1.4]
 [0.  0.  1.6 1.4 0.8]
 [0.  0.  0.  1.  1.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.3 0.3 0.3 0.4 0.4 0.3 0.4 0.2 0.3]
 [0.  0.  0.3 0.3 0.4 0.2 0.1 0.3 0.2 0. ]
 [0.  0.  0.  0.5 0.4 0.3 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.3 0.4 0.2 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.5 0.4 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  0.  0. -1.]
select_j_column
[ 1.  0. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  2.  1.6 1.4 1.6]
 [0.  0.  1.6 1.6 0.8]
 [0.  0.  0.  1.2 1.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.27 0.27 0.36 0.36 0.27 0.36 0.18 0.27 0.18]
 [0.   0.   0.27 0.27 0.36 0.18 0.09 0.27 0.18 0.   0.36]
 [0.   0.   0.   0.45 0.36 0.27 0.27 0.36 0.27 0.27 0.27]
 [0.   0.   0.   0.   0.27 0.36 0.18 0.36 0.27 0.27 0.45]
 [0.   0.   0.   0.   0.   0.45 0.36 0.36 0.45 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.27 0.09 0.27 0.18 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.09 0.09 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1.  0.  1.]
select_j_column
[ 0.  1.  0. -1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  2.2 1.8 1.6 1.6]
 [0.  0.  1.8 1.8 1. ]
 [0.  0.  0.  1.2 1.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.25 0.25 0.33 0.33 0.25 0.33 0.17 0.25 0.17 0.17]
 [0.   0.   0.25 0.25 0.33 0.17 0.08 0.25 0.17 0.   0.33 0.17]
 [0.   0.   0.   0.42 0.33 0.25 0.25 0.33 0.25 0.25 0.25 0.33]
 [0.   0.   0.   0.   0.25 0.33 0.17 0.33 0.25 0.25 0.42 0.08]
 [0.   0.   0.   0.   0.   0.42 0.33 0.33 0.42 0.33 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.25 0.08 0.25 0.17 0.42 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.08 0.08 0.33 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[ 0. -1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  13 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
12 classifiers pre label
Counter({0.0: 45, -1.0: 8, 1.0: 3})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  1  7  0]
 [ 3  0  1  5  0]
 [ 2  0  0  3  0]
 [ 1  0  1  1  0]]
row HD
[[0.  2.4 1.8 1.8 1.6]
 [0.  0.  2.  2.  1.2]
 [0.  0.  0.  1.4 1.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.23 0.23 0.31 0.31 0.23 0.31 0.15 0.23 0.15 0.15 0.31]
 [0.   0.   0.23 0.23 0.31 0.15 0.08 0.23 0.15 0.   0.31 0.15 0.38]
 [0.   0.   0.   0.38 0.31 0.23 0.23 0.31 0.23 0.23 0.23 0.31 0.31]
 [0.   0.   0.   0.   0.23 0.31 0.15 0.31 0.23 0.23 0.38 0.08 0.15]
 [0.   0.   0.   0.   0.   0.38 0.31 0.31 0.38 0.31 0.15 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.23 0.08 0.23 0.15 0.38 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.08 0.08 0.31 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.31 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.15 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1. -1. -1.  1.]
select_j_column
[ 1.  1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 0]]
small_class len :1,large_class len:3, small_class sample:29,large_class sample len:129
extra_class: 1,extra_sample len: 8
cluster len:1
cluster contain small sample len:[0.78]
before change column:	[-1, 1, -1, -1, 0]
after change column:	[-1, 1, -1, -1, 1]
before change, the sample len:	Counter({-1.0: 129, 1.0: 29})
after change, the sample len:	Counter({-1.0: 129, 1.0: 37})


============== iter  14 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0. -1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0. -1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1. -1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
12 classifiers pre label
Counter({0.0: 45, -1.0: 8, 1.0: 3})
13 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  1  7  0]
 [ 3  0  1  5  0]
 [ 2  0  0  3  0]
 [ 1  0  1  1  0]]
row HD
[[0.  2.6 1.8 1.8 1.8]
 [0.  0.  2.2 2.2 1.2]
 [0.  0.  0.  1.4 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.21 0.21 0.29 0.29 0.21 0.29 0.14 0.21 0.14 0.14 0.29 0.21]
 [0.   0.   0.21 0.21 0.29 0.14 0.07 0.21 0.14 0.   0.29 0.14 0.36 0.  ]
 [0.   0.   0.   0.36 0.29 0.21 0.21 0.29 0.21 0.21 0.21 0.29 0.29 0.21]
 [0.   0.   0.   0.   0.21 0.29 0.14 0.29 0.21 0.21 0.36 0.07 0.14 0.21]
 [0.   0.   0.   0.   0.   0.36 0.29 0.29 0.36 0.29 0.14 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.21 0.07 0.21 0.14 0.36 0.29 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.07 0.07 0.29 0.07 0.29 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.29 0.29 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.14 0.29 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  15 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0. -1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0. -1.  1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1. -1. -1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
12 classifiers pre label
Counter({0.0: 45, -1.0: 8, 1.0: 3})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({1.0: 35, -1.0: 21})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  2.8 1.8 2.  2. ]
 [0.  0.  2.4 2.2 1.2]
 [0.  0.  0.  1.6 2.2]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.2  0.2  0.27 0.27 0.2  0.27 0.13 0.2  0.13 0.13 0.27 0.2
  0.27]
 [0.   0.   0.2  0.2  0.27 0.13 0.07 0.2  0.13 0.   0.27 0.13 0.33 0.
  0.27]
 [0.   0.   0.   0.33 0.27 0.2  0.2  0.27 0.2  0.2  0.2  0.27 0.27 0.2
  0.27]
 [0.   0.   0.   0.   0.2  0.27 0.13 0.27 0.2  0.2  0.33 0.07 0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.33 0.27 0.27 0.33 0.27 0.13 0.27 0.2  0.27
  0.07]
 [0.   0.   0.   0.   0.   0.   0.2  0.07 0.2  0.13 0.33 0.27 0.27 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.07 0.07 0.27 0.07 0.27 0.07
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.27 0.27 0.27 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.13 0.27 0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.33 0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1.  1.  0.  1.  0.]
select_j_column
[-1.  1.  0.  1.  0.]
most_cplx_inx
2
new_column
None


============== iter  16 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0. -1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0. -1.  1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1. -1. -1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
12 classifiers pre label
Counter({0.0: 45, -1.0: 8, 1.0: 3})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({1.0: 35, -1.0: 21})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  0  8  0]
 [ 3  0  0  6  0]
 [ 2  0  0  3  0]
 [ 1  0  0  2  0]]
row HD
[[0.  2.8 1.8 2.  2. ]
 [0.  0.  2.4 2.2 1.2]
 [0.  0.  0.  1.6 2.2]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.2  0.2  0.2  0.27 0.27 0.2  0.27 0.13 0.2  0.13 0.13 0.27 0.2
  0.27]
 [0.   0.   0.2  0.2  0.27 0.13 0.07 0.2  0.13 0.   0.27 0.13 0.33 0.
  0.27]
 [0.   0.   0.   0.33 0.27 0.2  0.2  0.27 0.2  0.2  0.2  0.27 0.27 0.2
  0.27]
 [0.   0.   0.   0.   0.2  0.27 0.13 0.27 0.2  0.2  0.33 0.07 0.13 0.2
  0.27]
 [0.   0.   0.   0.   0.   0.33 0.27 0.27 0.33 0.27 0.13 0.27 0.2  0.27
  0.07]
 [0.   0.   0.   0.   0.   0.   0.2  0.07 0.2  0.13 0.33 0.27 0.27 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.07 0.07 0.27 0.07 0.27 0.07
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.27 0.27 0.27 0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.13 0.27 0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.33 0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.27 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.13
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0.  0.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0. -1.  1.  1.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0. -1.  1.  1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1. -1. -1. -1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
12 classifiers pre label
Counter({0.0: 45, -1.0: 8, 1.0: 3})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({1.0: 35, -1.0: 21})
15 classifiers pre label
Counter({1.0: 56})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  2  6  0]
 [ 3  0  1  5  0]
 [ 2  0  0  3  0]
 [ 1  0  2  0  0]]
row HD
[[0.  3.  1.8 2.2 2. ]
 [0.  0.  2.6 2.2 1.4]
 [0.  0.  0.  1.8 2.2]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.19 0.19 0.19 0.25 0.25 0.19 0.25 0.12 0.19 0.12 0.12 0.25 0.19
  0.25 0.25]
 [0.   0.   0.19 0.19 0.25 0.12 0.06 0.19 0.12 0.   0.25 0.12 0.31 0.
  0.25 0.19]
 [0.   0.   0.   0.31 0.25 0.19 0.19 0.25 0.19 0.19 0.19 0.25 0.25 0.19
  0.25 0.19]
 [0.   0.   0.   0.   0.19 0.25 0.12 0.25 0.19 0.19 0.31 0.06 0.12 0.19
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.31 0.25 0.25 0.31 0.25 0.12 0.25 0.19 0.25
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.19 0.06 0.19 0.12 0.31 0.25 0.25 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.06 0.06 0.25 0.06 0.25 0.06
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.25 0.25 0.25 0.19
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.12 0.25 0.12
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.31 0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.25 0.25
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.12
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 0.  1. -1. -1.  1.]
select_j_column
[ 0.  1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  18 ================
current matrix is 
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0. -1.  1.  1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0. -1.  1.  1.  1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1. -1. -1. -1.  1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
*======label=======*
true label
Counter({'0': 25, '1': 14, '2': 9, '3': 5, '4': 3})
0 classifiers pre label
Counter({1.0: 53, 0.0: 3})
1 classifiers pre label
Counter({-1.0: 56})
2 classifiers pre label
Counter({1.0: 48, 0.0: 8})
3 classifiers pre label
Counter({0.0: 45, 1.0: 8, -1.0: 3})
4 classifiers pre label
Counter({1.0: 33, -1.0: 21, 0.0: 2})
5 classifiers pre label
Counter({1.0: 28, -1.0: 28})
6 classifiers pre label
Counter({0.0: 43, -1.0: 9, 1.0: 4})
7 classifiers pre label
Counter({-1.0: 33, 1.0: 23})
8 classifiers pre label
Counter({0.0: 46, 1.0: 10})
9 classifiers pre label
Counter({-1.0: 56})
10 classifiers pre label
Counter({1.0: 31, -1.0: 22, 0.0: 3})
11 classifiers pre label
Counter({0.0: 43, -1.0: 12, 1.0: 1})
12 classifiers pre label
Counter({0.0: 45, -1.0: 8, 1.0: 3})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({1.0: 35, -1.0: 21})
15 classifiers pre label
Counter({1.0: 56})
16 classifiers pre label
Counter({0.0: 43, 1.0: 9, -1.0: 4})
confusion matrix
[[21  3  0  1  0]
 [ 6  0  2  6  0]
 [ 3  0  1  5  0]
 [ 2  0  0  3  0]
 [ 1  0  2  0  0]]
row HD
[[0.  3.2 2.  2.4 2.2]
 [0.  0.  2.8 2.4 1.4]
 [0.  0.  0.  1.8 2.4]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.18 0.18 0.24 0.24 0.18 0.24 0.12 0.18 0.12 0.12 0.24 0.18
  0.24 0.24 0.29]
 [0.   0.   0.18 0.18 0.24 0.12 0.06 0.18 0.12 0.   0.24 0.12 0.29 0.
  0.24 0.18 0.29]
 [0.   0.   0.   0.29 0.24 0.18 0.18 0.24 0.18 0.18 0.18 0.24 0.24 0.18
  0.24 0.18 0.24]
 [0.   0.   0.   0.   0.18 0.24 0.12 0.24 0.18 0.18 0.29 0.06 0.12 0.18
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.29 0.24 0.24 0.29 0.24 0.12 0.24 0.18 0.24
  0.06 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.06 0.18 0.12 0.29 0.24 0.24 0.12
  0.24 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.06 0.06 0.24 0.06 0.24 0.06
  0.24 0.18 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.24 0.24 0.24 0.18
  0.18 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.12 0.24 0.12
  0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.29 0.
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.24 0.24
  0.12 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.12
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.24 0.24 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.1111111111111111
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})

**********      classifier acc  **************
[0.812, 0.696, 0.667, 0.211, 0.723, 0.804, 0.258, 0.696, 0.115, 0.696, 0.706, 0.286, 0.211, 0.696, 0.625, 0.661, 0.258]
before cutting matrix
[[ 1. -1.  1.  0.  1. -1.  0. -1.  0. -1.  1.  0.  0. -1.  1.  1.  0.]
 [ 1.  1.  0.  1. -1.  1.  1.  1.  1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  0.  0.  1. -1.  1. -1. -1. -1. -1.  0. -1.  1.  1.  1.]
 [ 0. -1.  1. -1. -1.  1. -1.  1.  0. -1.  0. -1.  1. -1. -1. -1.  1.]
 [ 0.  1.  1.  0. -1.  1.  1. -1.  1.  1. -1.  0.  0.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 119, -1.0: 18})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 119, -1.0: 18})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 29, -1.0: 24})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 42, 1.0: 37})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({-1.0: 42, 1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({1.0: 37, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 37, -1.0: 18})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 42, 1.0: 29})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({-1.0: 42, 1.0: 29})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 29, 1.0: 24})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({-1.0: 29, 1.0: 24})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 105, -1.0: 61})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
Counter({1.0: 42, -1.0: 37})
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
positive and negative ratio
Counter({1.0: 42, -1.0: 37})
after cutting matrix
[[ 1. -1.  0.  1. -1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [-1. -1.  0.  0.  1.  1. -1. -1. -1.  1.  1.]
 [ 0. -1. -1. -1.  1.  1. -1.  0. -1. -1. -1.]
 [ 0.  1.  0. -1.  1. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 116, -1.0: 18})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 29, -1.0: 24})
Counter({1.0: 87, -1.0: 61})
Counter({-1.0: 87, 1.0: 79})
Counter({-1.0: 95, 1.0: 71})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 87, -1.0: 55})
Counter({-1.0: 129, 1.0: 37})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 113, -1.0: 53})
cutting matrix's confusion matrix
[[21  0  3  1  0]
 [ 6  0  2  6  0]
 [ 3  0  4  2  0]
 [ 2  0  0  3  0]
 [ 1  0  2  0  0]]


SVM classifier
Time: 2019-01-10 15:30:21
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1.  1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1. -1.  1. -1.  1.]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '4': 8, '6': 8})
pre label
Counter({-1.0: 35, 1.0: 32})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 7  1  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True}
select_i_column
[-1. -1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1.  1. -1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [-1.  1.]
 [-1.  1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
[[0.   0.33 0.33 0.17 0.17 0.  ]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.17 0.17 0.33]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({-1.0: 35, 1.0: 32})
1 classifiers pre label
Counter({-1.0: 36, 1.0: 31})
2 classifiers pre label
Counter({1.0: 42, -1.0: 25})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 1  0  0  0  0  7]]
row HD
[[0.   0.33 0.5  0.33 0.17 0.17]
 [0.   0.   0.17 0.33 0.17 0.5 ]
 [0.   0.   0.   0.17 0.33 0.33]
 [0.   0.   0.   0.   0.5  0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 1.33]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: None, 5: None}
total_cplx_class_num == 0 break
change ratio is:	0.0
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})

**********      classifier acc  **************
[0.985, 1.0, 0.97]
before cutting matrix
[[ 1. -1.  1.]
 [-1.  1.  1.]
 [-1.  1. -1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
positive and negative ratio
Counter({1.0: 121, -1.0: 80})
after cutting matrix
[[-1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 102, -1.0: 99})
Counter({1.0: 121, -1.0: 80})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  1  7  0  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  0  0  7]]


SVM classifier
Time: 2019-01-10 15:30:22
FS: linear_svc
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  0.  1. -1.  0.  0.  1. -1.  0.  0.  1.]
 [ 0.  1. -1.  0.  0. -1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  1. -1. -1.  0.  0. -1. -1.]
 [ 1. -1. -1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [-1. -1. -1.  0.  1.  0.  0.  1.  1. -1.  0.]
 [ 0.  1.  1.  1. -1.  1. -1.  1. -1.  0.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  0.  1. -1.  0.]
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '4': 8, '6': 8})
pre label
Counter({0.0: 48, -1.0: 11, 1.0: 8})
confusion matrix
[[17  0  0  0  0  0]
 [11  0  0  1  0  0]
 [11  0  0  0  0  0]
 [ 1  0  0  7  0  0]
 [ 0  0  0  0 11  0]
 [ 8  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: None, 5: True}
select_i_column
[ 0.  1.  0. -1. -1.  1.]
select_j_column
[ 0.  0.  1.  0.  1. -1.]
most_cplx_inx
1
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [ 0]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1. -1.]
 [-1.  0.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 74, -1.0: 28})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({0.0: 48, -1.0: 11, 1.0: 8})
1 classifiers pre label
Counter({0.0: 34, 1.0: 27, -1.0: 6})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0 11  0  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0  0  0  0 11  0]
 [ 6  2  0  0  0  0]]
row HD
[[0.   0.17 0.17 0.33 0.17 0.  ]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.33 0.33 0.17]
 [0.   0.   0.   0.   0.33 0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: None, 4: None, 5: True}
select_i_column
[-1.  1.  0. -1.  1.  1.]
select_j_column
[ 0.  1.  0. -1. -1.  1.]
most_cplx_inx
5
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 14 dimension of F1 is zero!
ERROR-F1: the denominator of the 15 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
ERROR-F1: the denominator of the 3 dimension of F1 is zero!
ERROR-F1: the denominator of the 20 dimension of F1 is zero!
ERROR-F1: the denominator of the 22 dimension of F1 is zero!
new_column
[[ 0]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 1. -1.  1.]
 [-1.  0. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 74, -1.0: 28})
Counter({1.0: 68, -1.0: 25})
*======label=======*
true label
Counter({'1': 17, '2': 12, '5': 11, '3': 11, '4': 8, '6': 8})
0 classifiers pre label
Counter({0.0: 48, -1.0: 11, 1.0: 8})
1 classifiers pre label
Counter({0.0: 34, 1.0: 27, -1.0: 6})
2 classifiers pre label
Counter({1.0: 30, 0.0: 28, -1.0: 9})
confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0  0  0  0  9  2]
 [ 0  2  0  0  0  6]]
row HD
[[0.   0.33 0.17 0.5  0.33 0.17]
 [0.   0.   0.17 0.33 0.5  0.17]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.67]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: True}
average_class_acc >= 0.8
change ratio is:	0.0
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 74, -1.0: 28})
Counter({1.0: 68, -1.0: 25})

**********      classifier acc  **************
[0.947, 0.935, 0.949]
before cutting matrix
[[ 0.  0.  0.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 1. -1.  1.]
 [-1.  0. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 74, -1.0: 28})
Counter({1.0: 68, -1.0: 25})
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 74, -1.0: 28})
Counter({1.0: 68, -1.0: 25})
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 68, -1.0: 25})
positive and negative ratio
Counter({1.0: 74, -1.0: 28})
after cutting matrix
[[ 0.  0.  0.]
 [ 0.  1.  1.]
 [ 0.  1.  0.]
 [ 1. -1.  1.]
 [-1.  0. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 28, -1.0: 25})
Counter({1.0: 74, -1.0: 28})
Counter({1.0: 68, -1.0: 25})
cutting matrix's confusion matrix
[[17  0  0  0  0  0]
 [ 0 12  0  0  0  0]
 [ 0  0 11  0  0  0]
 [ 0  2  0  6  0  0]
 [ 0  0  0  0  9  2]
 [ 0  2  0  0  0  6]]


SVM classifier
Time: 2019-01-10 15:30:23
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[ 1. -1.  1. -1.  1. -1.  1. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1.  1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1.  1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1.  1. -1.  1. -1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  1.  1. -1.  1.  1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
 [-1. -1.  1.  1.  1.  1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 4 18  0  0  0  0  0  0  0  0]
 [ 3 23  0  0  0  0  0  0  0  0]
 [10  7  0  0  0  0  0  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 18  0  0  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  2 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
confusion matrix
[[13  4  1  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 21  2  0  0  0  0  0  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  2 19  2  0  0  0  0  0  0]
 [ 0  3 15  1  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1 11  0  0  0  0  0  0  0]
 [ 0  1  9  3  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.1 0.2 0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.  0. ]
 [0.  0.  0.  0.  0.2 0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :2,large_class len:8, small_class sample:100,large_class sample len:462
cluster len:1
cluster contain small sample len:[0.18]
before change column:	[-1, 1, 1, 1, 1, 1, 1, 1, 1, -1]
after change column:	[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 462, -1.0: 100})
after change, the sample len:	Counter({-1.0: 562})


============== iter  3 ================
current matrix is 
[[-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [-1.  1.]
 [ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
confusion matrix
[[13  4  1  0  0  0  0  0  0  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 21  2  0  0  0  0  0  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  2 19  2  0  0  0  0  0  0]
 [ 0  3 15  1  0  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1 11  0  0  0  0  0  0  0]
 [ 0  1  9  3  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.  0.1 0.2 0.2]
 [0.  0.  0.1 0.2 0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.1 0.1 0.1 0.2 0.1 0.  0. ]
 [0.  0.  0.  0.  0.2 0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  4 ================
current matrix is 
[[-1. -1.  1.]
 [ 1. -1. -1.]
 [ 1.  1. -1.]
 [-1.  1.  1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1.  1.  1.]
 [ 1.  1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 18  2  0  0  0  0  3  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  2 19  2  0  0  0  0  0  0]
 [ 0  3 13  1  0  0  0  0  2  0]
 [ 2  0  1  0  0  0  0  0 16  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1  2  0  0  0  0  0  9  0]
 [ 0  1  9  3  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.1 0.2 0.2 0.1 0.2 0.2 0.2]
 [0.  0.  0.1 0.3 0.  0.2 0.1 0.  0.2 0.2]
 [0.  0.  0.  0.2 0.1 0.1 0.2 0.1 0.1 0.1]
 [0.  0.  0.  0.  0.3 0.1 0.2 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 2.  ]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[-1. -1.  1. -1.]
 [ 1. -1. -1.  1.]
 [ 1.  1. -1. -1.]
 [-1.  1.  1.  1.]
 [ 1. -1. -1. -1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1.  1.]
 [ 1.  1.  1.  1.]
 [ 1.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[13  0  1  0  4  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  0 21  2  2  0  0  0  0  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  0 19  2  2  0  0  0  0  0]
 [ 0  0 15  1  3  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 12  0  1  4  0  0  0  0  0]
 [ 2  0 11  0  1  0  0  0  0  0]
 [ 0  0  9  3  1  0  0  0  0  0]]
row HD
[[0.  0.3 0.3 0.2 0.2 0.2 0.1 0.3 0.3 0.3]
 [0.  0.  0.2 0.3 0.1 0.3 0.2 0.  0.2 0.2]
 [0.  0.  0.  0.3 0.1 0.1 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4 0.2 0.3 0.3 0.1 0.1]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.5  0.75]
 [0.   0.   0.75 1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  6 ================
current matrix is 
[[-1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[13  1  1  0  3  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 21  2  0  0  0  0  0  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  0 19  2  2  0  0  0  0  0]
 [ 0  0 15  1  3  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0 11  0  1  0  0  0  0  0]
 [ 0  0  9  3  1  0  0  0  0  0]]
row HD
[[0.  0.4 0.3 0.2 0.2 0.2 0.1 0.4 0.3 0.4]
 [0.  0.  0.3 0.4 0.2 0.4 0.3 0.  0.3 0.2]
 [0.  0.  0.  0.3 0.1 0.1 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.4 0.2 0.3 0.4 0.1 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.2 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.1 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  1.2 0.6 1.4]
 [0.  0.  0.6 0.8 0.8]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1.  1.  1.  1.  1.  1. -1.  1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  7 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
confusion matrix
[[13  1  1  0  3  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 21  2  0  0  0  0  0  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  0 19  2  2  0  0  0  0  0]
 [ 0  0 15  1  3  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0 11  0  1  0  0  0  0  0]
 [ 0  0  9  3  1  0  0  0  0  0]]
row HD
[[0.  0.5 0.4 0.3 0.3 0.2 0.2 0.5 0.4 0.4]
 [0.  0.  0.3 0.4 0.2 0.5 0.3 0.  0.3 0.3]
 [0.  0.  0.  0.3 0.1 0.2 0.2 0.3 0.2 0.4]
 [0.  0.  0.  0.  0.4 0.3 0.3 0.4 0.1 0.3]
 [0.  0.  0.  0.  0.  0.3 0.1 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 1.   0.5  1.17 0.5 ]
 [0.   0.   0.5  0.67 0.67 1.  ]
 [0.   0.   0.   0.5  0.83 1.17]
 [0.   0.   0.   0.   1.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  8 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
confusion matrix
[[13  1  1  0  3  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 20  2  0  1  0  0  0  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  2  1  3 13  0  0  0  0]
 [ 2  0 16  0  0  1  0  0  0  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  9  0  1  2  0  0  0  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.3 0.3 0.3 0.2 0.6 0.4 0.5]
 [0.  0.  0.4 0.5 0.3 0.5 0.4 0.  0.4 0.3]
 [0.  0.  0.  0.3 0.1 0.3 0.2 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.4 0.4 0.3 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.4 0.1 0.3 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.5 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.86 0.43 1.   0.43 0.57]
 [0.   0.   0.43 0.57 0.57 0.86 0.71]
 [0.   0.   0.   0.43 0.71 1.   0.86]
 [0.   0.   0.   0.   1.14 0.57 0.43]
 [0.   0.   0.   0.   0.   0.57 1.29]
 [0.   0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1.  1. -1.  1. -1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:67,large_class sample len:495
cluster len:1
cluster contain small sample len:[0.12]
before change column:	[-1, -1, -1, -1, -1, 1, -1, -1, -1, -1]
after change column:	[-1, -1, -1, -1, -1, 1, -1, -1, -1, -1]


============== iter  9 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[13  1  1  0  3  0  0  0  0  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 21  2  0  0  0  0  0  0]
 [ 0  5  2 10  0  0  0  0  0  0]
 [ 0  0 19  2  2  0  0  0  0  0]
 [ 0  0 15  1  3  0  0  0  0  0]
 [ 2  0 17  0  0  0  0  0  0  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0 11  0  1  0  0  0  0  0]
 [ 0  0  9  3  1  0  0  0  0  0]]
row HD
[[0.  0.6 0.4 0.3 0.3 0.4 0.2 0.6 0.4 0.5]
 [0.  0.  0.4 0.5 0.3 0.6 0.4 0.  0.4 0.3]
 [0.  0.  0.  0.3 0.1 0.4 0.2 0.4 0.2 0.5]
 [0.  0.  0.  0.  0.4 0.5 0.3 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.5 0.1 0.3 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.75 0.38 0.88 0.38 0.5  0.88]
 [0.   0.   0.38 0.5  0.5  0.75 0.62 0.5 ]
 [0.   0.   0.   0.38 0.62 0.88 0.75 0.62]
 [0.   0.   0.   0.   1.   0.5  0.38 0.75]
 [0.   0.   0.   0.   0.   0.5  1.12 0.75]
 [0.   0.   0.   0.   0.   0.   0.88 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
confusion matrix
[[13  4  0  0  0  0  0  0  1  0]
 [ 0 18  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  2  0  2  0 19  0  0  0  0]
 [ 0  3  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0 16  0  1  0  0  0  0  0  0]
 [ 2  1  0  0  0  2  0  0  9  0]
 [ 0  1  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.7 0.4 0.4 0.3 0.5 0.2 0.7 0.5 0.6]
 [0.  0.  0.5 0.5 0.4 0.6 0.5 0.  0.4 0.3]
 [0.  0.  0.  0.4 0.1 0.5 0.2 0.5 0.3 0.6]
 [0.  0.  0.  0.  0.5 0.5 0.4 0.5 0.1 0.4]
 [0.  0.  0.  0.  0.  0.6 0.1 0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.67 0.33 0.78 0.33 0.44 0.78 0.67]
 [0.   0.   0.33 0.44 0.44 0.67 0.56 0.44 0.78]
 [0.   0.   0.   0.33 0.56 0.78 0.67 0.56 0.67]
 [0.   0.   0.   0.   0.89 0.44 0.33 0.67 1.  ]
 [0.   0.   0.   0.   0.   0.44 1.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.   0.78 0.89 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.89]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1. -1.  1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  0.8 0.5 0.4 0.3 0.6 0.2 0.8 0.5 0.6]
 [0.  0.  0.5 0.6 0.5 0.6 0.6 0.  0.5 0.4]
 [0.  0.  0.  0.5 0.2 0.5 0.3 0.5 0.4 0.7]
 [0.  0.  0.  0.  0.5 0.6 0.4 0.6 0.1 0.4]
 [0.  0.  0.  0.  0.  0.7 0.1 0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.6 0.3 0.7 0.3 0.4 0.7 0.6 0.6]
 [0.  0.  0.3 0.4 0.4 0.6 0.5 0.4 0.7 0.5]
 [0.  0.  0.  0.3 0.5 0.7 0.6 0.5 0.6 0.2]
 [0.  0.  0.  0.  0.8 0.4 0.3 0.6 0.9 0.5]
 [0.  0.  0.  0.  0.  0.4 0.9 0.6 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
confusion matrix
[[16  1  0  0  0  0  0  0  1  0]
 [ 1 17  0  4  0  0  0  0  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 2  0  0  2  0 19  0  0  0  0]
 [ 3  0  0  1  0 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 2 14  0  1  0  0  0  0  0  0]
 [ 3  0  0  0  0  2  0  0  9  0]
 [ 1  0  0  3  0  9  0  0  0  0]]
row HD
[[0.  0.8 0.6 0.5 0.4 0.6 0.2 0.8 0.5 0.6]
 [0.  0.  0.6 0.7 0.6 0.6 0.6 0.  0.5 0.4]
 [0.  0.  0.  0.5 0.2 0.6 0.4 0.6 0.5 0.8]
 [0.  0.  0.  0.  0.5 0.7 0.5 0.7 0.2 0.5]
 [0.  0.  0.  0.  0.  0.8 0.2 0.6 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.55 0.27 0.64 0.27 0.36 0.64 0.55 0.55 0.45]
 [0.   0.   0.27 0.36 0.36 0.55 0.45 0.36 0.64 0.45 0.55]
 [0.   0.   0.   0.27 0.45 0.64 0.55 0.45 0.55 0.18 0.45]
 [0.   0.   0.   0.   0.73 0.36 0.27 0.55 0.82 0.45 0.36]
 [0.   0.   0.   0.   0.   0.36 0.82 0.55 0.27 0.27 0.55]
 [0.   0.   0.   0.   0.   0.   0.64 0.73 0.45 0.45 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.73 0.73 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.45 0.64 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1.  1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1.  1. -1.  1.  1.  1. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  0.8 0.7 0.6 0.5 0.7 0.3 0.8 0.6 0.7]
 [0.  0.  0.7 0.8 0.7 0.7 0.7 0.  0.6 0.5]
 [0.  0.  0.  0.5 0.2 0.6 0.4 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.5 0.7 0.5 0.8 0.2 0.5]
 [0.  0.  0.  0.  0.  0.8 0.2 0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.5  0.25 0.58 0.25 0.33 0.58 0.5  0.5  0.42 0.42]
 [0.   0.   0.25 0.33 0.33 0.5  0.42 0.33 0.58 0.42 0.5  0.67]
 [0.   0.   0.   0.25 0.42 0.58 0.5  0.42 0.5  0.17 0.42 0.42]
 [0.   0.   0.   0.   0.67 0.33 0.25 0.5  0.75 0.42 0.33 0.33]
 [0.   0.   0.   0.   0.   0.33 0.75 0.5  0.25 0.25 0.5  0.67]
 [0.   0.   0.   0.   0.   0.   0.58 0.67 0.42 0.42 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.67 0.67 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.58 0.5  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.58 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
select_j_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  14 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  0.9 0.8 0.6 0.6 0.8 0.4 0.9 0.6 0.7]
 [0.  0.  0.7 0.9 0.7 0.7 0.7 0.  0.7 0.6]
 [0.  0.  0.  0.6 0.2 0.6 0.4 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.6 0.8 0.6 0.9 0.2 0.5]
 [0.  0.  0.  0.  0.  0.8 0.2 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.6 0.7 0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.46 0.23 0.54 0.23 0.31 0.54 0.46 0.46 0.38 0.38 0.46]
 [0.   0.   0.23 0.31 0.31 0.46 0.38 0.31 0.54 0.38 0.46 0.62 0.23]
 [0.   0.   0.   0.23 0.38 0.54 0.46 0.38 0.46 0.15 0.38 0.38 0.  ]
 [0.   0.   0.   0.   0.62 0.31 0.23 0.46 0.69 0.38 0.31 0.31 0.23]
 [0.   0.   0.   0.   0.   0.31 0.69 0.46 0.23 0.23 0.46 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.54 0.62 0.38 0.38 0.46 0.46 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.23 0.62 0.62 0.23 0.23 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.54 0.46 0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.54 0.38 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.54 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1.  1. -1. -1.  1.  1.]
select_j_column
[-1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:67,large_class sample len:495
cluster len:1
cluster contain small sample len:[0.12]
before change column:	[-1, -1, -1, -1, -1, 1, -1, -1, -1, -1]
after change column:	[-1, -1, -1, -1, -1, 1, -1, -1, -1, -1]


============== iter  15 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[13  1  0  0  3  0  0  0  1  0]
 [ 0 17  0  4  1  0  0  0  0  0]
 [ 1  2 17  2  0  1  0  0  3  0]
 [ 0  5  1 10  0  1  0  0  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0 14  0  1  2  0  0  0  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  0.9 0.8 0.6 0.6 0.9 0.4 0.9 0.6 0.7]
 [0.  0.  0.7 0.9 0.7 0.8 0.7 0.  0.7 0.6]
 [0.  0.  0.  0.6 0.2 0.7 0.4 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.6 0.9 0.6 0.9 0.2 0.5]
 [0.  0.  0.  0.  0.  0.9 0.2 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.43 0.21 0.5  0.21 0.29 0.5  0.43 0.43 0.36 0.36 0.43 0.5 ]
 [0.   0.   0.21 0.29 0.29 0.43 0.36 0.29 0.5  0.36 0.43 0.57 0.21 0.29]
 [0.   0.   0.   0.21 0.36 0.5  0.43 0.36 0.43 0.14 0.36 0.36 0.   0.36]
 [0.   0.   0.   0.   0.57 0.29 0.21 0.43 0.64 0.36 0.29 0.29 0.21 0.43]
 [0.   0.   0.   0.   0.   0.29 0.64 0.43 0.21 0.21 0.43 0.57 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.5  0.57 0.36 0.36 0.43 0.43 0.5  0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.57 0.57 0.21 0.21 0.43 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.5  0.43 0.29 0.36 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.5  0.36 0.43 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.5  0.14 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: None, 4: True, 5: None, 6: True, 7: True, 8: None, 9: True}
select_i_column
[ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
select_j_column
[-1.  1. -1. -1.  1.  1. -1. -1.  1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:58,large_class sample len:504
cluster len:1
cluster contain small sample len:[0.1]
before change column:	[-1, 1, -1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[-1, 1, -1, -1, -1, -1, -1, -1, -1, -1]


============== iter  16 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  1.  0.8 0.6 0.6 0.9 0.4 0.9 0.6 0.7]
 [0.  0.  0.8 1.  0.8 0.9 0.8 0.1 0.8 0.7]
 [0.  0.  0.  0.6 0.2 0.7 0.4 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.6 0.9 0.6 0.9 0.2 0.5]
 [0.  0.  0.  0.  0.  0.9 0.2 0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 0.9 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.4  0.2  0.47 0.2  0.27 0.47 0.4  0.4  0.33 0.33 0.4  0.47
  0.33]
 [0.   0.   0.2  0.27 0.27 0.4  0.33 0.27 0.47 0.33 0.4  0.53 0.2  0.27
  0.4 ]
 [0.   0.   0.   0.2  0.33 0.47 0.4  0.33 0.4  0.13 0.33 0.33 0.   0.33
  0.33]
 [0.   0.   0.   0.   0.53 0.27 0.2  0.4  0.6  0.33 0.27 0.27 0.2  0.4
  0.27]
 [0.   0.   0.   0.   0.   0.27 0.6  0.4  0.2  0.2  0.4  0.53 0.33 0.4
  0.53]
 [0.   0.   0.   0.   0.   0.   0.47 0.53 0.33 0.33 0.4  0.4  0.47 0.53
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.53 0.53 0.2  0.2  0.4  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.47 0.4  0.27 0.33 0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.47 0.33 0.4  0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.47 0.13 0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.27
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  1.  0.9 0.6 0.7 1.  0.5 1.  0.6 0.7]
 [0.  0.  0.9 1.  0.9 1.  0.9 0.2 0.8 0.7]
 [0.  0.  0.  0.7 0.2 0.7 0.4 0.7 0.7 1. ]
 [0.  0.  0.  0.  0.7 1.  0.7 1.  0.2 0.5]
 [0.  0.  0.  0.  0.  0.9 0.2 0.7 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.7 0.8 1.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.38 0.19 0.44 0.19 0.25 0.44 0.38 0.38 0.31 0.31 0.38 0.44
  0.31 0.31]
 [0.   0.   0.19 0.25 0.25 0.38 0.31 0.25 0.44 0.31 0.38 0.5  0.19 0.25
  0.38 0.38]
 [0.   0.   0.   0.19 0.31 0.44 0.38 0.31 0.38 0.12 0.31 0.31 0.   0.31
  0.31 0.56]
 [0.   0.   0.   0.   0.5  0.25 0.19 0.38 0.56 0.31 0.25 0.25 0.19 0.38
  0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.25 0.56 0.38 0.19 0.19 0.38 0.5  0.31 0.38
  0.5  0.25]
 [0.   0.   0.   0.   0.   0.   0.44 0.5  0.31 0.31 0.38 0.38 0.44 0.5
  0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.5  0.5  0.19 0.19 0.38 0.19
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.44 0.38 0.25 0.31 0.
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.44 0.31 0.38 0.31
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.44 0.12 0.44
  0.44 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.38
  0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.25
  0.12 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31
  0.31 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1.  1. -1. -1. -1.  1.  1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  1.1 0.9 0.6 0.7 1.  0.5 1.1 0.6 0.8]
 [0.  0.  1.  1.1 1.  1.1 1.  0.2 0.9 0.7]
 [0.  0.  0.  0.7 0.2 0.7 0.4 0.8 0.7 1.1]
 [0.  0.  0.  0.  0.7 1.  0.7 1.1 0.2 0.6]
 [0.  0.  0.  0.  0.  0.9 0.2 0.8 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.7 0.9 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.35 0.18 0.41 0.18 0.24 0.41 0.35 0.35 0.29 0.29 0.35 0.41
  0.29 0.29 0.18]
 [0.   0.   0.18 0.24 0.24 0.35 0.29 0.24 0.41 0.29 0.35 0.47 0.18 0.24
  0.35 0.35 0.35]
 [0.   0.   0.   0.18 0.29 0.41 0.35 0.29 0.35 0.12 0.29 0.29 0.   0.29
  0.29 0.53 0.29]
 [0.   0.   0.   0.   0.47 0.24 0.18 0.35 0.53 0.29 0.24 0.24 0.18 0.35
  0.24 0.47 0.12]
 [0.   0.   0.   0.   0.   0.24 0.53 0.35 0.18 0.18 0.35 0.47 0.29 0.35
  0.47 0.24 0.59]
 [0.   0.   0.   0.   0.   0.   0.41 0.47 0.29 0.29 0.35 0.35 0.41 0.47
  0.35 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.47 0.47 0.18 0.18 0.35 0.18
  0.18 0.29 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.41 0.35 0.24 0.29 0.
  0.12 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.41 0.29 0.35 0.29
  0.29 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.41 0.12 0.41
  0.41 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.35
  0.35 0.35 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.24
  0.12 0.35 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.29 0.53 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.12 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.35 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1.  1.  1. -1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1. -1.  1.  1.  1.  1. -1. -1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  19 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  1.1 1.  0.6 0.8 1.  0.6 1.2 0.6 0.8]
 [0.  0.  1.1 1.1 1.1 1.1 1.1 0.3 0.9 0.7]
 [0.  0.  0.  0.8 0.2 0.8 0.4 0.8 0.8 1.2]
 [0.  0.  0.  0.  0.8 1.  0.8 1.2 0.2 0.6]
 [0.  0.  0.  0.  0.  1.  0.2 0.8 0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.8 1.  1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.28 0.33 0.17 0.39 0.17 0.22 0.39 0.33 0.33 0.28 0.28 0.33 0.39
  0.28 0.28 0.17 0.22]
 [0.   0.   0.17 0.22 0.22 0.33 0.28 0.22 0.39 0.28 0.33 0.44 0.17 0.22
  0.33 0.33 0.33 0.39]
 [0.   0.   0.   0.17 0.28 0.39 0.33 0.28 0.33 0.11 0.28 0.28 0.   0.28
  0.28 0.5  0.28 0.44]
 [0.   0.   0.   0.   0.44 0.22 0.17 0.33 0.5  0.28 0.22 0.22 0.17 0.33
  0.22 0.44 0.11 0.39]
 [0.   0.   0.   0.   0.   0.22 0.5  0.33 0.17 0.17 0.33 0.44 0.28 0.33
  0.44 0.22 0.56 0.28]
 [0.   0.   0.   0.   0.   0.   0.39 0.44 0.28 0.28 0.33 0.33 0.39 0.44
  0.33 0.22 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.44 0.44 0.17 0.17 0.33 0.17
  0.17 0.28 0.06 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.39 0.33 0.22 0.28 0.
  0.11 0.22 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.39 0.28 0.33 0.28
  0.28 0.17 0.39 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.39 0.11 0.39
  0.39 0.39 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.28 0.33
  0.33 0.33 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.22
  0.11 0.33 0.11 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28
  0.28 0.5  0.28 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.11 0.22 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.33 0.11 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  20 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
18 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  1.1 1.1 0.6 0.8 1.1 0.6 1.3 0.6 0.8]
 [0.  0.  1.2 1.1 1.1 1.2 1.1 0.4 0.9 0.7]
 [0.  0.  0.  0.9 0.3 0.8 0.5 0.8 0.9 1.3]
 [0.  0.  0.  0.  0.8 1.1 0.8 1.3 0.2 0.6]
 [0.  0.  0.  0.  0.  1.1 0.2 0.9 0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.9 1.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.32 0.16 0.37 0.16 0.21 0.37 0.32 0.32 0.26 0.26 0.32 0.37
  0.26 0.26 0.16 0.21 0.26]
 [0.   0.   0.16 0.21 0.21 0.32 0.26 0.21 0.37 0.26 0.32 0.42 0.16 0.21
  0.32 0.32 0.32 0.37 0.21]
 [0.   0.   0.   0.16 0.26 0.37 0.32 0.26 0.32 0.11 0.26 0.26 0.   0.26
  0.26 0.47 0.26 0.42 0.37]
 [0.   0.   0.   0.   0.42 0.21 0.16 0.32 0.47 0.26 0.21 0.21 0.16 0.32
  0.21 0.42 0.11 0.37 0.32]
 [0.   0.   0.   0.   0.   0.21 0.47 0.32 0.16 0.16 0.32 0.42 0.26 0.32
  0.42 0.21 0.53 0.26 0.32]
 [0.   0.   0.   0.   0.   0.   0.37 0.42 0.26 0.26 0.32 0.32 0.37 0.42
  0.32 0.21 0.32 0.16 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.16 0.42 0.42 0.16 0.16 0.32 0.16
  0.16 0.26 0.05 0.32 0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.37 0.32 0.21 0.26 0.
  0.11 0.21 0.21 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.37 0.26 0.32 0.26
  0.26 0.16 0.37 0.11 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.37 0.11 0.37
  0.37 0.37 0.37 0.32 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.26 0.32
  0.32 0.32 0.21 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.21
  0.11 0.32 0.11 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.26 0.47 0.26 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.11 0.21 0.21 0.26 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.32 0.11 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.05 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  21 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
18 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
19 classifiers pre label
Counter({1.0: 116, -1.0: 72})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  0  1  0  2  3  0]
 [ 0  0  1 10  0  1  0  5  0  0]
 [ 0  0  0  2  2 19  0  0  0  0]
 [ 0  0  0  1  3 13  0  0  2  0]
 [ 2  0  0  0  0  1  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  1  2  0  0  9  0]
 [ 0  0  0  3  1  9  0  0  0  0]]
row HD
[[0.  1.2 1.1 0.7 0.9 1.2 0.6 1.4 0.6 0.8]
 [0.  0.  1.3 1.1 1.1 1.2 1.2 0.4 1.  0.8]
 [0.  0.  0.  1.  0.4 0.9 0.5 0.9 0.9 1.3]
 [0.  0.  0.  0.  0.8 1.1 0.9 1.3 0.3 0.7]
 [0.  0.  0.  0.  0.  1.1 0.3 0.9 0.9 1.3]
 [0.  0.  0.  0.  0.  0.  1.  1.  1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.3  0.15 0.35 0.15 0.2  0.35 0.3  0.3  0.25 0.25 0.3  0.35
  0.25 0.25 0.15 0.2  0.25 0.25]
 [0.   0.   0.15 0.2  0.2  0.3  0.25 0.2  0.35 0.25 0.3  0.4  0.15 0.2
  0.3  0.3  0.3  0.35 0.2  0.3 ]
 [0.   0.   0.   0.15 0.25 0.35 0.3  0.25 0.3  0.1  0.25 0.25 0.   0.25
  0.25 0.45 0.25 0.4  0.35 0.35]
 [0.   0.   0.   0.   0.4  0.2  0.15 0.3  0.45 0.25 0.2  0.2  0.15 0.3
  0.2  0.4  0.1  0.35 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.2  0.45 0.3  0.15 0.15 0.3  0.4  0.25 0.3
  0.4  0.2  0.5  0.25 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.35 0.4  0.25 0.25 0.3  0.3  0.35 0.4
  0.3  0.2  0.3  0.15 0.3  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.15 0.4  0.4  0.15 0.15 0.3  0.15
  0.15 0.25 0.05 0.3  0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.35 0.3  0.2  0.25 0.
  0.1  0.2  0.2  0.25 0.1  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.35 0.25 0.3  0.25
  0.25 0.15 0.35 0.1  0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.35 0.1  0.35
  0.35 0.35 0.35 0.3  0.45 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.25 0.3
  0.3  0.3  0.2  0.35 0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.2
  0.1  0.3  0.1  0.25 0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.25 0.45 0.25 0.4  0.35 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.1  0.2  0.2  0.25 0.1  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.3  0.1  0.25 0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.3  0.05 0.1  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.25 0.2  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.15 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1.  1. -1.  1. -1. -1.  1.  1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  22 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.  1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.  1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
18 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
19 classifiers pre label
Counter({1.0: 116, -1.0: 72})
20 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  1.2 1.2 0.7 1.  1.2 0.6 1.5 0.7 0.9]
 [0.  0.  1.4 1.1 1.2 1.2 1.2 0.5 1.1 0.9]
 [0.  0.  0.  1.1 0.4 1.  0.6 0.9 0.9 1.3]
 [0.  0.  0.  0.  0.9 1.1 0.9 1.4 0.4 0.8]
 [0.  0.  0.  0.  0.  1.2 0.4 0.9 0.9 1.3]
 [0.  0.  0.  0.  0.  0.  1.  1.1 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.9 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.29 0.14 0.33 0.14 0.19 0.33 0.29 0.29 0.24 0.24 0.29 0.33
  0.24 0.24 0.14 0.19 0.24 0.24 0.43]
 [0.   0.   0.14 0.19 0.19 0.29 0.24 0.19 0.33 0.24 0.29 0.38 0.14 0.19
  0.29 0.29 0.29 0.33 0.19 0.29 0.29]
 [0.   0.   0.   0.14 0.24 0.33 0.29 0.24 0.29 0.1  0.24 0.24 0.   0.24
  0.24 0.43 0.24 0.38 0.33 0.33 0.24]
 [0.   0.   0.   0.   0.38 0.19 0.14 0.29 0.43 0.24 0.19 0.19 0.14 0.29
  0.19 0.38 0.1  0.33 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.19 0.43 0.29 0.14 0.14 0.29 0.38 0.24 0.29
  0.38 0.19 0.48 0.24 0.29 0.29 0.19]
 [0.   0.   0.   0.   0.   0.   0.33 0.38 0.24 0.24 0.29 0.29 0.33 0.38
  0.29 0.19 0.29 0.14 0.29 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.38 0.38 0.14 0.14 0.29 0.14
  0.14 0.24 0.05 0.29 0.14 0.14 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.33 0.29 0.19 0.24 0.
  0.1  0.19 0.19 0.24 0.1  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.33 0.24 0.29 0.24
  0.24 0.14 0.33 0.1  0.24 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.33 0.1  0.33
  0.33 0.33 0.33 0.29 0.43 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.24 0.29
  0.29 0.29 0.19 0.33 0.29 0.29 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.19
  0.1  0.29 0.1  0.24 0.19 0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24
  0.24 0.43 0.24 0.38 0.33 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.1  0.19 0.19 0.24 0.1  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.1  0.24 0.19 0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29 0.05 0.1  0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.24 0.19 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  23 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.  1.  1.  1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1. -1. -1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.  1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.  1.  1. -1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.  1. -1.  1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
18 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
19 classifiers pre label
Counter({1.0: 116, -1.0: 72})
20 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
21 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  1.3 1.3 0.7 1.  1.2 0.6 1.6 0.7 0.9]
 [0.  0.  1.4 1.2 1.3 1.3 1.3 0.5 1.2 1. ]
 [0.  0.  0.  1.2 0.5 1.1 0.7 0.9 1.  1.4]
 [0.  0.  0.  0.  0.9 1.1 0.9 1.5 0.4 0.8]
 [0.  0.  0.  0.  0.  1.2 0.4 1.  0.9 1.3]
 [0.  0.  0.  0.  0.  0.  1.  1.2 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.9 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.27 0.14 0.32 0.14 0.18 0.32 0.27 0.27 0.23 0.23 0.27 0.32
  0.23 0.23 0.14 0.18 0.23 0.23 0.41 0.14]
 [0.   0.   0.14 0.18 0.18 0.27 0.23 0.18 0.32 0.23 0.27 0.36 0.14 0.18
  0.27 0.27 0.27 0.32 0.18 0.27 0.27 0.27]
 [0.   0.   0.   0.14 0.23 0.32 0.27 0.23 0.27 0.09 0.23 0.23 0.   0.23
  0.23 0.41 0.23 0.36 0.32 0.32 0.23 0.32]
 [0.   0.   0.   0.   0.36 0.18 0.14 0.27 0.41 0.23 0.18 0.18 0.14 0.27
  0.18 0.36 0.09 0.32 0.27 0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.18 0.41 0.27 0.14 0.14 0.27 0.36 0.23 0.27
  0.36 0.18 0.45 0.23 0.27 0.27 0.18 0.36]
 [0.   0.   0.   0.   0.   0.   0.32 0.36 0.23 0.23 0.27 0.27 0.32 0.36
  0.27 0.18 0.27 0.14 0.27 0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.36 0.14 0.14 0.27 0.14
  0.14 0.23 0.05 0.27 0.14 0.14 0.23 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.32 0.27 0.18 0.23 0.
  0.09 0.18 0.18 0.23 0.09 0.18 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.32 0.23 0.27 0.23
  0.23 0.14 0.32 0.09 0.23 0.32 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.32 0.09 0.32
  0.32 0.32 0.32 0.27 0.41 0.32 0.23 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.23 0.27
  0.27 0.27 0.18 0.32 0.27 0.27 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.18
  0.09 0.27 0.09 0.23 0.18 0.18 0.18 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23
  0.23 0.41 0.23 0.36 0.32 0.32 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.09 0.18 0.18 0.23 0.09 0.18 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.27 0.09 0.23 0.18 0.18 0.18 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.27 0.05 0.09 0.18 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.23 0.18 0.18 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.23 0.32 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.18 0.27 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
select_j_column
[-1.  1. -1. -1. -1. -1. -1.  1. -1.  1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  24 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.  1.  1.  1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1. -1. -1.  1.  1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.  1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.  1.  1. -1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.  1. -1.  1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1.  1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
18 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
19 classifiers pre label
Counter({1.0: 116, -1.0: 72})
20 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
21 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
22 classifiers pre label
Counter({1.0: 149, -1.0: 39})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  1.4 1.3 0.7 1.  1.2 0.6 1.7 0.7 1. ]
 [0.  0.  1.5 1.3 1.4 1.4 1.4 0.5 1.3 1. ]
 [0.  0.  0.  1.2 0.5 1.1 0.7 1.  1.  1.5]
 [0.  0.  0.  0.  0.9 1.1 0.9 1.6 0.4 0.9]
 [0.  0.  0.  0.  0.  1.2 0.4 1.1 0.9 1.4]
 [0.  0.  0.  0.  0.  0.  1.  1.3 1.3 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 0.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.26 0.13 0.3  0.13 0.17 0.3  0.26 0.26 0.22 0.22 0.26 0.3
  0.22 0.22 0.13 0.17 0.22 0.22 0.39 0.13 0.3 ]
 [0.   0.   0.13 0.17 0.17 0.26 0.22 0.17 0.3  0.22 0.26 0.35 0.13 0.17
  0.26 0.26 0.26 0.3  0.17 0.26 0.26 0.26 0.17]
 [0.   0.   0.   0.13 0.22 0.3  0.26 0.22 0.26 0.09 0.22 0.22 0.   0.22
  0.22 0.39 0.22 0.35 0.3  0.3  0.22 0.3  0.22]
 [0.   0.   0.   0.   0.35 0.17 0.13 0.26 0.39 0.22 0.17 0.17 0.13 0.26
  0.17 0.35 0.09 0.3  0.26 0.17 0.26 0.17 0.35]
 [0.   0.   0.   0.   0.   0.17 0.39 0.26 0.13 0.13 0.26 0.35 0.22 0.26
  0.35 0.17 0.43 0.22 0.26 0.26 0.17 0.35 0.  ]
 [0.   0.   0.   0.   0.   0.   0.3  0.35 0.22 0.22 0.26 0.26 0.3  0.35
  0.26 0.17 0.26 0.13 0.26 0.17 0.26 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.13 0.35 0.35 0.13 0.13 0.26 0.13
  0.13 0.22 0.04 0.26 0.13 0.13 0.22 0.13 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.3  0.26 0.17 0.22 0.
  0.09 0.17 0.17 0.22 0.09 0.17 0.17 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.3  0.22 0.26 0.22
  0.22 0.13 0.3  0.09 0.22 0.3  0.22 0.22 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.3  0.09 0.3
  0.3  0.3  0.3  0.26 0.39 0.3  0.22 0.39 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.22 0.26
  0.26 0.26 0.17 0.3  0.26 0.26 0.17 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.17
  0.09 0.26 0.09 0.22 0.17 0.17 0.17 0.09 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22
  0.22 0.39 0.22 0.35 0.3  0.3  0.22 0.3  0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.09 0.17 0.17 0.22 0.09 0.17 0.17 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.09 0.22 0.17 0.17 0.17 0.09 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.04 0.09 0.17 0.26 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.22 0.17 0.17 0.26 0.09 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.13 0.22 0.3  0.13 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.26 0.09 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[ 1.  1. -1.  1. -1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1. -1. -1.  1.  1. -1.  1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]
small_class len :2,large_class len:8, small_class sample:111,large_class sample len:451
cluster len:1
cluster contain small sample len:[0.2]
before change column:	[-1, -1, -1, -1, -1, 1, 1, -1, -1, -1]
after change column:	[-1, -1, -1, -1, -1, 1, 1, -1, -1, -1]


============== iter  25 ================
current matrix is 
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.  1.  1. -1.  1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1. -1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({1.0: 147, -1.0: 41})
1 classifiers pre label
Counter({1.0: 118, -1.0: 70})
2 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
3 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
4 classifiers pre label
Counter({1.0: 149, -1.0: 39})
5 classifiers pre label
Counter({1.0: 111, -1.0: 77})
6 classifiers pre label
Counter({1.0: 98, -1.0: 90})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
9 classifiers pre label
Counter({1.0: 131, -1.0: 57})
10 classifiers pre label
Counter({1.0: 147, -1.0: 41})
11 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
12 classifiers pre label
Counter({-1.0: 116, 1.0: 72})
13 classifiers pre label
Counter({-1.0: 188})
14 classifiers pre label
Counter({-1.0: 188})
15 classifiers pre label
Counter({1.0: 116, -1.0: 72})
16 classifiers pre label
Counter({-1.0: 149, 1.0: 39})
17 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
18 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
19 classifiers pre label
Counter({1.0: 116, -1.0: 72})
20 classifiers pre label
Counter({-1.0: 100, 1.0: 88})
21 classifiers pre label
Counter({-1.0: 131, 1.0: 57})
22 classifiers pre label
Counter({1.0: 149, -1.0: 39})
23 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[13  0  0  0  3  0  0  1  1  0]
 [ 0  0  0  4  1  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 0  0  0  2 21  0  0  0  0  0]
 [ 0  0  0  1 16  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 0  0  0  1  2  0  0 14  0  0]
 [ 2  0  0  0  3  0  0  0  9  0]
 [ 0  0  0  3 10  0  0  0  0  0]]
row HD
[[0.  1.4 1.3 0.7 1.  1.3 0.7 1.7 0.7 1. ]
 [0.  0.  1.5 1.3 1.4 1.5 1.5 0.5 1.3 1. ]
 [0.  0.  0.  1.2 0.5 1.2 0.8 1.  1.  1.5]
 [0.  0.  0.  0.  0.9 1.2 1.  1.6 0.4 0.9]
 [0.  0.  0.  0.  0.  1.3 0.5 1.1 0.9 1.4]
 [0.  0.  0.  0.  0.  0.  1.  1.4 1.4 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.25 0.12 0.29 0.12 0.17 0.29 0.25 0.25 0.21 0.21 0.25 0.29
  0.21 0.21 0.12 0.17 0.21 0.21 0.38 0.12 0.29 0.33]
 [0.   0.   0.12 0.17 0.17 0.25 0.21 0.17 0.29 0.21 0.25 0.33 0.12 0.17
  0.25 0.25 0.25 0.29 0.17 0.25 0.25 0.25 0.17 0.21]
 [0.   0.   0.   0.12 0.21 0.29 0.25 0.21 0.25 0.08 0.21 0.21 0.   0.21
  0.21 0.38 0.21 0.33 0.29 0.29 0.21 0.29 0.21 0.25]
 [0.   0.   0.   0.   0.33 0.17 0.12 0.25 0.38 0.21 0.17 0.17 0.12 0.25
  0.17 0.33 0.08 0.29 0.25 0.17 0.25 0.17 0.33 0.29]
 [0.   0.   0.   0.   0.   0.17 0.38 0.25 0.12 0.12 0.25 0.33 0.21 0.25
  0.33 0.17 0.42 0.21 0.25 0.25 0.17 0.33 0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.29 0.33 0.21 0.21 0.25 0.25 0.29 0.33
  0.25 0.17 0.25 0.12 0.25 0.17 0.25 0.17 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.12 0.33 0.33 0.12 0.12 0.25 0.12
  0.12 0.21 0.04 0.25 0.12 0.12 0.21 0.12 0.38 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.25 0.17 0.21 0.
  0.08 0.17 0.17 0.21 0.08 0.17 0.17 0.17 0.25 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.29 0.21 0.25 0.21
  0.21 0.12 0.29 0.08 0.21 0.29 0.21 0.21 0.12 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.29 0.08 0.29
  0.29 0.29 0.29 0.25 0.38 0.29 0.21 0.38 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.21 0.25
  0.25 0.25 0.17 0.29 0.25 0.25 0.17 0.25 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.17
  0.08 0.25 0.08 0.21 0.17 0.17 0.17 0.08 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21
  0.21 0.38 0.21 0.33 0.29 0.29 0.21 0.29 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.08 0.17 0.17 0.21 0.08 0.17 0.17 0.17 0.25 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.08 0.21 0.17 0.17 0.17 0.08 0.33 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.04 0.08 0.17 0.25 0.17 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.21 0.17 0.17 0.25 0.08 0.42 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.12 0.21 0.29 0.12 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.17 0.25 0.08 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.17 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.25 0.17 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: None, 5: True, 6: True, 7: None, 8: None, 9: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.04
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})

**********      classifier acc  **************
[0.67, 0.686, 0.691, 0.809, 0.846, 0.771, 0.739, 0.899, 0.707, 0.782, 0.771, 0.872, 0.691, 0.899, 0.883, 0.617, 0.846, 0.596, 0.718, 0.851, 0.654, 0.883, 0.846, 0.798]
before cutting matrix
[[-1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.
  -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1.
  -1.  1.  1.  1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.  1. -1.  1.
   1. -1. -1.  1.  1. -1.]
 [-1.  1.  1.  1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1.
  -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1.
   1.  1.  1. -1.  1.  1.]
 [-1. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1.  1. -1.  1.
  -1. -1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.  1.  1.  1.
   1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1.  1.  1.  1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1. -1.
  -1. -1. -1. -1.  1. -1.]
 [ 1.  1.  1.  1. -1. -1.  1. -1. -1.  1.  1. -1.  1. -1. -1. -1.  1. -1.
  -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
positive and negative ratio
Counter({-1.0: 346, 1.0: 216})
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 395, -1.0: 167})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 320, 1.0: 242})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 320, 1.0: 242})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 358, 1.0: 204})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 358, 1.0: 204})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 396, -1.0: 166})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 346, 1.0: 216})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 346, 1.0: 216})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 288, -1.0: 274})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 341, 1.0: 221})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 341, 1.0: 221})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({-1.0: 372, 1.0: 190})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 372, 1.0: 190})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
positive and negative ratio
Counter({-1.0: 289, 1.0: 273})
after cutting matrix
[[-1.  1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1. -1. -1.]
 [-1.  1.  1. -1. -1. -1. -1. -1. -1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [-1.  1.  1. -1.  1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1.  1. -1.  1.  1.]
 [-1.  1.  1. -1.  1.  1. -1. -1. -1.  1. -1. -1.  1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.  1. -1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 291, -1.0: 271})
Counter({1.0: 387, -1.0: 175})
Counter({1.0: 395, -1.0: 167})
Counter({-1.0: 495, 1.0: 67})
Counter({1.0: 314, -1.0: 248})
Counter({1.0: 396, -1.0: 166})
Counter({-1.0: 389, 1.0: 173})
Counter({-1.0: 495, 1.0: 67})
Counter({-1.0: 504, 1.0: 58})
Counter({1.0: 288, -1.0: 274})
Counter({-1.0: 387, 1.0: 175})
Counter({1.0: 300, -1.0: 262})
Counter({-1.0: 289, 1.0: 273})
Counter({-1.0: 381, 1.0: 181})
Counter({1.0: 387, -1.0: 175})
Counter({-1.0: 451, 1.0: 111})
cutting matrix's confusion matrix
[[16  0  0  0  0  0  0  1  1  0]
 [ 1  0  0  4  0  0  0 17  0  0]
 [ 1  0 17  2  1  0  0  2  3  0]
 [ 0  0  1 10  1  0  0  5  0  0]
 [ 2  0  0  2 19  0  0  0  0  0]
 [ 3  0  0  1 13  0  0  0  2  0]
 [ 2  0  0  0  1  0  0  0 16  0]
 [ 2  0  0  1  0  0  0 14  0  0]
 [ 3  0  0  0  2  0  0  0  9  0]
 [ 1  0  0  3  9  0  0  0  0  0]]


SVM classifier
Time: 2019-01-10 15:30:51
FS: linear_svc
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 1.  1.  1.  0. -1.  0.  0.  0.  1.  0.  0. -1. -1.  0.  1.]
 [ 1.  1.  0.  1.  1.  0. -1.  1.  0.  0.  0. -1.  0.  0. -1.]
 [ 0.  0.  1.  0.  0.  0. -1.  0. -1.  0.  1.  1.  0.  1.  1.]
 [ 0. -1.  0. -1. -1. -1.  0.  0.  0.  1. -1.  1.  1.  0.  1.]
 [ 0. -1.  1.  0.  0.  0.  0.  1. -1.  1. -1.  0.  0.  0. -1.]
 [ 0.  0.  1.  1.  0.  0. -1. -1. -1. -1.  0.  0. -1.  0.  1.]
 [ 0.  1. -1.  1.  0.  1.  1.  0.  0.  0. -1.  0.  0. -1.  1.]
 [ 0.  0. -1.  0.  0. -1.  0. -1.  0.  0.  0.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0. -1. -1.  1.  1. -1.  0.  0. -1.  1.  1.]
 [-1.  0. -1. -1.  0.  1.  0.  1.  0.  0.  0.  0.  0.  1.  0.]]


============== iter  1 ================
current matrix is 
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
confusion matrix
[[17  0  1  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 17  0  0  0]
 [ 6  0 20  0  0  0  0  0  0  0]
 [11  0  1  0  0  0  5  0  0  0]
 [23  0  0  0  0  0  0  0  0  0]
 [17  0  2  0  0  0  0  0  0  0]
 [ 3  0 16  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0 12  0  0  0]
 [ 5  0  9  0  0  0  0  0  0  0]
 [13  0  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
select_j_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 1]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 0.  1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
confusion matrix
[[13  4  0  0  0  0  0  0  0  1]
 [ 4  1  0  0  0  0 17  0  0  0]
 [ 3  3 17  0  0  0  0  0  0  3]
 [10  1  1  0  0  0  5  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  2]
 [ 2  1  0  0  0  0  0  0  0 16]
 [ 1  4  0  0  0  0 12  0  0  0]
 [ 2  3  0  0  0  0  0  0  0  9]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.  0.1 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.2 0.1 0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
most_cplx_inx
9
new_column
None


============== iter  3 ================
current matrix is 
[[ 0.  1.]
 [ 0. -1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0. -1.]
 [ 0.  1.]
 [-1. -1.]
 [-1. -1.]
 [ 1.  0.]
 [ 1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
confusion matrix
[[13  4  0  0  0  0  0  0  0  1]
 [ 4  1  0  0  0  0 17  0  0  0]
 [ 3  3 17  0  0  0  0  0  0  3]
 [10  1  1  0  0  0  5  0  0  0]
 [ 2 21  0  0  0  0  0  0  0  0]
 [ 1 16  0  0  0  0  0  0  0  2]
 [ 2  1  0  0  0  0  0  0  0 16]
 [ 1  4  0  0  0  0 12  0  0  0]
 [ 2  3  0  0  0  0  0  0  0  9]
 [ 3 10  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.  0.1 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.2 0.1 0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.2 0.2 0.2 0.2 0.2 0.  0.1]
 [0.  0.  0.  0.  0.1 0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.1 0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
5
new_column
[[ 0]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  4 ================
current matrix is 
[[ 0.  1.  0.]
 [ 0. -1.  1.]
 [ 1.  0. -1.]
 [ 0.  1. -1.]
 [ 0. -1. -1.]
 [ 0.  1.  1.]
 [-1. -1.  1.]
 [-1. -1.  0.]
 [ 1.  0.  1.]
 [ 1. -1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
confusion matrix
[[13  5  0  0  0  0  0  0  0  0]
 [ 0  1  0  4  0  0  0 17  0  0]
 [ 1  6 17  2  0  0  0  0  0  0]
 [ 0  1  1 10  0  0  0  5  0  0]
 [ 0 21  0  2  0  0  0  0  0  0]
 [ 0 18  0  1  0  0  0  0  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 0  4  0  1  0  0  0 12  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]
 [ 0 10  0  3  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.3 0.1 0.2 0.1 0.3 0.2 0.3 0.2]
 [0.  0.  0.3 0.2 0.1 0.1 0.1 0.2 0.2 0.2]
 [0.  0.  0.  0.2 0.2 0.3 0.3 0.3 0.1 0.2]
 [0.  0.  0.  0.  0.1 0.1 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.2 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.67]
 [0.   0.   2.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]]


============== iter  5 ================
current matrix is 
[[ 0.  1.  0. -1.]
 [ 0. -1.  1. -1.]
 [ 1.  0. -1.  0.]
 [ 0.  1. -1. -1.]
 [ 0. -1. -1.  0.]
 [ 0.  1.  1.  1.]
 [-1. -1.  1. -1.]
 [-1. -1.  0.  1.]
 [ 1.  0.  1. -1.]
 [ 1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
confusion matrix
[[13  2  0  0  0  0  0  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  6 17  2  0  0  0  0  0  0]
 [ 0  1  1 10  0  0  0  5  0  0]
 [ 0 19  0  2  0  0  0  2  0  0]
 [ 0 15  0  1  0  0  0  3  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2 11  0  0  0  0  0  1  0  0]
 [ 0  9  0  3  0  0  0  1  0  0]]
row HD
[[0.  0.2 0.4 0.1 0.3 0.2 0.3 0.3 0.3 0.3]
 [0.  0.  0.4 0.2 0.2 0.2 0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.3 0.2 0.4 0.4 0.4 0.2 0.3]
 [0.  0.  0.  0.  0.2 0.2 0.3 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.3 0.4 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.   1.75]
 [0.   0.   2.   1.5 ]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1.  0. -1. -1.  0.  1.  0.  0.  0.]
select_j_column
[ 1. -1.  0.  1. -1.  1. -1. -1.  0. -1.]
most_cplx_inx
6
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]]
small_class len :1,large_class len:6, small_class sample:49,large_class sample len:328
extra_class: 3,extra_sample len: 185
cluster len:1
cluster contain small sample len:[0.21]
before change column:	[1, -1, 0, -1, -1, 0, -1, -1, 0, -1]
after change column:	[1, -1, 0, -1, -1, 0, -1, -1, 0, -1]


============== iter  6 ================
current matrix is 
[[ 0.  1.  0. -1.  1.]
 [ 0. -1.  1. -1. -1.]
 [ 1.  0. -1.  0.  0.]
 [ 0.  1. -1. -1. -1.]
 [ 0. -1. -1.  0. -1.]
 [ 0.  1.  1.  1.  0.]
 [-1. -1.  1. -1. -1.]
 [-1. -1.  0.  1. -1.]
 [ 1.  0.  1. -1.  0.]
 [ 1. -1.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
confusion matrix
[[13  2  0  0  0  0  0  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  6 17  2  0  0  0  0  0  0]
 [ 0  1  1 10  0  0  0  5  0  0]
 [ 0 19  0  2  0  0  0  2  0  0]
 [ 0 15  0  1  0  0  0  3  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2 11  0  0  0  0  0  1  0  0]
 [ 0  9  0  3  0  0  0  1  0  0]]
row HD
[[0.  0.3 0.5 0.2 0.4 0.3 0.4 0.4 0.4 0.4]
 [0.  0.  0.5 0.2 0.2 0.3 0.1 0.3 0.3 0.3]
 [0.  0.  0.  0.4 0.3 0.4 0.5 0.5 0.2 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.3 0.3 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.4 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.6 1.4 1.4]
 [0.  0.  1.6 1.2 0.4]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.]
 [ 0. -1.  1. -1. -1. -1.]
 [ 1.  0. -1.  0.  0.  0.]
 [ 0.  1. -1. -1. -1.  0.]
 [ 0. -1. -1.  0. -1.  0.]
 [ 0.  1.  1.  1.  0. -1.]
 [-1. -1.  1. -1. -1.  0.]
 [-1. -1.  0.  1. -1. -1.]
 [ 1.  0.  1. -1.  0.  0.]
 [ 1. -1.  0.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
confusion matrix
[[13  2  0  0  0  0  0  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  6 17  2  0  0  0  0  0  0]
 [ 0  1  1 10  0  0  0  5  0  0]
 [ 0 19  0  2  0  0  0  2  0  0]
 [ 0 15  0  1  0  0  0  3  0  0]
 [ 2 17  0  0  0  0  0  0  0  0]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2 11  0  0  0  0  0  1  0  0]
 [ 0  9  0  3  0  0  0  1  0  0]]
row HD
[[0.  0.4 0.5 0.2 0.4 0.4 0.4 0.5 0.4 0.5]
 [0.  0.  0.6 0.3 0.3 0.3 0.2 0.3 0.4 0.4]
 [0.  0.  0.  0.4 0.3 0.5 0.5 0.6 0.2 0.5]
 [0.  0.  0.  0.  0.2 0.4 0.3 0.5 0.4 0.5]
 [0.  0.  0.  0.  0.  0.5 0.3 0.4 0.5 0.4]
 [0.  0.  0.  0.  0.  0.  0.5 0.4 0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33 1.17 1.17 0.83]
 [0.   0.   1.33 1.   0.33 1.  ]
 [0.   0.   0.   1.33 1.33 1.5 ]
 [0.   0.   0.   0.   1.   1.  ]
 [0.   0.   0.   0.   0.   1.  ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
select_j_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [-1]]
small_class len :1,large_class len:4, small_class sample:58,large_class sample len:239
extra_class: 5,extra_sample len: 265
cluster len:1
cluster contain small sample len:[0.18]
before change column:	[0, 1, 0, -1, 0, -1, 0, -1, 0, -1]
after change column:	[0, 1, 0, -1, 1, -1, 0, -1, 0, -1]
before change, the sample len:	Counter({-1.0: 239, 1.0: 58})
after change, the sample len:	Counter({-1.0: 239, 1.0: 112})


============== iter  8 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.]
 [ 1.  0. -1.  0.  0.  0.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.]
 [ 0. -1. -1.  0. -1.  0.  1.]
 [ 0.  1.  1.  1.  0. -1. -1.]
 [-1. -1.  1. -1. -1.  0.  0.]
 [-1. -1.  0.  1. -1. -1. -1.]
 [ 1.  0.  1. -1.  0.  0.  0.]
 [ 1. -1.  0.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
confusion matrix
[[13  0  0  0  0  0  1  3  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  3  0  3  0]
 [ 0  0  1 10  0  0  1  5  0  0]
 [ 0  0  0  2  0  0 19  2  0  0]
 [ 0  0  0  1  0  0 13  3  2  0]
 [ 2  0  0  0  0  0  1  0 16  0]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  0  0  2  1  9  0]
 [ 0  0  0  3  0  0  9  1  0  0]]
row HD
[[0.  0.5 0.5 0.3 0.5 0.5 0.4 0.6 0.4 0.6]
 [0.  0.  0.7 0.4 0.3 0.4 0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.5 0.4 0.6 0.5 0.7 0.2 0.6]
 [0.  0.  0.  0.  0.3 0.4 0.4 0.5 0.5 0.5]
 [0.  0.  0.  0.  0.  0.6 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.6 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.14 1.   1.   0.71 1.14]
 [0.   0.   1.14 0.86 0.29 0.86 0.86]
 [0.   0.   0.   1.14 1.14 1.29 1.  ]
 [0.   0.   0.   0.   0.86 0.86 1.14]
 [0.   0.   0.   0.   0.   0.86 0.71]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
most_cplx_inx
6
new_column
[[-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]]


============== iter  9 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.]
 [-1. -1.  1. -1. -1.  0.  0. -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  1  0  3  0]
 [ 0  0  1 10  0  0  1  5  0  0]
 [ 0  0  0  2  0  2 19  0  0  0]
 [ 0  0  0  1  0  3 13  0  2  0]
 [ 2  0  0  0  0  0  1  0 16  0]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  2  0  9  0]
 [ 0  0  0  3  0  1  9  0  0  0]]
row HD
[[0.  0.6 0.6 0.4 0.5 0.5 0.4 0.7 0.4 0.7]
 [0.  0.  0.8 0.4 0.4 0.5 0.4 0.5 0.6 0.5]
 [0.  0.  0.  0.6 0.5 0.7 0.6 0.7 0.3 0.7]
 [0.  0.  0.  0.  0.4 0.5 0.5 0.6 0.6 0.5]
 [0.  0.  0.  0.  0.  0.6 0.4 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.5 0.5 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.88 0.88 0.62 1.   0.75]
 [0.   0.   1.   0.75 0.25 0.75 0.75 1.  ]
 [0.   0.   0.   1.   1.   1.12 0.88 1.  ]
 [0.   0.   0.   0.   0.75 0.75 1.   0.75]
 [0.   0.   0.   0.   0.   0.75 0.62 1.  ]
 [0.   0.   0.   0.   0.   0.   0.5  1.  ]
 [0.   0.   0.   0.   0.   0.   0.   1.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: True}
select_i_column
[-1.  0.  1.  0. -1. -1. -1.  1. -1.  0.]
select_j_column
[ 0. -1.  0.  0.  0. -1.  0. -1.  0.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [-1]
 [ 1]]


============== iter  10 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  0.6 0.7 0.5 0.5 0.6 0.4 0.8 0.4 0.8]
 [0.  0.  0.9 0.5 0.4 0.6 0.4 0.6 0.6 0.6]
 [0.  0.  0.  0.7 0.6 0.7 0.7 0.8 0.4 0.7]
 [0.  0.  0.  0.  0.5 0.6 0.6 0.6 0.7 0.6]
 [0.  0.  0.  0.  0.  0.7 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.7 0.6 0.6 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.89 0.78 0.78 0.56 0.89 0.67 0.67]
 [0.   0.   0.89 0.67 0.22 0.67 0.67 0.89 0.67]
 [0.   0.   0.   0.89 0.89 1.   0.78 0.89 0.78]
 [0.   0.   0.   0.   0.67 0.67 0.89 0.67 0.44]
 [0.   0.   0.   0.   0.   0.67 0.56 0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.44 0.89 0.78]
 [0.   0.   0.   0.   0.   0.   0.   1.   1.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  0.  1. -1.  1. -1. -1.  0. -1.]
select_j_column
[-1. -1.  1.  0. -1.  1. -1.  0. -1.  1.]
most_cplx_inx
6
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:7, small_class sample:67,large_class sample len:383
extra_class: 2,extra_sample len: 112
cluster len:1
cluster contain small sample len:[0.37]
before change column:	[-1, -1, 0, 0, -1, 1, -1, -1, -1, -1]
after change column:	[-1, -1, 0, 0, -1, 1, -1, -1, -1, -1]


============== iter  11 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
confusion matrix
[[13  1  0  0  0  0  3  0  1  0]
 [ 0  0  0  4  0  0  1 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  2  0  0 19]
 [ 0  0  0  1  0  0  3  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  0  2 12  0  0]
 [ 2  0  0  0  0  0  1  0  9  2]
 [ 0  0  0  3  0  0  1  0  0  9]]
row HD
[[0.  0.6 0.8 0.6 0.5 0.7 0.4 0.8 0.4 0.8]
 [0.  0.  1.  0.6 0.4 0.7 0.4 0.6 0.6 0.6]
 [0.  0.  0.  0.7 0.7 0.8 0.8 0.9 0.5 0.8]
 [0.  0.  0.  0.  0.6 0.7 0.7 0.7 0.8 0.7]
 [0.  0.  0.  0.  0.  0.8 0.4 0.7 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.8 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.8 0.7 0.7 0.5 0.8 0.6 0.6 0.7]
 [0.  0.  0.8 0.6 0.2 0.6 0.6 0.8 0.6 0.3]
 [0.  0.  0.  0.8 0.8 0.9 0.7 0.8 0.7 0.8]
 [0.  0.  0.  0.  0.6 0.6 0.8 0.6 0.4 0.4]
 [0.  0.  0.  0.  0.  0.6 0.5 0.8 0.7 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.8 0.7 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.9 1.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[-1. -1.  1.  0. -1.  1. -1.  0. -1.  1.]
select_j_column
[-1.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  12 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
confusion matrix
[[13  1  0  0  0  0  3  0  1  0]
 [ 0  0  0  4  0  0  1 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  2  0  0 19]
 [ 0  0  0  1  0  0  3  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  0  2 12  0  0]
 [ 2  0  0  0  0  0  1  0  9  2]
 [ 0  0  0  3  0  0  1  0  0  9]]
row HD
[[0.  0.7 0.9 0.7 0.6 0.8 0.5 0.9 0.4 0.9]
 [0.  0.  1.  0.6 0.4 0.8 0.4 0.6 0.7 0.6]
 [0.  0.  0.  0.7 0.7 0.9 0.8 0.9 0.6 0.8]
 [0.  0.  0.  0.  0.6 0.8 0.7 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.  0.9 0.4 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.9 0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.73 0.73 0.64 0.64 0.45 0.73 0.55 0.55 0.64 0.55]
 [0.   0.   0.73 0.55 0.18 0.55 0.55 0.73 0.55 0.27 0.73]
 [0.   0.   0.   0.73 0.73 0.82 0.64 0.73 0.64 0.73 0.64]
 [0.   0.   0.   0.   0.55 0.55 0.73 0.55 0.36 0.36 0.73]
 [0.   0.   0.   0.   0.   0.55 0.45 0.73 0.64 0.36 0.73]
 [0.   0.   0.   0.   0.   0.   0.36 0.73 0.64 0.55 0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.82 0.91 0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.45 0.55]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  0. -1. -1.  0. -1. -1.  0. -1.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]


============== iter  13 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
confusion matrix
[[13  0  0  0  0  0  2  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  5  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.7 1.  0.8 0.7 0.9 0.6 1.  0.5 1. ]
 [0.  0.  1.1 0.7 0.5 0.9 0.5 0.7 0.8 0.7]
 [0.  0.  0.  0.7 0.7 0.9 0.9 0.9 0.6 0.8]
 [0.  0.  0.  0.  0.6 0.8 0.8 0.7 0.9 0.7]
 [0.  0.  0.  0.  0.  0.9 0.5 0.7 0.7 0.7]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67 0.58 0.58 0.42 0.67 0.5  0.5  0.58 0.5  0.75]
 [0.   0.   0.67 0.5  0.17 0.5  0.5  0.67 0.5  0.25 0.67 0.5 ]
 [0.   0.   0.   0.67 0.67 0.75 0.58 0.67 0.58 0.67 0.58 0.5 ]
 [0.   0.   0.   0.   0.5  0.5  0.67 0.5  0.33 0.33 0.67 0.67]
 [0.   0.   0.   0.   0.   0.5  0.42 0.67 0.58 0.33 0.67 0.42]
 [0.   0.   0.   0.   0.   0.   0.33 0.67 0.58 0.5  0.42 0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.75 0.83 0.58 0.58 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.42 0.5  0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.67 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.58]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[-1.  1.  0. -1.  0.  0.  0.  0.  0.  0.]
select_j_column
[ 0.  1. -1. -1. -1.  1.  1.  0.  1.  0.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  14 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
confusion matrix
[[13  1  0  0  0  0  1  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  2 17  2  0  0  3  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  2  0  1  0  0  0 14  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.7 1.  0.9 0.7 1.  0.7 1.1 0.6 1.1]
 [0.  0.  1.1 0.8 0.5 1.  0.6 0.8 0.9 0.8]
 [0.  0.  0.  0.8 0.7 1.  1.  1.  0.7 0.9]
 [0.  0.  0.  0.  0.7 0.8 0.8 0.8 0.9 0.8]
 [0.  0.  0.  0.  0.  1.  0.6 0.8 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  1.  0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.62 0.54 0.54 0.38 0.62 0.46 0.46 0.54 0.46 0.69 0.69]
 [0.   0.   0.62 0.46 0.15 0.46 0.46 0.62 0.46 0.23 0.62 0.46 0.46]
 [0.   0.   0.   0.62 0.62 0.69 0.54 0.62 0.54 0.62 0.54 0.46 0.23]
 [0.   0.   0.   0.   0.46 0.46 0.62 0.46 0.31 0.31 0.62 0.62 0.54]
 [0.   0.   0.   0.   0.   0.46 0.38 0.62 0.54 0.31 0.62 0.38 0.62]
 [0.   0.   0.   0.   0.   0.   0.31 0.62 0.54 0.46 0.38 0.54 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.69 0.77 0.54 0.54 0.31 0.77]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.46 0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.62 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.46 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.54 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 0.  0.  0. -1.  0.  0.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  0.  1. -1.  1. -1. -1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [ 0]]


============== iter  15 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
confusion matrix
[[13  0  0  0  0  0  1  4  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  3  2  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  0  0 16  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.8 1.1 1.  0.8 1.  0.8 1.1 0.7 1.2]
 [0.  0.  1.2 0.9 0.5 1.1 0.7 0.9 0.9 0.9]
 [0.  0.  0.  0.8 0.8 1.1 1.  1.1 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.9 0.8 0.9 1.  0.8]
 [0.  0.  0.  0.  0.  1.1 0.7 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  1.1 0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.5  0.5  0.36 0.57 0.43 0.43 0.5  0.43 0.64 0.64 0.64]
 [0.   0.   0.57 0.43 0.14 0.43 0.43 0.57 0.43 0.21 0.57 0.43 0.43 0.36]
 [0.   0.   0.   0.57 0.57 0.64 0.5  0.57 0.5  0.57 0.5  0.43 0.21 0.5 ]
 [0.   0.   0.   0.   0.43 0.43 0.57 0.43 0.29 0.29 0.57 0.57 0.5  0.36]
 [0.   0.   0.   0.   0.   0.43 0.36 0.57 0.5  0.29 0.57 0.36 0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.29 0.57 0.5  0.43 0.36 0.5  0.64 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.71 0.5  0.5  0.29 0.71 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.43 0.5  0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.57 0.57 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 0.  0.  1.  0.  0.  0. -1. -1.  1.  1.]
select_j_column
[ 1.  1.  0.  0.  0.  0.  0.  0.  0. -1.]
most_cplx_inx
5
new_column
None


============== iter  16 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
confusion matrix
[[13  0  0  0  0  0  1  4  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  3  2  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  0  0 16  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.8 1.1 1.  0.8 1.  0.8 1.1 0.7 1.2]
 [0.  0.  1.2 0.9 0.5 1.1 0.7 0.9 0.9 0.9]
 [0.  0.  0.  0.8 0.8 1.1 1.  1.1 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.9 0.8 0.9 1.  0.8]
 [0.  0.  0.  0.  0.  1.1 0.7 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  1.1 0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.5  0.5  0.36 0.57 0.43 0.43 0.5  0.43 0.64 0.64 0.64]
 [0.   0.   0.57 0.43 0.14 0.43 0.43 0.57 0.43 0.21 0.57 0.43 0.43 0.36]
 [0.   0.   0.   0.57 0.57 0.64 0.5  0.57 0.5  0.57 0.5  0.43 0.21 0.5 ]
 [0.   0.   0.   0.   0.43 0.43 0.57 0.43 0.29 0.29 0.57 0.57 0.5  0.36]
 [0.   0.   0.   0.   0.   0.43 0.36 0.57 0.5  0.29 0.57 0.36 0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.29 0.57 0.5  0.43 0.36 0.5  0.64 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.71 0.5  0.5  0.29 0.71 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.43 0.5  0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.57 0.57 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[-1. -1.  0. -1.  0.  1. -1.  1. -1.  1.]
select_j_column
[ 0. -1.  0.  0.  0. -1.  0. -1.  0.  1.]
most_cplx_inx
4
new_column
None


============== iter  17 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
confusion matrix
[[13  0  0  0  0  0  1  4  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  3  2  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  0  0 16  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.8 1.1 1.  0.8 1.  0.8 1.1 0.7 1.2]
 [0.  0.  1.2 0.9 0.5 1.1 0.7 0.9 0.9 0.9]
 [0.  0.  0.  0.8 0.8 1.1 1.  1.1 0.8 0.9]
 [0.  0.  0.  0.  0.8 0.9 0.8 0.9 1.  0.8]
 [0.  0.  0.  0.  0.  1.1 0.7 0.9 0.8 0.9]
 [0.  0.  0.  0.  0.  0.  1.1 0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.5  0.5  0.36 0.57 0.43 0.43 0.5  0.43 0.64 0.64 0.64]
 [0.   0.   0.57 0.43 0.14 0.43 0.43 0.57 0.43 0.21 0.57 0.43 0.43 0.36]
 [0.   0.   0.   0.57 0.57 0.64 0.5  0.57 0.5  0.57 0.5  0.43 0.21 0.5 ]
 [0.   0.   0.   0.   0.43 0.43 0.57 0.43 0.29 0.29 0.57 0.57 0.5  0.36]
 [0.   0.   0.   0.   0.   0.43 0.36 0.57 0.5  0.29 0.57 0.36 0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.29 0.57 0.5  0.43 0.36 0.5  0.64 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.64 0.71 0.5  0.5  0.29 0.71 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.36 0.43 0.5  0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.57 0.57 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.5  0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 0.  1.  0. -1.  1. -1.  0. -1.  0. -1.]
select_j_column
[ 1.  0.  1.  0.  1.  1. -1. -1. -1. -1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:6, small_class sample:54,large_class sample len:344
extra_class: 3,extra_sample len: 164
cluster len:1
cluster contain small sample len:[0.25]
before change column:	[0, 0, 0, -1, 1, -1, -1, -1, -1, -1]
after change column:	[0, 0, 0, -1, 1, -1, -1, -1, -1, -1]


============== iter  18 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
confusion matrix
[[13  0  0  0  0  0  1  4  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  3  2  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  0  0 16  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.8 1.1 1.1 0.9 1.1 0.9 1.2 0.8 1.3]
 [0.  0.  1.2 1.  0.6 1.2 0.8 1.  1.  1. ]
 [0.  0.  0.  0.9 0.9 1.2 1.1 1.2 0.9 1. ]
 [0.  0.  0.  0.  0.9 0.9 0.8 0.9 1.  0.8]
 [0.  0.  0.  0.  0.  1.2 0.8 1.  0.9 1. ]
 [0.  0.  0.  0.  0.  0.  1.1 0.9 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.53 0.53 0.47 0.47 0.33 0.53 0.4  0.4  0.47 0.4  0.6  0.6  0.6
  0.4 ]
 [0.   0.   0.53 0.4  0.13 0.4  0.4  0.53 0.4  0.2  0.53 0.4  0.4  0.33
  0.4 ]
 [0.   0.   0.   0.53 0.53 0.6  0.47 0.53 0.47 0.53 0.47 0.4  0.2  0.47
  0.53]
 [0.   0.   0.   0.   0.4  0.4  0.53 0.4  0.27 0.27 0.53 0.53 0.47 0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.4  0.33 0.53 0.47 0.27 0.53 0.33 0.53 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.27 0.53 0.47 0.4  0.33 0.47 0.6  0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.6  0.67 0.47 0.47 0.27 0.67 0.53
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.33 0.4  0.47 0.47 0.33
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.53 0.53 0.33 0.33
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4  0.4  0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.47 0.33
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[-1.  0.  1.  0. -1. -1. -1.  1. -1.  0.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [ 0]]


============== iter  19 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
confusion matrix
[[13  0  0  0  0  0  2  3  0  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  5  0  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  2  3  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  0  0  9  1  0  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.8 1.1 1.1 1.  1.2 0.9 1.3 0.9 1.3]
 [0.  0.  1.2 1.  0.7 1.3 0.8 1.1 1.1 1. ]
 [0.  0.  0.  0.9 1.  1.3 1.1 1.3 1.  1. ]
 [0.  0.  0.  0.  1.  1.  0.8 1.  1.1 0.8]
 [0.  0.  0.  0.  0.  1.3 0.9 1.  0.9 1.1]
 [0.  0.  0.  0.  0.  0.  1.2 1.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.44 0.44 0.31 0.5  0.38 0.38 0.44 0.38 0.56 0.56 0.56
  0.38 0.38]
 [0.   0.   0.5  0.38 0.12 0.38 0.38 0.5  0.38 0.19 0.5  0.38 0.38 0.31
  0.38 0.38]
 [0.   0.   0.   0.5  0.5  0.56 0.44 0.5  0.44 0.5  0.44 0.38 0.19 0.44
  0.5  0.38]
 [0.   0.   0.   0.   0.38 0.38 0.5  0.38 0.25 0.25 0.5  0.5  0.44 0.31
  0.38 0.44]
 [0.   0.   0.   0.   0.   0.38 0.31 0.5  0.44 0.25 0.5  0.31 0.5  0.38
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.25 0.5  0.44 0.38 0.31 0.44 0.56 0.38
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.56 0.62 0.44 0.44 0.25 0.62 0.5
  0.19 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.31 0.38 0.44 0.44 0.31
  0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.5  0.5  0.31 0.31
  0.5  0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38 0.38 0.25
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.44 0.31
  0.44 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38
  0.31 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.62 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.5  0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: None, 7: None, 8: True, 9: None}
select_i_column
[ 0.  1. -1. -1. -1.  1.  1.  0.  1.  0.]
select_j_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  20 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
confusion matrix
[[13  0  0  0  0  0  1  3  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  2  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  0  3  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  0  0  0  1  9  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  0.9 1.2 1.1 1.  1.3 1.  1.3 1.  1.3]
 [0.  0.  1.3 1.1 0.8 1.3 0.9 1.2 1.1 1.1]
 [0.  0.  0.  1.  1.1 1.4 1.1 1.4 1.1 1.1]
 [0.  0.  0.  0.  1.  1.1 0.9 1.  1.2 0.8]
 [0.  0.  0.  0.  0.  1.4 1.  1.  1.  1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.1 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.47 0.41 0.41 0.29 0.47 0.35 0.35 0.41 0.35 0.53 0.53 0.53
  0.35 0.35 0.35]
 [0.   0.   0.47 0.35 0.12 0.35 0.35 0.47 0.35 0.18 0.47 0.35 0.35 0.29
  0.35 0.35 0.53]
 [0.   0.   0.   0.47 0.47 0.53 0.41 0.47 0.41 0.47 0.41 0.35 0.18 0.41
  0.47 0.35 0.35]
 [0.   0.   0.   0.   0.35 0.35 0.47 0.35 0.24 0.24 0.47 0.47 0.41 0.29
  0.35 0.41 0.41]
 [0.   0.   0.   0.   0.   0.35 0.29 0.47 0.41 0.24 0.47 0.29 0.47 0.35
  0.29 0.41 0.53]
 [0.   0.   0.   0.   0.   0.   0.24 0.47 0.41 0.35 0.29 0.41 0.53 0.35
  0.35 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.53 0.59 0.41 0.41 0.24 0.59 0.47
  0.18 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.35 0.41 0.41 0.29
  0.35 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.47 0.47 0.29 0.29
  0.47 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35 0.35 0.24
  0.29 0.24 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.41 0.41 0.29
  0.41 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35
  0.29 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.59 0.41 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.47 0.18 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  0. -1. -1.  0. -1. -1.  0. -1.]
select_j_column
[ 1. -1.  0.  1. -1.  1. -1. -1.  0. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]]
small_class len :1,large_class len:6, small_class sample:49,large_class sample len:340
extra_class: 3,extra_sample len: 173
cluster len:1
cluster contain small sample len:[0.22]
before change column:	[-1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
after change column:	[-1, 1, -1, -1, 1, 1, 1, 1, -1, 1]
before change, the sample len:	Counter({1.0: 340, -1.0: 49})
after change, the sample len:	Counter({1.0: 340, -1.0: 222})


============== iter  21 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
confusion matrix
[[13  0  0  0  0  0  1  3  1  0]
 [ 0  0  0  4  0  0  0 18  0  0]
 [ 1  0 17  2  0  0  2  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  0  0  2  0 19]
 [ 0  0  0  1  0  0  0  3  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  0  2 14  0  0]
 [ 2  0  0  0  0  0  0  1  9  2]
 [ 0  0  0  3  0  0  0  1  0  9]]
row HD
[[0.  1.  1.2 1.1 1.1 1.4 1.1 1.4 1.  1.4]
 [0.  0.  1.4 1.2 0.8 1.3 0.9 1.2 1.2 1.1]
 [0.  0.  0.  1.  1.2 1.5 1.2 1.5 1.1 1.2]
 [0.  0.  0.  0.  1.1 1.2 1.  1.1 1.2 0.9]
 [0.  0.  0.  0.  0.  1.4 1.  1.  1.1 1.1]
 [0.  0.  0.  0.  0.  0.  1.3 1.1 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.9 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.44 0.39 0.39 0.28 0.44 0.33 0.33 0.39 0.33 0.5  0.5  0.5
  0.33 0.33 0.33 0.5 ]
 [0.   0.   0.44 0.33 0.11 0.33 0.33 0.44 0.33 0.17 0.44 0.33 0.33 0.28
  0.33 0.33 0.5  0.5 ]
 [0.   0.   0.   0.44 0.44 0.5  0.39 0.44 0.39 0.44 0.39 0.33 0.17 0.39
  0.44 0.33 0.33 0.28]
 [0.   0.   0.   0.   0.33 0.33 0.44 0.33 0.22 0.22 0.44 0.44 0.39 0.28
  0.33 0.39 0.39 0.22]
 [0.   0.   0.   0.   0.   0.33 0.28 0.44 0.39 0.22 0.44 0.28 0.44 0.33
  0.28 0.39 0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.   0.22 0.44 0.39 0.33 0.28 0.39 0.5  0.33
  0.33 0.28 0.28 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.56 0.39 0.39 0.22 0.56 0.44
  0.17 0.33 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.28 0.33 0.39 0.39 0.28
  0.33 0.28 0.28 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.44 0.44 0.28 0.28
  0.44 0.33 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33 0.33 0.22
  0.28 0.22 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.39 0.39 0.28
  0.39 0.28 0.28 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33
  0.28 0.33 0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.56 0.39 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.44 0.17 0.33 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.28 0.39 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 1. -1.  0.  1. -1.  1. -1. -1.  0. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.  1.  1.  1.  0.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  22 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
confusion matrix
[[13  0  0  0  0  3  1  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  0  0  2  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  2  2 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.  1.3 1.1 1.1 1.4 1.2 1.5 1.1 1.5]
 [0.  0.  1.5 1.2 0.8 1.3 1.  1.3 1.3 1.2]
 [0.  0.  0.  1.1 1.3 1.6 1.3 1.6 1.1 1.2]
 [0.  0.  0.  0.  1.1 1.2 1.1 1.2 1.3 1. ]
 [0.  0.  0.  0.  0.  1.4 1.1 1.1 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  1.4 1.2 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.42 0.37 0.37 0.26 0.42 0.32 0.32 0.37 0.32 0.47 0.47 0.47
  0.32 0.32 0.32 0.47 0.42]
 [0.   0.   0.42 0.32 0.11 0.32 0.32 0.42 0.32 0.16 0.42 0.32 0.32 0.26
  0.32 0.32 0.47 0.47 0.16]
 [0.   0.   0.   0.42 0.42 0.47 0.37 0.42 0.37 0.42 0.37 0.32 0.16 0.37
  0.42 0.32 0.32 0.26 0.37]
 [0.   0.   0.   0.   0.32 0.32 0.42 0.32 0.21 0.21 0.42 0.42 0.37 0.26
  0.32 0.37 0.37 0.21 0.37]
 [0.   0.   0.   0.   0.   0.32 0.26 0.42 0.37 0.21 0.42 0.26 0.42 0.32
  0.26 0.37 0.47 0.47 0.26]
 [0.   0.   0.   0.   0.   0.   0.21 0.42 0.37 0.32 0.26 0.37 0.47 0.32
  0.32 0.26 0.26 0.47 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.37 0.37 0.21 0.53 0.42
  0.16 0.32 0.42 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.26 0.32 0.37 0.37 0.26
  0.32 0.26 0.26 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.42 0.42 0.26 0.26
  0.42 0.32 0.26 0.32 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32 0.32 0.21
  0.26 0.21 0.37 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.37 0.26
  0.37 0.26 0.26 0.53 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32
  0.26 0.32 0.42 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.53 0.37 0.32 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.42 0.16 0.32 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.37 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.42 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  0.  1.  1. -1.  0.  0. -1.  0.]
select_j_column
[ 1.  0. -1.  0. -1. -1.  0.  0.  1.  0.]
most_cplx_inx
1
new_column
None


============== iter  23 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
confusion matrix
[[13  0  0  0  0  3  1  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  0  0  2  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  2  2 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.  1.3 1.1 1.1 1.4 1.2 1.5 1.1 1.5]
 [0.  0.  1.5 1.2 0.8 1.3 1.  1.3 1.3 1.2]
 [0.  0.  0.  1.1 1.3 1.6 1.3 1.6 1.1 1.2]
 [0.  0.  0.  0.  1.1 1.2 1.1 1.2 1.3 1. ]
 [0.  0.  0.  0.  0.  1.4 1.1 1.1 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  1.4 1.2 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.1 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.42 0.37 0.37 0.26 0.42 0.32 0.32 0.37 0.32 0.47 0.47 0.47
  0.32 0.32 0.32 0.47 0.42]
 [0.   0.   0.42 0.32 0.11 0.32 0.32 0.42 0.32 0.16 0.42 0.32 0.32 0.26
  0.32 0.32 0.47 0.47 0.16]
 [0.   0.   0.   0.42 0.42 0.47 0.37 0.42 0.37 0.42 0.37 0.32 0.16 0.37
  0.42 0.32 0.32 0.26 0.37]
 [0.   0.   0.   0.   0.32 0.32 0.42 0.32 0.21 0.21 0.42 0.42 0.37 0.26
  0.32 0.37 0.37 0.21 0.37]
 [0.   0.   0.   0.   0.   0.32 0.26 0.42 0.37 0.21 0.42 0.26 0.42 0.32
  0.26 0.37 0.47 0.47 0.26]
 [0.   0.   0.   0.   0.   0.   0.21 0.42 0.37 0.32 0.26 0.37 0.47 0.32
  0.32 0.26 0.26 0.47 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.47 0.53 0.37 0.37 0.21 0.53 0.42
  0.16 0.32 0.42 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.26 0.32 0.37 0.37 0.26
  0.32 0.26 0.26 0.37 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.42 0.42 0.26 0.26
  0.42 0.32 0.26 0.32 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32 0.32 0.21
  0.26 0.21 0.37 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.37 0.37 0.26
  0.37 0.26 0.26 0.53 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32
  0.26 0.32 0.42 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.53 0.37 0.32 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.42 0.16 0.32 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.37 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.42 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.42 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0. -1.  1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1.  0.  1.  0.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  24 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.  1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0. -1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.  0.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1. -1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.  1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
19 classifiers pre label
Counter({0.0: 98, -1.0: 85, 1.0: 5})
confusion matrix
[[13  0  0  0  0  3  1  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  0  0  2  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  2  2 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.1 1.4 1.1 1.1 1.5 1.3 1.5 1.2 1.5]
 [0.  0.  1.6 1.3 0.9 1.4 1.  1.4 1.4 1.3]
 [0.  0.  0.  1.2 1.4 1.6 1.4 1.7 1.1 1.3]
 [0.  0.  0.  0.  1.1 1.3 1.2 1.2 1.4 1. ]
 [0.  0.  0.  0.  0.  1.5 1.2 1.1 1.3 1.2]
 [0.  0.  0.  0.  0.  0.  1.5 1.3 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.4  0.35 0.35 0.25 0.4  0.3  0.3  0.35 0.3  0.45 0.45 0.45
  0.3  0.3  0.3  0.45 0.4  0.35]
 [0.   0.   0.4  0.3  0.1  0.3  0.3  0.4  0.3  0.15 0.4  0.3  0.3  0.25
  0.3  0.3  0.45 0.45 0.15 0.5 ]
 [0.   0.   0.   0.4  0.4  0.45 0.35 0.4  0.35 0.4  0.35 0.3  0.15 0.35
  0.4  0.3  0.3  0.25 0.35 0.2 ]
 [0.   0.   0.   0.   0.3  0.3  0.4  0.3  0.2  0.2  0.4  0.4  0.35 0.25
  0.3  0.35 0.35 0.2  0.35 0.4 ]
 [0.   0.   0.   0.   0.   0.3  0.25 0.4  0.35 0.2  0.4  0.25 0.4  0.3
  0.25 0.35 0.45 0.45 0.25 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.2  0.4  0.35 0.3  0.25 0.35 0.45 0.3
  0.3  0.25 0.25 0.45 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.45 0.5  0.35 0.35 0.2  0.5  0.4
  0.15 0.3  0.4  0.35 0.25 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.25 0.3  0.35 0.35 0.25
  0.3  0.25 0.25 0.35 0.4  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.4  0.4  0.25 0.25
  0.4  0.3  0.25 0.3  0.4  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3  0.3  0.2
  0.25 0.2  0.35 0.35 0.3  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.35 0.25
  0.35 0.25 0.25 0.5  0.35 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3
  0.25 0.3  0.4  0.3  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.5  0.35 0.3  0.3  0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.4  0.15 0.3  0.35 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.35 0.35 0.3  0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.3  0.4  0.3  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.4  0.45 0.1 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  1. -1. -1. -1.  1.  1.  0.  1.  0.]
select_j_column
[-1. -1. -1.  1. -1.  1.  1.  0.  1.  0.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [ 0]]


============== iter  25 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.  0. -1.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.  1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0. -1. -1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.  0. -1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.  0. -1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1. -1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.  1.  1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.  0.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0. -1.  1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.  0.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
19 classifiers pre label
Counter({0.0: 98, -1.0: 85, 1.0: 5})
20 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.1 1.4 1.1 1.1 1.6 1.4 1.6 1.3 1.6]
 [0.  0.  1.6 1.3 0.9 1.5 1.1 1.5 1.5 1.4]
 [0.  0.  0.  1.2 1.4 1.7 1.5 1.8 1.2 1.4]
 [0.  0.  0.  0.  1.1 1.4 1.3 1.3 1.5 1.1]
 [0.  0.  0.  0.  0.  1.6 1.3 1.2 1.4 1.3]
 [0.  0.  0.  0.  0.  0.  1.5 1.4 1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.7 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.33 0.33 0.24 0.38 0.29 0.29 0.33 0.29 0.43 0.43 0.43
  0.29 0.29 0.29 0.43 0.38 0.33 0.43]
 [0.   0.   0.38 0.29 0.1  0.29 0.29 0.38 0.29 0.14 0.38 0.29 0.29 0.24
  0.29 0.29 0.43 0.43 0.14 0.48 0.33]
 [0.   0.   0.   0.38 0.38 0.43 0.33 0.38 0.33 0.38 0.33 0.29 0.14 0.33
  0.38 0.29 0.29 0.24 0.33 0.19 0.1 ]
 [0.   0.   0.   0.   0.29 0.29 0.38 0.29 0.19 0.19 0.38 0.38 0.33 0.24
  0.29 0.33 0.33 0.19 0.33 0.38 0.29]
 [0.   0.   0.   0.   0.   0.29 0.24 0.38 0.33 0.19 0.38 0.24 0.38 0.29
  0.24 0.33 0.43 0.43 0.24 0.48 0.33]
 [0.   0.   0.   0.   0.   0.   0.19 0.38 0.33 0.29 0.24 0.33 0.43 0.29
  0.29 0.24 0.24 0.43 0.33 0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.48 0.33 0.33 0.19 0.48 0.38
  0.14 0.29 0.38 0.33 0.24 0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.24 0.29 0.33 0.33 0.24
  0.29 0.24 0.24 0.33 0.38 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.38 0.38 0.24 0.24
  0.38 0.29 0.24 0.29 0.38 0.33 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29 0.29 0.19
  0.24 0.19 0.33 0.33 0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.33 0.24
  0.33 0.24 0.24 0.48 0.33 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29
  0.24 0.29 0.38 0.29 0.33 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.48 0.33 0.29 0.29 0.33 0.29 0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.38 0.14 0.29 0.33 0.29 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.33 0.33 0.29 0.33 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29 0.38 0.29 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.38 0.43 0.1  0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.33 0.29 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.38 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  1.  0. -1.  0.  1.  1.  0.  0. -1.]
select_j_column
[ 1.  1.  0.  1.  1.  1. -1. -1.  0.  0.]
most_cplx_inx
6
new_column
[[ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  26 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.  0. -1.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.  1. -1.  1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0. -1. -1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.  0. -1. -1.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.  0. -1.  0.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1. -1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.  1.  1. -1.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.  0.  0. -1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0. -1.  1.  0.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.  0.  0. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
19 classifiers pre label
Counter({0.0: 98, -1.0: 85, 1.0: 5})
20 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
21 classifiers pre label
Counter({-1.0: 93, 0.0: 82, 1.0: 13})
confusion matrix
[[13  0  0  0  0  3  0  1  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  0  0  0  2  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  2  0 14  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.2 1.4 1.2 1.1 1.7 1.5 1.7 1.3 1.7]
 [0.  0.  1.7 1.4 1.  1.5 1.2 1.6 1.6 1.5]
 [0.  0.  0.  1.3 1.4 1.8 1.6 1.9 1.2 1.5]
 [0.  0.  0.  0.  1.2 1.5 1.3 1.3 1.6 1.1]
 [0.  0.  0.  0.  0.  1.7 1.4 1.3 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  1.6 1.5 1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.8 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.36 0.32 0.32 0.23 0.36 0.27 0.27 0.32 0.27 0.41 0.41 0.41
  0.27 0.27 0.27 0.41 0.36 0.32 0.41 0.27]
 [0.   0.   0.36 0.27 0.09 0.27 0.27 0.36 0.27 0.14 0.36 0.27 0.27 0.23
  0.27 0.27 0.41 0.41 0.14 0.45 0.32 0.18]
 [0.   0.   0.   0.36 0.36 0.41 0.32 0.36 0.32 0.36 0.32 0.27 0.14 0.32
  0.36 0.27 0.27 0.23 0.32 0.18 0.09 0.27]
 [0.   0.   0.   0.   0.27 0.27 0.36 0.27 0.18 0.18 0.36 0.36 0.32 0.23
  0.27 0.32 0.32 0.18 0.32 0.36 0.27 0.23]
 [0.   0.   0.   0.   0.   0.27 0.23 0.36 0.32 0.18 0.36 0.23 0.36 0.27
  0.23 0.32 0.41 0.41 0.23 0.45 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.36 0.32 0.27 0.23 0.32 0.41 0.27
  0.27 0.23 0.23 0.41 0.32 0.27 0.41 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.41 0.45 0.32 0.32 0.18 0.45 0.36
  0.14 0.27 0.36 0.32 0.23 0.32 0.41 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.23 0.27 0.32 0.32 0.23
  0.27 0.23 0.23 0.32 0.36 0.27 0.32 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.36 0.36 0.23 0.23
  0.36 0.27 0.23 0.27 0.36 0.32 0.23 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.27 0.18
  0.23 0.18 0.32 0.32 0.27 0.36 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.32 0.23
  0.32 0.23 0.23 0.45 0.32 0.23 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27
  0.23 0.27 0.36 0.27 0.32 0.27 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.45 0.32 0.27 0.27 0.32 0.27 0.05 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.36 0.14 0.27 0.32 0.27 0.32 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.23 0.32 0.32 0.27 0.32 0.41 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.27 0.36 0.27 0.27 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.36 0.41 0.09 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32 0.27 0.23 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.36 0.36 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.27 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0. -1. -1.  0.  0. -1.  1.  0. -1.  0.]
select_j_column
[ 1.  1. -1. -1. -1. -1.  0. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [-1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]


============== iter  27 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.  0. -1.  0.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.  1. -1.  1. -1.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0. -1. -1.  0.  1.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.  0. -1. -1.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.  0. -1.  0.  0.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1. -1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.  1.  1. -1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.  0.  0. -1.  0.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0. -1.  1.  0.  1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.  0.  0. -1.  0.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
19 classifiers pre label
Counter({0.0: 98, -1.0: 85, 1.0: 5})
20 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
21 classifiers pre label
Counter({-1.0: 93, 0.0: 82, 1.0: 13})
22 classifiers pre label
Counter({0.0: 129, 1.0: 54, -1.0: 5})
confusion matrix
[[13  0  0  0  0  3  0  1  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  0  0  0  2  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  0  0  1  0  2  0 14  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.3 1.5 1.2 1.1 1.8 1.5 1.7 1.4 1.7]
 [0.  0.  1.8 1.5 1.1 1.6 1.3 1.7 1.7 1.6]
 [0.  0.  0.  1.4 1.5 1.8 1.7 2.  1.2 1.6]
 [0.  0.  0.  0.  1.2 1.6 1.3 1.3 1.7 1.1]
 [0.  0.  0.  0.  0.  1.8 1.4 1.3 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  1.7 1.6 1.3 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.3 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.9 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.35 0.3  0.3  0.22 0.35 0.26 0.26 0.3  0.26 0.39 0.39 0.39
  0.26 0.26 0.26 0.39 0.35 0.3  0.39 0.26 0.22]
 [0.   0.   0.35 0.26 0.09 0.26 0.26 0.35 0.26 0.13 0.35 0.26 0.26 0.22
  0.26 0.26 0.39 0.39 0.13 0.43 0.3  0.17 0.35]
 [0.   0.   0.   0.35 0.35 0.39 0.3  0.35 0.3  0.35 0.3  0.26 0.13 0.3
  0.35 0.26 0.26 0.22 0.3  0.17 0.09 0.26 0.22]
 [0.   0.   0.   0.   0.26 0.26 0.35 0.26 0.17 0.17 0.35 0.35 0.3  0.22
  0.26 0.3  0.3  0.17 0.3  0.35 0.26 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.26 0.22 0.35 0.3  0.17 0.35 0.22 0.35 0.26
  0.22 0.3  0.39 0.39 0.22 0.43 0.3  0.17 0.39]
 [0.   0.   0.   0.   0.   0.   0.17 0.35 0.3  0.26 0.22 0.3  0.39 0.26
  0.26 0.22 0.22 0.39 0.3  0.26 0.39 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.39 0.43 0.3  0.3  0.17 0.43 0.35
  0.13 0.26 0.35 0.3  0.22 0.3  0.39 0.13 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.22 0.26 0.3  0.3  0.22
  0.26 0.22 0.22 0.3  0.35 0.26 0.3  0.39 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.35 0.35 0.22 0.22
  0.35 0.26 0.22 0.26 0.35 0.3  0.22 0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26 0.26 0.17
  0.22 0.17 0.3  0.3  0.26 0.35 0.26 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.3  0.22
  0.3  0.22 0.22 0.43 0.3  0.22 0.3  0.35 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26
  0.22 0.26 0.35 0.26 0.3  0.26 0.3  0.26 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.43 0.3  0.26 0.26 0.3  0.26 0.04 0.39 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.35 0.13 0.26 0.3  0.26 0.3  0.26 0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.3  0.3  0.26 0.3  0.39 0.17 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.26 0.35 0.26 0.26 0.3  0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.35 0.39 0.09 0.26 0.35 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.26 0.22 0.3  0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35 0.35 0.17 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.26 0.3  0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.35 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
select_i_column
[ 0.  0.  0. -1.  1. -1. -1. -1. -1. -1.]
select_j_column
[ 0.  1.  0.  0.  1. -1.  0. -1.  1.  1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  28 ================
current matrix is 
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.  0. -1.  0.  0.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.  1. -1.  1. -1.  0.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0. -1. -1.  0.  1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.  0. -1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.  0. -1.  0.  0.  1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.  1.  1. -1.  0.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.  0.  0. -1.  0.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0. -1.  1.  0.  1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.  0.  0. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
*======label=======*
true label
Counter({'2': 26, '4': 23, '1': 22, '5': 19, '6': 19, '0': 18, '7': 17, '3': 17, '8': 14, '9': 13})
0 classifiers pre label
Counter({0.0: 105, 1.0: 49, -1.0: 34})
1 classifiers pre label
Counter({-1.0: 129, 1.0: 41, 0.0: 18})
2 classifiers pre label
Counter({1.0: 95, 0.0: 52, -1.0: 41})
3 classifiers pre label
Counter({-1.0: 77, 0.0: 64, 1.0: 47})
4 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
5 classifiers pre label
Counter({0.0: 113, -1.0: 75})
6 classifiers pre label
Counter({-1.0: 121, 0.0: 67})
7 classifiers pre label
Counter({-1.0: 108, 1.0: 52, 0.0: 28})
8 classifiers pre label
Counter({1.0: 87, -1.0: 67, 0.0: 34})
9 classifiers pre label
Counter({-1.0: 170, 0.0: 18})
10 classifiers pre label
Counter({0.0: 157, 1.0: 18, -1.0: 13})
11 classifiers pre label
Counter({-1.0: 139, 0.0: 31, 1.0: 18})
12 classifiers pre label
Counter({1.0: 100, -1.0: 54, 0.0: 34})
13 classifiers pre label
Counter({1.0: 139, 0.0: 49})
14 classifiers pre label
Counter({-1.0: 124, 0.0: 64})
15 classifiers pre label
Counter({0.0: 95, 1.0: 59, -1.0: 34})
16 classifiers pre label
Counter({0.0: 98, -1.0: 67, 1.0: 23})
17 classifiers pre label
Counter({1.0: 98, -1.0: 90})
18 classifiers pre label
Counter({1.0: 139, -1.0: 31, 0.0: 18})
19 classifiers pre label
Counter({0.0: 98, -1.0: 85, 1.0: 5})
20 classifiers pre label
Counter({1.0: 77, -1.0: 77, 0.0: 34})
21 classifiers pre label
Counter({-1.0: 93, 0.0: 82, 1.0: 13})
22 classifiers pre label
Counter({0.0: 129, 1.0: 54, -1.0: 5})
23 classifiers pre label
Counter({0.0: 95, 1.0: 93})
confusion matrix
[[13  1  0  0  0  3  0  0  1  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  2 17  2  0  0  0  0  3  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  0  0  2 13]
 [ 2  0  0  0  0  0  0  0 16  1]
 [ 0  2  0  1  0  2  0 12  0  0]
 [ 2  0  0  0  0  1  0  0  9  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
row HD
[[0.  1.3 1.5 1.2 1.2 1.9 1.5 1.8 1.5 1.8]
 [0.  0.  1.8 1.5 1.2 1.7 1.3 1.8 1.8 1.7]
 [0.  0.  0.  1.4 1.6 1.9 1.7 2.1 1.3 1.7]
 [0.  0.  0.  0.  1.3 1.7 1.3 1.4 1.8 1.2]
 [0.  0.  0.  0.  0.  1.8 1.5 1.3 1.6 1.5]
 [0.  0.  0.  0.  0.  0.  1.8 1.6 1.4 1.8]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.4 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  2.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.29 0.29 0.21 0.33 0.25 0.25 0.29 0.25 0.38 0.38 0.38
  0.25 0.25 0.25 0.38 0.33 0.29 0.38 0.25 0.21 0.29]
 [0.   0.   0.33 0.25 0.08 0.25 0.25 0.33 0.25 0.12 0.33 0.25 0.25 0.21
  0.25 0.25 0.38 0.38 0.12 0.42 0.29 0.17 0.33 0.29]
 [0.   0.   0.   0.33 0.33 0.38 0.29 0.33 0.29 0.33 0.29 0.25 0.12 0.29
  0.33 0.25 0.25 0.21 0.29 0.17 0.08 0.25 0.21 0.33]
 [0.   0.   0.   0.   0.25 0.25 0.33 0.25 0.17 0.17 0.33 0.33 0.29 0.21
  0.25 0.29 0.29 0.17 0.29 0.33 0.25 0.21 0.29 0.25]
 [0.   0.   0.   0.   0.   0.25 0.21 0.33 0.29 0.17 0.33 0.21 0.33 0.25
  0.21 0.29 0.38 0.38 0.21 0.42 0.29 0.17 0.38 0.33]
 [0.   0.   0.   0.   0.   0.   0.17 0.33 0.29 0.25 0.21 0.29 0.38 0.25
  0.25 0.21 0.21 0.38 0.29 0.25 0.38 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.42 0.29 0.29 0.17 0.42 0.33
  0.12 0.25 0.33 0.29 0.21 0.29 0.38 0.12 0.33 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.21 0.25 0.29 0.29 0.21
  0.25 0.21 0.21 0.29 0.33 0.25 0.29 0.38 0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.33 0.33 0.21 0.21
  0.33 0.25 0.21 0.25 0.33 0.29 0.21 0.33 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.25 0.17
  0.21 0.17 0.29 0.29 0.25 0.33 0.25 0.21 0.29 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.29 0.21
  0.29 0.21 0.21 0.42 0.29 0.21 0.29 0.33 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25
  0.21 0.25 0.33 0.25 0.29 0.25 0.29 0.25 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.42 0.29 0.25 0.25 0.29 0.25 0.04 0.38 0.21 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33 0.12 0.25 0.29 0.25 0.29 0.25 0.33 0.21 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.29 0.29 0.25 0.29 0.38 0.17 0.38 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.25 0.33 0.25 0.25 0.29 0.25 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.33 0.38 0.08 0.25 0.33 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.25 0.21 0.29 0.38 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.33 0.17 0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.25 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.33 0.21 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True, 6: True, 7: None, 8: None, 9: None}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.07142857142857142
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})

**********      classifier acc  **************
[0.461, 0.716, 0.571, 0.547, 0.891, 0.606, 0.568, 0.868, 0.63, 0.869, 0.353, 0.74, 0.601, 0.451, 0.631, 0.384, 0.4, 0.75, 0.822, 0.38, 0.646, 0.495, 0.296, 0.593]
before cutting matrix
[[ 0.  1.  0. -1.  1.  0.  0. -1. -1. -1.  1.  1. -1.  1.  0.  0.  0. -1.
   1.  0. -1.  0.  0.  0.]
 [ 0. -1.  1. -1. -1. -1.  1.  0. -1. -1.  0.  1. -1. -1.  0.  0. -1.  1.
   1.  1. -1.  1. -1.  0.]
 [ 1.  0. -1.  0.  0.  0.  0.  1.  1.  0.  0. -1. -1.  0.  0.  0.  1. -1.
   0. -1. -1.  0.  1.  0.]
 [ 0.  1. -1. -1. -1.  0. -1.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0. -1.
   1.  0. -1. -1.  0.  0.]
 [ 0. -1. -1.  0. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1. -1.  0.  1.
   1.  0. -1.  0.  0.  1.]
 [ 0.  1.  1.  1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1. -1.  1. -1.  1.
   1. -1.  1.  1.  1.  1.]
 [-1. -1.  1. -1. -1.  0.  0. -1. -1. -1.  0.  0.  1.  0. -1.  0.  1.  1.
  -1.  1.  1. -1.  0.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  1.  0. -1.  0. -1.  0.  1. -1. -1.  0.  1.
  -1.  0.  0. -1.  0.  1.]
 [ 1.  0.  1. -1.  0.  0.  0. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.
   0. -1.  1.  0.  1. -1.]
 [ 1. -1.  0.  1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0. -1.  0.  0.  1.
   0.  0.  0. -1.  0. -1.]]
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({1.0: 169, -1.0: 110})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({1.0: 230, -1.0: 166})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({1.0: 230, -1.0: 166})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 267, 1.0: 184})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 267, 1.0: 184})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 266, 1.0: 175})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 227, -1.0: 218})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({1.0: 227, -1.0: 218})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({1.0: 182, -1.0: 173})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 344, 1.0: 54})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 344, 1.0: 54})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 181, 1.0: 67})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({-1.0: 186, 1.0: 101})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 186, 1.0: 101})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 185, 1.0: 102})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 185, 1.0: 102})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 273, 1.0: 172})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 172})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({-1.0: 216, 1.0: 125})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 216, 1.0: 125})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({1.0: 185, -1.0: 58})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({1.0: 187, -1.0: 112})
positive and negative ratio
Counter({1.0: 185, -1.0: 58})
after cutting matrix
[[ 1.  1.  0.  0. -1. -1. -1.  1.  1.  1.  0. -1.  1.  0.]
 [-1. -1. -1.  1.  0. -1. -1.  0.  1. -1.  0.  1.  1.  0.]
 [ 0.  0.  0.  0.  1.  1.  0.  0. -1.  0.  0. -1.  0.  0.]
 [ 1. -1.  0. -1.  0.  0.  0.  0. -1.  0.  0. -1.  1.  0.]
 [-1. -1.  0.  1. -1. -1. -1.  0. -1. -1. -1.  1.  1.  1.]
 [ 1.  0. -1. -1. -1.  1.  1. -1. -1.  1.  1.  1.  1.  1.]
 [-1. -1.  0.  0. -1. -1. -1.  0.  0.  0.  0.  1. -1.  0.]
 [-1. -1. -1. -1.  1.  0. -1.  0. -1.  1. -1.  1. -1.  1.]
 [ 0.  0.  0.  0. -1. -1. -1.  1. -1. -1. -1. -1.  0. -1.]
 [-1. -1.  1. -1.  0.  1. -1.  0. -1.  0.  0.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 273, 1.0: 171})
Counter({-1.0: 328, 1.0: 49})
Counter({-1.0: 191, 1.0: 51})
Counter({-1.0: 239, 1.0: 112})
Counter({-1.0: 275, 1.0: 123})
Counter({-1.0: 266, 1.0: 175})
Counter({-1.0: 383, 1.0: 67})
Counter({1.0: 110, -1.0: 67})
Counter({-1.0: 411, 1.0: 107})
Counter({1.0: 182, -1.0: 173})
Counter({-1.0: 181, 1.0: 67})
Counter({1.0: 340, -1.0: 222})
Counter({1.0: 283, -1.0: 110})
Counter({1.0: 187, -1.0: 112})
cutting matrix's confusion matrix
[[13  0  0  0  0  3  1  1  0  0]
 [ 0  0  0  4  0  1  0 17  0  0]
 [ 1  0 17  2  0  0  3  2  0  1]
 [ 0  0  1 10  0  0  0  5  0  1]
 [ 0  0  0  2  0  2  0  0  0 19]
 [ 0  0  0  1  0  3  2  0  0 13]
 [ 2  0  0  0  0  0 16  0  0  1]
 [ 0  0  0  1  0  2  0 14  0  0]
 [ 2  0  0  0  0  1  9  0  0  2]
 [ 0  0  0  3  0  1  0  0  0  9]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-10 15:31:17
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1. -1. -1.]
 [ 1.  1. -1. -1.  1.  1.]
 [-1. -1. -1. -1. -1. -1.]
 [-1. -1.  1.  1.  1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1. -1.  1.]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  2 ================
current matrix is 
[[-1.  1.]
 [-1. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
confusion matrix
[[30  4  0  0  0]
 [ 6  3  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.4]
 [0.  0.  0.4 0.  0.2]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:16,large_class sample len:150
cluster len:1
cluster contain small sample len:[0.1]
before change column:	[-1, -1, 1, -1, -1]
after change column:	[-1, -1, 1, -1, -1]


============== iter  3 ================
current matrix is 
[[-1.  1. -1.]
 [-1. -1. -1.]
 [ 1.  1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  4  0  0  0]
 [ 6  3  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.2 0.4 0.2 0.4]
 [0.  0.  0.6 0.  0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[-1.  1. -1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[30  4  0  0  0]
 [ 6  3  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.6 0.  0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 0.75]
 [0.   0.   0.25 0.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:25,large_class sample len:141
cluster len:1
cluster contain small sample len:[0.15]
before change column:	[1, 1, -1, 1, -1]
after change column:	[-1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 141, -1.0: 25})
after change, the sample len:	Counter({-1.0: 166})


============== iter  5 ================
current matrix is 
[[-1.  1. -1.  1.]
 [-1. -1. -1. -1.]
 [ 1.  1.  1. -1.]
 [-1. -1. -1. -1.]
 [ 1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
confusion matrix
[[30  4  0  0  0]
 [ 6  3  0  0  0]
 [ 2  5  0  0  0]
 [ 2  3  0  0  0]
 [ 0  1  0  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.6]
 [0.  0.  0.6 0.  0.2]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.25 0.75]
 [0.   0.   0.25 0.25]
 [0.   0.   0.   0.5 ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1. -1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  6 ================
current matrix is 
[[-1.  1. -1.  1.  0.]
 [-1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0.]
 [-1. -1. -1. -1.  0.]
 [ 1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
confusion matrix
[[29  5  0  0  0]
 [ 5  2  0  2  0]
 [ 1  4  0  2  0]
 [ 1  3  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.6 0.4 0.8]
 [0.  0.  0.8 0.2 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.2 0.6 0.6]
 [0.  0.  0.2 0.2 0.8]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:16,large_class sample len:150
cluster len:1
cluster contain small sample len:[0.1]
before change column:	[-1, -1, 1, -1, -1]
after change column:	[-1, -1, 1, -1, -1]


============== iter  7 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1.]
 [-1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0.  1.]
 [-1. -1. -1. -1.  0. -1.]
 [ 1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  5  0  0  0]
 [ 5  2  0  2  0]
 [ 1  4  0  2  0]
 [ 1  3  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.6 0.8 0.4 0.8]
 [0.  0.  1.  0.2 0.4]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.17 0.5  0.5  0.17]
 [0.   0.   0.17 0.17 0.67 0.17]
 [0.   0.   0.   0.33 0.67 0.  ]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  8 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  0.  1.  1.]
 [-1. -1. -1. -1.  0. -1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
confusion matrix
[[29  5  0  0  0]
 [ 6  1  0  2  0]
 [ 0  4  0  3  0]
 [ 1  3  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 1.  0.6 0.8]
 [0.  0.  1.  0.2 0.6]
 [0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.14 0.43 0.43 0.14 0.43]
 [0.   0.   0.14 0.14 0.57 0.14 0.43]
 [0.   0.   0.   0.29 0.57 0.   0.29]
 [0.   0.   0.   0.   0.57 0.29 0.57]
 [0.   0.   0.   0.   0.   0.57 0.71]
 [0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 0. -1.  0.  0.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  9 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.]
 [-1. -1. -1. -1.  0. -1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  1.2 0.6 0.8]
 [0.  0.  1.  0.4 0.8]
 [0.  0.  0.  1.  1.2]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.12 0.38 0.38 0.12 0.38 0.25]
 [0.   0.   0.12 0.12 0.5  0.12 0.38 0.25]
 [0.   0.   0.   0.25 0.5  0.   0.25 0.12]
 [0.   0.   0.   0.   0.5  0.25 0.5  0.38]
 [0.   0.   0.   0.   0.   0.5  0.62 0.62]
 [0.   0.   0.   0.   0.   0.   0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]]
small_class len :2,large_class len:3, small_class sample:25,large_class sample len:141
cluster len:1
cluster contain small sample len:[0.15]
before change column:	[-1, -1, 1, -1, 1]
after change column:	[-1, -1, 1, -1, 1]


============== iter  10 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 1  0  0  4  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  1.4 0.6 1. ]
 [0.  0.  1.2 0.4 1. ]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.11 0.33 0.33 0.11 0.33 0.22 0.  ]
 [0.   0.   0.11 0.11 0.44 0.11 0.33 0.22 0.22]
 [0.   0.   0.   0.22 0.44 0.   0.22 0.11 0.11]
 [0.   0.   0.   0.   0.44 0.22 0.44 0.33 0.33]
 [0.   0.   0.   0.   0.   0.44 0.56 0.56 0.33]
 [0.   0.   0.   0.   0.   0.   0.22 0.11 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  11 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
confusion matrix
[[30  0  0  4  0]
 [ 6  0  0  3  0]
 [ 2  0  0  5  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.4 0.8 1. ]
 [0.  0.  1.4 0.4 1.2]
 [0.  0.  0.  1.4 1.2]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.2 0.1 0.3 0.3 0.1 0.3 0.2 0.  0.4]
 [0.  0.  0.1 0.1 0.4 0.1 0.3 0.2 0.2 0.4]
 [0.  0.  0.  0.2 0.4 0.  0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.4 0.2 0.4 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.  0.4 0.5 0.5 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.3 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:23,large_class sample len:143
cluster len:1
cluster contain small sample len:[0.14]
before change column:	[-1, -1, -1, 1, -1]
after change column:	[-1, -1, -1, 1, -1]


============== iter  12 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  4  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  0  2  0]
 [ 2  2  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.4 1.  1. ]
 [0.  0.  1.4 0.6 1.2]
 [0.  0.  0.  1.6 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.18 0.09 0.27 0.27 0.09 0.27 0.18 0.   0.36 0.27]
 [0.   0.   0.09 0.09 0.36 0.09 0.27 0.18 0.18 0.36 0.27]
 [0.   0.   0.   0.18 0.36 0.   0.18 0.09 0.09 0.27 0.18]
 [0.   0.   0.   0.   0.36 0.18 0.36 0.27 0.27 0.27 0.18]
 [0.   0.   0.   0.   0.   0.36 0.45 0.45 0.27 0.45 0.36]
 [0.   0.   0.   0.   0.   0.   0.18 0.09 0.09 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.09 0.27 0.09 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:9,large_class sample len:157
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[-1, -1, -1, -1, 1]
after change column:	[-1, -1, -1, -1, 1]


============== iter  13 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  4  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  0  2  0]
 [ 2  2  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.4 1.  1.2]
 [0.  0.  1.4 0.6 1.4]
 [0.  0.  0.  1.6 1.4]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.17 0.08 0.25 0.25 0.08 0.25 0.17 0.   0.33 0.25 0.08]
 [0.   0.   0.08 0.08 0.33 0.08 0.25 0.17 0.17 0.33 0.25 0.25]
 [0.   0.   0.   0.17 0.33 0.   0.17 0.08 0.08 0.25 0.17 0.17]
 [0.   0.   0.   0.   0.33 0.17 0.33 0.25 0.25 0.25 0.17 0.17]
 [0.   0.   0.   0.   0.   0.33 0.42 0.42 0.25 0.42 0.33 0.25]
 [0.   0.   0.   0.   0.   0.   0.17 0.08 0.08 0.25 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.08 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:9,large_class sample len:157
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[-1, -1, -1, -1, 1]
after change column:	[-1, -1, -1, -1, 1]


============== iter  14 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  4  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  0  2  0]
 [ 2  2  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.4 1.  1.4]
 [0.  0.  1.4 0.6 1.6]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.15 0.08 0.23 0.23 0.08 0.23 0.15 0.   0.31 0.23 0.08 0.08]
 [0.   0.   0.08 0.08 0.31 0.08 0.23 0.15 0.15 0.31 0.23 0.23 0.23]
 [0.   0.   0.   0.15 0.31 0.   0.15 0.08 0.08 0.23 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.31 0.15 0.31 0.23 0.23 0.23 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.31 0.38 0.38 0.23 0.38 0.31 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.15 0.08 0.08 0.23 0.15 0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.08 0.15 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.08 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[-1. -1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:9,large_class sample len:157
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[-1, -1, -1, -1, 1]
after change column:	[-1, -1, -1, -1, 1]


============== iter  15 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  4  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  0  2  0]
 [ 2  2  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.2 1.4 1.  1.6]
 [0.  0.  1.4 0.6 1.8]
 [0.  0.  0.  1.6 1.8]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.14 0.07 0.21 0.21 0.07 0.21 0.14 0.   0.29 0.21 0.07 0.07 0.07]
 [0.   0.   0.07 0.07 0.29 0.07 0.21 0.14 0.14 0.29 0.21 0.21 0.21 0.21]
 [0.   0.   0.   0.14 0.29 0.   0.14 0.07 0.07 0.21 0.14 0.14 0.14 0.14]
 [0.   0.   0.   0.   0.29 0.14 0.29 0.21 0.21 0.21 0.14 0.14 0.14 0.14]
 [0.   0.   0.   0.   0.   0.29 0.36 0.36 0.21 0.36 0.29 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.14 0.07 0.07 0.21 0.14 0.14 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.07 0.14 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.21 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.07 0.07 0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  16 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
confusion matrix
[[29  5  0  0  0]
 [ 6  1  0  2  0]
 [ 1  4  0  2  0]
 [ 1  3  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.4 1.6 1.2 1.6]
 [0.  0.  1.4 0.6 2. ]
 [0.  0.  0.  1.6 2. ]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.13 0.07 0.2  0.2  0.07 0.2  0.13 0.   0.27 0.2  0.07 0.07 0.07
  0.2 ]
 [0.   0.   0.07 0.07 0.27 0.07 0.2  0.13 0.13 0.27 0.2  0.2  0.2  0.2
  0.2 ]
 [0.   0.   0.   0.13 0.27 0.   0.13 0.07 0.07 0.2  0.13 0.13 0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.27 0.13 0.27 0.2  0.2  0.2  0.13 0.13 0.13 0.13
  0.27]
 [0.   0.   0.   0.   0.   0.27 0.33 0.33 0.2  0.33 0.27 0.2  0.2  0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.13 0.07 0.07 0.2  0.13 0.13 0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.07 0.13 0.27 0.27 0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.2  0.2  0.2  0.2
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.07 0.07 0.07
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.2  0.2
  0.07]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  17 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
15 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
confusion matrix
[[30  4  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  0  2  0]
 [ 2  2  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.6 1.6 1.4 1.6]
 [0.  0.  1.6 0.6 2.2]
 [0.  0.  0.  1.8 2. ]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.06 0.19 0.19 0.06 0.19 0.12 0.   0.25 0.19 0.06 0.06 0.06
  0.19 0.25]
 [0.   0.   0.06 0.06 0.25 0.06 0.19 0.12 0.12 0.25 0.19 0.19 0.19 0.19
  0.19 0.25]
 [0.   0.   0.   0.12 0.25 0.   0.12 0.06 0.06 0.19 0.12 0.12 0.12 0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.25 0.12 0.25 0.19 0.19 0.19 0.12 0.12 0.12 0.12
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.25 0.31 0.31 0.19 0.31 0.25 0.19 0.19 0.19
  0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.12 0.06 0.06 0.19 0.12 0.12 0.12 0.12
  0.12 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.06 0.12 0.25 0.25 0.25
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.19 0.19 0.19 0.19
  0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.06 0.06 0.06
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.19 0.19
  0.06 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12
  0.12 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1. -1.  1.]
select_j_column
[-1. -1. -1. -1.  1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:9,large_class sample len:157
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[-1, -1, -1, -1, 1]
after change column:	[-1, -1, -1, -1, 1]


============== iter  18 ================
current matrix is 
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({-1.0: 56})
1 classifiers pre label
Counter({1.0: 40, -1.0: 16})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({1.0: 34, -1.0: 22})
4 classifiers pre label
Counter({0.0: 42, -1.0: 14})
5 classifiers pre label
Counter({-1.0: 56})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({-1.0: 56})
8 classifiers pre label
Counter({-1.0: 56})
9 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
10 classifiers pre label
Counter({-1.0: 56})
11 classifiers pre label
Counter({-1.0: 56})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({-1.0: 56})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
15 classifiers pre label
Counter({-1.0: 48, 1.0: 8})
16 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[30  4  0  0  0]
 [ 6  1  0  2  0]
 [ 2  3  0  2  0]
 [ 2  2  0  1  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.6 1.6 1.4 1.8]
 [0.  0.  1.6 0.6 2.4]
 [0.  0.  0.  1.8 2.2]
 [0.  0.  0.  0.  2.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.12 0.06 0.18 0.18 0.06 0.18 0.12 0.   0.24 0.18 0.06 0.06 0.06
  0.18 0.24 0.06]
 [0.   0.   0.06 0.06 0.24 0.06 0.18 0.12 0.12 0.24 0.18 0.18 0.18 0.18
  0.18 0.24 0.18]
 [0.   0.   0.   0.12 0.24 0.   0.12 0.06 0.06 0.18 0.12 0.12 0.12 0.12
  0.12 0.18 0.12]
 [0.   0.   0.   0.   0.24 0.12 0.24 0.18 0.18 0.18 0.12 0.12 0.12 0.12
  0.24 0.18 0.12]
 [0.   0.   0.   0.   0.   0.24 0.29 0.29 0.18 0.29 0.24 0.18 0.18 0.18
  0.29 0.29 0.18]
 [0.   0.   0.   0.   0.   0.   0.12 0.06 0.06 0.18 0.12 0.12 0.12 0.12
  0.12 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.06 0.12 0.24 0.24 0.24
  0.   0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.18 0.18 0.18 0.18
  0.06 0.12 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.06 0.06 0.06
  0.18 0.24 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.18 0.18
  0.06 0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.12
  0.12 0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.18 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.05555555555555555
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})

**********      classifier acc  **************
[0.857, 0.696, 0.875, 0.786, 0.2, 0.875, 0.768, 0.714, 0.857, 0.714, 0.911, 0.982, 0.982, 0.982, 0.768, 0.714, 0.982]
before cutting matrix
[[-1.  1. -1.  1.  0. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1.  1.  1. -1.  0.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1. -1.  1. -1. -1. -1.  1. -1. -1.  1.  1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({1.0: 105, -1.0: 61})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({1.0: 89, -1.0: 77})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 29, 1.0: 9})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 29, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 98, 1.0: 68})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 121, 1.0: 45})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 114, 1.0: 52})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 98, 1.0: 68})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
positive and negative ratio
Counter({-1.0: 114, 1.0: 52})
after cutting matrix
[[-1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1.  1.  1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1. -1. -1.  1.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 141, 1.0: 25})
Counter({1.0: 105, -1.0: 61})
Counter({-1.0: 150, 1.0: 16})
Counter({1.0: 89, -1.0: 77})
Counter({-1.0: 150, 1.0: 16})
Counter({-1.0: 121, 1.0: 45})
Counter({-1.0: 141, 1.0: 25})
Counter({-1.0: 114, 1.0: 52})
Counter({-1.0: 143, 1.0: 23})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
cutting matrix's confusion matrix
[[33  1  0  0  0]
 [ 7  2  0  0  0]
 [ 3  4  0  0  0]
 [ 4  1  0  0  0]
 [ 1  0  0  0  0]]


SVM classifier
Time: 2019-01-10 15:31:21
FS: tree
Dataset： cleveland
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[-1. -1.  1.  1.  0.  1.  1. -1.  1.  1.]
 [ 0.  1.  0. -1. -1. -1.  0. -1.  1. -1.]
 [ 1.  0. -1.  0.  1.  1. -1.  1. -1.  0.]
 [ 0.  1. -1.  0.  0.  0.  0.  0.  0.  1.]
 [ 1.  1.  1.  0.  0. -1.  0.  0. -1.  0.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1.  0. -1.]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[-1. -1.  1.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]
small_class len :1,large_class len:2, small_class sample:16,large_class sample len:118
extra_class: 2,extra_sample len: 32
cluster len:1
cluster contain small sample len:[0.33]
before change column:	[-1, -1, 1, 0, 0]
after change column:	[-1, -1, 1, 0, 0]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [ 0.  0.]
 [-1.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.  0.4 0.4 0.4]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.4 0.2]
 [0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  0. -1. -1.  1.]
select_j_column
[-1.  1.  0.  1.  1.]
most_cplx_inx
4
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:3, small_class sample:9,large_class sample len:128
extra_class: 1,extra_sample len: 29
cluster len:1
cluster contain small sample len:[0.24]
before change column:	[-1, 0, -1, -1, 1]
after change column:	[-1, 1, -1, -1, 1]
before change, the sample len:	Counter({-1.0: 128, 1.0: 9})
after change, the sample len:	Counter({-1.0: 128, 1.0: 38})


============== iter  3 ================
current matrix is 
[[ 1. -1. -1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [ 0.  0. -1.]
 [-1.  0.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.  ]
 [0.   0.   1.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  1.  1.]
select_j_column
[ 1.  0. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [ 1]
 [-1]
 [ 0]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1. -1.  0.]
 [ 1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [ 0.  0. -1.  0.]
 [-1.  0.  1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.4 0.6 0.4 0.8]
 [0.  0.  0.8 0.8 0.6]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   0.75 0.25]
 [0.   0.   1.   1.  ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[ 1. -1.  0.  0.  0.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 0]
 [ 0]
 [ 0]]


============== iter  5 ================
current matrix is 
[[ 1. -1. -1.  0. -1.]
 [ 1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  0.]
 [ 0.  0. -1.  0.  0.]
 [-1.  0.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.8 0.6 1. ]
 [0.  0.  1.  1.  0.8]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.2 0.6]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[-1.  1.  0.  0.  0.]
most_cplx_inx
3
new_column
None


============== iter  6 ================
current matrix is 
[[ 1. -1. -1.  0. -1.]
 [ 1. -1.  1.  1.  1.]
 [-1.  1. -1. -1.  0.]
 [ 0.  0. -1.  0.  0.]
 [-1.  0.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 6  0  0  1  0]
 [ 5  0  0  0  0]
 [ 1  0  0  0  0]]
row HD
[[0.  0.6 0.8 0.6 1. ]
 [0.  0.  1.  1.  0.8]
 [0.  0.  0.  0.6 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.6 0.2 0.6]
 [0.  0.  0.8 0.8 0.4]
 [0.  0.  0.  0.6 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[ 1.  0. -1.  0.  0.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]]


============== iter  7 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.]
 [ 0.  0. -1.  0.  0.  0.]
 [-1.  0.  1. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 1.  0.8 1.2]
 [0.  0.  1.  1.2 1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.17 0.5  0.33]
 [0.   0.   0.67 0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  8 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.]
 [ 0.  0. -1.  0.  0.  0.]
 [-1.  0.  1. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 1.  0.8 1.2]
 [0.  0.  1.  1.2 1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.17 0.5  0.33]
 [0.   0.   0.67 0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  0.  0.  0.]
select_j_column
[ 1.  1. -1.  0. -1.]
most_cplx_inx
3
new_column
None


============== iter  9 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.]
 [ 0.  0. -1.  0.  0.  0.]
 [-1.  0.  1. -1.  0.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
confusion matrix
[[34  0  0  0  0]
 [ 9  0  0  0  0]
 [ 5  0  0  2  0]
 [ 5  0  0  0  0]
 [ 0  0  0  1  0]]
row HD
[[0.  0.8 1.  0.8 1.2]
 [0.  0.  1.  1.2 1. ]
 [0.  0.  0.  0.8 0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.5  0.17 0.5  0.33]
 [0.   0.   0.67 0.67 0.33 0.33]
 [0.   0.   0.   0.5  0.5  0.67]
 [0.   0.   0.   0.   0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1.  0. -1.]
select_j_column
[ 1. -1.  0.  1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1.  1.]
 [-1.  1. -1. -1.  0. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.]
 [-1.  0.  1. -1.  0.  0. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 0  0  0  7  0]
 [ 2  0  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  1.  1.2 1.  1.2]
 [0.  0.  1.  1.2 1.2]
 [0.  0.  0.  0.8 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.43 0.14 0.43 0.29 0.43]
 [0.   0.   0.57 0.57 0.29 0.29 0.43]
 [0.   0.   0.   0.43 0.43 0.57 0.43]
 [0.   0.   0.   0.   0.43 0.43 0.43]
 [0.   0.   0.   0.   0.   0.43 0.43]
 [0.   0.   0.   0.   0.   0.   0.71]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[ 1. -1. -1.  0.  0.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [-1]]


============== iter  11 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
confusion matrix
[[31  0  0  3  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 2  0  0  3  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.2 1.4 1.2 1.4]
 [0.  0.  1.  1.4 1.2]
 [0.  0.  0.  1.  0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.38 0.12 0.38 0.25 0.38 0.12]
 [0.   0.   0.5  0.5  0.25 0.25 0.38 0.38]
 [0.   0.   0.   0.38 0.38 0.5  0.38 0.5 ]
 [0.   0.   0.   0.   0.38 0.38 0.38 0.25]
 [0.   0.   0.   0.   0.   0.38 0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.62 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  0.  0.]
select_j_column
[ 0.  1. -1.  0. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [ 1]
 [ 0]
 [-1]]
small_class len :1,large_class len:2, small_class sample:9,large_class sample len:105
extra_class: 2,extra_sample len: 52
cluster len:1
cluster contain small sample len:[0.15]
before change column:	[1, 0, 1, 0, -1]
after change column:	[1, -1, 1, -1, -1]
before change, the sample len:	Counter({1.0: 105, -1.0: 9})
after change, the sample len:	Counter({1.0: 105, -1.0: 61})


============== iter  12 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  0  0  4  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.4 1.4 1.4 1.6]
 [0.  0.  1.2 1.4 1.2]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.33 0.11 0.33 0.22 0.33 0.11 0.33]
 [0.   0.   0.44 0.44 0.22 0.22 0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.44 0.33 0.44 0.44]
 [0.   0.   0.   0.   0.33 0.33 0.33 0.22 0.44]
 [0.   0.   0.   0.   0.   0.33 0.33 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.56 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  0.  1.  0.]
select_j_column
[ 1.  0. -1.  0.  0.]
most_cplx_inx
4
new_column
None


============== iter  13 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  0  0  4  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.4 1.4 1.4 1.6]
 [0.  0.  1.2 1.4 1.2]
 [0.  0.  0.  1.2 1. ]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.33 0.11 0.33 0.22 0.33 0.11 0.33]
 [0.   0.   0.44 0.44 0.22 0.22 0.33 0.33 0.33]
 [0.   0.   0.   0.33 0.33 0.44 0.33 0.44 0.44]
 [0.   0.   0.   0.   0.33 0.33 0.33 0.22 0.44]
 [0.   0.   0.   0.   0.   0.33 0.33 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.56 0.11 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[-1.  1. -1. -1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:23,large_class sample len:98
extra_class: 2,extra_sample len: 45
cluster len:1
cluster contain small sample len:[0.34]
before change column:	[1, 0, 0, -1, 1]
after change column:	[1, -1, -1, -1, 1]
before change, the sample len:	Counter({1.0: 98, -1.0: 23})
after change, the sample len:	Counter({1.0: 98, -1.0: 68})


============== iter  14 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  0  0  4  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.6 1.6 1.6 1.6]
 [0.  0.  1.2 1.4 1.4]
 [0.  0.  0.  1.2 1.2]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.4 0.3 0.1 0.3 0.2 0.3 0.1 0.3 0.3]
 [0.  0.  0.4 0.4 0.2 0.2 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.3 0.3 0.4 0.3 0.4 0.4 0.2]
 [0.  0.  0.  0.  0.3 0.3 0.3 0.2 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.3 0.4 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.5 0.1 0.3 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[-1. -1.  1.  0.  0.]
select_j_column
[-1.  0.  1.  0.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [ 0]
 [ 0]]
small_class len :1,large_class len:2, small_class sample:16,large_class sample len:118
extra_class: 2,extra_sample len: 32
cluster len:1
cluster contain small sample len:[0.33]
before change column:	[-1, -1, 1, 0, 0]
after change column:	[-1, -1, 1, 0, 0]


============== iter  15 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  0  0  4  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.6 1.8 1.8 1.8]
 [0.  0.  1.4 1.6 1.6]
 [0.  0.  0.  1.4 1.4]
 [0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.27 0.09 0.27 0.18 0.27 0.09 0.27 0.27 0.36]
 [0.   0.   0.36 0.36 0.18 0.18 0.27 0.27 0.27 0.36 0.  ]
 [0.   0.   0.   0.27 0.27 0.36 0.27 0.36 0.36 0.18 0.36]
 [0.   0.   0.   0.   0.27 0.27 0.27 0.18 0.36 0.36 0.36]
 [0.   0.   0.   0.   0.   0.27 0.27 0.36 0.45 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.45 0.09 0.27 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.45 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1. -1.]
select_j_column
[ 0.  1. -1.  0. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:9,large_class sample len:45
extra_class: 2,extra_sample len: 112
cluster len:1
cluster contain small sample len:[0.07]
before change column:	[0, -1, -1, 0, 1]
after change column:	[0, -1, -1, 0, 1]


============== iter  16 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
confusion matrix
[[29  3  0  2  0]
 [ 6  1  0  2  0]
 [ 0  5  0  2  0]
 [ 1  3  0  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.8 2.  1.8 2. ]
 [0.  0.  1.4 1.8 1.8]
 [0.  0.  0.  1.6 1.6]
 [0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.25 0.08 0.25 0.17 0.25 0.08 0.25 0.25 0.33 0.25]
 [0.   0.   0.33 0.33 0.17 0.17 0.25 0.25 0.25 0.33 0.   0.25]
 [0.   0.   0.   0.25 0.25 0.33 0.25 0.33 0.33 0.17 0.33 0.25]
 [0.   0.   0.   0.   0.25 0.25 0.25 0.17 0.33 0.33 0.33 0.17]
 [0.   0.   0.   0.   0.   0.25 0.25 0.33 0.42 0.42 0.17 0.33]
 [0.   0.   0.   0.   0.   0.   0.42 0.08 0.25 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.42 0.25 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17 0.25 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  0.  1.  0.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:4, small_class sample:9,large_class sample len:157
cluster len:1
cluster contain small sample len:[0.05]
before change column:	[-1, -1, -1, -1, 1]
after change column:	[-1, -1, -1, -1, 1]


============== iter  17 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
12 classifiers pre label
Counter({-1.0: 56})
confusion matrix
[[29  3  0  2  0]
 [ 6  1  0  2  0]
 [ 0  5  0  2  0]
 [ 1  3  0  1  0]
 [ 0  1  0  0  0]]
row HD
[[0.  1.8 2.  1.8 2.2]
 [0.  0.  1.4 1.8 2. ]
 [0.  0.  0.  1.6 1.8]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.23 0.08 0.23 0.15 0.23 0.08 0.23 0.23 0.31 0.23 0.31]
 [0.   0.   0.31 0.31 0.15 0.15 0.23 0.23 0.23 0.31 0.   0.23 0.23]
 [0.   0.   0.   0.23 0.23 0.31 0.23 0.31 0.31 0.15 0.31 0.23 0.08]
 [0.   0.   0.   0.   0.23 0.23 0.23 0.15 0.31 0.31 0.31 0.15 0.31]
 [0.   0.   0.   0.   0.   0.23 0.23 0.31 0.38 0.38 0.15 0.31 0.31]
 [0.   0.   0.   0.   0.   0.   0.38 0.08 0.23 0.15 0.15 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.38 0.23 0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15 0.23 0.15 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.15 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1.  0. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]]


============== iter  18 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.  0.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.  0.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.  1.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({0.0: 41, 1.0: 11, -1.0: 4})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  1  0  3  0]
 [ 0  1  0  0  0]]
row HD
[[0.  2.  2.  2.  2.4]
 [0.  0.  1.6 2.  2.2]
 [0.  0.  0.  1.8 2. ]
 [0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.21 0.07 0.21 0.14 0.21 0.07 0.21 0.21 0.29 0.21 0.29 0.36]
 [0.   0.   0.29 0.29 0.14 0.14 0.21 0.21 0.21 0.29 0.   0.21 0.21 0.29]
 [0.   0.   0.   0.21 0.21 0.29 0.21 0.29 0.29 0.14 0.29 0.21 0.07 0.29]
 [0.   0.   0.   0.   0.21 0.21 0.21 0.14 0.29 0.29 0.29 0.14 0.29 0.29]
 [0.   0.   0.   0.   0.   0.21 0.21 0.29 0.36 0.36 0.14 0.29 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.36 0.07 0.21 0.14 0.14 0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.36 0.21 0.36 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14 0.21 0.14 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.21 0.29 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.14 0.07 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  19 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.  0. -1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.  0.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.  1.  1.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({0.0: 41, 1.0: 11, -1.0: 4})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  1  0  3  0]
 [ 0  1  0  0  0]]
row HD
[[0.  2.2 2.2 2.2 2.4]
 [0.  0.  1.6 2.  2.4]
 [0.  0.  0.  1.8 2.2]
 [0.  0.  0.  0.  1.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.27 0.2  0.07 0.2  0.13 0.2  0.07 0.2  0.2  0.27 0.2  0.27 0.33
  0.2 ]
 [0.   0.   0.27 0.27 0.13 0.13 0.2  0.2  0.2  0.27 0.   0.2  0.2  0.27
  0.2 ]
 [0.   0.   0.   0.2  0.2  0.27 0.2  0.27 0.27 0.13 0.27 0.2  0.07 0.27
  0.2 ]
 [0.   0.   0.   0.   0.2  0.2  0.2  0.13 0.27 0.27 0.27 0.13 0.27 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.2  0.2  0.27 0.33 0.33 0.13 0.27 0.27 0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.33 0.07 0.2  0.13 0.13 0.13 0.2  0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.33 0.2  0.33 0.27 0.27
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13 0.2  0.13 0.2  0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.2  0.27 0.2  0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.13 0.07 0.2
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2  0.27
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  0.  0.]
select_j_column
[ 0. -1. -1.  0.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [ 0]
 [ 1]]


============== iter  20 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.  0. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.  0.  1. -1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.  1.  1.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({0.0: 41, 1.0: 11, -1.0: 4})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
15 classifiers pre label
Counter({1.0: 43, -1.0: 12, 0.0: 1})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  1  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.4 2.4 2.4 2.4]
 [0.  0.  1.6 2.2 2.6]
 [0.  0.  0.  2.  2.4]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.19 0.06 0.19 0.12 0.19 0.06 0.19 0.19 0.25 0.19 0.25 0.31
  0.19 0.12]
 [0.   0.   0.25 0.25 0.12 0.12 0.19 0.19 0.19 0.25 0.   0.19 0.19 0.25
  0.19 0.19]
 [0.   0.   0.   0.19 0.19 0.25 0.19 0.25 0.25 0.12 0.25 0.19 0.06 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.19 0.19 0.19 0.12 0.25 0.25 0.25 0.12 0.25 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.19 0.19 0.25 0.31 0.31 0.12 0.25 0.25 0.25
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.31 0.06 0.19 0.12 0.12 0.12 0.19 0.25
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.31 0.19 0.31 0.25 0.25
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.19 0.12 0.19 0.25
  0.25 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.25 0.19 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.06 0.19
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1.  1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]
small_class len :2,large_class len:3, small_class sample:25,large_class sample len:141
cluster len:1
cluster contain small sample len:[0.15]
before change column:	[1, 1, -1, 1, -1]
after change column:	[-1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 141, -1.0: 25})
after change, the sample len:	Counter({-1.0: 166})


============== iter  21 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.  0. -1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.  0.  1. -1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.  1.  1.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({0.0: 41, 1.0: 11, -1.0: 4})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
15 classifiers pre label
Counter({1.0: 43, -1.0: 12, 0.0: 1})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  1  0  3  0]
 [ 0  0  0  1  0]]
row HD
[[0.  2.4 2.4 2.4 2.4]
 [0.  0.  1.6 2.2 2.6]
 [0.  0.  0.  2.  2.4]
 [0.  0.  0.  0.  2. ]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.19 0.06 0.19 0.12 0.19 0.06 0.19 0.19 0.25 0.19 0.25 0.31
  0.19 0.12]
 [0.   0.   0.25 0.25 0.12 0.12 0.19 0.19 0.19 0.25 0.   0.19 0.19 0.25
  0.19 0.19]
 [0.   0.   0.   0.19 0.19 0.25 0.19 0.25 0.25 0.12 0.25 0.19 0.06 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.19 0.19 0.19 0.12 0.25 0.25 0.25 0.12 0.25 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.19 0.19 0.25 0.31 0.31 0.12 0.25 0.25 0.25
  0.19 0.25]
 [0.   0.   0.   0.   0.   0.   0.31 0.06 0.19 0.12 0.12 0.12 0.19 0.25
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.31 0.19 0.31 0.25 0.25
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.19 0.12 0.19 0.25
  0.25 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.19 0.25 0.19 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.12 0.06 0.19
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19 0.25
  0.19 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12
  0.31 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19
  0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
select_i_column
[ 1. -1. -1.  0.  1.]
select_j_column
[ 0. -1. -1.  0.  1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 0]
 [-1]]
small_class len :1,large_class len:3, small_class sample:9,large_class sample len:134
extra_class: 1,extra_sample len: 23
cluster len:1
cluster contain small sample len:[0.28]
before change column:	[1, 1, 1, 0, -1]
after change column:	[1, 1, 1, 0, -1]


============== iter  22 ================
current matrix is 
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.  0. -1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.  1.  1.  0.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
*======label=======*
true label
Counter({'0': 34, '1': 9, '2': 7, '3': 5, '4': 1})
0 classifiers pre label
Counter({1.0: 55, 0.0: 1})
1 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
2 classifiers pre label
Counter({-1.0: 56})
3 classifiers pre label
Counter({0.0: 40, 1.0: 16})
4 classifiers pre label
Counter({-1.0: 53, 0.0: 3})
5 classifiers pre label
Counter({1.0: 39, -1.0: 16, 0.0: 1})
6 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
7 classifiers pre label
Counter({1.0: 37, -1.0: 18, 0.0: 1})
8 classifiers pre label
Counter({1.0: 40, -1.0: 16})
9 classifiers pre label
Counter({1.0: 36, -1.0: 20})
10 classifiers pre label
Counter({-1.0: 55, 0.0: 1})
11 classifiers pre label
Counter({0.0: 40, -1.0: 16})
12 classifiers pre label
Counter({-1.0: 56})
13 classifiers pre label
Counter({0.0: 41, 1.0: 11, -1.0: 4})
14 classifiers pre label
Counter({-1.0: 36, 1.0: 20})
15 classifiers pre label
Counter({1.0: 43, -1.0: 12, 0.0: 1})
16 classifiers pre label
Counter({1.0: 55, 0.0: 1})
confusion matrix
[[29  0  0  5  0]
 [ 6  0  0  3  0]
 [ 0  1  0  6  0]
 [ 1  1  0  3  0]
 [ 0  1  0  0  0]]
row HD
[[0.  2.4 2.4 2.6 2.6]
 [0.  0.  1.6 2.4 2.8]
 [0.  0.  0.  2.2 2.6]
 [0.  0.  0.  0.  2.2]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.18 0.06 0.18 0.12 0.18 0.06 0.18 0.18 0.24 0.18 0.24 0.29
  0.18 0.12 0.06]
 [0.   0.   0.24 0.24 0.12 0.12 0.18 0.18 0.18 0.24 0.   0.18 0.18 0.24
  0.18 0.18 0.18]
 [0.   0.   0.   0.18 0.18 0.24 0.18 0.24 0.24 0.12 0.24 0.18 0.06 0.24
  0.18 0.18 0.24]
 [0.   0.   0.   0.   0.18 0.18 0.18 0.12 0.24 0.24 0.24 0.12 0.24 0.24
  0.18 0.18 0.12]
 [0.   0.   0.   0.   0.   0.18 0.18 0.24 0.29 0.29 0.12 0.24 0.24 0.24
  0.18 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.29 0.06 0.18 0.12 0.12 0.12 0.18 0.24
  0.29 0.06 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.29 0.18 0.29 0.24 0.24
  0.   0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12 0.18 0.12 0.18 0.24
  0.24 0.06 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.18 0.24 0.18 0.24
  0.18 0.18 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.12 0.06 0.18
  0.29 0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18 0.24
  0.18 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12
  0.29 0.06 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18
  0.24 0.12 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.18 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: True, 3: None, 4: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.18181818181818182
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})

**********      classifier acc  **************
[0.843, 0.86, 0.821, 0.118, 0.791, 0.8, 0.768, 0.804, 0.696, 0.768, 0.86, 0.412, 0.982, 0.2, 0.768, 0.765, 0.961]
before cutting matrix
[[ 1. -1. -1.  0. -1.  1. -1.  1.  1.  1. -1.  0. -1.  0. -1.  1.  1.]
 [ 1. -1.  1.  1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  0. -1.  1. -1.  1. -1.  1. -1. -1.  0.  1. -1.  1.]
 [ 0.  0. -1.  0.  0.  0.  1.  0. -1. -1.  0.  0. -1.  1.  1.  0.  0.]
 [-1.  0.  1. -1.  0.  0. -1. -1. -1.  1.  0.  1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 29, -1.0: 25})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 29, -1.0: 25})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 89, 1.0: 29})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({-1.0: 89, 1.0: 29})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({1.0: 89, -1.0: 45})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 89, -1.0: 45})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 89, -1.0: 54})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 89, -1.0: 54})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 105, -1.0: 61})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 105, -1.0: 61})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 45, 1.0: 9})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({-1.0: 45, 1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 157, 1.0: 9})
Counter({1.0: 32, -1.0: 29})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 32, -1.0: 29})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 134, -1.0: 9})
positive and negative ratio
Counter({1.0: 98, -1.0: 45})
after cutting matrix
[[ 1. -1. -1. -1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1.  1.  1. -1. -1. -1.  1. -1.  1.]
 [-1.  1. -1.  1. -1.  1. -1.  1. -1.  1.]
 [ 0.  0. -1.  1. -1.  0. -1.  1.  0.  0.]
 [-1.  0.  1. -1.  1.  0.  1. -1.  1. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 25})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 128, 1.0: 38})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 68})
Counter({-1.0: 118, 1.0: 16})
Counter({-1.0: 157, 1.0: 9})
Counter({-1.0: 98, 1.0: 68})
Counter({1.0: 98, -1.0: 45})
Counter({1.0: 134, -1.0: 9})
cutting matrix's confusion matrix
[[29  3  0  2  0]
 [ 6  3  0  0  0]
 [ 0  4  0  3  0]
 [ 1  2  0  2  0]
 [ 0  0  0  1  0]]


SVM classifier
Time: 2019-01-10 15:31:25
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1. -1. -1. -1.  1.  1.  1.]
 [-1. -1.  1. -1.  1. -1.  1.]
 [-1.  1.  1.  1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.  1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.  1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1. -1. -1. -1. -1.]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({-1.0: 34, 1.0: 33})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  2  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  5  0  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  5  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1.  1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1. -1.]
 [-1.  1.]
 [-1. -1.]
 [-1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
1 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  0  5  0  0]]
row HD
[[0.   0.   0.33 0.17 0.33 0.17]
 [0.   0.   0.33 0.17 0.33 0.17]
 [0.   0.   0.   0.17 0.   0.17]
 [0.   0.   0.   0.   0.17 0.  ]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 2.]
 [0. 0.]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: True}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
5
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 1. -1.  1.]
 [ 1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1.  1.]
 [-1.  1. -1.]
 [-1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
1 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
2 classifiers pre label
Counter({1.0: 40, -1.0: 27})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  4  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.5  0.17 0.5  0.33]
 [0.   0.   0.5  0.17 0.5  0.33]
 [0.   0.   0.   0.33 0.   0.17]
 [0.   0.   0.   0.   0.33 0.17]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.33 0.33]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: None, 4: True, 5: None}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1. -1.  1.  1. -1. -1.]
most_cplx_inx
1
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1. -1.  1. -1.]
 [ 1. -1.  1. -1.]
 [-1.  1. -1.  1.]
 [-1. -1.  1.  1.]
 [-1.  1. -1. -1.]
 [-1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
1 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
2 classifiers pre label
Counter({1.0: 40, -1.0: 27})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.67 0.33 0.5  0.33]
 [0.   0.   0.67 0.33 0.5  0.33]
 [0.   0.   0.   0.33 0.17 0.33]
 [0.   0.   0.   0.   0.5  0.33]
 [0.   0.   0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   1.   0.25 1.  ]
 [0.   0.   1.25 0.5 ]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 1. -1.  1.  1. -1.  1.]
select_j_column
[-1.  1.  1. -1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.]
 [-1.  1. -1.  1.  1.]
 [-1. -1.  1.  1. -1.]
 [-1.  1. -1. -1.  1.]
 [-1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
1 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
2 classifiers pre label
Counter({1.0: 40, -1.0: 27})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
confusion matrix
[[22  0  0  0  0  0]
 [10  0  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   0.83 0.33 0.67 0.33]
 [0.   0.   0.83 0.33 0.67 0.33]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.  0.8 0.2 0.8 0.8]
 [0.  0.  1.  0.4 0. ]
 [0.  0.  0.  0.6 1. ]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[ 1.  1.  1. -1.  1.  1.]
select_j_column
[ 1.  1. -1. -1. -1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]]


============== iter  6 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1.  1. -1.  1.  1. -1.]
 [-1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
1 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
2 classifiers pre label
Counter({1.0: 40, -1.0: 27})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
confusion matrix
[[22  0  0  0  0  0]
 [ 8  0  0  2  0  0]
 [ 0  0 18  0  0  0]
 [ 3  0  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.   1.   0.5  0.83 0.5 ]
 [0.   0.   1.   0.5  0.83 0.5 ]
 [0.   0.   0.   0.5  0.17 0.5 ]
 [0.   0.   0.   0.   0.67 0.33]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 0.17 0.67 0.67 0.  ]
 [0.   0.   0.83 0.33 0.   0.67]
 [0.   0.   0.   0.5  0.83 0.17]
 [0.   0.   0.   0.   0.33 0.67]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
select_i_column
[-1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1.  1. -1.]
most_cplx_inx
1
new_column
[[ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
1 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
2 classifiers pre label
Counter({1.0: 40, -1.0: 27})
3 classifiers pre label
Counter({-1.0: 44, 1.0: 23})
4 classifiers pre label
Counter({-1.0: 45, 1.0: 22})
5 classifiers pre label
Counter({-1.0: 34, 1.0: 33})
6 classifiers pre label
Counter({1.0: 51, -1.0: 16})
confusion matrix
[[21  1  0  0  0  0]
 [ 1  8  0  1  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.17 1.   0.5  1.   0.5 ]
 [0.   0.   1.17 0.67 0.83 0.67]
 [0.   0.   0.   0.5  0.33 0.5 ]
 [0.   0.   0.   0.   0.83 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.57 0.14 0.57 0.57 0.   0.57]
 [0.   0.   0.71 0.29 0.   0.57 0.57]
 [0.   0.   0.   0.43 0.71 0.14 0.43]
 [0.   0.   0.   0.   0.29 0.57 0.29]
 [0.   0.   0.   0.   0.   0.57 0.57]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: True, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
change ratio is:	0.0
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})

**********      classifier acc  **************
[0.925, 1.0, 1.0, 0.955, 1.0, 0.925, 0.91]
before cutting matrix
[[ 1. -1.  1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [-1.  1. -1.  1.  1. -1.  1.]
 [-1. -1.  1.  1. -1. -1.  1.]
 [-1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 134, 1.0: 67})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 134, 1.0: 67})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 105, 1.0: 96})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
positive and negative ratio
Counter({1.0: 135, -1.0: 66})
after cutting matrix
[[-1.  1. -1.  1.  1.]
 [-1.  1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1.]
 [-1.  1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 136, 1.0: 65})
Counter({1.0: 126, -1.0: 75})
Counter({-1.0: 136, 1.0: 65})
Counter({-1.0: 105, 1.0: 96})
Counter({1.0: 135, -1.0: 66})
cutting matrix's confusion matrix
[[21  1  0  0  0  0]
 [ 1  8  0  1  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-10 15:31:27
FS: tree
Dataset： dermatology
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0.  0. -1.  1.  1. -1.  1. -1. -1.]
 [ 1.  0.  0.  0.  0.  0.  1. -1. -1.  0.  0.]
 [-1.  1.  1. -1.  0.  0. -1.  0. -1.  1. -1.]
 [ 0. -1.  0. -1.  1.  0.  0. -1.  1.  0. -1.]
 [ 1. -1. -1. -1.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.  1.]]


============== iter  1 ================
current matrix is 
[ 0.  1. -1.  0.  1.  0.]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 5  3  0  0  0  0]
 [ 0  4  0  0  0  0]
 [ 5  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: True}
select_i_column
[-1.  0.  0.  1.  0.  0.]
select_j_column
[ 0.  1. -1.  0.  1.  0.]
most_cplx_inx
4
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
ERROR-F1: the denominator of the 17 dimension of F1 is zero!
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 0]]


============== iter  2 ================
current matrix is 
[[ 0. -1.]
 [ 1.  1.]
 [-1. -1.]
 [ 0.  1.]
 [ 1.  1.]
 [ 0.  0.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 96, -1.0: 95})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
1 classifiers pre label
Counter({-1.0: 39, 1.0: 23, 0.0: 5})
confusion matrix
[[21  0  0  1  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.33 0.17 0.17 0.33 0.17]
 [0.   0.   0.33 0.17 0.   0.33]
 [0.   0.   0.   0.33 0.33 0.33]
 [0.   0.   0.   0.   0.17 0.17]
 [0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0. 1.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1.  0.  1.  0.  1.  0.]
select_j_column
[-1. -1.  0. -1.  1.  1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  3 ================
current matrix is 
[[ 0. -1.  1.]
 [ 1.  1. -1.]
 [-1. -1.  1.]
 [ 0.  1. -1.]
 [ 1.  1. -1.]
 [ 0.  0.  1.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
1 classifiers pre label
Counter({-1.0: 39, 1.0: 23, 0.0: 5})
2 classifiers pre label
Counter({1.0: 45, -1.0: 22})
confusion matrix
[[21  0  0  0  0  1]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  4  0  0  0  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.5  0.17 0.33 0.5  0.17]
 [0.   0.   0.5  0.17 0.   0.5 ]
 [0.   0.   0.   0.5  0.5  0.33]
 [0.   0.   0.   0.   0.17 0.33]
 [0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.67 2.  ]
 [0.   0.   2.  ]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: True, 5: None}
select_i_column
[-1.  0. -1. -1.  0.  1.]
select_j_column
[ 0.  0.  1.  0. -1.  0.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]
small_class len :1,large_class len:3, small_class sample:10,large_class sample len:116
extra_class: 2,extra_sample len: 75
cluster len:1
cluster contain small sample len:[0.12]
before change column:	[-1, 0, 0, -1, -1, 1]
after change column:	[-1, 0, 0, -1, -1, 1]


============== iter  4 ================
current matrix is 
[[ 0. -1.  1. -1.]
 [ 1.  1. -1.  0.]
 [-1. -1.  1.  0.]
 [ 0.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [ 0.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})
*======label=======*
true label
Counter({'1': 22, '3': 18, '2': 10, '4': 8, '6': 5, '5': 4})
0 classifiers pre label
Counter({0.0: 32, -1.0: 18, 1.0: 17})
1 classifiers pre label
Counter({-1.0: 39, 1.0: 23, 0.0: 5})
2 classifiers pre label
Counter({1.0: 45, -1.0: 22})
3 classifiers pre label
Counter({0.0: 31, -1.0: 31, 1.0: 5})
confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  0  4  0]
 [ 0  0  0  0  0  5]]
row HD
[[0.   0.67 0.33 0.33 0.5  0.33]
 [0.   0.   0.5  0.33 0.17 0.67]
 [0.   0.   0.   0.67 0.67 0.5 ]
 [0.   0.   0.   0.   0.17 0.5 ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
col HD
[[0.   0.5  1.5  1.5 ]
 [0.   0.   1.5  1.25]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: None, 3: True, 4: None, 5: None}
average_class_acc >= 0.8
change ratio is:	0.0
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})

**********      classifier acc  **************
[1.0, 0.984, 1.0, 0.923]
before cutting matrix
[[ 0. -1.  1. -1.]
 [ 1.  1. -1.  0.]
 [-1. -1.  1.  0.]
 [ 0.  1. -1. -1.]
 [ 1.  1. -1. -1.]
 [ 0.  0.  1.  1.]]
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})
positive and negative ratio
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})
positive and negative ratio
Counter({1.0: 66, -1.0: 37})
positive and negative ratio
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})
positive and negative ratio
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
positive and negative ratio
Counter({-1.0: 116, 1.0: 10})
after cutting matrix
[[-1.  1. -1.]
 [ 1. -1.  0.]
 [-1.  1.  0.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [ 0.  1.  1.]]
positive and negative ratio
Counter({1.0: 96, -1.0: 95})
Counter({1.0: 105, -1.0: 96})
Counter({-1.0: 116, 1.0: 10})
cutting matrix's confusion matrix
[[22  0  0  0  0  0]
 [ 0 10  0  0  0  0]
 [ 0  0 18  0  0  0]
 [ 0  3  0  5  0  0]
 [ 0  0  0  4  0  0]
 [ 0  0  0  0  0  5]]


SVM classifier
Time: 2019-01-10 15:31:28
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1.  1.  1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
 [-1.  1.  1.  1.  1.  1. -1.  1. -1.  1.]
 [ 1.  1.  1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1. -1.  1.  1.  1. -1. -1.]
 [-1.  1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1.  1. -1.  1.  1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]]


============== iter  1 ================
current matrix is 
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({1.0: 97, -1.0: 91})
confusion matrix
[[17  3  0  0  0  0  0  0  0  0]
 [ 6 15  0  0  0  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [19  7  0  0  0  0  0  0  0  0]
 [ 3 13  0  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :2,large_class len:8, small_class sample:97,large_class sample len:465
cluster len:1
cluster contain small sample len:[0.17]
before change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, 1]
after change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, 1]


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  3 17  0  0  0  0  0  0  0]
 [ 0 15  6  0  0  0  0  0  0  0]
 [ 0  7 15  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0  7 19  0  0  0  0  0  0  0]
 [ 0 13  3  0  0  0  0  0  0  0]
 [ 0  0 14  0  0  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  2 19  0  0  0  0  0  0  0]
 [ 0 12  2  0  0  0  0  0  0  0]]
row HD
[[0.  0.2 0.1 0.2 0.1 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.1 0.  0.1 0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.1 0.  0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  2.5]
 [0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
4
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:60,large_class sample len:502
cluster len:1
cluster contain small sample len:[0.11]
before change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]


============== iter  3 ================
current matrix is 
[[ 1.  1. -1.]
 [-1. -1. -1.]
 [ 1. -1.  1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1. -1. -1.]
 [-1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
confusion matrix
[[ 0  3  4  0 13  0  0  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  7 12  0  3  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0  7  0  0 19  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  2  0  0 19  0  0  0  0  0]
 [ 0 12  0  0  2  0  0  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.1 0.2 0.1 0.1 0.2 0.1]
 [0.  0.  0.2 0.  0.1 0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.2 0.1 0.2 0.1 0.1 0.2 0.3]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.67 1.33]
 [0.   0.   1.  ]
 [0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]


============== iter  4 ================
current matrix is 
[[ 1.  1. -1. -1.]
 [-1. -1. -1.  1.]
 [ 1. -1.  1. -1.]
 [-1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [ 1. -1. -1.  1.]
 [-1. -1. -1.  1.]
 [-1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
confusion matrix
[[ 0  3  4  0 13  0  0  0  0  0]
 [ 0 15  1  0  5  0  0  0  0  0]
 [ 0  7 12  0  3  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 0  7  0  0 19  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [ 0  0  0  0 14  0  0  0  0  0]
 [ 0 13  2  0  0  0  0  0  0  0]
 [ 0  2  0  0 19  0  0  0  0  0]
 [ 0 12  0  0  2  0  0  0  0  0]]
row HD
[[0.  0.3 0.2 0.3 0.2 0.3 0.2 0.2 0.3 0.1]
 [0.  0.  0.3 0.  0.1 0.  0.1 0.1 0.  0.2]
 [0.  0.  0.  0.3 0.2 0.3 0.2 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.1 0.  0.1 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.1 0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.25 1.   1.5 ]
 [0.   0.   0.75 2.25]
 [0.   0.   0.   2.  ]
 [0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  5 ================
current matrix is 
[[ 1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.]
 [ 1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.]
 [-1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
confusion matrix
[[ 0  0  4  3  2  0  0 11  0  0]
 [ 0 13  1  2  4  0  0  1  0  0]
 [ 0  1 12  6  0  0  0  3  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 14  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0  0 19  0  0]
 [ 0  0  0 12  0  0  0  2  0  0]]
row HD
[[0.  0.4 0.2 0.3 0.3 0.3 0.3 0.2 0.3 0.1]
 [0.  0.  0.4 0.1 0.1 0.1 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.3 0.3 0.3 0.3 0.2 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.  0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.2 0.  0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.  0.8 1.2 0.8]
 [0.  0.  0.6 1.8 1. ]
 [0.  0.  0.  1.6 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1.]
 [ 1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
confusion matrix
[[ 0  0  4  2  2  0  9  2  1  0]
 [ 0 13  1  0  4  0  0  1  2  0]
 [ 0  1 12  3  0  0  3  0  3  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.5 0.3 0.3 0.3 0.3 0.4 0.2 0.4 0.2]
 [0.  0.  0.4 0.2 0.2 0.2 0.1 0.3 0.1 0.3]
 [0.  0.  0.  0.4 0.4 0.4 0.3 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.2 0.  0.3 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.83 0.67 1.   0.67 1.  ]
 [0.   0.   0.5  1.5  0.83 0.83]
 [0.   0.   0.   1.33 0.67 0.67]
 [0.   0.   0.   0.   0.67 1.  ]
 [0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  7 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  0  0  3  3  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2  0  0 11  0  0  0  0]
 [ 0  0  0  0  0  2 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.5 0.3 0.4 0.3 0.3 0.4 0.2 0.5 0.3]
 [0.  0.  0.4 0.3 0.2 0.2 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.5 0.4 0.4 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.71 0.57 0.86 0.57 0.86 1.14]
 [0.   0.   0.43 1.29 0.71 0.71 0.43]
 [0.   0.   0.   1.14 0.57 0.57 0.57]
 [0.   0.   0.   0.   0.57 0.86 0.86]
 [0.   0.   0.   0.   0.   0.57 0.86]
 [0.   0.   0.   0.   0.   0.   0.57]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1.  1. -1.  1.  1. -1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:43,large_class sample len:519
cluster len:1
cluster contain small sample len:[0.08]
before change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, -1]


============== iter  8 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  0  0  3  3  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2  0  0 11  0  0  0  0]
 [ 0  0  0  0  0  2 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.6 0.4 0.5 0.4 0.4 0.5 0.3 0.6 0.4]
 [0.  0.  0.4 0.3 0.2 0.2 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.5 0.4 0.4 0.3 0.3 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.1 0.3]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.5  0.75 0.5  0.75 1.   0.5 ]
 [0.   0.   0.38 1.12 0.62 0.62 0.38 0.12]
 [0.   0.   0.   1.   0.5  0.5  0.5  0.25]
 [0.   0.   0.   0.   0.5  0.75 0.75 1.  ]
 [0.   0.   0.   0.   0.   0.5  0.75 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.5  0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :2,large_class len:8, small_class sample:97,large_class sample len:465
cluster len:1
cluster contain small sample len:[0.17]
before change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, 1]
after change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, 1]


============== iter  9 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  0  0  3  3  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2  0  0 11  0  0  0  0]
 [ 0  0  0  0  0  2 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.7 0.5 0.6 0.5 0.5 0.6 0.4 0.7 0.4]
 [0.  0.  0.4 0.3 0.2 0.2 0.1 0.3 0.2 0.5]
 [0.  0.  0.  0.5 0.4 0.4 0.3 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.3 0.1 0.4 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.2 0.1 0.1 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.2 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.56 0.44 0.67 0.44 0.67 0.89 0.44 0.56]
 [0.   0.   0.33 1.   0.56 0.56 0.33 0.11 0.  ]
 [0.   0.   0.   0.89 0.44 0.44 0.44 0.22 0.33]
 [0.   0.   0.   0.   0.44 0.67 0.67 0.89 1.  ]
 [0.   0.   0.   0.   0.   0.44 0.67 0.44 0.56]
 [0.   0.   0.   0.   0.   0.   0.44 0.67 0.56]
 [0.   0.   0.   0.   0.   0.   0.   0.44 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
select_j_column
[ 1. -1.  1.  1. -1. -1. -1. -1.  1. -1.]
most_cplx_inx
8
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.6 0.7 0.6 0.5 0.6 0.5 0.8 0.5]
 [0.  0.  0.5 0.4 0.3 0.2 0.1 0.4 0.3 0.6]
 [0.  0.  0.  0.5 0.4 0.5 0.4 0.3 0.4 0.5]
 [0.  0.  0.  0.  0.3 0.2 0.5 0.2 0.1 0.4]
 [0.  0.  0.  0.  0.  0.3 0.2 0.1 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.3 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5 0.4 0.6 0.4 0.6 0.8 0.4 0.5 0.5]
 [0.  0.  0.3 0.9 0.5 0.5 0.3 0.1 0.  0.4]
 [0.  0.  0.  0.8 0.4 0.4 0.4 0.2 0.3 0.5]
 [0.  0.  0.  0.  0.4 0.6 0.6 0.8 0.9 0.5]
 [0.  0.  0.  0.  0.  0.4 0.6 0.4 0.5 0.3]
 [0.  0.  0.  0.  0.  0.  0.4 0.6 0.5 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1.  1. -1. -1. -1.  1. -1.  1.  1.]
select_j_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
most_cplx_inx
5
new_column
[[-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.6 0.7 0.6 0.5 0.7 0.5 0.9 0.6]
 [0.  0.  0.5 0.4 0.3 0.2 0.2 0.4 0.4 0.7]
 [0.  0.  0.  0.5 0.4 0.5 0.5 0.3 0.5 0.6]
 [0.  0.  0.  0.  0.3 0.2 0.6 0.2 0.2 0.5]
 [0.  0.  0.  0.  0.  0.3 0.3 0.1 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.45 0.36 0.55 0.36 0.55 0.73 0.36 0.45 0.45 0.55]
 [0.   0.   0.27 0.82 0.45 0.45 0.27 0.09 0.   0.36 0.27]
 [0.   0.   0.   0.73 0.36 0.36 0.36 0.18 0.27 0.45 0.36]
 [0.   0.   0.   0.   0.36 0.55 0.55 0.73 0.82 0.45 0.55]
 [0.   0.   0.   0.   0.   0.36 0.55 0.36 0.45 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.36 0.55 0.45 0.45 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.36 0.27 0.64 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.09 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.45]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
0
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  12 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.7 0.7 0.6 0.5 0.8 0.5 1.  0.7]
 [0.  0.  0.6 0.4 0.3 0.2 0.3 0.4 0.5 0.8]
 [0.  0.  0.  0.6 0.5 0.6 0.5 0.4 0.5 0.6]
 [0.  0.  0.  0.  0.3 0.2 0.7 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.33 0.5  0.33 0.5  0.67 0.33 0.42 0.42 0.5  0.42]
 [0.   0.   0.25 0.75 0.42 0.42 0.25 0.08 0.   0.33 0.25 0.33]
 [0.   0.   0.   0.67 0.33 0.33 0.33 0.17 0.25 0.42 0.33 0.25]
 [0.   0.   0.   0.   0.33 0.5  0.5  0.67 0.75 0.42 0.5  0.58]
 [0.   0.   0.   0.   0.   0.33 0.5  0.33 0.42 0.25 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.33 0.5  0.42 0.42 0.17 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.58 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.25 0.33 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
most_cplx_inx
0
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:60,large_class sample len:502
cluster len:1
cluster contain small sample len:[0.11]
before change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]


============== iter  13 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.8 0.7 0.6 0.5 0.8 0.5 1.  0.7]
 [0.  0.  0.7 0.4 0.3 0.2 0.3 0.4 0.5 0.8]
 [0.  0.  0.  0.7 0.6 0.7 0.6 0.5 0.6 0.7]
 [0.  0.  0.  0.  0.3 0.2 0.7 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.31 0.46 0.31 0.46 0.62 0.31 0.38 0.38 0.46 0.38 0.31]
 [0.   0.   0.23 0.69 0.38 0.38 0.23 0.08 0.   0.31 0.23 0.31 0.23]
 [0.   0.   0.   0.62 0.31 0.31 0.31 0.15 0.23 0.38 0.31 0.23 0.  ]
 [0.   0.   0.   0.   0.31 0.46 0.46 0.62 0.69 0.38 0.46 0.54 0.62]
 [0.   0.   0.   0.   0.   0.31 0.46 0.31 0.38 0.23 0.31 0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.31 0.46 0.38 0.38 0.15 0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.54 0.15 0.23 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.23 0.31 0.38 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.23 0.31 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.46 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.08 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
8
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:60,large_class sample len:502
cluster len:1
cluster contain small sample len:[0.11]
before change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]


============== iter  14 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 0.9 0.7 0.6 0.5 0.8 0.5 1.  0.7]
 [0.  0.  0.8 0.4 0.3 0.2 0.3 0.4 0.5 0.8]
 [0.  0.  0.  0.8 0.7 0.8 0.7 0.6 0.7 0.8]
 [0.  0.  0.  0.  0.3 0.2 0.7 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.29 0.43 0.29 0.43 0.57 0.29 0.36 0.36 0.43 0.36 0.29 0.29]
 [0.   0.   0.21 0.64 0.36 0.36 0.21 0.07 0.   0.29 0.21 0.29 0.21 0.21]
 [0.   0.   0.   0.57 0.29 0.29 0.29 0.14 0.21 0.36 0.29 0.21 0.   0.  ]
 [0.   0.   0.   0.   0.29 0.43 0.43 0.57 0.64 0.36 0.43 0.5  0.57 0.57]
 [0.   0.   0.   0.   0.   0.29 0.43 0.29 0.36 0.21 0.29 0.36 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.43 0.36 0.36 0.14 0.07 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.5  0.14 0.21 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.21 0.29 0.36 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.21 0.29 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.43 0.36 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:60,large_class sample len:502
cluster len:1
cluster contain small sample len:[0.11]
before change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[-1, -1, 1, -1, -1, -1, -1, -1, -1, -1]


============== iter  15 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.7 1.  0.7 0.6 0.5 0.8 0.5 1.  0.7]
 [0.  0.  0.9 0.4 0.3 0.2 0.3 0.4 0.5 0.8]
 [0.  0.  0.  0.9 0.8 0.9 0.8 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.3 0.2 0.7 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.27 0.4  0.27 0.4  0.53 0.27 0.33 0.33 0.4  0.33 0.27 0.27
  0.27]
 [0.   0.   0.2  0.6  0.33 0.33 0.2  0.07 0.   0.27 0.2  0.27 0.2  0.2
  0.2 ]
 [0.   0.   0.   0.53 0.27 0.27 0.27 0.13 0.2  0.33 0.27 0.2  0.   0.
  0.  ]
 [0.   0.   0.   0.   0.27 0.4  0.4  0.53 0.6  0.33 0.4  0.47 0.53 0.53
  0.53]
 [0.   0.   0.   0.   0.   0.27 0.4  0.27 0.33 0.2  0.27 0.33 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.27 0.4  0.33 0.33 0.13 0.07 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.47 0.13 0.2  0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.2  0.27 0.33 0.13 0.13
  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.2  0.27 0.2  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.4  0.33 0.33
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.07 0.27 0.27
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.2
  0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:9, small_class sample:43,large_class sample len:519
cluster len:1
cluster contain small sample len:[0.08]
before change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
after change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, -1]


============== iter  16 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  1  4  2  2  0  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  3  0  0  3  0  0  0]
 [ 0  5  0 14  0  0  0  0  0  0]
 [ 0  2  0  5 17  0  0  2  0  0]
 [ 0  0  0 13  3  0  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  2  0  0 14  5  0  0]
 [ 0  0  0 12  0  0  2  0  0  0]]
row HD
[[0.  0.8 1.1 0.8 0.7 0.6 0.9 0.6 1.1 0.8]
 [0.  0.  0.9 0.4 0.3 0.2 0.3 0.4 0.5 0.8]
 [0.  0.  0.  0.9 0.8 0.9 0.8 0.7 0.8 0.9]
 [0.  0.  0.  0.  0.3 0.2 0.7 0.2 0.3 0.6]
 [0.  0.  0.  0.  0.  0.3 0.4 0.1 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.31 0.25 0.38 0.25 0.38 0.5  0.25 0.31 0.31 0.38 0.31 0.25 0.25
  0.25 0.25]
 [0.   0.   0.19 0.56 0.31 0.31 0.19 0.06 0.   0.25 0.19 0.25 0.19 0.19
  0.19 0.06]
 [0.   0.   0.   0.5  0.25 0.25 0.25 0.12 0.19 0.31 0.25 0.19 0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.25 0.38 0.38 0.5  0.56 0.31 0.38 0.44 0.5  0.5
  0.5  0.5 ]
 [0.   0.   0.   0.   0.   0.25 0.38 0.25 0.31 0.19 0.25 0.31 0.25 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.25 0.38 0.31 0.31 0.12 0.06 0.25 0.25
  0.25 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.44 0.12 0.19 0.25 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.19 0.25 0.31 0.12 0.12
  0.12 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.19 0.25 0.19 0.19
  0.19 0.06]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.38 0.31 0.31
  0.31 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.25 0.25
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.19
  0.19 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: True, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1.  1. -1.  1.  1.  1.  1.]
select_j_column
[ 1.  1.  1.  1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
7
new_column
[[-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  17 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  1 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.8 1.1 0.9 0.8 0.6 0.9 0.7 1.1 0.8]
 [0.  0.  0.9 0.5 0.4 0.2 0.3 0.5 0.5 0.8]
 [0.  0.  0.  1.  0.9 0.9 0.8 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.3 0.3 0.8 0.2 0.4 0.7]
 [0.  0.  0.  0.  0.  0.4 0.5 0.1 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.24 0.35 0.24 0.35 0.47 0.24 0.29 0.29 0.35 0.29 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.18 0.53 0.29 0.29 0.18 0.06 0.   0.24 0.18 0.24 0.18 0.18
  0.18 0.06 0.29]
 [0.   0.   0.   0.47 0.24 0.24 0.24 0.12 0.18 0.29 0.24 0.18 0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.24 0.35 0.35 0.47 0.53 0.29 0.35 0.41 0.47 0.47
  0.47 0.47 0.24]
 [0.   0.   0.   0.   0.   0.24 0.35 0.24 0.29 0.18 0.24 0.29 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.24 0.35 0.29 0.29 0.12 0.06 0.24 0.24
  0.24 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.41 0.12 0.18 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.24 0.29 0.12 0.12
  0.12 0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.24 0.18 0.18
  0.18 0.06 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.29 0.29
  0.29 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.24 0.24
  0.24 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18
  0.18 0.29 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]
small_class len :2,large_class len:8, small_class sample:103,large_class sample len:459
cluster len:1
cluster contain small sample len:[0.18]
before change column:	[-1, 1, -1, 1, 1, 1, 1, 1, 1, 1]
after change column:	[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 459, -1.0: 103})
after change, the sample len:	Counter({-1.0: 562})


============== iter  18 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  1 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.8 1.1 0.9 0.8 0.6 0.9 0.7 1.1 0.8]
 [0.  0.  0.9 0.5 0.4 0.2 0.3 0.5 0.5 0.8]
 [0.  0.  0.  1.  0.9 0.9 0.8 0.8 0.8 0.9]
 [0.  0.  0.  0.  0.3 0.3 0.8 0.2 0.4 0.7]
 [0.  0.  0.  0.  0.  0.4 0.5 0.1 0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.5 0.3 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.29 0.24 0.35 0.24 0.35 0.47 0.24 0.29 0.29 0.35 0.29 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.18 0.53 0.29 0.29 0.18 0.06 0.   0.24 0.18 0.24 0.18 0.18
  0.18 0.06 0.29]
 [0.   0.   0.   0.47 0.24 0.24 0.24 0.12 0.18 0.29 0.24 0.18 0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.24 0.35 0.35 0.47 0.53 0.29 0.35 0.41 0.47 0.47
  0.47 0.47 0.24]
 [0.   0.   0.   0.   0.   0.24 0.35 0.24 0.29 0.18 0.24 0.29 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.24 0.35 0.29 0.29 0.12 0.06 0.24 0.24
  0.24 0.35 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.41 0.12 0.18 0.24 0.24
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.18 0.24 0.29 0.12 0.12
  0.12 0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.18 0.24 0.18 0.18
  0.18 0.06 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.35 0.29 0.29
  0.29 0.18 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.24 0.24
  0.24 0.24 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.18
  0.18 0.29 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.12 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1. -1. -1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  19 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  1 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.9 1.2 1.  0.9 0.7 0.9 0.8 1.1 0.8]
 [0.  0.  0.9 0.5 0.4 0.2 0.4 0.5 0.6 0.9]
 [0.  0.  0.  1.  0.9 0.9 0.9 0.8 0.9 1. ]
 [0.  0.  0.  0.  0.3 0.3 0.9 0.2 0.5 0.8]
 [0.  0.  0.  0.  0.  0.4 0.6 0.1 0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.6 0.3 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.4 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.28 0.22 0.33 0.22 0.33 0.44 0.22 0.28 0.28 0.33 0.28 0.22 0.22
  0.22 0.22 0.22 0.28]
 [0.   0.   0.17 0.5  0.28 0.28 0.17 0.06 0.   0.22 0.17 0.22 0.17 0.17
  0.17 0.06 0.28 0.44]
 [0.   0.   0.   0.44 0.22 0.22 0.22 0.11 0.17 0.28 0.22 0.17 0.   0.
  0.   0.11 0.22 0.28]
 [0.   0.   0.   0.   0.22 0.33 0.33 0.44 0.5  0.28 0.33 0.39 0.44 0.44
  0.44 0.44 0.22 0.17]
 [0.   0.   0.   0.   0.   0.22 0.33 0.22 0.28 0.17 0.22 0.28 0.22 0.22
  0.22 0.22 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.22 0.33 0.28 0.28 0.11 0.06 0.22 0.22
  0.22 0.33 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.22 0.17 0.39 0.11 0.17 0.22 0.22
  0.22 0.22 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.17 0.22 0.28 0.11 0.11
  0.11 0.   0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.17 0.22 0.17 0.17
  0.17 0.06 0.28 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.28 0.33 0.28 0.28
  0.28 0.17 0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.06 0.22 0.22
  0.22 0.22 0.33 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.17
  0.17 0.28 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[ 1. -1. -1. -1. -1. -1. -1. -1. -1.  1.]
select_j_column
[-1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
most_cplx_inx
9
new_column
[[-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]]


============== iter  20 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
confusion matrix
[[ 0  0  4  0  4  3  9  0  0  0]
 [ 0 13  1  0  5  2  0  0  0  0]
 [ 0  1 12  2  0  4  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  0.9 1.3 1.1 0.9 0.8 0.9 0.9 1.2 0.8]
 [0.  0.  1.  0.6 0.4 0.3 0.4 0.6 0.7 0.9]
 [0.  0.  0.  1.  1.  0.9 1.  0.8 0.9 1.1]
 [0.  0.  0.  0.  0.4 0.3 1.  0.2 0.5 0.9]
 [0.  0.  0.  0.  0.  0.5 0.6 0.2 0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.26 0.21 0.32 0.21 0.32 0.42 0.21 0.26 0.26 0.32 0.26 0.21 0.21
  0.21 0.21 0.21 0.26 0.32]
 [0.   0.   0.16 0.47 0.26 0.26 0.16 0.05 0.   0.21 0.16 0.21 0.16 0.16
  0.16 0.05 0.26 0.42 0.37]
 [0.   0.   0.   0.42 0.21 0.21 0.21 0.11 0.16 0.26 0.21 0.16 0.   0.
  0.   0.11 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.21 0.32 0.32 0.42 0.47 0.26 0.32 0.37 0.42 0.42
  0.42 0.42 0.21 0.16 0.21]
 [0.   0.   0.   0.   0.   0.21 0.32 0.21 0.26 0.16 0.21 0.26 0.21 0.21
  0.21 0.21 0.21 0.26 0.42]
 [0.   0.   0.   0.   0.   0.   0.21 0.32 0.26 0.26 0.11 0.05 0.21 0.21
  0.21 0.32 0.42 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.21 0.16 0.37 0.11 0.16 0.21 0.21
  0.21 0.21 0.21 0.37 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.16 0.21 0.26 0.11 0.11
  0.11 0.   0.21 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.16 0.21 0.16 0.16
  0.16 0.05 0.26 0.42 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.32 0.26 0.26
  0.26 0.16 0.37 0.32 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.21 0.21
  0.21 0.21 0.32 0.47 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.16
  0.16 0.26 0.37 0.42 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.11 0.21 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.21 0.37 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.16 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.16]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[-1.  1. -1.  1.  1.  1.  1.  1.  1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]]
small_class len :2,large_class len:8, small_class sample:97,large_class sample len:465
cluster len:1
cluster contain small sample len:[0.17]
before change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, 1]
after change column:	[1, -1, -1, -1, -1, -1, -1, -1, -1, 1]


============== iter  21 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
19 classifiers pre label
Counter({-1.0: 188})
confusion matrix
[[ 0  0  4  0  4  3  9  0  0  0]
 [ 0 13  1  0  5  2  0  0  0  0]
 [ 0  1 12  2  0  4  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 19  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  1  0 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  5  1 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  1.  1.4 1.2 1.  0.9 1.  1.  1.3 0.8]
 [0.  0.  1.  0.6 0.4 0.3 0.4 0.6 0.7 1. ]
 [0.  0.  0.  1.  1.  0.9 1.  0.8 0.9 1.2]
 [0.  0.  0.  0.  0.4 0.3 1.  0.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.5 0.6 0.2 0.9 1.2]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.25 0.2  0.3  0.2  0.3  0.4  0.2  0.25 0.25 0.3  0.25 0.2  0.2
  0.2  0.2  0.2  0.25 0.3  0.25]
 [0.   0.   0.15 0.45 0.25 0.25 0.15 0.05 0.   0.2  0.15 0.2  0.15 0.15
  0.15 0.05 0.25 0.4  0.35 0.  ]
 [0.   0.   0.   0.4  0.2  0.2  0.2  0.1  0.15 0.25 0.2  0.15 0.   0.
  0.   0.1  0.2  0.25 0.2  0.15]
 [0.   0.   0.   0.   0.2  0.3  0.3  0.4  0.45 0.25 0.3  0.35 0.4  0.4
  0.4  0.4  0.2  0.15 0.2  0.45]
 [0.   0.   0.   0.   0.   0.2  0.3  0.2  0.25 0.15 0.2  0.25 0.2  0.2
  0.2  0.2  0.2  0.25 0.4  0.25]
 [0.   0.   0.   0.   0.   0.   0.2  0.3  0.25 0.25 0.1  0.05 0.2  0.2
  0.2  0.3  0.4  0.35 0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.2  0.15 0.35 0.1  0.15 0.2  0.2
  0.2  0.2  0.2  0.35 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.15 0.2  0.25 0.1  0.1
  0.1  0.   0.2  0.35 0.3  0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.15 0.2  0.15 0.15
  0.15 0.05 0.25 0.4  0.35 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.3  0.25 0.25
  0.25 0.15 0.35 0.3  0.35 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.2  0.2
  0.2  0.2  0.3  0.45 0.3  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.15
  0.15 0.25 0.35 0.4  0.25 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.1  0.2  0.25 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.1  0.2  0.25 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.1  0.2  0.25 0.2  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.2  0.35 0.3  0.05]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.15 0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.15 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1.  1. -1. -1.  1. -1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
7
new_column
[[ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]]


============== iter  22 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
19 classifiers pre label
Counter({-1.0: 188})
20 classifiers pre label
Counter({1.0: 114, -1.0: 74})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  1 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  1.1 1.5 1.2 1.1 0.9 1.1 1.  1.3 0.8]
 [0.  0.  1.  0.7 0.4 0.4 0.4 0.7 0.8 1.1]
 [0.  0.  0.  1.1 1.  1.  1.  0.9 1.  1.3]
 [0.  0.  0.  0.  0.5 0.3 1.1 0.2 0.5 1. ]
 [0.  0.  0.  0.  0.  0.6 0.6 0.3 1.  1.3]
 [0.  0.  0.  0.  0.  0.  0.8 0.3 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.24 0.19 0.29 0.19 0.29 0.38 0.19 0.24 0.24 0.29 0.24 0.19 0.19
  0.19 0.19 0.19 0.24 0.29 0.24 0.33]
 [0.   0.   0.14 0.43 0.24 0.24 0.14 0.05 0.   0.19 0.14 0.19 0.14 0.14
  0.14 0.05 0.24 0.38 0.33 0.   0.19]
 [0.   0.   0.   0.38 0.19 0.19 0.19 0.1  0.14 0.24 0.19 0.14 0.   0.
  0.   0.1  0.19 0.24 0.19 0.14 0.33]
 [0.   0.   0.   0.   0.19 0.29 0.29 0.38 0.43 0.24 0.29 0.33 0.38 0.38
  0.38 0.38 0.19 0.14 0.19 0.43 0.24]
 [0.   0.   0.   0.   0.   0.19 0.29 0.19 0.24 0.14 0.19 0.24 0.19 0.19
  0.19 0.19 0.19 0.24 0.38 0.24 0.43]
 [0.   0.   0.   0.   0.   0.   0.19 0.29 0.24 0.24 0.1  0.05 0.19 0.19
  0.19 0.29 0.38 0.33 0.29 0.24 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.19 0.14 0.33 0.1  0.14 0.19 0.19
  0.19 0.19 0.19 0.33 0.19 0.14 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.14 0.19 0.24 0.1  0.1
  0.1  0.   0.19 0.33 0.29 0.05 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.14 0.19 0.14 0.14
  0.14 0.05 0.24 0.38 0.33 0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.29 0.24 0.24
  0.24 0.14 0.33 0.29 0.33 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.19 0.19
  0.19 0.19 0.29 0.43 0.29 0.14 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14
  0.14 0.24 0.33 0.38 0.24 0.19 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.1  0.19 0.24 0.19 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.1  0.19 0.24 0.19 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.1  0.19 0.24 0.19 0.14 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.19 0.33 0.29 0.05 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.19 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[ 1. -1. -1. -1.  1. -1. -1.  1. -1.  1.]
most_cplx_inx
7
new_column
[[-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]]


============== iter  23 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
19 classifiers pre label
Counter({-1.0: 188})
20 classifiers pre label
Counter({1.0: 114, -1.0: 74})
21 classifiers pre label
Counter({1.0: 105, -1.0: 83})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  0  0  1  3  2  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 0  0  0  0  0  1 14  6  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  1.2 1.5 1.3 1.1 1.  1.2 1.  1.4 0.8]
 [0.  0.  1.1 0.7 0.5 0.4 0.4 0.8 0.8 1.2]
 [0.  0.  0.  1.2 1.  1.1 1.1 0.9 1.1 1.3]
 [0.  0.  0.  0.  0.6 0.3 1.1 0.3 0.5 1.1]
 [0.  0.  0.  0.  0.  0.7 0.7 0.3 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.6 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.18 0.27 0.18 0.27 0.36 0.18 0.23 0.23 0.27 0.23 0.18 0.18
  0.18 0.18 0.18 0.23 0.27 0.23 0.32 0.36]
 [0.   0.   0.14 0.41 0.23 0.23 0.14 0.05 0.   0.18 0.14 0.18 0.14 0.14
  0.14 0.05 0.23 0.36 0.32 0.   0.18 0.32]
 [0.   0.   0.   0.36 0.18 0.18 0.18 0.09 0.14 0.23 0.18 0.14 0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.18 0.27 0.27 0.36 0.41 0.23 0.27 0.32 0.36 0.36
  0.36 0.36 0.18 0.14 0.18 0.41 0.23 0.09]
 [0.   0.   0.   0.   0.   0.18 0.27 0.18 0.23 0.14 0.18 0.23 0.18 0.18
  0.18 0.18 0.18 0.23 0.36 0.23 0.41 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.27 0.23 0.23 0.09 0.05 0.18 0.18
  0.18 0.27 0.36 0.32 0.27 0.23 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.14 0.32 0.09 0.14 0.18 0.18
  0.18 0.18 0.18 0.32 0.18 0.14 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.14 0.18 0.23 0.09 0.09
  0.09 0.   0.18 0.32 0.27 0.05 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.14 0.18 0.14 0.14
  0.14 0.05 0.23 0.36 0.32 0.   0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.23 0.23
  0.23 0.14 0.32 0.27 0.32 0.18 0.27 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.18 0.18
  0.18 0.18 0.27 0.41 0.27 0.14 0.23 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14
  0.14 0.23 0.32 0.36 0.23 0.18 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18 0.32 0.27 0.05 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.18 0.23 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.36 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.32 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]]
small_class len :1,large_class len:9, small_class sample:60,large_class sample len:502
cluster len:1
cluster contain small sample len:[0.11]
before change column:	[1, 1, -1, 1, 1, 1, 1, 1, 1, 1]
after change column:	[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
before change, the sample len:	Counter({1.0: 502, -1.0: 60})
after change, the sample len:	Counter({-1.0: 562})


============== iter  24 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.  1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.  1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
19 classifiers pre label
Counter({-1.0: 188})
20 classifiers pre label
Counter({1.0: 114, -1.0: 74})
21 classifiers pre label
Counter({1.0: 105, -1.0: 83})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  0  0  1  3  2  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 0  0  0  0  0  1 14  6  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  1.2 1.5 1.3 1.1 1.  1.2 1.  1.4 0.8]
 [0.  0.  1.1 0.7 0.5 0.4 0.4 0.8 0.8 1.2]
 [0.  0.  0.  1.2 1.  1.1 1.1 0.9 1.1 1.3]
 [0.  0.  0.  0.  0.6 0.3 1.1 0.3 0.5 1.1]
 [0.  0.  0.  0.  0.  0.7 0.7 0.3 1.1 1.3]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.6 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.6 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.23 0.18 0.27 0.18 0.27 0.36 0.18 0.23 0.23 0.27 0.23 0.18 0.18
  0.18 0.18 0.18 0.23 0.27 0.23 0.32 0.36]
 [0.   0.   0.14 0.41 0.23 0.23 0.14 0.05 0.   0.18 0.14 0.18 0.14 0.14
  0.14 0.05 0.23 0.36 0.32 0.   0.18 0.32]
 [0.   0.   0.   0.36 0.18 0.18 0.18 0.09 0.14 0.23 0.18 0.14 0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.18 0.27 0.27 0.36 0.41 0.23 0.27 0.32 0.36 0.36
  0.36 0.36 0.18 0.14 0.18 0.41 0.23 0.09]
 [0.   0.   0.   0.   0.   0.18 0.27 0.18 0.23 0.14 0.18 0.23 0.18 0.18
  0.18 0.18 0.18 0.23 0.36 0.23 0.41 0.18]
 [0.   0.   0.   0.   0.   0.   0.18 0.27 0.23 0.23 0.09 0.05 0.18 0.18
  0.18 0.27 0.36 0.32 0.27 0.23 0.32 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.18 0.14 0.32 0.09 0.14 0.18 0.18
  0.18 0.18 0.18 0.32 0.18 0.14 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.14 0.18 0.23 0.09 0.09
  0.09 0.   0.18 0.32 0.27 0.05 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.14 0.18 0.14 0.14
  0.14 0.05 0.23 0.36 0.32 0.   0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.27 0.23 0.23
  0.23 0.14 0.32 0.27 0.32 0.18 0.27 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.05 0.18 0.18
  0.18 0.18 0.27 0.41 0.27 0.14 0.23 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.14
  0.14 0.23 0.32 0.36 0.23 0.18 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.18 0.23 0.18 0.14 0.32 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.18 0.32 0.27 0.05 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.14 0.18 0.23 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.14 0.36 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.32 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.18 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[ 1.  1. -1. -1. -1.  1.  1. -1. -1. -1.]
select_j_column
[-1. -1. -1.  1.  1. -1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]]


============== iter  25 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.  1. -1. -1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1. -1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1. -1. -1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.  1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
19 classifiers pre label
Counter({-1.0: 188})
20 classifiers pre label
Counter({1.0: 114, -1.0: 74})
21 classifiers pre label
Counter({1.0: 105, -1.0: 83})
22 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  0  0  1  3  2  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2  0  0  0  0 11  0  0]
 [ 0  0  0  0  0  1 14  6  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  1.2 1.6 1.3 1.1 1.  1.2 1.  1.5 0.9]
 [0.  0.  1.2 0.7 0.5 0.4 0.4 0.8 0.9 1.3]
 [0.  0.  0.  1.3 1.1 1.2 1.2 1.  1.1 1.3]
 [0.  0.  0.  0.  0.6 0.3 1.1 0.3 0.6 1.2]
 [0.  0.  0.  0.  0.  0.7 0.7 0.3 1.2 1.4]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.7 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.22 0.17 0.26 0.17 0.26 0.35 0.17 0.22 0.22 0.26 0.22 0.17 0.17
  0.17 0.17 0.17 0.22 0.26 0.22 0.3  0.35 0.26]
 [0.   0.   0.13 0.39 0.22 0.22 0.13 0.04 0.   0.17 0.13 0.17 0.13 0.13
  0.13 0.04 0.22 0.35 0.3  0.   0.17 0.3  0.13]
 [0.   0.   0.   0.35 0.17 0.17 0.17 0.09 0.13 0.22 0.17 0.13 0.   0.
  0.   0.09 0.17 0.22 0.17 0.13 0.3  0.26 0.09]
 [0.   0.   0.   0.   0.17 0.26 0.26 0.35 0.39 0.22 0.26 0.3  0.35 0.35
  0.35 0.35 0.17 0.13 0.17 0.39 0.22 0.09 0.35]
 [0.   0.   0.   0.   0.   0.17 0.26 0.17 0.22 0.13 0.17 0.22 0.17 0.17
  0.17 0.17 0.17 0.22 0.35 0.22 0.39 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.17 0.26 0.22 0.22 0.09 0.04 0.17 0.17
  0.17 0.26 0.35 0.3  0.26 0.22 0.3  0.17 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.13 0.3  0.09 0.13 0.17 0.17
  0.17 0.17 0.17 0.3  0.17 0.13 0.13 0.17 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.04 0.13 0.17 0.22 0.09 0.09
  0.09 0.   0.17 0.3  0.26 0.04 0.22 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.13 0.17 0.13 0.13
  0.13 0.04 0.22 0.35 0.3  0.   0.17 0.3  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.26 0.22 0.22
  0.22 0.13 0.3  0.26 0.3  0.17 0.26 0.13 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.04 0.17 0.17
  0.17 0.17 0.26 0.39 0.26 0.13 0.22 0.17 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.13
  0.13 0.22 0.3  0.35 0.22 0.17 0.26 0.22 0.04]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.17 0.22 0.17 0.13 0.3  0.26 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.17 0.22 0.17 0.13 0.3  0.26 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.09 0.17 0.22 0.17 0.13 0.3  0.26 0.09]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.3  0.26 0.04 0.22 0.26 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.13 0.17 0.22 0.22 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.13 0.35 0.26 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3  0.13 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.3  0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: True, 4: None, 5: None, 6: None, 7: None, 8: True, 9: True}
select_i_column
[-1. -1. -1.  1. -1. -1. -1. -1.  1.  1.]
select_j_column
[-1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
most_cplx_inx
0
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]]


============== iter  26 ================
current matrix is 
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({1.0: 97, -1.0: 91})
1 classifiers pre label
Counter({-1.0: 188})
2 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
3 classifiers pre label
Counter({1.0: 169, -1.0: 19})
4 classifiers pre label
Counter({-1.0: 139, 1.0: 49})
5 classifiers pre label
Counter({-1.0: 99, 1.0: 89})
6 classifiers pre label
Counter({-1.0: 188})
7 classifiers pre label
Counter({-1.0: 188})
8 classifiers pre label
Counter({-1.0: 188})
9 classifiers pre label
Counter({-1.0: 118, 1.0: 70})
10 classifiers pre label
Counter({-1.0: 147, 1.0: 41})
11 classifiers pre label
Counter({-1.0: 128, 1.0: 60})
12 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
13 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
14 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
15 classifiers pre label
Counter({-1.0: 188})
16 classifiers pre label
Counter({-1.0: 135, 1.0: 53})
17 classifiers pre label
Counter({1.0: 136, -1.0: 52})
18 classifiers pre label
Counter({-1.0: 101, 1.0: 87})
19 classifiers pre label
Counter({-1.0: 188})
20 classifiers pre label
Counter({1.0: 114, -1.0: 74})
21 classifiers pre label
Counter({1.0: 105, -1.0: 83})
22 classifiers pre label
Counter({-1.0: 169, 1.0: 19})
23 classifiers pre label
Counter({1.0: 142, -1.0: 46})
confusion matrix
[[ 0  1  4  0  2  2  9  2  0  0]
 [ 0 15  1  0  4  0  0  1  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  5  0  2  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  0 13  1  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  1 14  5  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]
row HD
[[0.  1.2 1.7 1.4 1.1 1.  1.2 1.  1.6 1. ]
 [0.  0.  1.3 0.8 0.5 0.4 0.4 0.8 1.  1.4]
 [0.  0.  0.  1.3 1.2 1.3 1.3 1.1 1.1 1.3]
 [0.  0.  0.  0.  0.7 0.4 1.2 0.4 0.6 1.2]
 [0.  0.  0.  0.  0.  0.7 0.7 0.3 1.3 1.5]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.8 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.21 0.17 0.25 0.17 0.25 0.33 0.17 0.21 0.21 0.25 0.21 0.17 0.17
  0.17 0.17 0.17 0.21 0.25 0.21 0.29 0.33 0.25 0.12]
 [0.   0.   0.12 0.38 0.21 0.21 0.12 0.04 0.   0.17 0.12 0.17 0.12 0.12
  0.12 0.04 0.21 0.33 0.29 0.   0.17 0.29 0.12 0.25]
 [0.   0.   0.   0.33 0.17 0.17 0.17 0.08 0.12 0.21 0.17 0.12 0.   0.
  0.   0.08 0.17 0.21 0.17 0.12 0.29 0.25 0.08 0.29]
 [0.   0.   0.   0.   0.17 0.25 0.25 0.33 0.38 0.21 0.25 0.29 0.33 0.33
  0.33 0.33 0.17 0.12 0.17 0.38 0.21 0.08 0.33 0.12]
 [0.   0.   0.   0.   0.   0.17 0.25 0.17 0.21 0.12 0.17 0.21 0.17 0.17
  0.17 0.17 0.17 0.21 0.33 0.21 0.38 0.17 0.25 0.12]
 [0.   0.   0.   0.   0.   0.   0.17 0.25 0.21 0.21 0.08 0.04 0.17 0.17
  0.17 0.25 0.33 0.29 0.25 0.21 0.29 0.17 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.17 0.12 0.29 0.08 0.12 0.17 0.17
  0.17 0.17 0.17 0.29 0.17 0.12 0.12 0.17 0.08 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.04 0.12 0.17 0.21 0.08 0.08
  0.08 0.   0.17 0.29 0.25 0.04 0.21 0.25 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.12 0.17 0.12 0.12
  0.12 0.04 0.21 0.33 0.29 0.   0.17 0.29 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.25 0.21 0.21
  0.21 0.12 0.29 0.25 0.29 0.17 0.25 0.12 0.29 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.04 0.17 0.17
  0.17 0.17 0.25 0.38 0.25 0.12 0.21 0.17 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.12
  0.12 0.21 0.29 0.33 0.21 0.17 0.25 0.21 0.04 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.08 0.17 0.21 0.17 0.12 0.29 0.25 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.08 0.17 0.21 0.17 0.12 0.29 0.25 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.08 0.17 0.21 0.17 0.12 0.29 0.25 0.08 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.17 0.29 0.25 0.04 0.21 0.25 0.17 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.12 0.17 0.21 0.21 0.25 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.12 0.33 0.25 0.21 0.29 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.12 0.17 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.17 0.29 0.12 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: True, 1: None, 2: None, 3: None, 4: None, 5: None, 6: None, 7: True, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.07692307692307693
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})

**********      classifier acc  **************
[0.681, 0.819, 0.91, 0.771, 0.798, 0.718, 0.713, 0.894, 0.819, 0.654, 0.83, 0.771, 0.91, 0.91, 0.91, 0.894, 0.835, 0.846, 0.681, 0.819, 0.75, 0.617, 0.723, 0.649]
before cutting matrix
[[ 1.  1. -1. -1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1.
  -1.  1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1.  1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
  -1. -1. -1.  1. -1.  1.]
 [ 1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1.  1.
   1. -1. -1. -1.  1. -1.]
 [-1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
  -1. -1. -1. -1. -1.  1.]
 [-1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.  1.
   1. -1.  1.  1. -1.  1.]
 [ 1. -1. -1.  1.  1.  1. -1. -1. -1.  1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1. -1. -1.  1. -1.  1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1.
   1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1. -1.  1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
   1. -1.  1.  1.  1. -1.]
 [-1.  1. -1. -1. -1.  1.  1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.
  -1.  1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({1.0: 405, -1.0: 157})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({1.0: 405, -1.0: 157})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({1.0: 283, -1.0: 279})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 382, 1.0: 180})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 382, 1.0: 180})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 355, 1.0: 207})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 355, 1.0: 207})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 338, 1.0: 224})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 338, 1.0: 224})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({1.0: 310, -1.0: 252})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({1.0: 310, -1.0: 252})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 347, -1.0: 215})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({1.0: 347, -1.0: 215})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 290, -1.0: 272})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({1.0: 290, -1.0: 272})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 383, 1.0: 179})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 383, 1.0: 179})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
Counter({1.0: 322, -1.0: 240})
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
positive and negative ratio
Counter({1.0: 322, -1.0: 240})
after cutting matrix
[[ 1.  1. -1. -1. -1.  1.  1. -1. -1. -1. -1.  1. -1. -1.  1.]
 [-1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1.  1. -1.  1. -1. -1. -1.  1.  1.  1. -1. -1.  1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [ 1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.]
 [ 1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [ 1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.  1.  1. -1.]
 [-1. -1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1. -1. -1.]
 [-1.  1. -1. -1.  1. -1.  1.  1. -1. -1. -1. -1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 299, 1.0: 263})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 407, 1.0: 155})
Counter({1.0: 283, -1.0: 279})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 465, 1.0: 97})
Counter({-1.0: 398, 1.0: 164})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 502, 1.0: 60})
Counter({-1.0: 519, 1.0: 43})
Counter({-1.0: 386, 1.0: 176})
Counter({1.0: 355, -1.0: 207})
Counter({-1.0: 465, 1.0: 97})
cutting matrix's confusion matrix
[[ 0  1  4  0  2  4  9  0  0  0]
 [ 0 15  1  0  4  1  0  0  0  0]
 [ 0  4 12  2  0  1  3  0  0  0]
 [ 0  5  0 13  0  1  0  0  0  0]
 [ 0  2  0  0 17  7  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [ 0  0  0  0  0  1 13  0  0  0]
 [ 0  2  2 11  0  0  0  0  0  0]
 [ 0  0  0  1  0  6 14  0  0  0]
 [ 0  0  0  0  0 12  2  0  0  0]]


SVM classifier
Time: 2019-01-10 15:31:56
FS: tree
Dataset： led7digit
ECOC: SAT_ECOC SR
Using KNN-Decoding
base_M is
[[ 0.  1.  0. -1.  0.  0. -1.  0.  0. -1.  0.  0.  1.  0.  1.]
 [ 1.  0.  1. -1. -1.  0.  1. -1.  1. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.]
 [ 1.  1.  0.  0.  0.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.]
 [ 0. -1. -1.  0. -1.  0. -1.  1. -1. -1. -1.  0. -1.  0. -1.]
 [ 1.  1.  0.  0.  1.  0.  0. -1. -1.  1. -1. -1.  0. -1.  1.]
 [-1.  0.  0.  0.  0.  0. -1.  0.  1. -1.  0.  0.  1.  0.  1.]
 [-1. -1.  0.  0.  1. -1.  0. -1.  0.  1.  0.  1.  1.  0.  1.]
 [ 0. -1. -1.  0. -1. -1.  1. -1. -1.  0.  1. -1. -1. -1.  1.]
 [ 1.  0.  1.  1. -1.  1.  0.  0.  0.  0.  0.  0.  0. -1. -1.]]


============== iter  1 ================
current matrix is 
[ 0. -1.  1.  1.  1. -1.  0. -1. -1.  0.]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
confusion matrix
[[15  3  2  0  0  0  0  0  0  0]
 [ 2 15  4  0  0  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2  7 17  0  0  0  0  0  0  0]
 [ 0 13  3  0  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [ 1]]


============== iter  2 ================
current matrix is 
[[ 0.  0.]
 [-1.  0.]
 [ 1. -1.]
 [ 1.  0.]
 [ 1.  0.]
 [-1.  0.]
 [ 0.  0.]
 [-1.  1.]
 [-1.  0.]
 [ 0.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
confusion matrix
[[15  3  0  2  0  0  0  0  0  0]
 [ 2 15  0  4  0  0  0  0  0  0]
 [15  7  0  0  0  0  0  0  0  0]
 [ 0 19  0  0  0  0  0  0  0  0]
 [ 2  7  0 17  0  0  0  0  0  0]
 [ 0 13  0  3  0  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2 13  0  0  0  0  0  0  0  0]
 [19  2  0  0  0  0  0  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.1 0.1 0.1 0.  0.2 0.1 0.1]
 [0.  0.  0.2 0.1 0.1 0.  0.1 0.1 0.  0.2]
 [0.  0.  0.  0.1 0.1 0.2 0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.1 0.1 0.2 0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.1 0.1 0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.2 0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0. 4.]
 [0. 0.]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [ 1]
 [ 1]
 [-1]]


============== iter  3 ================
current matrix is 
[[ 0.  0.  0.]
 [-1.  0.  0.]
 [ 1. -1.  0.]
 [ 1.  0. -1.]
 [ 1.  0.  0.]
 [-1.  0.  1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]
 [-1.  0.  1.]
 [ 0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  3  0  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0 11  0  0  0  0]
 [19  0  0  0  0  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.2 0.  0.3 0.2 0.2]
 [0.  0.  0.2 0.2 0.1 0.1 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.2 0.1 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 0.  1.  0.  0. -1.  0.  0.  0. -1.  1.]
most_cplx_inx
6
new_column
None


============== iter  4 ================
current matrix is 
[[ 0.  0.  0.]
 [-1.  0.  0.]
 [ 1. -1.  0.]
 [ 1.  0. -1.]
 [ 1.  0.  0.]
 [-1.  0.  1.]
 [ 0.  0.  0.]
 [-1.  1.  1.]
 [-1.  0.  1.]
 [ 0.  1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  3  0  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0 11  0  0  0  0]
 [19  0  0  0  0  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.2 0.1 0.2 0.  0.3 0.2 0.2]
 [0.  0.  0.2 0.2 0.1 0.1 0.1 0.2 0.1 0.3]
 [0.  0.  0.  0.2 0.1 0.3 0.2 0.3 0.3 0.3]
 [0.  0.  0.  0.  0.1 0.2 0.2 0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.2 0.1 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.2 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.3 0.2 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.67 2.67]
 [0.   0.   1.67]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:5, small_class sample:61,large_class sample len:294
extra_class: 4,extra_sample len: 207
cluster len:1
cluster contain small sample len:[0.23]
before change column:	[0, 0, 0, 1, -1, -1, 0, -1, -1, -1]
after change column:	[0, 0, 0, 1, -1, -1, 0, -1, -1, -1]


============== iter  5 ================
current matrix is 
[[ 0.  0.  0.  0.]
 [-1.  0.  0.  0.]
 [ 1. -1.  0.  0.]
 [ 1.  0. -1.  1.]
 [ 1.  0.  0. -1.]
 [-1.  0.  1. -1.]
 [ 0.  0.  0.  0.]
 [-1.  1.  1. -1.]
 [-1.  0.  1. -1.]
 [ 0.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  3  0  0  0  0]
 [ 0  5  0  0  0 14  0  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0 11  0  0  0  0]
 [19  0  0  0  0  2  0  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.1 0.2 0.3 0.2 0.3 0.  0.4 0.3 0.3]
 [0.  0.  0.2 0.3 0.2 0.2 0.1 0.3 0.2 0.4]
 [0.  0.  0.  0.3 0.2 0.4 0.2 0.4 0.4 0.4]
 [0.  0.  0.  0.  0.2 0.3 0.3 0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.2 0.3 0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.3 0.1 0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.4 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.1 0.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   2.   2.   1.  ]
 [0.   0.   1.25 1.75]
 [0.   0.   0.   1.25]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
select_j_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [ 1]]


============== iter  6 ================
current matrix is 
[[ 0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1.]
 [ 1. -1.  0.  0.  1.]
 [ 1.  0. -1.  1.  1.]
 [ 1.  0.  0. -1. -1.]
 [-1.  0.  1. -1. -1.]
 [ 0.  0.  0.  0.  1.]
 [-1.  1.  1. -1. -1.]
 [-1.  0.  1. -1.  1.]
 [ 0.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  0  0  3  0]
 [ 0  5  0  0  0  0  0  0 14  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0  0 11  0]
 [19  0  0  0  0  0  0  0  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.3 0.4 0.3 0.4 0.1 0.5 0.4 0.4]
 [0.  0.  0.2 0.3 0.3 0.3 0.1 0.4 0.2 0.4]
 [0.  0.  0.  0.3 0.3 0.5 0.2 0.5 0.4 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.2 0.3 0.3 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.4 0.1 0.1 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.5 0.3 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.2 0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  1.6 1.6 0.8 1. ]
 [0.  0.  1.  1.4 1.6]
 [0.  0.  0.  1.  1.6]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0. -1.  0.  0.  0.  0.  1.  0.  1.]
select_j_column
[-1. -1.  0.  0.  0.  0.  0.  0.  0.  1.]
most_cplx_inx
2
new_column
[[-1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]]


============== iter  7 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.]
 [-1.  0.  0.  0.  1. -1.]
 [ 1. -1.  0.  0.  1. -1.]
 [ 1.  0. -1.  1.  1.  0.]
 [ 1.  0.  0. -1. -1.  0.]
 [-1.  0.  1. -1. -1.  0.]
 [ 0.  0.  0.  0.  1.  0.]
 [-1.  1.  1. -1. -1.  1.]
 [-1.  0.  1. -1.  1.  0.]
 [ 0.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  0  0  3  0]
 [ 0  5  0  0  0  0  0  0 14  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0  0 11  0]
 [19  0  0  0  0  0  0  0  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.2 0.3 0.5 0.4 0.5 0.2 0.6 0.5 0.4]
 [0.  0.  0.2 0.4 0.4 0.4 0.2 0.5 0.3 0.4]
 [0.  0.  0.  0.4 0.4 0.6 0.3 0.6 0.5 0.4]
 [0.  0.  0.  0.  0.3 0.4 0.3 0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.2 0.3 0.4 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.4 0.2 0.1 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.33 1.33 0.67 0.83 1.33]
 [0.   0.   0.83 1.17 1.33 0.5 ]
 [0.   0.   0.   0.83 1.33 1.  ]
 [0.   0.   0.   0.   0.83 1.33]
 [0.   0.   0.   0.   0.   1.67]
 [0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  1.  1. -1. -1.  1. -1.  1.  1.]
select_j_column
[ 0.  1.  1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  8 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.]
 [-1.  0.  0.  0.  1. -1. -1.]
 [ 1. -1.  0.  0.  1. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.]
 [-1.  0.  1. -1. -1.  0.  1.]
 [ 0.  0.  0.  0.  1.  0. -1.]
 [-1.  1.  1. -1. -1.  1.  1.]
 [-1.  0.  1. -1.  1.  0. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  0  0  3  0]
 [ 0  5  0  0  0  0  0  0 14  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0  0 11  0]
 [19  0  0  0  0  0  0  0  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.3 0.4 0.6 0.5 0.6 0.3 0.7 0.6 0.5]
 [0.  0.  0.2 0.4 0.5 0.5 0.2 0.6 0.3 0.4]
 [0.  0.  0.  0.4 0.5 0.7 0.3 0.7 0.5 0.4]
 [0.  0.  0.  0.  0.4 0.5 0.3 0.7 0.3 0.4]
 [0.  0.  0.  0.  0.  0.2 0.4 0.4 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.2 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.3 0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.14 1.14 0.57 0.71 1.14 0.86]
 [0.   0.   0.71 1.   1.14 0.43 1.  ]
 [0.   0.   0.   0.71 1.14 0.86 0.71]
 [0.   0.   0.   0.   0.71 1.14 1.  ]
 [0.   0.   0.   0.   0.   1.43 1.29]
 [0.   0.   0.   0.   0.   0.   0.86]
 [0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]]
small_class len :1,large_class len:5, small_class sample:61,large_class sample len:294
extra_class: 4,extra_sample len: 207
cluster len:1
cluster contain small sample len:[0.23]
before change column:	[0, 0, -1, 1, 0, -1, -1, -1, -1, 0]
after change column:	[0, 0, -1, 1, 0, -1, -1, -1, -1, 1]
before change, the sample len:	Counter({-1.0: 294, 1.0: 61})
after change, the sample len:	Counter({-1.0: 294, 1.0: 115})


============== iter  9 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  0  0  3  0]
 [ 0  5  0  0  0  0  0  0 14  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0  0 11  0]
 [19  0  0  0  0  0  0  0  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.3 0.5 0.7 0.5 0.7 0.4 0.8 0.7 0.6]
 [0.  0.  0.3 0.5 0.5 0.6 0.3 0.7 0.4 0.5]
 [0.  0.  0.  0.5 0.6 0.7 0.3 0.7 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.6 0.4 0.8 0.4 0.4]
 [0.  0.  0.  0.  0.  0.3 0.5 0.5 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.5 0.2 0.2 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.7 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.   0.5  0.62 1.   0.75 0.62]
 [0.   0.   0.62 0.88 1.   0.38 0.88 0.62]
 [0.   0.   0.   0.62 1.   0.75 0.62 0.88]
 [0.   0.   0.   0.   0.62 1.   0.88 0.5 ]
 [0.   0.   0.   0.   0.   1.25 1.12 0.62]
 [0.   0.   0.   0.   0.   0.   0.75 1.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1.  1.  0. -1.  1.  0.  1. -1. -1.]
select_j_column
[ 0. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]


============== iter  10 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  0  0  3  0]
 [ 0  5  0  0  0  0  0  0 14  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0  0 11  0]
 [19  0  0  0  0  0  0  0  2  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.4 0.6 0.8 0.6 0.8 0.5 0.9 0.8 0.7]
 [0.  0.  0.3 0.5 0.5 0.7 0.3 0.8 0.4 0.5]
 [0.  0.  0.  0.5 0.6 0.8 0.3 0.8 0.5 0.5]
 [0.  0.  0.  0.  0.5 0.7 0.4 0.9 0.4 0.4]
 [0.  0.  0.  0.  0.  0.4 0.5 0.6 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.6 0.2 0.3 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.3 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.89 0.89 0.44 0.56 0.89 0.67 0.56 0.78]
 [0.   0.   0.56 0.78 0.89 0.33 0.78 0.56 0.78]
 [0.   0.   0.   0.56 0.89 0.67 0.56 0.78 0.56]
 [0.   0.   0.   0.   0.56 0.89 0.78 0.44 0.67]
 [0.   0.   0.   0.   0.   1.11 1.   0.56 0.89]
 [0.   0.   0.   0.   0.   0.   0.67 0.89 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.67 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 0. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 1]
 [ 1]]


============== iter  11 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
confusion matrix
[[15  1  0  0  2  0  2  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  3  0  0  0]
 [ 0  5  0  0  0  0 14  0  0  0]
 [ 2  2  0  0 17  0  5  0  0  0]
 [ 0  0  0  0  3  0 13  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  2  0  0  0]
 [ 2  0  0  0  0  0 12  0  0  0]]
row HD
[[0.  0.4 0.6 0.9 0.6 0.9 0.5 0.9 0.9 0.8]
 [0.  0.  0.3 0.6 0.5 0.8 0.3 0.8 0.5 0.6]
 [0.  0.  0.  0.6 0.6 0.9 0.3 0.8 0.6 0.6]
 [0.  0.  0.  0.  0.6 0.7 0.5 1.  0.5 0.5]
 [0.  0.  0.  0.  0.  0.5 0.5 0.6 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.7 0.3 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.4 0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.  0.8 0.8 0.4 0.5 0.8 0.6 0.5 0.7 0.7]
 [0.  0.  0.5 0.7 0.8 0.3 0.7 0.5 0.7 0.5]
 [0.  0.  0.  0.5 0.8 0.6 0.5 0.7 0.5 0.3]
 [0.  0.  0.  0.  0.5 0.8 0.7 0.4 0.6 0.5]
 [0.  0.  0.  0.  0.  1.  0.9 0.5 0.8 0.6]
 [0.  0.  0.  0.  0.  0.  0.6 0.8 0.6 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.6 0.1 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.6 0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0. -1.  0.  0.  1.  1.]
select_j_column
[ 0. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]]


============== iter  12 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  2  0  1  0]
 [ 0  5  0  0  0  0 13  0  1  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  1  0  1  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.4 0.6 1.  0.6 1.  0.5 0.9 1.  0.9]
 [0.  0.  0.3 0.7 0.5 0.9 0.3 0.8 0.6 0.7]
 [0.  0.  0.  0.7 0.6 1.  0.3 0.8 0.7 0.7]
 [0.  0.  0.  0.  0.7 0.8 0.6 1.1 0.6 0.6]
 [0.  0.  0.  0.  0.  0.6 0.5 0.6 0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.8 0.4 0.4 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.8 0.5 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.73 0.73 0.36 0.45 0.73 0.55 0.45 0.64 0.64 0.45]
 [0.   0.   0.45 0.64 0.73 0.27 0.64 0.45 0.64 0.45 0.55]
 [0.   0.   0.   0.45 0.73 0.55 0.45 0.64 0.45 0.27 0.36]
 [0.   0.   0.   0.   0.45 0.73 0.64 0.36 0.55 0.45 0.18]
 [0.   0.   0.   0.   0.   0.91 0.82 0.45 0.73 0.55 0.64]
 [0.   0.   0.   0.   0.   0.   0.55 0.73 0.55 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.55 0.09 0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.55 0.45 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.73 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0. -1.  0.  1.  0.  1.  1. -1.]
select_j_column
[ 0.  0. -1.  1.  0. -1. -1. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [ 1]
 [ 1]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [ 1]]


============== iter  13 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
confusion matrix
[[15  1  0  0  2  0  0  0  2  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  2  0  1  0]
 [ 0  5  0  0  0  0 13  0  1  0]
 [ 2  2  0  0 17  0  0  0  5  0]
 [ 0  0  0  0  3  0  0  0 13  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  1  0  1  0]
 [ 2  0  0  0  0  0  0  0 12  0]]
row HD
[[0.  0.4 0.7 1.1 0.6 1.1 0.6 1.  1.1 1. ]
 [0.  0.  0.4 0.8 0.5 1.  0.4 0.9 0.7 0.8]
 [0.  0.  0.  0.7 0.7 1.1 0.3 0.9 0.8 0.7]
 [0.  0.  0.  0.  0.8 0.9 0.6 1.2 0.7 0.6]
 [0.  0.  0.  0.  0.  0.7 0.6 0.7 0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.9 0.4 0.4 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.9 0.6 0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.7 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.67 0.67 0.33 0.42 0.67 0.5  0.42 0.58 0.58 0.42 0.33]
 [0.   0.   0.42 0.58 0.67 0.25 0.58 0.42 0.58 0.42 0.5  0.5 ]
 [0.   0.   0.   0.42 0.67 0.5  0.42 0.58 0.42 0.25 0.33 0.58]
 [0.   0.   0.   0.   0.42 0.67 0.58 0.33 0.5  0.42 0.17 0.33]
 [0.   0.   0.   0.   0.   0.83 0.75 0.42 0.67 0.5  0.58 0.25]
 [0.   0.   0.   0.   0.   0.   0.5  0.67 0.5  0.67 0.58 0.75]
 [0.   0.   0.   0.   0.   0.   0.   0.5  0.08 0.67 0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.42 0.33 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.67 0.58 0.67]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.42]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
select_j_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
most_cplx_inx
3
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]]
small_class len :1,large_class len:5, small_class sample:65,large_class sample len:276
extra_class: 4,extra_sample len: 221
cluster len:1
cluster contain small sample len:[0.23]
before change column:	[0, -1, 0, -1, -1, -1, -1, 0, 1, 0]
after change column:	[0, -1, 0, -1, -1, -1, -1, 0, 1, 0]


============== iter  14 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  0  0  0  2  0  0  0]
 [ 0  6  0  0  0  0 13  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  1  0  0  0  0  1  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.5 0.7 1.2 0.7 1.2 0.7 1.  1.2 1. ]
 [0.  0.  0.5 0.8 0.5 1.  0.4 1.  0.8 0.9]
 [0.  0.  0.  0.8 0.8 1.2 0.4 0.9 0.9 0.7]
 [0.  0.  0.  0.  0.8 0.9 0.6 1.3 0.8 0.7]
 [0.  0.  0.  0.  0.  0.7 0.6 0.8 0.9 1.1]
 [0.  0.  0.  0.  0.  0.  0.9 0.5 0.5 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.  0.7 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.62 0.62 0.31 0.38 0.62 0.46 0.38 0.54 0.54 0.38 0.31 0.46]
 [0.   0.   0.38 0.54 0.62 0.23 0.54 0.38 0.54 0.38 0.46 0.46 0.69]
 [0.   0.   0.   0.38 0.62 0.46 0.38 0.54 0.38 0.23 0.31 0.54 0.46]
 [0.   0.   0.   0.   0.38 0.62 0.54 0.31 0.46 0.38 0.15 0.31 0.46]
 [0.   0.   0.   0.   0.   0.77 0.69 0.38 0.62 0.46 0.54 0.23 0.46]
 [0.   0.   0.   0.   0.   0.   0.46 0.62 0.46 0.62 0.54 0.69 0.69]
 [0.   0.   0.   0.   0.   0.   0.   0.46 0.08 0.62 0.54 0.62 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.46 0.38 0.31 0.15 0.54]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62 0.54 0.62 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.23 0.38 0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.31 0.46]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.62]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  1. -1.  0.]
select_j_column
[ 0.  1.  1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
2
new_column
[[ 0]
 [ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]
 [ 1]
 [ 0]
 [ 0]
 [ 1]]


============== iter  15 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  0  0  0  2  0  0  0]
 [ 0  6  0  0  0  0 13  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  1  0  0  0  0  1  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.8 1.3 0.8 1.3 0.8 1.  1.2 1.1]
 [0.  0.  0.5 0.9 0.6 1.  0.4 1.1 0.9 0.9]
 [0.  0.  0.  0.9 0.9 1.2 0.4 1.  1.  0.7]
 [0.  0.  0.  0.  0.8 1.  0.7 1.4 0.9 0.8]
 [0.  0.  0.  0.  0.  0.8 0.7 0.9 1.  1.2]
 [0.  0.  0.  0.  0.  0.  0.9 0.6 0.6 1.1]
 [0.  0.  0.  0.  0.  0.  0.  1.1 0.8 0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.57 0.57 0.29 0.36 0.57 0.43 0.36 0.5  0.5  0.36 0.29 0.43 0.57]
 [0.   0.   0.36 0.5  0.57 0.21 0.5  0.36 0.5  0.36 0.43 0.43 0.64 0.5 ]
 [0.   0.   0.   0.36 0.57 0.43 0.36 0.5  0.36 0.21 0.29 0.5  0.43 0.5 ]
 [0.   0.   0.   0.   0.36 0.57 0.5  0.29 0.43 0.36 0.14 0.29 0.43 0.57]
 [0.   0.   0.   0.   0.   0.71 0.64 0.36 0.57 0.43 0.5  0.21 0.43 0.29]
 [0.   0.   0.   0.   0.   0.   0.43 0.57 0.43 0.57 0.5  0.64 0.64 0.64]
 [0.   0.   0.   0.   0.   0.   0.   0.43 0.07 0.57 0.5  0.57 0.43 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.43 0.36 0.29 0.14 0.5  0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.5  0.57 0.36 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.36 0.29 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.43 0.57]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.57 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  1. -1. -1.  1.  1.  0.  0.  1.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]]


============== iter  16 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  0  0  0  2  0  0  0]
 [ 0  6  0  0  0  0 13  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  1  0  0  0  0  1  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.9 1.4 0.9 1.3 0.8 1.1 1.3 1.2]
 [0.  0.  0.6 1.  0.7 1.  0.4 1.2 1.  1. ]
 [0.  0.  0.  1.  1.  1.3 0.5 1.1 1.1 0.7]
 [0.  0.  0.  0.  0.8 1.1 0.8 1.4 0.9 0.9]
 [0.  0.  0.  0.  0.  0.9 0.8 0.9 1.  1.3]
 [0.  0.  0.  0.  0.  0.  0.9 0.7 0.7 1.2]
 [0.  0.  0.  0.  0.  0.  0.  1.2 0.9 0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.8 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.9]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.53 0.53 0.27 0.33 0.53 0.4  0.33 0.47 0.47 0.33 0.27 0.4  0.53
  0.33]
 [0.   0.   0.33 0.47 0.53 0.2  0.47 0.33 0.47 0.33 0.4  0.4  0.6  0.47
  0.33]
 [0.   0.   0.   0.33 0.53 0.4  0.33 0.47 0.33 0.2  0.27 0.47 0.4  0.47
  0.4 ]
 [0.   0.   0.   0.   0.33 0.53 0.47 0.27 0.4  0.33 0.13 0.27 0.4  0.53
  0.27]
 [0.   0.   0.   0.   0.   0.67 0.6  0.33 0.53 0.4  0.47 0.2  0.4  0.27
  0.33]
 [0.   0.   0.   0.   0.   0.   0.4  0.53 0.4  0.53 0.47 0.6  0.6  0.6
  0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.4  0.07 0.53 0.47 0.53 0.4  0.47
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.33 0.27 0.13 0.47 0.53
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.47 0.53 0.33 0.4
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.33 0.27 0.4
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.4  0.53
  0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.53 0.4
  0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4
  0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1.  0. -1.  0.  0. -1. -1.]
select_j_column
[ 1.  0.  1.  0. -1.  1.  1.  1.  1. -1.]
most_cplx_inx
5
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 1]]


============== iter  17 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  0  0  0  2  0  0  0]
 [ 0  6  0  0  0  0 13  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  1  0  0  0  0  1  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.6 0.9 1.4 0.9 1.4 0.8 1.1 1.4 1.3]
 [0.  0.  0.6 1.  0.7 1.1 0.4 1.2 1.1 1.1]
 [0.  0.  0.  1.  1.  1.4 0.5 1.1 1.2 0.8]
 [0.  0.  0.  0.  0.8 1.2 0.8 1.4 1.  1. ]
 [0.  0.  0.  0.  0.  1.  0.8 0.9 1.1 1.4]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.7 1.3]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.5  0.5  0.25 0.31 0.5  0.38 0.31 0.44 0.44 0.31 0.25 0.38 0.5
  0.31 0.38]
 [0.   0.   0.31 0.44 0.5  0.19 0.44 0.31 0.44 0.31 0.38 0.38 0.56 0.44
  0.31 0.25]
 [0.   0.   0.   0.31 0.5  0.38 0.31 0.44 0.31 0.19 0.25 0.44 0.38 0.44
  0.38 0.31]
 [0.   0.   0.   0.   0.31 0.5  0.44 0.25 0.38 0.31 0.12 0.25 0.38 0.5
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.62 0.56 0.31 0.5  0.38 0.44 0.19 0.38 0.25
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.38 0.5  0.38 0.5  0.44 0.56 0.56 0.56
  0.5  0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.38 0.06 0.5  0.44 0.5  0.38 0.44
  0.44 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.31 0.25 0.12 0.44 0.5
  0.31 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.44 0.5  0.31 0.38
  0.38 0.5 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.31 0.25 0.38
  0.31 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.38 0.5
  0.38 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.5  0.38
  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38
  0.44 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.31 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.31]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1.  0.  1. -1. -1.  1.  0. -1.  0.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  18 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
confusion matrix
[[15  1  0  0  2  0  2  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  3  0  0  0]
 [ 0  5  0  0  0  0 14  0  0  0]
 [ 2  2  0  0 17  0  5  0  0  0]
 [ 0  0  0  0  3  0 13  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  2  0  0  0]
 [ 2  0  0  0  0  0 12  0  0  0]]
row HD
[[0.  0.7 1.  1.5 1.  1.5 0.9 1.2 1.5 1.3]
 [0.  0.  0.7 1.  0.8 1.2 0.5 1.3 1.2 1.2]
 [0.  0.  0.  1.1 1.  1.4 0.5 1.1 1.2 0.9]
 [0.  0.  0.  0.  0.9 1.3 0.9 1.5 1.1 1.1]
 [0.  0.  0.  0.  0.  1.  0.8 0.9 1.1 1.5]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.7 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.47 0.47 0.24 0.29 0.47 0.35 0.29 0.41 0.41 0.29 0.24 0.35 0.47
  0.29 0.35 0.24]
 [0.   0.   0.29 0.41 0.47 0.18 0.41 0.29 0.41 0.29 0.35 0.35 0.53 0.41
  0.29 0.24 0.47]
 [0.   0.   0.   0.29 0.47 0.35 0.29 0.41 0.29 0.18 0.24 0.41 0.35 0.41
  0.35 0.29 0.53]
 [0.   0.   0.   0.   0.29 0.47 0.41 0.24 0.35 0.29 0.12 0.24 0.35 0.47
  0.24 0.24 0.24]
 [0.   0.   0.   0.   0.   0.59 0.53 0.29 0.47 0.35 0.41 0.18 0.35 0.24
  0.29 0.41 0.24]
 [0.   0.   0.   0.   0.   0.   0.35 0.47 0.35 0.47 0.41 0.53 0.53 0.53
  0.47 0.41 0.53]
 [0.   0.   0.   0.   0.   0.   0.   0.35 0.06 0.47 0.41 0.47 0.35 0.41
  0.41 0.47 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.29 0.24 0.12 0.41 0.47
  0.29 0.24 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.41 0.47 0.29 0.35
  0.35 0.47 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.29 0.24 0.35
  0.29 0.12 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.24 0.35 0.47
  0.35 0.12 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.47 0.35
  0.24 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35
  0.41 0.35 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.29 0.41 0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.29 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.41]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  0.  1. -1. -1.  0. -1. -1. -1.]
select_j_column
[ 0.  1. -1.  1.  0.  1. -1. -1.  0.  1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]]
small_class len :1,large_class len:7, small_class sample:61,large_class sample len:399
extra_class: 2,extra_sample len: 102
cluster len:1
cluster contain small sample len:[0.37]
before change column:	[0, 0, -1, 1, -1, -1, -1, -1, -1, -1]
after change column:	[0, 0, -1, 1, -1, -1, -1, -1, -1, -1]


============== iter  19 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
confusion matrix
[[15  1  0  0  2  0  2  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  3  0  0  0]
 [ 0  5  0  0  0  0 14  0  0  0]
 [ 2  2  0  0 17  0  5  0  0  0]
 [ 0  0  0  0  3  0 13  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  2  0  0  0]
 [ 2  0  0  0  0  0 12  0  0  0]]
row HD
[[0.  0.7 1.1 1.6 1.1 1.6 1.  1.3 1.6 1.4]
 [0.  0.  0.8 1.1 0.9 1.3 0.6 1.4 1.3 1.3]
 [0.  0.  0.  1.2 1.  1.4 0.5 1.1 1.2 0.9]
 [0.  0.  0.  0.  1.  1.4 1.  1.6 1.2 1.2]
 [0.  0.  0.  0.  0.  1.  0.8 0.9 1.1 1.5]
 [0.  0.  0.  0.  0.  0.  1.  0.8 0.7 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.2 1.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.1]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.44 0.44 0.22 0.28 0.44 0.33 0.28 0.39 0.39 0.28 0.22 0.33 0.44
  0.28 0.33 0.22 0.28]
 [0.   0.   0.28 0.39 0.44 0.17 0.39 0.28 0.39 0.28 0.33 0.33 0.5  0.39
  0.28 0.22 0.44 0.39]
 [0.   0.   0.   0.28 0.44 0.33 0.28 0.39 0.28 0.17 0.22 0.39 0.33 0.39
  0.33 0.28 0.5  0.39]
 [0.   0.   0.   0.   0.28 0.44 0.39 0.22 0.33 0.28 0.11 0.22 0.33 0.44
  0.22 0.22 0.22 0.11]
 [0.   0.   0.   0.   0.   0.56 0.5  0.28 0.44 0.33 0.39 0.17 0.33 0.22
  0.28 0.39 0.22 0.28]
 [0.   0.   0.   0.   0.   0.   0.33 0.44 0.33 0.44 0.39 0.5  0.5  0.5
  0.44 0.39 0.5  0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.33 0.06 0.44 0.39 0.44 0.33 0.39
  0.39 0.44 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.28 0.22 0.11 0.39 0.44
  0.28 0.22 0.17 0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.39 0.44 0.28 0.33
  0.33 0.44 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.28 0.22 0.33
  0.28 0.11 0.44 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.22 0.33 0.44
  0.33 0.11 0.33 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.44 0.33
  0.22 0.22 0.28 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33
  0.39 0.33 0.28 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.28 0.39 0.39 0.44]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.28 0.33 0.28]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.39 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.11]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  0.  1.  1. -1.  0.]
select_j_column
[ 0.  1.  1. -1. -1.  1.  1.  0.  0.  1.]
most_cplx_inx
6
new_column
[[ 0]
 [ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]]


============== iter  20 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
18 classifiers pre label
Counter({0.0: 100, -1.0: 88})
confusion matrix
[[15  3  0  0  2  0  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  5  0  0  0  0  2  0  0  0]
 [ 0  6  0  0  0  0 13  0  0  0]
 [ 2  7  0  0 17  0  0  0  0  0]
 [ 0 13  0  0  3  0  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  1  0  0  0  0  1  0  0  0]
 [ 2 12  0  0  0  0  0  0  0  0]]
row HD
[[0.  0.7 1.1 1.7 1.2 1.6 1.1 1.3 1.7 1.4]
 [0.  0.  0.8 1.2 1.  1.3 0.7 1.4 1.4 1.3]
 [0.  0.  0.  1.3 1.1 1.4 0.6 1.1 1.3 0.9]
 [0.  0.  0.  0.  1.  1.5 1.1 1.7 1.2 1.3]
 [0.  0.  0.  0.  0.  1.1 0.9 1.  1.1 1.6]
 [0.  0.  0.  0.  0.  0.  1.1 0.8 0.8 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.1 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.42 0.42 0.21 0.26 0.42 0.32 0.26 0.37 0.37 0.26 0.21 0.32 0.42
  0.26 0.32 0.21 0.26 0.37]
 [0.   0.   0.26 0.37 0.42 0.16 0.37 0.26 0.37 0.26 0.32 0.32 0.47 0.37
  0.26 0.21 0.42 0.37 0.37]
 [0.   0.   0.   0.26 0.42 0.32 0.26 0.37 0.26 0.16 0.21 0.37 0.32 0.37
  0.32 0.26 0.47 0.37 0.32]
 [0.   0.   0.   0.   0.26 0.42 0.37 0.21 0.32 0.26 0.11 0.21 0.32 0.42
  0.21 0.21 0.21 0.11 0.26]
 [0.   0.   0.   0.   0.   0.53 0.47 0.26 0.42 0.32 0.37 0.16 0.32 0.21
  0.26 0.37 0.21 0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.32 0.42 0.32 0.42 0.37 0.47 0.47 0.47
  0.42 0.37 0.47 0.42 0.47]
 [0.   0.   0.   0.   0.   0.   0.   0.32 0.05 0.42 0.37 0.42 0.32 0.37
  0.37 0.42 0.32 0.26 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.32 0.26 0.21 0.11 0.37 0.42
  0.26 0.21 0.16 0.11 0.37]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.37 0.42 0.26 0.32
  0.32 0.42 0.26 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.16 0.26 0.21 0.32
  0.26 0.11 0.42 0.37 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.32 0.42
  0.32 0.11 0.32 0.21 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.42 0.32
  0.21 0.21 0.26 0.21 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.32
  0.37 0.32 0.26 0.32 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.26 0.37 0.37 0.42 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.26 0.32 0.26 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.37 0.32 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.11 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1.  0. -1.  1. -1. -1.  1.]
select_j_column
[ 0. -1. -1. -1.  1.  1. -1.  1. -1. -1.]
most_cplx_inx
9
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 0]
 [-1]
 [-1]
 [-1]
 [ 1]
 [-1]]
small_class len :1,large_class len:6, small_class sample:65,large_class sample len:344
extra_class: 3,extra_sample len: 153
cluster len:1
cluster contain small sample len:[0.3]
before change column:	[0, 0, -1, -1, 0, -1, -1, -1, 1, -1]
after change column:	[0, 0, -1, -1, 0, -1, -1, -1, 1, -1]


============== iter  21 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.  1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
18 classifiers pre label
Counter({0.0: 100, -1.0: 88})
19 classifiers pre label
Counter({0.0: 126, -1.0: 62})
confusion matrix
[[15  1  0  0  2  0  2  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  0  3  0  0  0]
 [ 0  5  0  0  0  0 14  0  0  0]
 [ 2  2  0  0 17  0  5  0  0  0]
 [ 0  0  0  0  3  0 13  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  0  2  0  0  0]
 [ 2  0  0  0  0  0 12  0  0  0]]
row HD
[[0.  0.7 1.2 1.8 1.2 1.7 1.2 1.4 1.8 1.5]
 [0.  0.  0.9 1.3 1.  1.4 0.8 1.5 1.5 1.4]
 [0.  0.  0.  1.3 1.2 1.4 0.6 1.1 1.4 0.9]
 [0.  0.  0.  0.  1.1 1.5 1.1 1.7 1.3 1.3]
 [0.  0.  0.  0.  0.  1.2 1.  1.1 1.2 1.7]
 [0.  0.  0.  0.  0.  0.  1.1 0.8 0.9 1.4]
 [0.  0.  0.  0.  0.  0.  0.  1.3 1.2 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.4  0.4  0.2  0.25 0.4  0.3  0.25 0.35 0.35 0.25 0.2  0.3  0.4
  0.25 0.3  0.2  0.25 0.35 0.35]
 [0.   0.   0.25 0.35 0.4  0.15 0.35 0.25 0.35 0.25 0.3  0.3  0.45 0.35
  0.25 0.2  0.4  0.35 0.35 0.3 ]
 [0.   0.   0.   0.25 0.4  0.3  0.25 0.35 0.25 0.15 0.2  0.35 0.3  0.35
  0.3  0.25 0.45 0.35 0.3  0.2 ]
 [0.   0.   0.   0.   0.25 0.4  0.35 0.2  0.3  0.25 0.1  0.2  0.3  0.4
  0.2  0.2  0.2  0.1  0.25 0.25]
 [0.   0.   0.   0.   0.   0.5  0.45 0.25 0.4  0.3  0.35 0.15 0.3  0.2
  0.25 0.35 0.2  0.25 0.35 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.3  0.4  0.3  0.4  0.35 0.45 0.45 0.45
  0.4  0.35 0.45 0.4  0.45 0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.3  0.05 0.4  0.35 0.4  0.3  0.35
  0.35 0.4  0.3  0.25 0.35 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.3  0.25 0.2  0.1  0.35 0.4
  0.25 0.2  0.15 0.1  0.35 0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.35 0.4  0.25 0.3
  0.3  0.4  0.25 0.2  0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.15 0.25 0.2  0.3
  0.25 0.1  0.4  0.35 0.25 0.2 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.2  0.3  0.4
  0.3  0.1  0.3  0.2  0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.4  0.3
  0.2  0.2  0.25 0.2  0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.3
  0.35 0.3  0.25 0.3  0.2  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.25 0.35 0.35 0.4  0.25 0.4 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.25 0.3  0.25 0.2  0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.35 0.3  0.25 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.1  0.3  0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.3  0.15]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.35]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: True, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 1.  0.  0.  1. -1.  1.  0. -1. -1.  0.]
select_j_column
[ 0.  0. -1.  1.  0. -1. -1. -1. -1.  1.]
most_cplx_inx
8
new_column
[[ 0]
 [ 0]
 [ 0]
 [ 1]
 [ 0]
 [-1]
 [ 0]
 [ 1]
 [ 1]
 [ 0]]


============== iter  22 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.  0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0. -1.  0.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1. -1.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.  0.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1. -1.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0. -1.  1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.  1.  1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
18 classifiers pre label
Counter({0.0: 100, -1.0: 88})
19 classifiers pre label
Counter({0.0: 126, -1.0: 62})
20 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  1  2  0  0  0]
 [ 0  5  0  0  0  1 13  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  1  1  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.7 1.2 1.9 1.2 1.8 1.2 1.5 1.9 1.5]
 [0.  0.  0.9 1.4 1.  1.5 0.8 1.6 1.6 1.4]
 [0.  0.  0.  1.4 1.2 1.5 0.6 1.2 1.5 0.9]
 [0.  0.  0.  0.  1.2 1.6 1.2 1.7 1.3 1.4]
 [0.  0.  0.  0.  0.  1.3 1.  1.2 1.3 1.7]
 [0.  0.  0.  0.  0.  0.  1.2 0.9 1.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.3 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.1 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.38 0.38 0.19 0.24 0.38 0.29 0.24 0.33 0.33 0.24 0.19 0.29 0.38
  0.24 0.29 0.19 0.24 0.33 0.33 0.24]
 [0.   0.   0.24 0.33 0.38 0.14 0.33 0.24 0.33 0.24 0.29 0.29 0.43 0.33
  0.24 0.19 0.38 0.33 0.33 0.29 0.24]
 [0.   0.   0.   0.24 0.38 0.29 0.24 0.33 0.24 0.14 0.19 0.33 0.29 0.33
  0.29 0.24 0.43 0.33 0.29 0.19 0.14]
 [0.   0.   0.   0.   0.24 0.38 0.33 0.19 0.29 0.24 0.1  0.19 0.29 0.38
  0.19 0.19 0.19 0.1  0.24 0.24 0.19]
 [0.   0.   0.   0.   0.   0.48 0.43 0.24 0.38 0.29 0.33 0.14 0.29 0.19
  0.24 0.33 0.19 0.24 0.33 0.29 0.29]
 [0.   0.   0.   0.   0.   0.   0.29 0.38 0.29 0.38 0.33 0.43 0.43 0.43
  0.38 0.33 0.43 0.38 0.43 0.33 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.29 0.05 0.38 0.33 0.38 0.29 0.33
  0.33 0.38 0.29 0.24 0.33 0.24 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.29 0.24 0.19 0.1  0.33 0.38
  0.24 0.19 0.14 0.1  0.33 0.14 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.33 0.38 0.24 0.29
  0.29 0.38 0.24 0.19 0.29 0.24 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.24 0.19 0.29
  0.24 0.1  0.38 0.33 0.24 0.19 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.19 0.29 0.38
  0.29 0.1  0.29 0.19 0.24 0.24 0.14]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.38 0.29
  0.19 0.19 0.24 0.19 0.29 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29
  0.33 0.29 0.24 0.29 0.19 0.24 0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.24 0.33 0.33 0.38 0.24 0.38 0.43]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.24 0.29 0.24 0.19 0.29 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.33 0.29 0.24 0.29 0.19]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.1  0.29 0.24 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.29 0.14 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.33 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.24]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0.  1.  1. -1. -1.  0.  0.  1.  0.]
select_j_column
[ 0. -1. -1. -1. -1.  1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]
*======adjust_unbalance=======*
new_column
[[ 0]
 [ 0]
 [-1]
 [-1]
 [ 1]
 [-1]
 [ 0]
 [ 0]
 [-1]
 [ 0]]
small_class len :1,large_class len:4, small_class sample:51,large_class sample len:246
extra_class: 5,extra_sample len: 265
cluster len:1
cluster contain small sample len:[0.16]
before change column:	[0, 0, -1, -1, 1, -1, 0, 0, -1, 0]
after change column:	[0, 0, -1, -1, 1, -1, 0, 0, -1, 0]


============== iter  23 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.  0.  0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0. -1.  0. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1. -1.  1. -1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.  0.  0.  1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0. -1. -1. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1. -1.  0.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0. -1.  1.  0.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.  1.  1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0. -1.  0.  0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
18 classifiers pre label
Counter({0.0: 100, -1.0: 88})
19 classifiers pre label
Counter({0.0: 126, -1.0: 62})
20 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
21 classifiers pre label
Counter({0.0: 100, -1.0: 62, 1.0: 26})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  1  2  0  0  0]
 [ 0  5  0  0  0  1 13  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  1  1  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.7 1.3 2.  1.3 1.9 1.2 1.5 2.  1.5]
 [0.  0.  1.  1.5 1.1 1.6 0.8 1.6 1.7 1.4]
 [0.  0.  0.  1.4 1.3 1.5 0.7 1.3 1.5 1. ]
 [0.  0.  0.  0.  1.3 1.6 1.3 1.8 1.3 1.5]
 [0.  0.  0.  0.  0.  1.4 1.1 1.3 1.4 1.8]
 [0.  0.  0.  0.  0.  0.  1.3 1.  1.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  1.4 1.4 1.2]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.2 1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.36 0.36 0.18 0.23 0.36 0.27 0.23 0.32 0.32 0.23 0.18 0.27 0.36
  0.23 0.27 0.18 0.23 0.32 0.32 0.23 0.18]
 [0.   0.   0.23 0.32 0.36 0.14 0.32 0.23 0.32 0.23 0.27 0.27 0.41 0.32
  0.23 0.18 0.36 0.32 0.32 0.27 0.23 0.27]
 [0.   0.   0.   0.23 0.36 0.27 0.23 0.32 0.23 0.14 0.18 0.32 0.27 0.32
  0.27 0.23 0.41 0.32 0.27 0.18 0.14 0.27]
 [0.   0.   0.   0.   0.23 0.36 0.32 0.18 0.27 0.23 0.09 0.18 0.27 0.36
  0.18 0.18 0.18 0.09 0.23 0.23 0.18 0.23]
 [0.   0.   0.   0.   0.   0.45 0.41 0.23 0.36 0.27 0.32 0.14 0.27 0.18
  0.23 0.32 0.18 0.23 0.32 0.27 0.27 0.36]
 [0.   0.   0.   0.   0.   0.   0.27 0.36 0.27 0.36 0.32 0.41 0.41 0.41
  0.36 0.32 0.41 0.36 0.41 0.32 0.32 0.36]
 [0.   0.   0.   0.   0.   0.   0.   0.27 0.05 0.36 0.32 0.36 0.27 0.32
  0.32 0.36 0.27 0.23 0.32 0.23 0.36 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.27 0.23 0.18 0.09 0.32 0.36
  0.23 0.18 0.14 0.09 0.32 0.14 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.32 0.36 0.23 0.27
  0.27 0.36 0.23 0.18 0.27 0.23 0.36 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.14 0.23 0.18 0.27
  0.23 0.09 0.36 0.32 0.23 0.18 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.18 0.27 0.36
  0.27 0.09 0.27 0.18 0.23 0.23 0.14 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.36 0.27
  0.18 0.18 0.23 0.18 0.27 0.23 0.23 0.27]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.27
  0.32 0.27 0.23 0.27 0.18 0.23 0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.23 0.32 0.32 0.36 0.23 0.36 0.41 0.32]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.23 0.27 0.23 0.18 0.27 0.32 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.32 0.27 0.23 0.27 0.18 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.09 0.27 0.23 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.27 0.14 0.27 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.32 0.27 0.18]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.23 0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.23]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  0. -1. -1.  0. -1. -1. -1.  1. -1.]
select_j_column
[ 0.  0.  1.  0.  0.  0.  0. -1. -1.  1.]
most_cplx_inx
7
new_column
[[ 0]
 [ 0]
 [-1]
 [ 0]
 [ 0]
 [ 0]
 [ 0]
 [ 1]
 [-1]
 [-1]]


============== iter  24 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.  0.  0.  0.  0.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0. -1.  0. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1. -1.  1. -1.  0.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.  0.  0.  1.  0.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0. -1. -1. -1.  0.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1. -1.  0.  0.  0.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0. -1.  1.  0.  1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.  1.  1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0. -1.  0.  0. -1.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
18 classifiers pre label
Counter({0.0: 100, -1.0: 88})
19 classifiers pre label
Counter({0.0: 126, -1.0: 62})
20 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
21 classifiers pre label
Counter({0.0: 100, -1.0: 62, 1.0: 26})
22 classifiers pre label
Counter({0.0: 188})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  1  2  0  0  0]
 [ 0  5  0  0  0  1 13  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  1  1  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.7 1.4 2.  1.3 1.9 1.2 1.6 2.1 1.6]
 [0.  0.  1.1 1.5 1.1 1.6 0.8 1.7 1.8 1.5]
 [0.  0.  0.  1.5 1.4 1.6 0.8 1.4 1.5 1. ]
 [0.  0.  0.  0.  1.3 1.6 1.3 1.9 1.4 1.6]
 [0.  0.  0.  0.  0.  1.4 1.1 1.4 1.5 1.9]
 [0.  0.  0.  0.  0.  0.  1.3 1.1 1.1 1.7]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.5 1.3]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.5]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.35 0.35 0.17 0.22 0.35 0.26 0.22 0.3  0.3  0.22 0.17 0.26 0.35
  0.22 0.26 0.17 0.22 0.3  0.3  0.22 0.17 0.3 ]
 [0.   0.   0.22 0.3  0.35 0.13 0.3  0.22 0.3  0.22 0.26 0.26 0.39 0.3
  0.22 0.17 0.35 0.3  0.3  0.26 0.22 0.26 0.09]
 [0.   0.   0.   0.22 0.35 0.26 0.22 0.3  0.22 0.13 0.17 0.3  0.26 0.3
  0.26 0.22 0.39 0.3  0.26 0.17 0.13 0.26 0.17]
 [0.   0.   0.   0.   0.22 0.35 0.3  0.17 0.26 0.22 0.09 0.17 0.26 0.35
  0.17 0.17 0.17 0.09 0.22 0.22 0.17 0.22 0.22]
 [0.   0.   0.   0.   0.   0.43 0.39 0.22 0.35 0.26 0.3  0.13 0.26 0.17
  0.22 0.3  0.17 0.22 0.3  0.26 0.26 0.35 0.39]
 [0.   0.   0.   0.   0.   0.   0.26 0.35 0.26 0.35 0.3  0.39 0.39 0.39
  0.35 0.3  0.39 0.35 0.39 0.3  0.3  0.35 0.13]
 [0.   0.   0.   0.   0.   0.   0.   0.26 0.04 0.35 0.3  0.35 0.26 0.3
  0.3  0.35 0.26 0.22 0.3  0.22 0.35 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.26 0.22 0.17 0.09 0.3  0.35
  0.22 0.17 0.13 0.09 0.3  0.13 0.22 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.3  0.35 0.22 0.26
  0.26 0.35 0.22 0.17 0.26 0.22 0.35 0.26 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.13 0.22 0.17 0.26
  0.22 0.09 0.35 0.3  0.22 0.17 0.13 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.26 0.35
  0.26 0.09 0.26 0.17 0.22 0.22 0.13 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.35 0.26
  0.17 0.17 0.22 0.17 0.26 0.22 0.22 0.26 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.26
  0.3  0.26 0.22 0.26 0.17 0.22 0.22 0.22 0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.22 0.3  0.3  0.35 0.22 0.35 0.39 0.3  0.39]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.22 0.26 0.22 0.17 0.26 0.3  0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.3  0.26 0.22 0.26 0.17 0.17 0.17]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.09 0.26 0.22 0.26 0.22 0.3 ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.26 0.13 0.26 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.3  0.26 0.17 0.26]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.22 0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.22 0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.22]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
select_i_column
[ 0.  1. -1.  1. -1. -1. -1. -1. -1.  0.]
select_j_column
[ 0.  1.  1.  1. -1. -1.  1. -1.  1.  1.]
most_cplx_inx
3
new_column
[[ 0]
 [ 1]
 [-1]
 [ 1]
 [-1]
 [-1]
 [-1]
 [-1]
 [-1]
 [ 0]]


============== iter  25 ================
current matrix is 
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.  0.  0.  0.  0.  1.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0. -1.  0. -1. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1. -1.  1. -1.  0.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.  0.  0.  1.  0. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0. -1. -1. -1.  0. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1. -1.  0.  0.  0. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0. -1.  1.  0.  1. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.  1.  1. -1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0. -1.  0.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
*======label=======*
true label
Counter({'4': 26, '2': 22, '1': 21, '8': 21, '0': 20, '3': 19, '5': 16, '7': 15, '6': 14, '9': 14})
0 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
1 classifiers pre label
Counter({0.0: 188})
2 classifiers pre label
Counter({0.0: 126, 1.0: 62})
3 classifiers pre label
Counter({0.0: 100, -1.0: 88})
4 classifiers pre label
Counter({1.0: 91, 0.0: 71, -1.0: 26})
5 classifiers pre label
Counter({-1.0: 100, 0.0: 88})
6 classifiers pre label
Counter({-1.0: 91, 0.0: 71, 1.0: 26})
7 classifiers pre label
Counter({0.0: 126, -1.0: 62})
8 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
9 classifiers pre label
Counter({0.0: 126, -1.0: 62})
10 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
11 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
12 classifiers pre label
Counter({-1.0: 117, 0.0: 71})
13 classifiers pre label
Counter({0.0: 71, 1.0: 64, -1.0: 53})
14 classifiers pre label
Counter({0.0: 100, -1.0: 53, 1.0: 35})
15 classifiers pre label
Counter({0.0: 188})
16 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
17 classifiers pre label
Counter({0.0: 100, -1.0: 88})
18 classifiers pre label
Counter({0.0: 100, -1.0: 88})
19 classifiers pre label
Counter({0.0: 126, -1.0: 62})
20 classifiers pre label
Counter({0.0: 126, -1.0: 35, 1.0: 27})
21 classifiers pre label
Counter({0.0: 100, -1.0: 62, 1.0: 26})
22 classifiers pre label
Counter({0.0: 188})
23 classifiers pre label
Counter({-1.0: 88, 0.0: 71, 1.0: 29})
confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  1  2  0  0  0]
 [ 0  5  0  0  0  1 13  0  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0 11  0  0  0]
 [19  0  0  0  0  1  1  0  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
row HD
[[0.  0.8 1.5 2.1 1.4 2.  1.3 1.7 2.2 1.6]
 [0.  0.  1.2 1.5 1.2 1.7 0.9 1.8 1.9 1.6]
 [0.  0.  0.  1.6 1.4 1.6 0.8 1.4 1.5 1.1]
 [0.  0.  0.  0.  1.4 1.7 1.4 2.  1.5 1.7]
 [0.  0.  0.  0.  0.  1.4 1.1 1.4 1.5 2. ]
 [0.  0.  0.  0.  0.  0.  1.3 1.1 1.1 1.8]
 [0.  0.  0.  0.  0.  0.  0.  1.5 1.5 1.4]
 [0.  0.  0.  0.  0.  0.  0.  0.  1.3 1.7]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.6]
 [0.  0.  0.  0.  0.  0.  0.  0.  0.  0. ]]
col HD
[[0.   0.33 0.33 0.17 0.21 0.33 0.25 0.21 0.29 0.29 0.21 0.17 0.25 0.33
  0.21 0.25 0.17 0.21 0.29 0.29 0.21 0.17 0.29 0.17]
 [0.   0.   0.21 0.29 0.33 0.12 0.29 0.21 0.29 0.21 0.25 0.25 0.38 0.29
  0.21 0.17 0.33 0.29 0.29 0.25 0.21 0.25 0.08 0.33]
 [0.   0.   0.   0.21 0.33 0.25 0.21 0.29 0.21 0.12 0.17 0.29 0.25 0.29
  0.25 0.21 0.38 0.29 0.25 0.17 0.12 0.25 0.17 0.38]
 [0.   0.   0.   0.   0.21 0.33 0.29 0.17 0.25 0.21 0.08 0.17 0.25 0.33
  0.17 0.17 0.17 0.08 0.21 0.21 0.17 0.21 0.21 0.17]
 [0.   0.   0.   0.   0.   0.42 0.38 0.21 0.33 0.25 0.29 0.12 0.25 0.17
  0.21 0.29 0.17 0.21 0.29 0.25 0.25 0.33 0.38 0.17]
 [0.   0.   0.   0.   0.   0.   0.25 0.33 0.25 0.33 0.29 0.38 0.38 0.38
  0.33 0.29 0.38 0.33 0.38 0.29 0.29 0.33 0.12 0.38]
 [0.   0.   0.   0.   0.   0.   0.   0.25 0.04 0.33 0.29 0.33 0.25 0.29
  0.29 0.33 0.25 0.21 0.29 0.21 0.33 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.25 0.21 0.17 0.08 0.29 0.33
  0.21 0.17 0.12 0.08 0.29 0.12 0.21 0.21 0.21 0.12]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.29 0.33 0.21 0.25
  0.25 0.33 0.21 0.17 0.25 0.21 0.33 0.25 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.12 0.21 0.17 0.25
  0.21 0.08 0.33 0.29 0.21 0.17 0.12 0.17 0.25 0.33]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.17 0.25 0.33
  0.25 0.08 0.25 0.17 0.21 0.21 0.12 0.17 0.17 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.33 0.25
  0.17 0.17 0.21 0.17 0.25 0.21 0.21 0.25 0.25 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.25
  0.29 0.25 0.21 0.25 0.17 0.21 0.21 0.21 0.38 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.21 0.29 0.29 0.33 0.21 0.33 0.38 0.29 0.38 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.21 0.25 0.21 0.17 0.25 0.29 0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.29 0.25 0.21 0.25 0.17 0.17 0.17 0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.08 0.25 0.21 0.25 0.21 0.29 0.  ]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.25 0.12 0.25 0.21 0.21 0.08]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.29 0.25 0.17 0.25 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.21 0.21 0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.21 0.21 0.25]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.21 0.21]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.29]
 [0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: None, 5: None, 6: True, 7: True, 8: True, 9: True}
column_len >= 10*math.log(len(self.index))
change ratio is:	0.04
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})

**********      classifier acc  **************
[0.429, 0.0, 0.306, 0.568, 0.446, 0.587, 0.446, 0.24, 0.494, 0.386, 0.557, 0.24, 0.667, 0.568, 0.47, 0.0, 0.481, 0.449, 0.475, 0.438, 0.535, 0.471, 0.0, 0.481]
before cutting matrix
[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  1. -1. -1.  0. -1.  0.  0.  0. -1.  1.  0.  0.  1.  0.
   0.  0.  0.  0.  0.  1.]
 [ 1. -1.  0.  0.  1. -1. -1. -1. -1.  0.  0.  1.  0.  1.  1.  0. -1. -1.
   0. -1.  0. -1. -1. -1.]
 [ 1.  0. -1.  1.  1.  0. -1.  1. -1. -1.  1.  1. -1. -1. -1.  0.  1.  1.
  -1. -1.  1. -1.  0.  1.]
 [ 1.  0.  0. -1. -1.  0.  1.  0. -1.  0.  0.  0. -1. -1. -1.  0. -1. -1.
  -1.  0.  0.  1.  0. -1.]
 [-1.  0.  1. -1. -1.  0.  1. -1.  1. -1. -1. -1. -1.  1.  0. -1. -1. -1.
   0. -1. -1. -1.  0. -1.]
 [ 0.  0.  0.  0.  1.  0. -1. -1. -1.  0.  0.  1. -1.  1.  0.  0. -1. -1.
   1. -1.  0.  0.  0. -1.]
 [-1.  1.  1. -1. -1.  1.  1. -1.  1.  0.  0. -1.  0.  0. -1.  0. -1. -1.
   0. -1.  1.  0.  1. -1.]
 [-1.  0.  1. -1.  1.  0. -1. -1. -1.  1. -1. -1.  1.  0. -1. -1. -1. -1.
  -1.  1.  1. -1. -1. -1.]
 [ 0.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1.  0.  1.  1.  1.  0. -1.
   0. -1.  0.  0. -1.  0.]]
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 248, 1.0: 172})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({1.0: 344, -1.0: 175})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 344, -1.0: 175})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 216, 1.0: 64})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 216, 1.0: 64})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 344, 1.0: 175})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 344, 1.0: 175})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 294, 1.0: 115})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 294, 1.0: 115})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 395, 1.0: 124})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 395, 1.0: 124})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({1.0: 220, -1.0: 189})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 220, -1.0: 189})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 241, 1.0: 114})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 241, 1.0: 114})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 345, 1.0: 120})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 399, 1.0: 61})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 399, 1.0: 61})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 177, 1.0: 45})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 177, 1.0: 45})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({-1.0: 246, 1.0: 51})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
Counter({-1.0: 345, 1.0: 120})
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
positive and negative ratio
Counter({-1.0: 345, 1.0: 120})
after cutting matrix
[[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0. -1.  1.  0.  0.  0.  0.  0.]
 [-1.  0.  0.  0.  0.  0.  1.  0. -1.  0. -1. -1.]
 [ 0. -1.  1. -1.  1. -1. -1.  0. -1.  1. -1.  0.]
 [ 0.  0. -1.  0.  0. -1. -1.  0.  0.  0.  1.  0.]
 [ 0.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.  0.]
 [ 0.  0.  0.  0.  0. -1.  1.  0. -1.  0.  0.  0.]
 [ 1.  1. -1.  0.  0.  0.  0.  0. -1.  1.  0.  1.]
 [ 0.  1. -1.  1. -1.  1.  0. -1.  1.  1. -1. -1.]
 [ 1. -1. -1.  1. -1.  0.  1.  1. -1.  0.  0. -1.]]
positive and negative ratio
Counter({1.0: 118, -1.0: 60})
Counter({1.0: 189, -1.0: 115})
Counter({-1.0: 294, 1.0: 61})
Counter({-1.0: 121, 1.0: 119})
Counter({-1.0: 179, 1.0: 61})
Counter({-1.0: 276, 1.0: 65})
Counter({1.0: 278, -1.0: 112})
Counter({-1.0: 125, 1.0: 54})
Counter({-1.0: 344, 1.0: 65})
Counter({1.0: 190, -1.0: 60})
Counter({-1.0: 246, 1.0: 51})
Counter({-1.0: 179, 1.0: 64})
cutting matrix's confusion matrix
[[15  1  0  0  2  2  0  0  0  0]
 [ 2 15  0  0  4  0  0  0  0  0]
 [15  4  0  0  0  1  0  2  0  0]
 [ 0  5  0  0  0  1  0 13  0  0]
 [ 2  2  0  0 17  5  0  0  0  0]
 [ 0  0  0  0  3 13  0  0  0  0]
 [14  0  0  0  0  0  0  0  0  0]
 [ 2  2  0  0  0  0  0 11  0  0]
 [19  0  0  0  0  1  0  1  0  0]
 [ 2  0  0  0  0 12  0  0  0  0]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-12 17:19:07
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1. -1. -1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [-1]
 [-1]
 [ 1]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-12 17:38:59
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[ 1]
 [ 1]
 [-1]
 [-1]
 [ 1]]
pos vs. neg: 1.5, 0.6666666666666666


============== iter  2 ================
current matrix is 
[[ 1.  1.]
 [ 1.  1.]
 [ 1. -1.]
 [ 1. -1.]
 [-1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
[[0.  0.  0.2 0.2 0.2]
 [0.  0.  0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  1.5]
 [0.  0. ]]
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1.  1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 0]
 [-1]
 [-1]
 [ 1]]
pos vs. neg: 1.0, 1.0


============== iter  3 ================
current matrix is 
[[ 1.  1.  1.]
 [ 1.  1.  0.]
 [ 1. -1. -1.]
 [ 1. -1. -1.]
 [-1.  1.  1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
confusion matrix
[[25  5  0  0  0]
 [ 4  5  0  0  0]
 [ 3  4  0  0  0]
 [ 1  4  2  0  0]
 [ 0  2  1  0  0]]
row HD
[[0.  0.2 0.4 0.4 0.2]
 [0.  0.  0.4 0.4 0.4]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   1.   1.33]
 [0.   0.   0.33]
 [0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1. -1.  1. -1.  1.]
most_cplx_inx
3
new_column
[[ 1]
 [-1]
 [ 1]
 [-1]
 [-1]]
pos vs. neg: 0.6666666666666666, 1.5


============== iter  4 ================
current matrix is 
[[ 1.  1.  1.  1.]
 [ 1.  1.  0. -1.]
 [ 1. -1. -1.  1.]
 [ 1. -1. -1. -1.]
 [-1.  1.  1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 108, -1.0: 58})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
3 classifiers pre label
Counter({1.0: 33, -1.0: 23})
confusion matrix
[[28  2  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.4 0.4 0.6 0.4]
 [0.  0.  0.6 0.4 0.4]
 [0.  0.  0.  0.2 0.8]
 [0.  0.  0.  0.  0.6]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.   0.75 1.   0.5 ]
 [0.   0.   0.25 0.75]
 [0.   0.   0.   0.75]
 [0.   0.   0.   0.  ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1. -1. -1.  1.]
select_j_column
[ 1. -1.  1. -1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 0]
 [ 0]
 [ 1]
 [ 0]]
pos vs. neg: 1.0, 1.0


============== iter  5 ================
current matrix is 
[[ 1.  1.  1.  1. -1.]
 [ 1.  1.  0. -1.  0.]
 [ 1. -1. -1.  1.  0.]
 [ 1. -1. -1. -1.  1.]
 [-1.  1.  1. -1.  0.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({1.0: 130, -1.0: 36})
Counter({1.0: 99, -1.0: 36})
Counter({1.0: 108, -1.0: 58})
Counter({-1.0: 93, 1.0: 21})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({1.0: 53, -1.0: 3})
2 classifiers pre label
Counter({1.0: 33, 0.0: 12, -1.0: 11})
3 classifiers pre label
Counter({1.0: 33, -1.0: 23})
4 classifiers pre label
Counter({-1.0: 34, 0.0: 16, 1.0: 6})
confusion matrix
[[28  2  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  5  0  2  0]
 [ 0  2  0  1  0]]
row HD
[[0.  0.6 0.6 0.8 0.6]
 [0.  0.  0.6 0.6 0.4]
 [0.  0.  0.  0.4 0.8]
 [0.  0.  0.  0.  0.8]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.6 0.8 0.4 0.8]
 [0.  0.  0.2 0.6 1. ]
 [0.  0.  0.  0.6 0.8]
 [0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[-1.  1.  1. -1. -1.]
select_j_column
[ 1.  1. -1. -1.  1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [-1]
 [-1]
 [-1]]
pos vs. neg: 0.25, 4.0
*======adjust_unbalance=======*
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-12 17:44:26
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1.  1.  1. -1. -1.]
positive and negative ratio
Counter({-1.0: 120, 1.0: 46})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1. -1.  1.  1. -1.]
most_cplx_inx
1
new_column
[[ 0]
 [-1]
 [ 1]
 [ 1]
 [ 0]]
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-12 17:48:33
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '2': 7, '3': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1.  1. -1. -1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]
pos vs. neg: 3.193548387096774, 0.31313131313131315
*======adjust_unbalance=======*
new_column
[[ 1]
 [-1]
 [ 0]
 [ 0]
 [ 1]]
small_class len :1,large_class len:2, small_class sample:31,large_class sample len:99
extra_class: 2,extra_sample len: 36
cluster len:1
cluster contain small sample len:[0.46]
before change column:	[1, -1, 0, 0, 1]
after change column:	[1, -1, -1, -1, 1]
before change, the sample len:	Counter({1.0: 99, -1.0: 31})
after change, the sample len:	Counter({1.0: 99, -1.0: 67})
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-12 17:57:35
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[-1. -1.  1.  1. -1.]
positive and negative ratio
Counter({-1.0: 130, 1.0: 36})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({-1.0: 53, 1.0: 3})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 5  0  2  0  0]
 [ 2  0  1  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[ 1. -1.  1. -1.  1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
3
new_column
[[-1]
 [ 1]
 [ 0]
 [ 1]
 [-1]]
pos vs. neg: 0.5252525252525253, 1.9038461538461537
算法备注：
1. 使用三进制生成的新的列没有经过去重复、去相反的判断
2. 对unbalance的列使用近似KNN的算法调整
3. 过程打印了非常多的log，用来分析算法效果
4. 要添加修改的列数量站所有列数量的比例
5. 要添加修改后的列的结果对比
6. 只要簇中包含小类样本就会收录
7. 修改决定每个簇是否要保留的条件：当簇中包含小类样本个数超过一半的时候就留下
8. 使用DBScan来聚类


SVM classifier
Time: 2019-01-12 17:58:23
FS: variance_threshold
Dataset： cleveland
ECOC: SAT_ECOC DR
Using KNN-Decoding
base_M is
[[-1.  1. -1. -1. -1.  1.]
 [-1.  1.  1.  1.  1. -1.]
 [ 1.  1.  1.  1. -1.  1.]
 [ 1.  1. -1.  1. -1. -1.]
 [-1. -1. -1. -1. -1.  1.]]


============== iter  1 ================
current matrix is 
[ 1.  1.  1.  1. -1.]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
pre label
Counter({1.0: 56})
confusion matrix
[[30  0  0  0  0]
 [ 9  0  0  0  0]
 [ 7  0  0  0  0]
 [ 7  0  0  0  0]
 [ 3  0  0  0  0]]
row HD
0
col HD
0
cplx_class
{0: None, 1: True, 2: True, 3: True, 4: True}
select_i_column
[-1. -1.  1.  1. -1.]
select_j_column
[-1.  1.  1.  1. -1.]
most_cplx_inx
2
new_column
[[-1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
pos vs. neg: 0.6767676767676768, 1.4776119402985075
change no bit!


============== iter  2 ================
current matrix is 
[[ 1. -1.]
 [ 1.  1.]
 [ 1.  1.]
 [ 1.  1.]
 [-1. -1.]]
positive and negative ratio
Counter({1.0: 160, -1.0: 6})
Counter({-1.0: 99, 1.0: 67})
*======label=======*
true label
Counter({'0': 30, '1': 9, '3': 7, '2': 7, '4': 3})
0 classifiers pre label
Counter({1.0: 56})
1 classifiers pre label
Counter({-1.0: 34, 1.0: 22})
confusion matrix
[[29  1  0  0  0]
 [ 3  6  0  0  0]
 [ 2  5  0  0  0]
 [ 0  7  0  0  0]
 [ 0  3  0  0  0]]
row HD
[[0.  0.2 0.2 0.2 0.2]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0.4]
 [0.  0.  0.  0.  0. ]]
col HD
[[0.  0.5]
 [0.  0. ]]
cplx_class
{0: None, 1: None, 2: True, 3: True, 4: True}
select_i_column
[ 1.  1.  1.  1. -1.]
select_j_column
[ 1.  1.  1.  1. -1.]
most_cplx_inx
4
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
pos vs. neg: 26.666666666666668, 0.0375
*======adjust_unbalance=======*
new_column
[[ 1]
 [ 1]
 [ 1]
 [ 1]
 [-1]]
small_class len :1,large_class len:4, small_class sample:6,large_class sample len:160
cluster len:1
cluster contain small sample len:[0.04]
before change column:	[1, 1, 1, 1, -1]
after change column:	[-1, -1, -1, -1, -1]
